{
  "id" : 420,
  "expression" : "this",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/http/impl/cgbystrom/FlashPolicyHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 70,
      "startColumnNumber" : 32,
      "endLineNumber" : 70,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ctx.pipeline().remove(this)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 38
      },
      "nodeContext" : "ctx.pipeline().remove(this);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 68,
        "startColumnNumber" : 27,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ctx.fireChannelRead(buffer);\n  ctx.pipeline().remove(this);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (magic1 != '<') {\n  ctx.fireChannelRead(buffer);\n  ctx.pipeline().remove(this);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (state) {\ncase MAGIC1:  if (!buffer.isReadable()) {\n    return;\n  }\nfinal int magic1=buffer.getUnsignedByte(index++);\nstate=ParseState.MAGIC2;\nif (magic1 != '<') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\nreturn;\n}\ncase MAGIC2:if (!buffer.isReadable()) {\nreturn;\n}\nfinal int magic2=buffer.getUnsignedByte(index);\nif (magic2 != 'p') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\n}\n else {\nctx.writeAndFlush(Unpooled.copiedBuffer(XML,CharsetUtil.UTF_8)).addListener(ChannelFutureListener.CLOSE);\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 58,
        "startColumnNumber" : 82,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteBuf buffer=(ByteBuf)msg;\n  int index=buffer.readerIndex();\nswitch (state) {\ncase MAGIC1:    if (!buffer.isReadable()) {\n      return;\n    }\n  final int magic1=buffer.getUnsignedByte(index++);\nstate=ParseState.MAGIC2;\nif (magic1 != '<') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\nreturn;\n}\ncase MAGIC2:if (!buffer.isReadable()) {\nreturn;\n}\nfinal int magic2=buffer.getUnsignedByte(index);\nif (magic2 != 'p') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\n}\n else {\nctx.writeAndFlush(Unpooled.copiedBuffer(XML,CharsetUtil.UTF_8)).addListener(ChannelFutureListener.CLOSE);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void channelRead(ChannelHandlerContext ctx,Object msg) throws Exception {\n  ByteBuf buffer=(ByteBuf)msg;\n  int index=buffer.readerIndex();\nswitch (state) {\ncase MAGIC1:    if (!buffer.isReadable()) {\n      return;\n    }\n  final int magic1=buffer.getUnsignedByte(index++);\nstate=ParseState.MAGIC2;\nif (magic1 != '<') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\nreturn;\n}\ncase MAGIC2:if (!buffer.isReadable()) {\nreturn;\n}\nfinal int magic2=buffer.getUnsignedByte(index);\nif (magic2 != 'p') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\n}\n else {\nctx.writeAndFlush(Unpooled.copiedBuffer(XML,CharsetUtil.UTF_8)).addListener(ChannelFutureListener.CLOSE);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 38
      },
      "nodeContext" : "ctx.pipeline().remove(this);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 81,
      "startColumnNumber" : 32,
      "endLineNumber" : 81,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ctx.pipeline().remove(this)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 38
      },
      "nodeContext" : "ctx.pipeline().remove(this);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 79,
        "startColumnNumber" : 27,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ctx.fireChannelRead(buffer);\n  ctx.pipeline().remove(this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (magic2 != 'p') {\n  ctx.fireChannelRead(buffer);\n  ctx.pipeline().remove(this);\n}\n else {\n  ctx.writeAndFlush(Unpooled.copiedBuffer(XML,CharsetUtil.UTF_8)).addListener(ChannelFutureListener.CLOSE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (state) {\ncase MAGIC1:  if (!buffer.isReadable()) {\n    return;\n  }\nfinal int magic1=buffer.getUnsignedByte(index++);\nstate=ParseState.MAGIC2;\nif (magic1 != '<') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\nreturn;\n}\ncase MAGIC2:if (!buffer.isReadable()) {\nreturn;\n}\nfinal int magic2=buffer.getUnsignedByte(index);\nif (magic2 != 'p') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\n}\n else {\nctx.writeAndFlush(Unpooled.copiedBuffer(XML,CharsetUtil.UTF_8)).addListener(ChannelFutureListener.CLOSE);\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 58,
        "startColumnNumber" : 82,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteBuf buffer=(ByteBuf)msg;\n  int index=buffer.readerIndex();\nswitch (state) {\ncase MAGIC1:    if (!buffer.isReadable()) {\n      return;\n    }\n  final int magic1=buffer.getUnsignedByte(index++);\nstate=ParseState.MAGIC2;\nif (magic1 != '<') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\nreturn;\n}\ncase MAGIC2:if (!buffer.isReadable()) {\nreturn;\n}\nfinal int magic2=buffer.getUnsignedByte(index);\nif (magic2 != 'p') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\n}\n else {\nctx.writeAndFlush(Unpooled.copiedBuffer(XML,CharsetUtil.UTF_8)).addListener(ChannelFutureListener.CLOSE);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void channelRead(ChannelHandlerContext ctx,Object msg) throws Exception {\n  ByteBuf buffer=(ByteBuf)msg;\n  int index=buffer.readerIndex();\nswitch (state) {\ncase MAGIC1:    if (!buffer.isReadable()) {\n      return;\n    }\n  final int magic1=buffer.getUnsignedByte(index++);\nstate=ParseState.MAGIC2;\nif (magic1 != '<') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\nreturn;\n}\ncase MAGIC2:if (!buffer.isReadable()) {\nreturn;\n}\nfinal int magic2=buffer.getUnsignedByte(index);\nif (magic2 != 'p') {\nctx.fireChannelRead(buffer);\nctx.pipeline().remove(this);\n}\n else {\nctx.writeAndFlush(Unpooled.copiedBuffer(XML,CharsetUtil.UTF_8)).addListener(ChannelFutureListener.CLOSE);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 38
      },
      "nodeContext" : "ctx.pipeline().remove(this);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.http.impl.cgbystrom.FlashPolicyHandler"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 70,
    "startColumnNumber" : 32,
    "endLineNumber" : 70,
    "endColumnNumber" : 36
  }, {
    "charLength" : 4,
    "startLineNumber" : 81,
    "startColumnNumber" : 32,
    "endLineNumber" : 81,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}