{
  "id" : 497,
  "expression" : "\"Negative test: verify non-existent text\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/com/thoughtworks/selenium/RealDealIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Negative test: verify non-existent text\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 62,
      "startColumnNumber" : 56,
      "endLineNumber" : 62,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 62,
        "startColumnNumber" : 33,
        "endLineNumber" : 62,
        "endColumnNumber" : 98
      },
      "nodeContext" : "selenium.isTextPresent(\"Negative test: verify non-existent text\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertFalse(\"Negative test\",selenium.isTextPresent(\"Negative test: verify non-existent text\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertFalse(\"Negative test\",selenium.isTextPresent(\"Negative test: verify non-existent text\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 49,
        "startColumnNumber" : 28,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  selenium.setContext(\"A real negative test, using the real Selenium on the browser side served by Jetty, driven from Java\");\n  selenium.open(\"test_click_page1.html\");\n  String badElementName=\"This element doesn't exist, so Selenium should throw an exception\";\n  try {\n    selenium.getText(badElementName);\n    fail(\"No exception was thrown!\");\n  }\n catch (  SeleniumException se) {\n    assertTrue(\"Exception message isn't as expected: \" + se.getMessage(),se.getMessage().indexOf(badElementName + \" not found\") != -1);\n  }\n  assertFalse(\"Negative test\",selenium.isTextPresent(\"Negative test: verify non-existent text\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFailure(){\n  selenium.setContext(\"A real negative test, using the real Selenium on the browser side served by Jetty, driven from Java\");\n  selenium.open(\"test_click_page1.html\");\n  String badElementName=\"This element doesn't exist, so Selenium should throw an exception\";\n  try {\n    selenium.getText(badElementName);\n    fail(\"No exception was thrown!\");\n  }\n catch (  SeleniumException se) {\n    assertTrue(\"Exception message isn't as expected: \" + se.getMessage(),se.getMessage().indexOf(badElementName + \" not found\") != -1);\n  }\n  assertFalse(\"Negative test\",selenium.isTextPresent(\"Negative test: verify non-existent text\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertFalse(\"Negative test\",selenium.isTextPresent(\"Negative test: verify non-existent text\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 62,
    "startColumnNumber" : 56,
    "endLineNumber" : 62,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}