{
  "id" : 225,
  "expression" : "TimeUnit.SECONDS",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/adapter/example/fuse/FuseAdapterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TimeUnit.SECONDS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 255,
      "startColumnNumber" : 61,
      "endLineNumber" : 255,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 255,
        "startColumnNumber" : 41,
        "endLineNumber" : 255,
        "endColumnNumber" : 99
      },
      "nodeContext" : "getJMXConnector(10,TimeUnit.SECONDS,\"mary\",\"password1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 255,
        "startColumnNumber" : 26,
        "endLineNumber" : 255,
        "endColumnNumber" : 99
      },
      "nodeContext" : "jmxConnector=getJMXConnector(10,TimeUnit.SECONDS,\"mary\",\"password1\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 255,
        "startColumnNumber" : 13,
        "endLineNumber" : 255,
        "endColumnNumber" : 99
      },
      "nodeContext" : "JMXConnector jmxConnector=getJMXConnector(10,TimeUnit.SECONDS,\"mary\",\"password1\")",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (JMXConnector jmxConnector=getJMXConnector(10,TimeUnit.SECONDS,\"mary\",\"password1\")){\n  jmxConnector.getMBeanServerConnection();\n  Assert.fail();\n}\n catch (TimeoutException expected) {\n  assertThat(expected.getCause().toString(),containsString(\"java.lang.SecurityException: Authentication failed\"));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2194,
        "startLineNumber" : 252,
        "startColumnNumber" : 48,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ObjectName mbean=new ObjectName(\"org.apache.karaf:type=config,name=root\");\n  log.debug(\"jmxLoginTest - testing: invalid credentials\");\n  try (JMXConnector jmxConnector=getJMXConnector(10,TimeUnit.SECONDS,\"mary\",\"password1\")){\n    jmxConnector.getMBeanServerConnection();\n    Assert.fail();\n  }\n catch (  TimeoutException expected) {\n    assertThat(expected.getCause().toString(),containsString(\"java.lang.SecurityException: Authentication failed\"));\n  }\n  log.debug(\"jmxLoginTest - testing: no role\");\n  try (JMXConnector jmxConnector=getJMXConnector(\"mary\",\"password\")){\n    MBeanServerConnection connection=jmxConnector.getMBeanServerConnection();\n    assertJmxInvoke(false,connection,mbean,\"listProperties\",new Object[]{\"\"},new String[]{String.class.getName()});\n    assertJmxInvoke(false,connection,mbean,\"setProperty\",new Object[]{\"\",\"x\",\"y\"},new String[]{String.class.getName(),String.class.getName(),String.class.getName()});\n  }\n   log.debug(\"jmxLoginTest - testing: read only role\");\n  try (JMXConnector jmxConnector=getJMXConnector(\"john\",\"password\")){\n    MBeanServerConnection connection=jmxConnector.getMBeanServerConnection();\n    assertJmxInvoke(true,connection,mbean,\"listProperties\",new Object[]{\"\"},new String[]{String.class.getName()});\n    assertJmxInvoke(false,connection,mbean,\"setProperty\",new Object[]{\"\",\"x\",\"y\"},new String[]{String.class.getName(),String.class.getName(),String.class.getName()});\n  }\n   log.debug(\"jmxLoginTest - testing: read write role\");\n  try (JMXConnector jmxConnector=getJMXConnector(\"root\",\"password\")){\n    MBeanServerConnection connection=jmxConnector.getMBeanServerConnection();\n    assertJmxInvoke(true,connection,mbean,\"listProperties\",new Object[]{\"\"},new String[]{String.class.getName()});\n    assertJmxInvoke(true,connection,mbean,\"setProperty\",new Object[]{\"\",\"x\",\"y\"},new String[]{String.class.getName(),String.class.getName(),String.class.getName()});\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2248,
        "startLineNumber" : 251,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void jmxLoginTest() throws Exception {\n  ObjectName mbean=new ObjectName(\"org.apache.karaf:type=config,name=root\");\n  log.debug(\"jmxLoginTest - testing: invalid credentials\");\n  try (JMXConnector jmxConnector=getJMXConnector(10,TimeUnit.SECONDS,\"mary\",\"password1\")){\n    jmxConnector.getMBeanServerConnection();\n    Assert.fail();\n  }\n catch (  TimeoutException expected) {\n    assertThat(expected.getCause().toString(),containsString(\"java.lang.SecurityException: Authentication failed\"));\n  }\n  log.debug(\"jmxLoginTest - testing: no role\");\n  try (JMXConnector jmxConnector=getJMXConnector(\"mary\",\"password\")){\n    MBeanServerConnection connection=jmxConnector.getMBeanServerConnection();\n    assertJmxInvoke(false,connection,mbean,\"listProperties\",new Object[]{\"\"},new String[]{String.class.getName()});\n    assertJmxInvoke(false,connection,mbean,\"setProperty\",new Object[]{\"\",\"x\",\"y\"},new String[]{String.class.getName(),String.class.getName(),String.class.getName()});\n  }\n   log.debug(\"jmxLoginTest - testing: read only role\");\n  try (JMXConnector jmxConnector=getJMXConnector(\"john\",\"password\")){\n    MBeanServerConnection connection=jmxConnector.getMBeanServerConnection();\n    assertJmxInvoke(true,connection,mbean,\"listProperties\",new Object[]{\"\"},new String[]{String.class.getName()});\n    assertJmxInvoke(false,connection,mbean,\"setProperty\",new Object[]{\"\",\"x\",\"y\"},new String[]{String.class.getName(),String.class.getName(),String.class.getName()});\n  }\n   log.debug(\"jmxLoginTest - testing: read write role\");\n  try (JMXConnector jmxConnector=getJMXConnector(\"root\",\"password\")){\n    MBeanServerConnection connection=jmxConnector.getMBeanServerConnection();\n    assertJmxInvoke(true,connection,mbean,\"listProperties\",new Object[]{\"\"},new String[]{String.class.getName()});\n    assertJmxInvoke(true,connection,mbean,\"setProperty\",new Object[]{\"\",\"x\",\"y\"},new String[]{String.class.getName(),String.class.getName(),String.class.getName()});\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 255,
        "startColumnNumber" : 13,
        "endLineNumber" : 255,
        "endColumnNumber" : 99
      },
      "nodeContext" : "JMXConnector jmxConnector=getJMXConnector(10,TimeUnit.SECONDS,\"mary\",\"password1\")",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 255,
    "startColumnNumber" : 61,
    "endLineNumber" : 255,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}