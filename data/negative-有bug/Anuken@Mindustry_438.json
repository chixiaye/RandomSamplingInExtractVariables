{
  "id" : 438,
  "expression" : "Math",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/Predict.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 44,
      "startColumnNumber" : 22,
      "endLineNumber" : 44,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 44,
        "startColumnNumber" : 22,
        "endLineNumber" : 44,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Math.min(t0,t1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 44,
        "startColumnNumber" : 18,
        "endLineNumber" : 44,
        "endColumnNumber" : 38
      },
      "nodeContext" : "t=Math.min(t0,t1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 39
      },
      "nodeContext" : "float t=Math.min(t0,t1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 42,
        "startColumnNumber" : 22,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float t0=ts.x, t1=ts.y;\n  float t=Math.min(t0,t1);\n  if (t < 0)   t=Math.max(t0,t1);\n  if (t > 0) {\n    sol.set(dstx + dstvx * t,dsty + dstvy * t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ts != null) {\n  float t0=ts.x, t1=ts.y;\n  float t=Math.min(t0,t1);\n  if (t < 0)   t=Math.max(t0,t1);\n  if (t > 0) {\n    sol.set(dstx + dstvx * t,dsty + dstvy * t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 26,
        "startColumnNumber" : 115,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dstvx/=Time.delta;\n  dstvy/=Time.delta;\n  float tx=dstx - srcx, ty=dsty - srcy;\n  float a=dstvx * dstvx + dstvy * dstvy - v * v;\n  float b=2 * (dstvx * tx + dstvy * ty);\n  float c=tx * tx + ty * ty;\n  Vec2 ts=quad(a,b,c);\n  Vec2 sol=vresult.set(dstx,dsty);\n  if (ts != null) {\n    float t0=ts.x, t1=ts.y;\n    float t=Math.min(t0,t1);\n    if (t < 0)     t=Math.max(t0,t1);\n    if (t > 0) {\n      sol.set(dstx + dstvx * t,dsty + dstvy * t);\n    }\n  }\n  return sol;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1324,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calculates of intercept of a stationary and moving target. Do not call from multiple threads!\n * @param srcx X of shooter\n * @param srcy Y of shooter\n * @param dstx X of target\n * @param dsty Y of target\n * @param dstvx X velocity of target (subtract shooter X velocity if needed)\n * @param dstvy Y velocity of target (subtract shooter Y velocity if needed)\n * @param v speed of bullet\n * @return the intercept location\n */\npublic static Vec2 intercept(float srcx,float srcy,float dstx,float dsty,float dstvx,float dstvy,float v){\n  dstvx/=Time.delta;\n  dstvy/=Time.delta;\n  float tx=dstx - srcx, ty=dsty - srcy;\n  float a=dstvx * dstvx + dstvy * dstvy - v * v;\n  float b=2 * (dstvx * tx + dstvy * ty);\n  float c=tx * tx + ty * ty;\n  Vec2 ts=quad(a,b,c);\n  Vec2 sol=vresult.set(dstx,dsty);\n  if (ts != null) {\n    float t0=ts.x, t1=ts.y;\n    float t=Math.min(t0,t1);\n    if (t < 0)     t=Math.max(t0,t1);\n    if (t > 0) {\n      sol.set(dstx + dstvx * t,dsty + dstvy * t);\n    }\n  }\n  return sol;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 39
      },
      "nodeContext" : "float t=Math.min(t0,t1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Math"
  }, {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 45,
      "startColumnNumber" : 26,
      "endLineNumber" : 45,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 45,
        "startColumnNumber" : 26,
        "endLineNumber" : 45,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Math.max(t0,t1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 45,
        "startColumnNumber" : 22,
        "endLineNumber" : 45,
        "endColumnNumber" : 42
      },
      "nodeContext" : "t=Math.max(t0,t1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 45,
        "startColumnNumber" : 22,
        "endLineNumber" : 45,
        "endColumnNumber" : 43
      },
      "nodeContext" : "t=Math.max(t0,t1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 43
      },
      "nodeContext" : "if (t < 0) t=Math.max(t0,t1);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 42,
        "startColumnNumber" : 22,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float t0=ts.x, t1=ts.y;\n  float t=Math.min(t0,t1);\n  if (t < 0)   t=Math.max(t0,t1);\n  if (t > 0) {\n    sol.set(dstx + dstvx * t,dsty + dstvy * t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ts != null) {\n  float t0=ts.x, t1=ts.y;\n  float t=Math.min(t0,t1);\n  if (t < 0)   t=Math.max(t0,t1);\n  if (t > 0) {\n    sol.set(dstx + dstvx * t,dsty + dstvy * t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 26,
        "startColumnNumber" : 115,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dstvx/=Time.delta;\n  dstvy/=Time.delta;\n  float tx=dstx - srcx, ty=dsty - srcy;\n  float a=dstvx * dstvx + dstvy * dstvy - v * v;\n  float b=2 * (dstvx * tx + dstvy * ty);\n  float c=tx * tx + ty * ty;\n  Vec2 ts=quad(a,b,c);\n  Vec2 sol=vresult.set(dstx,dsty);\n  if (ts != null) {\n    float t0=ts.x, t1=ts.y;\n    float t=Math.min(t0,t1);\n    if (t < 0)     t=Math.max(t0,t1);\n    if (t > 0) {\n      sol.set(dstx + dstvx * t,dsty + dstvy * t);\n    }\n  }\n  return sol;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1324,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calculates of intercept of a stationary and moving target. Do not call from multiple threads!\n * @param srcx X of shooter\n * @param srcy Y of shooter\n * @param dstx X of target\n * @param dsty Y of target\n * @param dstvx X velocity of target (subtract shooter X velocity if needed)\n * @param dstvy Y velocity of target (subtract shooter Y velocity if needed)\n * @param v speed of bullet\n * @return the intercept location\n */\npublic static Vec2 intercept(float srcx,float srcy,float dstx,float dsty,float dstvx,float dstvy,float v){\n  dstvx/=Time.delta;\n  dstvy/=Time.delta;\n  float tx=dstx - srcx, ty=dsty - srcy;\n  float a=dstvx * dstvx + dstvy * dstvy - v * v;\n  float b=2 * (dstvx * tx + dstvy * ty);\n  float c=tx * tx + ty * ty;\n  Vec2 ts=quad(a,b,c);\n  Vec2 sol=vresult.set(dstx,dsty);\n  if (ts != null) {\n    float t0=ts.x, t1=ts.y;\n    float t=Math.min(t0,t1);\n    if (t < 0)     t=Math.max(t0,t1);\n    if (t > 0) {\n      sol.set(dstx + dstvx * t,dsty + dstvy * t);\n    }\n  }\n  return sol;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 43
      },
      "nodeContext" : "if (t < 0) t=Math.max(t0,t1);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Math"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 44,
    "startColumnNumber" : 22,
    "endLineNumber" : 44,
    "endColumnNumber" : 26
  }, {
    "charLength" : 4,
    "startLineNumber" : 45,
    "startColumnNumber" : 26,
    "endLineNumber" : 45,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}