{
  "id" : 470,
  "expression" : "liquidCapacity",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/power/ConsumeGenerator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "liquidCapacity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 112,
      "startColumnNumber" : 93,
      "endLineNumber" : 112,
      "endColumnNumber" : 107
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 112,
        "startColumnNumber" : 93,
        "endLineNumber" : 112,
        "endColumnNumber" : 142
      },
      "nodeContext" : "liquidCapacity - liquids.get(outputLiquid.liquid)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 112,
        "startColumnNumber" : 30,
        "endLineNumber" : 112,
        "endColumnNumber" : 143
      },
      "nodeContext" : "Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 112,
        "startColumnNumber" : 22,
        "endLineNumber" : 112,
        "endColumnNumber" : 143
      },
      "nodeContext" : "added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 144
      },
      "nodeContext" : "float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 111,
        "startColumnNumber" : 36,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n  liquids.add(outputLiquid.liquid,added);\n  dumpLiquid(outputLiquid.liquid);\n  if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n    kill();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (outputLiquid != null) {\n  float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n  liquids.add(outputLiquid.liquid,added);\n  dumpLiquid(outputLiquid.liquid);\n  if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n    kill();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1412,
        "startLineNumber" : 91,
        "startColumnNumber" : 32,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean valid=efficiency > 0;\n  warmup=Mathf.lerpDelta(warmup,valid ? 1f : 0f,warmupSpeed);\n  productionEfficiency=efficiency * efficiencyMultiplier;\n  totalTime+=warmup * Time.delta;\n  if (valid && Mathf.chanceDelta(effectChance)) {\n    generateEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n  }\n  if (hasItems && valid && generateTime <= 0f) {\n    consume();\n    consumeEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n    generateTime=1f;\n  }\n  if (outputLiquid != null) {\n    float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n    liquids.add(outputLiquid.liquid,added);\n    dumpLiquid(outputLiquid.liquid);\n    if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n      kill();\n    }\n  }\n  generateTime-=delta() / itemDuration;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  boolean valid=efficiency > 0;\n  warmup=Mathf.lerpDelta(warmup,valid ? 1f : 0f,warmupSpeed);\n  productionEfficiency=efficiency * efficiencyMultiplier;\n  totalTime+=warmup * Time.delta;\n  if (valid && Mathf.chanceDelta(effectChance)) {\n    generateEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n  }\n  if (hasItems && valid && generateTime <= 0f) {\n    consume();\n    consumeEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n    generateTime=1f;\n  }\n  if (outputLiquid != null) {\n    float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n    liquids.add(outputLiquid.liquid,added);\n    dumpLiquid(outputLiquid.liquid);\n    if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n      kill();\n    }\n  }\n  generateTime-=delta() / itemDuration;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 144
      },
      "nodeContext" : "float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "liquidCapacity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 116,
      "startColumnNumber" : 72,
      "endLineNumber" : 116,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 116,
        "startColumnNumber" : 72,
        "endLineNumber" : 116,
        "endColumnNumber" : 96
      },
      "nodeContext" : "liquidCapacity - 0.0001f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 116,
        "startColumnNumber" : 36,
        "endLineNumber" : 116,
        "endColumnNumber" : 96
      },
      "nodeContext" : "liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 116,
        "startColumnNumber" : 19,
        "endLineNumber" : 116,
        "endColumnNumber" : 96
      },
      "nodeContext" : "explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n  kill();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 111,
        "startColumnNumber" : 36,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n  liquids.add(outputLiquid.liquid,added);\n  dumpLiquid(outputLiquid.liquid);\n  if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n    kill();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (outputLiquid != null) {\n  float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n  liquids.add(outputLiquid.liquid,added);\n  dumpLiquid(outputLiquid.liquid);\n  if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n    kill();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1412,
        "startLineNumber" : 91,
        "startColumnNumber" : 32,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean valid=efficiency > 0;\n  warmup=Mathf.lerpDelta(warmup,valid ? 1f : 0f,warmupSpeed);\n  productionEfficiency=efficiency * efficiencyMultiplier;\n  totalTime+=warmup * Time.delta;\n  if (valid && Mathf.chanceDelta(effectChance)) {\n    generateEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n  }\n  if (hasItems && valid && generateTime <= 0f) {\n    consume();\n    consumeEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n    generateTime=1f;\n  }\n  if (outputLiquid != null) {\n    float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n    liquids.add(outputLiquid.liquid,added);\n    dumpLiquid(outputLiquid.liquid);\n    if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n      kill();\n    }\n  }\n  generateTime-=delta() / itemDuration;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  boolean valid=efficiency > 0;\n  warmup=Mathf.lerpDelta(warmup,valid ? 1f : 0f,warmupSpeed);\n  productionEfficiency=efficiency * efficiencyMultiplier;\n  totalTime+=warmup * Time.delta;\n  if (valid && Mathf.chanceDelta(effectChance)) {\n    generateEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n  }\n  if (hasItems && valid && generateTime <= 0f) {\n    consume();\n    consumeEffect.at(x + Mathf.range(generateEffectRange),y + Mathf.range(generateEffectRange));\n    generateTime=1f;\n  }\n  if (outputLiquid != null) {\n    float added=Math.min(productionEfficiency * delta() * outputLiquid.amount,liquidCapacity - liquids.get(outputLiquid.liquid));\n    liquids.add(outputLiquid.liquid,added);\n    dumpLiquid(outputLiquid.liquid);\n    if (explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f) {\n      kill();\n    }\n  }\n  generateTime-=delta() / itemDuration;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 116,
        "startColumnNumber" : 19,
        "endLineNumber" : 116,
        "endColumnNumber" : 96
      },
      "nodeContext" : "explodeOnFull && liquids.get(outputLiquid.liquid) >= liquidCapacity - 0.0001f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 112,
    "startColumnNumber" : 93,
    "endLineNumber" : 112,
    "endColumnNumber" : 107
  }, {
    "charLength" : 14,
    "startLineNumber" : 116,
    "startColumnNumber" : 72,
    "endLineNumber" : 116,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}