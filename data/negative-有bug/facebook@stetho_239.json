{
  "id" : 239,
  "expression" : "Console.MessageSource",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/network/DecompressionHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Console.MessageSource",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 51,
      "startColumnNumber" : 12,
      "endLineNumber" : 51,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Console.MessageSource.NETWORK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 39
      },
      "nodeContext" : "CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 40
      },
      "nodeContext" : "CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 47,
        "startColumnNumber" : 13,
        "endLineNumber" : 54,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (gzipEncoding || deflateEncoding) {\n  decompressedCounter=new CountingOutputStream(decompressedOutput);\n  if (gzipEncoding) {\n    output=GunzippingOutputStream.create(decompressedCounter);\n  }\n else   if (deflateEncoding) {\n    output=new InflaterOutputStream(decompressedCounter);\n  }\n}\n else {\n  CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 36,
        "startColumnNumber" : 33,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n  boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n  if (gzipEncoding || deflateEncoding) {\n    decompressedCounter=new CountingOutputStream(decompressedOutput);\n    if (gzipEncoding) {\n      output=GunzippingOutputStream.create(decompressedCounter);\n    }\n else     if (deflateEncoding) {\n      output=new InflaterOutputStream(decompressedCounter);\n    }\n  }\n else {\n    CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (contentEncoding != null) {\n  boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n  boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n  if (gzipEncoding || deflateEncoding) {\n    decompressedCounter=new CountingOutputStream(decompressedOutput);\n    if (gzipEncoding) {\n      output=GunzippingOutputStream.create(decompressedCounter);\n    }\n else     if (deflateEncoding) {\n      output=new InflaterOutputStream(decompressedCounter);\n    }\n  }\n else {\n    CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 32,
        "startColumnNumber" : 58,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  OutputStream output=decompressedOutput;\n  CountingOutputStream decompressedCounter=null;\n  if (contentEncoding != null) {\n    boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n    boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n    if (gzipEncoding || deflateEncoding) {\n      decompressedCounter=new CountingOutputStream(decompressedOutput);\n      if (gzipEncoding) {\n        output=GunzippingOutputStream.create(decompressedCounter);\n      }\n else       if (deflateEncoding) {\n        output=new InflaterOutputStream(decompressedCounter);\n      }\n    }\n else {\n      CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n    }\n  }\n  return new ResponseHandlingInputStream(availableInputStream,requestId,output,decompressedCounter,peerManager,responseHandler);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1387,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static InputStream teeInputWithDecompression(NetworkPeerManager peerManager,String requestId,InputStream availableInputStream,OutputStream decompressedOutput,@Nullable String contentEncoding,ResponseHandler responseHandler) throws IOException {\n  OutputStream output=decompressedOutput;\n  CountingOutputStream decompressedCounter=null;\n  if (contentEncoding != null) {\n    boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n    boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n    if (gzipEncoding || deflateEncoding) {\n      decompressedCounter=new CountingOutputStream(decompressedOutput);\n      if (gzipEncoding) {\n        output=GunzippingOutputStream.create(decompressedCounter);\n      }\n else       if (deflateEncoding) {\n        output=new InflaterOutputStream(decompressedCounter);\n      }\n    }\n else {\n      CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n    }\n  }\n  return new ResponseHandlingInputStream(availableInputStream,requestId,output,decompressedCounter,peerManager,responseHandler);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Console.MessageSource.NETWORK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "com.facebook.stetho.inspector.protocol.module.Console.MessageSource"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 51,
    "startColumnNumber" : 12,
    "endLineNumber" : 51,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}