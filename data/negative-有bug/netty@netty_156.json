{
  "id" : 156,
  "expression" : "!(boundChannel instanceof LocalServerChannel)",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/transport/src/main/java/io/netty/channel/local/LocalChannel.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!(boundChannel instanceof LocalServerChannel)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 428,
      "startColumnNumber" : 16,
      "endLineNumber" : 428,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 428,
        "startColumnNumber" : 12,
        "endLineNumber" : 433,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!(boundChannel instanceof LocalServerChannel)) {\n  Exception cause=new ConnectException(\"connection refused: \" + remoteAddress);\n  safeSetFailure(promise,cause);\n  close(newPromise());\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1630,
        "startLineNumber" : 392,
        "startColumnNumber" : 73,
        "endLineNumber" : 437,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!promise.setUncancellable() || !ensureOpen(promise)) {\n    return;\n  }\n  if (state == State.CONNECTED) {\n    Exception cause=new AlreadyConnectedException();\n    safeSetFailure(promise,cause);\n    pipeline().fireExceptionCaught(cause);\n    return;\n  }\n  if (connectPromise != null) {\n    throw new ConnectionPendingException();\n  }\n  connectPromise=promise;\n  if (state != State.BOUND) {\n    if (localAddress == null) {\n      localAddress=new LocalAddress(LocalChannel.this);\n    }\n  }\n  if (localAddress != null) {\n    try {\n      doBind(localAddress);\n    }\n catch (    Throwable t) {\n      safeSetFailure(promise,t);\n      close(newPromise());\n      return;\n    }\n  }\n  Channel boundChannel=LocalChannelRegistry.get(remoteAddress);\n  if (!(boundChannel instanceof LocalServerChannel)) {\n    Exception cause=new ConnectException(\"connection refused: \" + remoteAddress);\n    safeSetFailure(promise,cause);\n    close(newPromise());\n    return;\n  }\n  LocalServerChannel serverChannel=(LocalServerChannel)boundChannel;\n  peer=serverChannel.serve(LocalChannel.this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1778,
        "startLineNumber" : 390,
        "startColumnNumber" : 8,
        "endLineNumber" : 437,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void connect(final SocketAddress remoteAddress,SocketAddress localAddress,final Promise<Void> promise){\n  if (!promise.setUncancellable() || !ensureOpen(promise)) {\n    return;\n  }\n  if (state == State.CONNECTED) {\n    Exception cause=new AlreadyConnectedException();\n    safeSetFailure(promise,cause);\n    pipeline().fireExceptionCaught(cause);\n    return;\n  }\n  if (connectPromise != null) {\n    throw new ConnectionPendingException();\n  }\n  connectPromise=promise;\n  if (state != State.BOUND) {\n    if (localAddress == null) {\n      localAddress=new LocalAddress(LocalChannel.this);\n    }\n  }\n  if (localAddress != null) {\n    try {\n      doBind(localAddress);\n    }\n catch (    Throwable t) {\n      safeSetFailure(promise,t);\n      close(newPromise());\n      return;\n    }\n  }\n  Channel boundChannel=LocalChannelRegistry.get(remoteAddress);\n  if (!(boundChannel instanceof LocalServerChannel)) {\n    Exception cause=new ConnectException(\"connection refused: \" + remoteAddress);\n    safeSetFailure(promise,cause);\n    close(newPromise());\n    return;\n  }\n  LocalServerChannel serverChannel=(LocalServerChannel)boundChannel;\n  peer=serverChannel.serve(LocalChannel.this);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 428,
        "startColumnNumber" : 12,
        "endLineNumber" : 433,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!(boundChannel instanceof LocalServerChannel)) {\n  Exception cause=new ConnectException(\"connection refused: \" + remoteAddress);\n  safeSetFailure(promise,cause);\n  close(newPromise());\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 428,
    "startColumnNumber" : 16,
    "endLineNumber" : 428,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}