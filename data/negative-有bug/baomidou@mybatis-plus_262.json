{
  "id" : 262,
  "expression" : "entityIds",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus/src/test/java/com/baomidou/mybatisplus/test/toolkit/SimpleQueryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entityIds",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 27,
      "startColumnNumber" : 22,
      "endLineNumber" : 27,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 27,
        "startColumnNumber" : 22,
        "endLineNumber" : 27,
        "endColumnNumber" : 61
      },
      "nodeContext" : "entityIds.equals(Arrays.asList(1L,2L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.isTrue(entityIds.equals(Arrays.asList(1L,2L)),\"Ops!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.isTrue(entityIds.equals(Arrays.asList(1L,2L)),\"Ops!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 23,
        "startColumnNumber" : 27,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Long> entityIds=SimpleQuery.list(Wrappers.lambdaQuery(),Entity::getId);\n  Assert.isTrue(entityIds.equals(Arrays.asList(1L,2L)),\"Ops!\");\n  List<String> names=SimpleQuery.list(Wrappers.lambdaQuery(),Entity::getName,e -> Optional.ofNullable(e.getName()).map(String::toUpperCase).ifPresent(e::setName));\n  Assert.isTrue(names.equals(Arrays.asList(\"RUBEN\",null)),\"Ops!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testList(){\n  List<Long> entityIds=SimpleQuery.list(Wrappers.lambdaQuery(),Entity::getId);\n  Assert.isTrue(entityIds.equals(Arrays.asList(1L,2L)),\"Ops!\");\n  List<String> names=SimpleQuery.list(Wrappers.lambdaQuery(),Entity::getName,e -> Optional.ofNullable(e.getName()).map(String::toUpperCase).ifPresent(e::setName));\n  Assert.isTrue(names.equals(Arrays.asList(\"RUBEN\",null)),\"Ops!\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.isTrue(entityIds.equals(Arrays.asList(1L,2L)),\"Ops!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Long>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 27,
    "startColumnNumber" : 22,
    "endLineNumber" : 27,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}