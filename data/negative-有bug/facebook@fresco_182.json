{
  "id" : 182,
  "expression" : "Bitmap",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/memory/BucketsBitmapPool.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Bitmap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 55,
      "startColumnNumber" : 11,
      "endLineNumber" : 55,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 55,
        "startColumnNumber" : 11,
        "endLineNumber" : 58,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 54,
        "startColumnNumber" : 35,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Allocate a bitmap that has a backing memory allocation of 'size' bytes. This is configuration agnostic so the size is the actual size in bytes of the bitmap.\n * @param size the 'size' in bytes of the bitmap\n * @return a new bitmap with the specified size in memory\n */\n@Override protected Bitmap alloc(int size){\n  return Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 55,
        "startColumnNumber" : 11,
        "endLineNumber" : 58,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Bitmap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 58,
      "startColumnNumber" : 8,
      "endLineNumber" : 58,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Bitmap.Config",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Bitmap.Config.RGB_565",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 55,
        "startColumnNumber" : 11,
        "endLineNumber" : 58,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 54,
        "startColumnNumber" : 35,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Allocate a bitmap that has a backing memory allocation of 'size' bytes. This is configuration agnostic so the size is the actual size in bytes of the bitmap.\n * @param size the 'size' in bytes of the bitmap\n * @return a new bitmap with the specified size in memory\n */\n@Override protected Bitmap alloc(int size){\n  return Bitmap.createBitmap(1,(int)Math.ceil(size / (double)BitmapUtil.RGB_565_BYTES_PER_PIXEL),Bitmap.Config.RGB_565);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Bitmap.Config.RGB_565",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 55,
    "startColumnNumber" : 11,
    "endLineNumber" : 55,
    "endColumnNumber" : 17
  }, {
    "charLength" : 6,
    "startLineNumber" : 58,
    "startColumnNumber" : 8,
    "endLineNumber" : 58,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}