{
  "id" : 24,
  "expression" : "i <= hi",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/other/SquareRootDecomposition.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i <= hi",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 51,
      "startColumnNumber" : 23,
      "endLineNumber" : 51,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 51
      },
      "nodeContext" : "for (int i=lo; i <= hi; i++) sum+=arr[i];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 50,
        "startColumnNumber" : 22,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=lo; i <= hi; i++)   sum+=arr[i];\n  return sum;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (loId == hiId) {\n  for (int i=lo; i <= hi; i++)   sum+=arr[i];\n  return sum;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 43,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long sum=0;\n  int loId=blockID(lo);\n  int hiId=blockID(hi);\n  for (int i=loId + 1; i < hiId; i++)   sum+=blocks[i];\n  if (loId == hiId) {\n    for (int i=lo; i <= hi; i++)     sum+=arr[i];\n    return sum;\n  }\n  int loMax=(((lo / blockSize) + 1) * blockSize) - 1;\n  int hiMin=(hi / blockSize) * blockSize;\n  for (int i=lo; i <= loMax; i++)   sum+=arr[i];\n  for (int i=hiMin; i <= hi; i++)   sum+=arr[i];\n  return sum;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public long query(int lo,int hi){\n  long sum=0;\n  int loId=blockID(lo);\n  int hiId=blockID(hi);\n  for (int i=loId + 1; i < hiId; i++)   sum+=blocks[i];\n  if (loId == hiId) {\n    for (int i=lo; i <= hi; i++)     sum+=arr[i];\n    return sum;\n  }\n  int loMax=(((lo / blockSize) + 1) * blockSize) - 1;\n  int hiMin=(hi / blockSize) * blockSize;\n  for (int i=lo; i <= loMax; i++)   sum+=arr[i];\n  for (int i=hiMin; i <= hi; i++)   sum+=arr[i];\n  return sum;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 51
      },
      "nodeContext" : "for (int i=lo; i <= hi; i++) sum+=arr[i];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "i <= hi",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 58,
      "startColumnNumber" : 24,
      "endLineNumber" : 58,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 52
      },
      "nodeContext" : "for (int i=hiMin; i <= hi; i++) sum+=arr[i];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 43,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long sum=0;\n  int loId=blockID(lo);\n  int hiId=blockID(hi);\n  for (int i=loId + 1; i < hiId; i++)   sum+=blocks[i];\n  if (loId == hiId) {\n    for (int i=lo; i <= hi; i++)     sum+=arr[i];\n    return sum;\n  }\n  int loMax=(((lo / blockSize) + 1) * blockSize) - 1;\n  int hiMin=(hi / blockSize) * blockSize;\n  for (int i=lo; i <= loMax; i++)   sum+=arr[i];\n  for (int i=hiMin; i <= hi; i++)   sum+=arr[i];\n  return sum;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public long query(int lo,int hi){\n  long sum=0;\n  int loId=blockID(lo);\n  int hiId=blockID(hi);\n  for (int i=loId + 1; i < hiId; i++)   sum+=blocks[i];\n  if (loId == hiId) {\n    for (int i=lo; i <= hi; i++)     sum+=arr[i];\n    return sum;\n  }\n  int loMax=(((lo / blockSize) + 1) * blockSize) - 1;\n  int hiMin=(hi / blockSize) * blockSize;\n  for (int i=lo; i <= loMax; i++)   sum+=arr[i];\n  for (int i=hiMin; i <= hi; i++)   sum+=arr[i];\n  return sum;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 52
      },
      "nodeContext" : "for (int i=hiMin; i <= hi; i++) sum+=arr[i];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 51,
    "startColumnNumber" : 23,
    "endLineNumber" : 51,
    "endColumnNumber" : 30
  }, {
    "charLength" : 7,
    "startLineNumber" : 58,
    "startColumnNumber" : 24,
    "endLineNumber" : 58,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}