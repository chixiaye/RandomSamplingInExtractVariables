{
  "id" : 348,
  "expression" : "inputs",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/query2/aquery/AqueryUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inputs",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 49,
      "startColumnNumber" : 10,
      "endLineNumber" : 49,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 49,
        "startColumnNumber" : 10,
        "endLineNumber" : 49,
        "endColumnNumber" : 25
      },
      "nodeContext" : "inputs.toList()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 49,
        "startColumnNumber" : 10,
        "endLineNumber" : 49,
        "endColumnNumber" : 34
      },
      "nodeContext" : "inputs.toList().stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 49,
        "startColumnNumber" : 10,
        "endLineNumber" : 53,
        "endColumnNumber" : 64
      },
      "nodeContext" : "inputs.toList().stream().anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(INPUTS,artifact.getExecPathString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 48,
        "startColumnNumber" : 14,
        "endLineNumber" : 53,
        "endColumnNumber" : 64
      },
      "nodeContext" : "containsFile=inputs.toList().stream().anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(INPUTS,artifact.getExecPathString()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 53,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Boolean containsFile=inputs.toList().stream().anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(INPUTS,artifact.getExecPathString()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 47,
        "startColumnNumber" : 52,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Boolean containsFile=inputs.toList().stream().anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(INPUTS,artifact.getExecPathString()));\n  if (!containsFile) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (actionFilters.hasFilterForFunction(INPUTS)) {\n  Boolean containsFile=inputs.toList().stream().anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(INPUTS,artifact.getExecPathString()));\n  if (!containsFile) {\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1058,
        "startLineNumber" : 36,
        "startColumnNumber" : 71,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  NestedSet<Artifact> inputs=action.getInputs();\n  Iterable<Artifact> outputs=action.getOutputs();\n  String mnemonic=action.getMnemonic();\n  if (actionFilters.hasFilterForFunction(MNEMONIC)) {\n    if (!actionFilters.matchesAllPatternsForFunction(MNEMONIC,mnemonic)) {\n      return false;\n    }\n  }\n  if (actionFilters.hasFilterForFunction(INPUTS)) {\n    Boolean containsFile=inputs.toList().stream().anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(INPUTS,artifact.getExecPathString()));\n    if (!containsFile) {\n      return false;\n    }\n  }\n  if (actionFilters.hasFilterForFunction(OUTPUTS)) {\n    Boolean containsFile=Streams.stream(outputs).anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(OUTPUTS,artifact.getExecPathString()));\n    return containsFile;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1479,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Return true if the given  {@code action} matches the filters specified in {@code actionFilters}.\n * @param action the analysis metadata of an action\n * @param actionFilters the filters parsed from the query expression\n * @return whether the action matches the filtering patterns\n */\npublic static boolean matchesAqueryFilters(ActionAnalysisMetadata action,AqueryActionFilter actionFilters){\n  NestedSet<Artifact> inputs=action.getInputs();\n  Iterable<Artifact> outputs=action.getOutputs();\n  String mnemonic=action.getMnemonic();\n  if (actionFilters.hasFilterForFunction(MNEMONIC)) {\n    if (!actionFilters.matchesAllPatternsForFunction(MNEMONIC,mnemonic)) {\n      return false;\n    }\n  }\n  if (actionFilters.hasFilterForFunction(INPUTS)) {\n    Boolean containsFile=inputs.toList().stream().anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(INPUTS,artifact.getExecPathString()));\n    if (!containsFile) {\n      return false;\n    }\n  }\n  if (actionFilters.hasFilterForFunction(OUTPUTS)) {\n    Boolean containsFile=Streams.stream(outputs).anyMatch(artifact -> actionFilters.matchesAllPatternsForFunction(OUTPUTS,artifact.getExecPathString()));\n    return containsFile;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 49,
        "startColumnNumber" : 10,
        "endLineNumber" : 49,
        "endColumnNumber" : 34
      },
      "nodeContext" : "inputs.toList().stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.collect.nestedset.NestedSet<com.google.devtools.build.lib.actions.Artifact>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 49,
    "startColumnNumber" : 10,
    "endLineNumber" : 49,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}