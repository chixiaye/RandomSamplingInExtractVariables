{
  "id" : 49,
  "expression" : "map.containsKey(unmappedKey)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/collect/testing/MapInterfaceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "map.containsKey(unmappedKey)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 297,
      "startColumnNumber" : 16,
      "endLineNumber" : 297,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 297,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertFalse(map.containsKey(unmappedKey))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 297,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertFalse(map.containsKey(unmappedKey));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 288,
        "startColumnNumber" : 32,
        "endLineNumber" : 312,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<K,V> map;\n  K unmappedKey;\n  try {\n    map=makePopulatedMap();\n    unmappedKey=getKeyNotInPopulatedMap();\n  }\n catch (  UnsupportedOperationException e) {\n    return;\n  }\n  assertFalse(map.containsKey(unmappedKey));\n  try {\n    assertFalse(map.containsKey(new IncompatibleKeyType()));\n  }\n catch (  ClassCastException tolerated) {\n  }\n  assertTrue(map.containsKey(map.keySet().iterator().next()));\n  if (allowsNullKeys) {\n    boolean unused=map.containsKey(null);\n  }\n else {\n    try {\n      boolean unused2=map.containsKey(null);\n    }\n catch (    NullPointerException optional) {\n    }\n  }\n  assertInvariants(map);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 288,
        "startColumnNumber" : 2,
        "endLineNumber" : 312,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testContainsKey(){\n  Map<K,V> map;\n  K unmappedKey;\n  try {\n    map=makePopulatedMap();\n    unmappedKey=getKeyNotInPopulatedMap();\n  }\n catch (  UnsupportedOperationException e) {\n    return;\n  }\n  assertFalse(map.containsKey(unmappedKey));\n  try {\n    assertFalse(map.containsKey(new IncompatibleKeyType()));\n  }\n catch (  ClassCastException tolerated) {\n  }\n  assertTrue(map.containsKey(map.keySet().iterator().next()));\n  if (allowsNullKeys) {\n    boolean unused=map.containsKey(null);\n  }\n else {\n    try {\n      boolean unused2=map.containsKey(null);\n    }\n catch (    NullPointerException optional) {\n    }\n  }\n  assertInvariants(map);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 297,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertFalse(map.containsKey(unmappedKey));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 297,
    "startColumnNumber" : 16,
    "endLineNumber" : 297,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}