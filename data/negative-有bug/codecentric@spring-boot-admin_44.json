{
  "id" : 44,
  "expression" : "Info.from(map).getValues().entrySet().iterator()",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/domain/values/InfoTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Info.from(map).getValues().entrySet().iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 66,
      "startColumnNumber" : 27,
      "endLineNumber" : 66,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 66,
        "startColumnNumber" : 20,
        "endLineNumber" : 66,
        "endColumnNumber" : 75
      },
      "nodeContext" : "iter=Info.from(map).getValues().entrySet().iterator()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Iterator<?> iter=Info.from(map).getValues().entrySet().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 61,
        "startColumnNumber" : 36,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,String> map=new LinkedHashMap<>();\n  map.put(\"z\",\"1\");\n  map.put(\"x\",\"2\");\n  Iterator<?> iter=Info.from(map).getValues().entrySet().iterator();\n  assertThat(iter.next()).hasFieldOrPropertyWithValue(\"key\",\"z\").hasFieldOrPropertyWithValue(\"value\",\"1\");\n  assertThat(iter.next()).hasFieldOrPropertyWithValue(\"key\",\"x\").hasFieldOrPropertyWithValue(\"value\",\"2\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_retain_order(){\n  Map<String,String> map=new LinkedHashMap<>();\n  map.put(\"z\",\"1\");\n  map.put(\"x\",\"2\");\n  Iterator<?> iter=Info.from(map).getValues().entrySet().iterator();\n  assertThat(iter.next()).hasFieldOrPropertyWithValue(\"key\",\"z\").hasFieldOrPropertyWithValue(\"value\",\"1\");\n  assertThat(iter.next()).hasFieldOrPropertyWithValue(\"key\",\"x\").hasFieldOrPropertyWithValue(\"value\",\"2\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Iterator<?> iter=Info.from(map).getValues().entrySet().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "java.util.Iterator<java.util.Map.Entry<java.lang.String,java.io.Serializable>>"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 66,
    "startColumnNumber" : 27,
    "endLineNumber" : 66,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}