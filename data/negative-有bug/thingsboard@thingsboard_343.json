{
  "id" : 343,
  "expression" : "JacksonUtil",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/common/transport/lwm2m/src/main/java/org/thingsboard/server/transport/lwm2m/secure/TbLwM2MDtlsCertificateVerifier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JacksonUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 127,
      "startColumnNumber" : 59,
      "endLineNumber" : 127,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 127,
        "startColumnNumber" : 59,
        "endLineNumber" : 127,
        "endColumnNumber" : 127
      },
      "nodeContext" : "JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 127,
        "startColumnNumber" : 45,
        "endLineNumber" : 127,
        "endColumnNumber" : 127
      },
      "nodeContext" : "credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 127,
        "startColumnNumber" : 28,
        "endLineNumber" : 127,
        "endColumnNumber" : 128
      },
      "nodeContext" : "LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1646,
        "startLineNumber" : 126,
        "startColumnNumber" : 124,
        "endLineNumber" : 149,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n  if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n    continue;\n  }\n  X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n  String certBody=config.getCert();\n  String endpoint=config.getEndpoint();\n  if (strCert.equals(certBody)) {\n    x509CredentialsFound=true;\n    DeviceProfile deviceProfile=msg.getDeviceProfile();\n    if (msg.hasDeviceInfo() && deviceProfile != null) {\n      sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n      try {\n        securityStore.putX509(securityInfo);\n      }\n catch (      NonUniqueSecurityInfoException e) {\n        log.trace(\"Failed to add security info: {}\",securityInfo,e);\n      }\n      break;\n    }\n  }\n else {\n    log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 126,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n  LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n  if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n    continue;\n  }\n  X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n  String certBody=config.getCert();\n  String endpoint=config.getEndpoint();\n  if (strCert.equals(certBody)) {\n    x509CredentialsFound=true;\n    DeviceProfile deviceProfile=msg.getDeviceProfile();\n    if (msg.hasDeviceInfo() && deviceProfile != null) {\n      sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n      try {\n        securityStore.putX509(securityInfo);\n      }\n catch (      NonUniqueSecurityInfoException e) {\n        log.trace(\"Failed to add security info: {}\",securityInfo,e);\n      }\n      break;\n    }\n  }\n else {\n    log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2550,
        "startLineNumber" : 112,
        "startColumnNumber" : 24,
        "endLineNumber" : 150,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (!skipValidityCheckForClientCert) {\n    cert.checkValidity();\n  }\n  String strCert=SslUtil.getCertificateString(cert);\n  String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n  TbLwM2MSecurityInfo securityInfo;\n  try {\n    securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n  }\n catch (  LwM2MAuthException e) {\n    securityInfo=null;\n  }\n  ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n  if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n    LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n    if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n      continue;\n    }\n    X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n    String certBody=config.getCert();\n    String endpoint=config.getEndpoint();\n    if (strCert.equals(certBody)) {\n      x509CredentialsFound=true;\n      DeviceProfile deviceProfile=msg.getDeviceProfile();\n      if (msg.hasDeviceInfo() && deviceProfile != null) {\n        sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n        try {\n          securityStore.putX509(securityInfo);\n        }\n catch (        NonUniqueSecurityInfoException e) {\n          log.trace(\"Failed to add security info: {}\",securityInfo,e);\n        }\n        break;\n      }\n    }\n else {\n      log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2791,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 154,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  if (!skipValidityCheckForClientCert) {\n    cert.checkValidity();\n  }\n  String strCert=SslUtil.getCertificateString(cert);\n  String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n  TbLwM2MSecurityInfo securityInfo;\n  try {\n    securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n  }\n catch (  LwM2MAuthException e) {\n    securityInfo=null;\n  }\n  ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n  if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n    LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n    if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n      continue;\n    }\n    X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n    String certBody=config.getCert();\n    String endpoint=config.getEndpoint();\n    if (strCert.equals(certBody)) {\n      x509CredentialsFound=true;\n      DeviceProfile deviceProfile=msg.getDeviceProfile();\n      if (msg.hasDeviceInfo() && deviceProfile != null) {\n        sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n        try {\n          securityStore.putX509(securityInfo);\n        }\n catch (        NonUniqueSecurityInfoException e) {\n          log.trace(\"Failed to add security info: {}\",securityInfo,e);\n        }\n        break;\n      }\n    }\n else {\n      log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n    }\n  }\n}\n catch (CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n  log.error(e.getMessage(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 234,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2831,
        "startLineNumber" : 111,
        "startColumnNumber" : 51,
        "endLineNumber" : 155,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    if (!skipValidityCheckForClientCert) {\n      cert.checkValidity();\n    }\n    String strCert=SslUtil.getCertificateString(cert);\n    String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n    TbLwM2MSecurityInfo securityInfo;\n    try {\n      securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n    }\n catch (    LwM2MAuthException e) {\n      securityInfo=null;\n    }\n    ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n    if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n      LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n      if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n        continue;\n      }\n      X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n      String certBody=config.getCert();\n      String endpoint=config.getEndpoint();\n      if (strCert.equals(certBody)) {\n        x509CredentialsFound=true;\n        DeviceProfile deviceProfile=msg.getDeviceProfile();\n        if (msg.hasDeviceInfo() && deviceProfile != null) {\n          sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n          try {\n            securityStore.putX509(securityInfo);\n          }\n catch (          NonUniqueSecurityInfoException e) {\n            log.trace(\"Failed to add security info: {}\",securityInfo,e);\n          }\n          break;\n        }\n      }\n else {\n        log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n      }\n    }\n  }\n catch (  CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n    log.error(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2866,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (X509Certificate cert : chain) {\n  try {\n    if (!skipValidityCheckForClientCert) {\n      cert.checkValidity();\n    }\n    String strCert=SslUtil.getCertificateString(cert);\n    String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n    TbLwM2MSecurityInfo securityInfo;\n    try {\n      securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n    }\n catch (    LwM2MAuthException e) {\n      securityInfo=null;\n    }\n    ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n    if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n      LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n      if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n        continue;\n      }\n      X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n      String certBody=config.getCert();\n      String endpoint=config.getEndpoint();\n      if (strCert.equals(certBody)) {\n        x509CredentialsFound=true;\n        DeviceProfile deviceProfile=msg.getDeviceProfile();\n        if (msg.hasDeviceInfo() && deviceProfile != null) {\n          sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n          try {\n            securityStore.putX509(securityInfo);\n          }\n catch (          NonUniqueSecurityInfoException e) {\n            log.trace(\"Failed to add security info: {}\",securityInfo,e);\n          }\n          break;\n        }\n      }\n else {\n        log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n      }\n    }\n  }\n catch (  CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n    log.error(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 241,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3748,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 166,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  boolean x509CredentialsFound=false;\n  CertPath certpath=message.getCertificateChain();\n  X509Certificate[] chain=certpath.getCertificates().toArray(new X509Certificate[0]);\n  for (  X509Certificate cert : chain) {\n    try {\n      if (!skipValidityCheckForClientCert) {\n        cert.checkValidity();\n      }\n      String strCert=SslUtil.getCertificateString(cert);\n      String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n      TbLwM2MSecurityInfo securityInfo;\n      try {\n        securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n      }\n catch (      LwM2MAuthException e) {\n        securityInfo=null;\n      }\n      ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n      if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n        LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n        if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n          continue;\n        }\n        X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n        String certBody=config.getCert();\n        String endpoint=config.getEndpoint();\n        if (strCert.equals(certBody)) {\n          x509CredentialsFound=true;\n          DeviceProfile deviceProfile=msg.getDeviceProfile();\n          if (msg.hasDeviceInfo() && deviceProfile != null) {\n            sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n            try {\n              securityStore.putX509(securityInfo);\n            }\n catch (            NonUniqueSecurityInfoException e) {\n              log.trace(\"Failed to add security info: {}\",securityInfo,e);\n            }\n            break;\n          }\n        }\n else {\n          log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n        }\n      }\n    }\n catch (    CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n      log.error(e.getMessage(),e);\n    }\n  }\n  if (!x509CredentialsFound) {\n    if (staticCertificateVerifier != null) {\n      staticCertificateVerifier.verifyCertificate(message,session);\n    }\n else {\n      AlertMessage alert=new AlertMessage(AlertMessage.AlertLevel.FATAL,AlertMessage.AlertDescription.INTERNAL_ERROR,session.getPeer());\n      throw new HandshakeException(\"x509 verification not enabled!\",alert);\n    }\n  }\n  return new CertificateVerificationResult(cid,certpath,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 323,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3933,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  boolean x509CredentialsFound=false;\n  CertPath certpath=message.getCertificateChain();\n  X509Certificate[] chain=certpath.getCertificates().toArray(new X509Certificate[0]);\n  for (  X509Certificate cert : chain) {\n    try {\n      if (!skipValidityCheckForClientCert) {\n        cert.checkValidity();\n      }\n      String strCert=SslUtil.getCertificateString(cert);\n      String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n      TbLwM2MSecurityInfo securityInfo;\n      try {\n        securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n      }\n catch (      LwM2MAuthException e) {\n        securityInfo=null;\n      }\n      ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n      if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n        LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n        if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n          continue;\n        }\n        X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n        String certBody=config.getCert();\n        String endpoint=config.getEndpoint();\n        if (strCert.equals(certBody)) {\n          x509CredentialsFound=true;\n          DeviceProfile deviceProfile=msg.getDeviceProfile();\n          if (msg.hasDeviceInfo() && deviceProfile != null) {\n            sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n            try {\n              securityStore.putX509(securityInfo);\n            }\n catch (            NonUniqueSecurityInfoException e) {\n              log.trace(\"Failed to add security info: {}\",securityInfo,e);\n            }\n            break;\n          }\n        }\n else {\n          log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n        }\n      }\n    }\n catch (    CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n      log.error(e.getMessage(),e);\n    }\n  }\n  if (!x509CredentialsFound) {\n    if (staticCertificateVerifier != null) {\n      staticCertificateVerifier.verifyCertificate(message,session);\n    }\n else {\n      AlertMessage alert=new AlertMessage(AlertMessage.AlertLevel.FATAL,AlertMessage.AlertDescription.INTERNAL_ERROR,session.getPeer());\n      throw new HandshakeException(\"x509 verification not enabled!\",alert);\n    }\n  }\n  return new CertificateVerificationResult(cid,certpath,null);\n}\n catch (HandshakeException e) {\n  log.trace(\"Certificate validation failed!\",e);\n  return new CertificateVerificationResult(cid,e,null);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 343,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3957,
        "startLineNumber" : 106,
        "startColumnNumber" : 15,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    boolean x509CredentialsFound=false;\n    CertPath certpath=message.getCertificateChain();\n    X509Certificate[] chain=certpath.getCertificates().toArray(new X509Certificate[0]);\n    for (    X509Certificate cert : chain) {\n      try {\n        if (!skipValidityCheckForClientCert) {\n          cert.checkValidity();\n        }\n        String strCert=SslUtil.getCertificateString(cert);\n        String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n        TbLwM2MSecurityInfo securityInfo;\n        try {\n          securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n        }\n catch (        LwM2MAuthException e) {\n          securityInfo=null;\n        }\n        ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n        if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n          LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n          if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n            continue;\n          }\n          X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n          String certBody=config.getCert();\n          String endpoint=config.getEndpoint();\n          if (strCert.equals(certBody)) {\n            x509CredentialsFound=true;\n            DeviceProfile deviceProfile=msg.getDeviceProfile();\n            if (msg.hasDeviceInfo() && deviceProfile != null) {\n              sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n              try {\n                securityStore.putX509(securityInfo);\n              }\n catch (              NonUniqueSecurityInfoException e) {\n                log.trace(\"Failed to add security info: {}\",securityInfo,e);\n              }\n              break;\n            }\n          }\n else {\n            log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n          }\n        }\n      }\n catch (      CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n        log.error(e.getMessage(),e);\n      }\n    }\n    if (!x509CredentialsFound) {\n      if (staticCertificateVerifier != null) {\n        staticCertificateVerifier.verifyCertificate(message,session);\n      }\n else {\n        AlertMessage alert=new AlertMessage(AlertMessage.AlertLevel.FATAL,AlertMessage.AlertDescription.INTERNAL_ERROR,session.getPeer());\n        throw new HandshakeException(\"x509 verification not enabled!\",alert);\n      }\n    }\n    return new CertificateVerificationResult(cid,certpath,null);\n  }\n catch (  HandshakeException e) {\n    log.trace(\"Certificate validation failed!\",e);\n    return new CertificateVerificationResult(cid,e,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4203,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (certChain == null) {\n  PublicKey publicKey=message.getPublicKey();\n  return new CertificateVerificationResult(cid,publicKey,null);\n}\n else {\n  try {\n    boolean x509CredentialsFound=false;\n    CertPath certpath=message.getCertificateChain();\n    X509Certificate[] chain=certpath.getCertificates().toArray(new X509Certificate[0]);\n    for (    X509Certificate cert : chain) {\n      try {\n        if (!skipValidityCheckForClientCert) {\n          cert.checkValidity();\n        }\n        String strCert=SslUtil.getCertificateString(cert);\n        String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n        TbLwM2MSecurityInfo securityInfo;\n        try {\n          securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n        }\n catch (        LwM2MAuthException e) {\n          securityInfo=null;\n        }\n        ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n        if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n          LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n          if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n            continue;\n          }\n          X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n          String certBody=config.getCert();\n          String endpoint=config.getEndpoint();\n          if (strCert.equals(certBody)) {\n            x509CredentialsFound=true;\n            DeviceProfile deviceProfile=msg.getDeviceProfile();\n            if (msg.hasDeviceInfo() && deviceProfile != null) {\n              sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n              try {\n                securityStore.putX509(securityInfo);\n              }\n catch (              NonUniqueSecurityInfoException e) {\n                log.trace(\"Failed to add security info: {}\",securityInfo,e);\n              }\n              break;\n            }\n          }\n else {\n            log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n          }\n        }\n      }\n catch (      CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n        log.error(e.getMessage(),e);\n      }\n    }\n    if (!x509CredentialsFound) {\n      if (staticCertificateVerifier != null) {\n        staticCertificateVerifier.verifyCertificate(message,session);\n      }\n else {\n        AlertMessage alert=new AlertMessage(AlertMessage.AlertLevel.FATAL,AlertMessage.AlertDescription.INTERNAL_ERROR,session.getPeer());\n        throw new HandshakeException(\"x509 verification not enabled!\",alert);\n      }\n    }\n    return new CertificateVerificationResult(cid,certpath,null);\n  }\n catch (  HandshakeException e) {\n    log.trace(\"Certificate validation failed!\",e);\n    return new CertificateVerificationResult(cid,e,null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 364,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4279,
        "startLineNumber" : 100,
        "startColumnNumber" : 204,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CertPath certChain=message.getCertificateChain();\n  if (certChain == null) {\n    PublicKey publicKey=message.getPublicKey();\n    return new CertificateVerificationResult(cid,publicKey,null);\n  }\n else {\n    try {\n      boolean x509CredentialsFound=false;\n      CertPath certpath=message.getCertificateChain();\n      X509Certificate[] chain=certpath.getCertificates().toArray(new X509Certificate[0]);\n      for (      X509Certificate cert : chain) {\n        try {\n          if (!skipValidityCheckForClientCert) {\n            cert.checkValidity();\n          }\n          String strCert=SslUtil.getCertificateString(cert);\n          String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n          TbLwM2MSecurityInfo securityInfo;\n          try {\n            securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n          }\n catch (          LwM2MAuthException e) {\n            securityInfo=null;\n          }\n          ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n          if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n            LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n            if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n              continue;\n            }\n            X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n            String certBody=config.getCert();\n            String endpoint=config.getEndpoint();\n            if (strCert.equals(certBody)) {\n              x509CredentialsFound=true;\n              DeviceProfile deviceProfile=msg.getDeviceProfile();\n              if (msg.hasDeviceInfo() && deviceProfile != null) {\n                sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n                try {\n                  securityStore.putX509(securityInfo);\n                }\n catch (                NonUniqueSecurityInfoException e) {\n                  log.trace(\"Failed to add security info: {}\",securityInfo,e);\n                }\n                break;\n              }\n            }\n else {\n              log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n            }\n          }\n        }\n catch (        CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n          log.error(e.getMessage(),e);\n        }\n      }\n      if (!x509CredentialsFound) {\n        if (staticCertificateVerifier != null) {\n          staticCertificateVerifier.verifyCertificate(message,session);\n        }\n else {\n          AlertMessage alert=new AlertMessage(AlertMessage.AlertLevel.FATAL,AlertMessage.AlertDescription.INTERNAL_ERROR,session.getPeer());\n          throw new HandshakeException(\"x509 verification not enabled!\",alert);\n        }\n      }\n      return new CertificateVerificationResult(cid,certpath,null);\n    }\n catch (    HandshakeException e) {\n      log.trace(\"Certificate validation failed!\",e);\n      return new CertificateVerificationResult(cid,e,null);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 373,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4493,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public CertificateVerificationResult verifyCertificate(ConnectionId cid,ServerNames serverName,Boolean clientUsage,boolean truncateCertificatePath,CertificateMessage message,DTLSSession session){\n  CertPath certChain=message.getCertificateChain();\n  if (certChain == null) {\n    PublicKey publicKey=message.getPublicKey();\n    return new CertificateVerificationResult(cid,publicKey,null);\n  }\n else {\n    try {\n      boolean x509CredentialsFound=false;\n      CertPath certpath=message.getCertificateChain();\n      X509Certificate[] chain=certpath.getCertificates().toArray(new X509Certificate[0]);\n      for (      X509Certificate cert : chain) {\n        try {\n          if (!skipValidityCheckForClientCert) {\n            cert.checkValidity();\n          }\n          String strCert=SslUtil.getCertificateString(cert);\n          String sha3Hash=EncryptionUtil.getSha3Hash(strCert);\n          TbLwM2MSecurityInfo securityInfo;\n          try {\n            securityInfo=securityInfoValidator.getEndpointSecurityInfoByCredentialsId(sha3Hash,CLIENT);\n          }\n catch (          LwM2MAuthException e) {\n            securityInfo=null;\n          }\n          ValidateDeviceCredentialsResponse msg=securityInfo != null ? securityInfo.getMsg() : null;\n          if (msg != null && org.thingsboard.server.common.data.StringUtils.isNotEmpty(msg.getCredentials())) {\n            LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n            if (!credentials.getClient().getSecurityConfigClientMode().equals(LwM2MSecurityMode.X509)) {\n              continue;\n            }\n            X509ClientCredentials config=(X509ClientCredentials)credentials.getClient();\n            String certBody=config.getCert();\n            String endpoint=config.getEndpoint();\n            if (strCert.equals(certBody)) {\n              x509CredentialsFound=true;\n              DeviceProfile deviceProfile=msg.getDeviceProfile();\n              if (msg.hasDeviceInfo() && deviceProfile != null) {\n                sessionStorage.put(endpoint,new TbX509DtlsSessionInfo(cert.getSubjectX500Principal().getName(),msg));\n                try {\n                  securityStore.putX509(securityInfo);\n                }\n catch (                NonUniqueSecurityInfoException e) {\n                  log.trace(\"Failed to add security info: {}\",securityInfo,e);\n                }\n                break;\n              }\n            }\n else {\n              log.trace(\"[{}][{}] Certificate mismatch. Expected: {}, Actual: {}\",endpoint,sha3Hash,strCert,certBody);\n            }\n          }\n        }\n catch (        CertificateEncodingException|CertificateExpiredException|CertificateNotYetValidException e) {\n          log.error(e.getMessage(),e);\n        }\n      }\n      if (!x509CredentialsFound) {\n        if (staticCertificateVerifier != null) {\n          staticCertificateVerifier.verifyCertificate(message,session);\n        }\n else {\n          AlertMessage alert=new AlertMessage(AlertMessage.AlertLevel.FATAL,AlertMessage.AlertDescription.INTERNAL_ERROR,session.getPeer());\n          throw new HandshakeException(\"x509 verification not enabled!\",alert);\n        }\n      }\n      return new CertificateVerificationResult(cid,certpath,null);\n    }\n catch (    HandshakeException e) {\n      log.trace(\"Certificate validation failed!\",e);\n      return new CertificateVerificationResult(cid,e,null);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 403,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 127,
        "startColumnNumber" : 28,
        "endLineNumber" : 127,
        "endColumnNumber" : 128
      },
      "nodeContext" : "LwM2MCredentials credentials=JacksonUtil.fromString(msg.getCredentials(),LwM2MCredentials.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.common.util.JacksonUtil"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 127,
    "startColumnNumber" : 59,
    "endLineNumber" : 127,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}