{
  "id" : 308,
  "expression" : "new byte[100]",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/hash/HashingInputStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new byte[100]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 91,
      "startColumnNumber" : 17,
      "endLineNumber" : 91,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 91,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 30
      },
      "nodeContext" : "buf=new byte[100]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 31
      },
      "nodeContext" : "byte[] buf=new byte[100];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 90,
        "startColumnNumber" : 65,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] buf=new byte[100];\n  byte[] expectedBytes=buf.clone();\n  System.arraycopy(testBytes,0,expectedBytes,0,testBytes.length);\n  HashingInputStream in=new HashingInputStream(hashFunction,buffer);\n  int numOfByteRead=in.read(buf,0,100);\n  assertEquals(4,numOfByteRead);\n  for (int i=0; i < numOfByteRead; i++) {\n    assertEquals(testBytes[i],buf[i]);\n  }\n  verify(hasher).putBytes(expectedBytes,0,4);\n  verify(hashFunction).newHasher();\n  verifyNoMoreInteractions(hashFunction,hasher);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testRead_putByteArrayOutOfBound() throws Exception {\n  byte[] buf=new byte[100];\n  byte[] expectedBytes=buf.clone();\n  System.arraycopy(testBytes,0,expectedBytes,0,testBytes.length);\n  HashingInputStream in=new HashingInputStream(hashFunction,buffer);\n  int numOfByteRead=in.read(buf,0,100);\n  assertEquals(4,numOfByteRead);\n  for (int i=0; i < numOfByteRead; i++) {\n    assertEquals(testBytes[i],buf[i]);\n  }\n  verify(hasher).putBytes(expectedBytes,0,4);\n  verify(hashFunction).newHasher();\n  verifyNoMoreInteractions(hashFunction,hasher);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 31
      },
      "nodeContext" : "byte[] buf=new byte[100];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 91,
    "startColumnNumber" : 17,
    "endLineNumber" : 91,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}