{
  "id" : 360,
  "expression" : "\"WordCount Example\"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/util/jartestprogram/WordCountWithAnonymousClass.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"WordCount Example\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 63,
      "startColumnNumber" : 20,
      "endLineNumber" : 63,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 40
      },
      "nodeContext" : "env.execute(\"WordCount Example\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 41
      },
      "nodeContext" : "env.execute(\"WordCount Example\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1649,
        "startLineNumber" : 29,
        "startColumnNumber" : 60,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  DataSet<String> text=StaticData.getDefaultTextLineDataSet(env);\n  DataSet<Tuple2<String,Integer>> counts=text.flatMap(new FlatMapFunction<String,Tuple2<String,Integer>>(){\n    @Override public void flatMap(    String value,    Collector<Tuple2<String,Integer>> out) throws Exception {\n      String[] tokens=value.toLowerCase().split(\"\\\\W+\");\n      for (      String token : tokens) {\n        if (token.length() > 0) {\n          out.collect(new Tuple2<String,Integer>(token,1));\n        }\n      }\n    }\n  }\n).groupBy(0).sum(1);\n  counts.print();\n  env.execute(\"WordCount Example\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1705,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  DataSet<String> text=StaticData.getDefaultTextLineDataSet(env);\n  DataSet<Tuple2<String,Integer>> counts=text.flatMap(new FlatMapFunction<String,Tuple2<String,Integer>>(){\n    @Override public void flatMap(    String value,    Collector<Tuple2<String,Integer>> out) throws Exception {\n      String[] tokens=value.toLowerCase().split(\"\\\\W+\");\n      for (      String token : tokens) {\n        if (token.length() > 0) {\n          out.collect(new Tuple2<String,Integer>(token,1));\n        }\n      }\n    }\n  }\n).groupBy(0).sum(1);\n  counts.print();\n  env.execute(\"WordCount Example\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 41
      },
      "nodeContext" : "env.execute(\"WordCount Example\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 63,
    "startColumnNumber" : 20,
    "endLineNumber" : 63,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}