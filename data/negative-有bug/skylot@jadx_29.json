{
  "id" : 29,
  "expression" : "parcel.readLong()",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/conditions/TestIfCodeStyle.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parcel.readLong()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 67,
      "startColumnNumber" : 23,
      "endLineNumber" : 67,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 40
      },
      "nodeContext" : "this.versionCode=parcel.readLong()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 41
      },
      "nodeContext" : "this.versionCode=parcel.readLong();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2258,
        "startLineNumber" : 35,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.moduleName=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.modulePath=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.preinstalledModulePath=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.versionCode=parcel.readLong();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.versionName=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.isFactory=parcel.readInt() != 0;\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.isActive=parcel.readInt() != 0;\n  if (startPos > Integer.MAX_VALUE - size) {\n    throw new RuntimeException(\"Overflow in the size of parcelable\");\n  }\n  parcel.setDataPosition(startPos + size);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 299,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2479,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 102,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.moduleName=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.modulePath=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.preinstalledModulePath=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.versionCode=parcel.readLong();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.versionName=parcel.readString();\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.isFactory=parcel.readInt() != 0;\n  if (parcel.dataPosition() - startPos >= size) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  this.isActive=parcel.readInt() != 0;\n  if (startPos > Integer.MAX_VALUE - size) {\n    throw new RuntimeException(\"Overflow in the size of parcelable\");\n  }\n  parcel.setDataPosition(startPos + size);\n}\n catch (Throwable e) {\n  if (startPos <= Integer.MAX_VALUE - size) {\n    parcel.setDataPosition(startPos + size);\n    throw e;\n  }\n  throw new RuntimeException(\"Overflow in the size of parcelable\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 329,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2777,
        "startLineNumber" : 25,
        "startColumnNumber" : 34,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int startPos=parcel.dataPosition();\n  int size=parcel.readInt();\n  if (size < 0) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  try {\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.moduleName=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.modulePath=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.preinstalledModulePath=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.versionCode=parcel.readLong();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.versionName=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.isFactory=parcel.readInt() != 0;\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.isActive=parcel.readInt() != 0;\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n  }\n catch (  Throwable e) {\n    if (startPos <= Integer.MAX_VALUE - size) {\n      parcel.setDataPosition(startPos + size);\n      throw e;\n    }\n    throw new RuntimeException(\"Overflow in the size of parcelable\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 371,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void test(Parcel parcel){\n  int startPos=parcel.dataPosition();\n  int size=parcel.readInt();\n  if (size < 0) {\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n    return;\n  }\n  try {\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.moduleName=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.modulePath=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.preinstalledModulePath=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.versionCode=parcel.readLong();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.versionName=parcel.readString();\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.isFactory=parcel.readInt() != 0;\n    if (parcel.dataPosition() - startPos >= size) {\n      if (startPos > Integer.MAX_VALUE - size) {\n        throw new RuntimeException(\"Overflow in the size of parcelable\");\n      }\n      parcel.setDataPosition(startPos + size);\n      return;\n    }\n    this.isActive=parcel.readInt() != 0;\n    if (startPos > Integer.MAX_VALUE - size) {\n      throw new RuntimeException(\"Overflow in the size of parcelable\");\n    }\n    parcel.setDataPosition(startPos + size);\n  }\n catch (  Throwable e) {\n    if (startPos <= Integer.MAX_VALUE - size) {\n      parcel.setDataPosition(startPos + size);\n      throw e;\n    }\n    throw new RuntimeException(\"Overflow in the size of parcelable\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 379,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 41
      },
      "nodeContext" : "this.versionCode=parcel.readLong();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 67,
    "startColumnNumber" : 23,
    "endLineNumber" : 67,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}