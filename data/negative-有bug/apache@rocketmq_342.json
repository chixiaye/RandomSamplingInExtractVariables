{
  "id" : 342,
  "expression" : "filterSpi.ofType()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/filter/src/main/java/org/apache/rocketmq/filter/FilterFactory.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "filterSpi.ofType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 43,
      "startColumnNumber" : 42,
      "endLineNumber" : 43,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n  throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 42,
        "startColumnNumber" : 46,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Register a filter. <br> Note: <li>1. Filter registered will be used in broker server, so take care of it's reliability and performance.</li>\n */\npublic void register(FilterSpi filterSpi){\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "filterSpi.ofType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 44,
      "startColumnNumber" : 99,
      "endLineNumber" : 44,
      "endColumnNumber" : 117
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 44,
        "startColumnNumber" : 47,
        "endLineNumber" : 44,
        "endColumnNumber" : 118
      },
      "nodeContext" : "String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 44,
        "startColumnNumber" : 18,
        "endLineNumber" : 44,
        "endColumnNumber" : 119
      },
      "nodeContext" : "new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 120
      },
      "nodeContext" : "throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 43,
        "startColumnNumber" : 63,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n  throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 42,
        "startColumnNumber" : 46,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Register a filter. <br> Note: <li>1. Filter registered will be used in broker server, so take care of it's reliability and performance.</li>\n */\npublic void register(FilterSpi filterSpi){\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 120
      },
      "nodeContext" : "throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "filterSpi.ofType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 47,
      "startColumnNumber" : 30,
      "endLineNumber" : 47,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 60
      },
      "nodeContext" : "FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 42,
        "startColumnNumber" : 46,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Register a filter. <br> Note: <li>1. Filter registered will be used in broker server, so take care of it's reliability and performance.</li>\n */\npublic void register(FilterSpi filterSpi){\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 43,
    "startColumnNumber" : 42,
    "endLineNumber" : 43,
    "endColumnNumber" : 60
  }, {
    "charLength" : 18,
    "startLineNumber" : 44,
    "startColumnNumber" : 99,
    "endLineNumber" : 44,
    "endColumnNumber" : 117
  }, {
    "charLength" : 18,
    "startLineNumber" : 47,
    "startColumnNumber" : 30,
    "endLineNumber" : 47,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}