{
  "id" : 442,
  "expression" : "(double[])o1",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/util/ObjectUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(double[])o1",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 356,
      "startColumnNumber" : 24,
      "endLineNumber" : 356,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 356,
        "startColumnNumber" : 10,
        "endLineNumber" : 356,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Arrays.equals((double[])o1,(double[])o2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 356,
        "startColumnNumber" : 3,
        "endLineNumber" : 356,
        "endColumnNumber" : 54
      },
      "nodeContext" : "return Arrays.equals((double[])o1,(double[])o2);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 355,
        "startColumnNumber" : 56,
        "endLineNumber" : 357,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return Arrays.equals((double[])o1,(double[])o2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 355,
        "startColumnNumber" : 2,
        "endLineNumber" : 357,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (o1 instanceof double[] && o2 instanceof double[]) {\n  return Arrays.equals((double[])o1,(double[])o2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 342,
        "startColumnNumber" : 58,
        "endLineNumber" : 371,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (o1 instanceof Object[] && o2 instanceof Object[]) {\n    return Arrays.equals((Object[])o1,(Object[])o2);\n  }\n  if (o1 instanceof boolean[] && o2 instanceof boolean[]) {\n    return Arrays.equals((boolean[])o1,(boolean[])o2);\n  }\n  if (o1 instanceof byte[] && o2 instanceof byte[]) {\n    return Arrays.equals((byte[])o1,(byte[])o2);\n  }\n  if (o1 instanceof char[] && o2 instanceof char[]) {\n    return Arrays.equals((char[])o1,(char[])o2);\n  }\n  if (o1 instanceof double[] && o2 instanceof double[]) {\n    return Arrays.equals((double[])o1,(double[])o2);\n  }\n  if (o1 instanceof float[] && o2 instanceof float[]) {\n    return Arrays.equals((float[])o1,(float[])o2);\n  }\n  if (o1 instanceof int[] && o2 instanceof int[]) {\n    return Arrays.equals((int[])o1,(int[])o2);\n  }\n  if (o1 instanceof long[] && o2 instanceof long[]) {\n    return Arrays.equals((long[])o1,(long[])o2);\n  }\n  if (o1 instanceof short[] && o2 instanceof short[]) {\n    return Arrays.equals((short[])o1,(short[])o2);\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 250,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 333,
        "startColumnNumber" : 1,
        "endLineNumber" : 371,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Compare the given arrays with  {@code Arrays.equals}, performing an equality check based on the array elements rather than the array reference.\n * @param o1 first array to compare\n * @param o2 second array to compare\n * @return whether the given objects are equal\n * @see #nullSafeEquals(Object,Object)\n * @see java.util.Arrays#equals\n */\nprivate static boolean arrayEquals(Object o1,Object o2){\n  if (o1 instanceof Object[] && o2 instanceof Object[]) {\n    return Arrays.equals((Object[])o1,(Object[])o2);\n  }\n  if (o1 instanceof boolean[] && o2 instanceof boolean[]) {\n    return Arrays.equals((boolean[])o1,(boolean[])o2);\n  }\n  if (o1 instanceof byte[] && o2 instanceof byte[]) {\n    return Arrays.equals((byte[])o1,(byte[])o2);\n  }\n  if (o1 instanceof char[] && o2 instanceof char[]) {\n    return Arrays.equals((char[])o1,(char[])o2);\n  }\n  if (o1 instanceof double[] && o2 instanceof double[]) {\n    return Arrays.equals((double[])o1,(double[])o2);\n  }\n  if (o1 instanceof float[] && o2 instanceof float[]) {\n    return Arrays.equals((float[])o1,(float[])o2);\n  }\n  if (o1 instanceof int[] && o2 instanceof int[]) {\n    return Arrays.equals((int[])o1,(int[])o2);\n  }\n  if (o1 instanceof long[] && o2 instanceof long[]) {\n    return Arrays.equals((long[])o1,(long[])o2);\n  }\n  if (o1 instanceof short[] && o2 instanceof short[]) {\n    return Arrays.equals((short[])o1,(short[])o2);\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 356,
        "startColumnNumber" : 3,
        "endLineNumber" : 356,
        "endColumnNumber" : 54
      },
      "nodeContext" : "return Arrays.equals((double[])o1,(double[])o2);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "double[]"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 356,
    "startColumnNumber" : 24,
    "endLineNumber" : 356,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}