{
  "id" : 450,
  "expression" : "\"Invalid request\"",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/core/src/main/java/com/alibaba/nacos/core/remote/grpc/GrpcRequestAcceptor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invalid request\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 144,
      "startColumnNumber" : 76,
      "endLineNumber" : 144,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 144,
        "startColumnNumber" : 29,
        "endLineNumber" : 144,
        "endColumnNumber" : 94
      },
      "nodeContext" : "buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 143,
        "startColumnNumber" : 38,
        "endLineNumber" : 144,
        "endColumnNumber" : 95
      },
      "nodeContext" : "GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 143,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 95
      },
      "nodeContext" : "payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 141,
        "startColumnNumber" : 30,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (parseObj == null) {\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5431,
        "startLineNumber" : 77,
        "startColumnNumber" : 87,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 510,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5528,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void request(Payload grpcRequest,StreamObserver<Payload> responseObserver){\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 527,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 144,
        "startColumnNumber" : 29,
        "endLineNumber" : 144,
        "endColumnNumber" : 94
      },
      "nodeContext" : "buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Invalid request\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 155,
      "startColumnNumber" : 76,
      "endLineNumber" : 155,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 155,
        "startColumnNumber" : 29,
        "endLineNumber" : 155,
        "endColumnNumber" : 94
      },
      "nodeContext" : "buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 154,
        "startColumnNumber" : 38,
        "endLineNumber" : 155,
        "endColumnNumber" : 95
      },
      "nodeContext" : "GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 154,
        "startColumnNumber" : 20,
        "endLineNumber" : 155,
        "endColumnNumber" : 95
      },
      "nodeContext" : "payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 154,
        "startColumnNumber" : 12,
        "endLineNumber" : 155,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 150,
        "startColumnNumber" : 44,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 150,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!(parseObj instanceof Request)) {\n  Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n  Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n  traceIfNecessary(payloadResponse,false);\n  responseObserver.onNext(payloadResponse);\n  responseObserver.onCompleted();\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5431,
        "startLineNumber" : 77,
        "startColumnNumber" : 87,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 510,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5528,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void request(Payload grpcRequest,StreamObserver<Payload> responseObserver){\n  traceIfNecessary(grpcRequest,true);\n  String type=grpcRequest.getMetadata().getType();\n  if (!ApplicationUtils.isStarted()) {\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.INVALID_SERVER_STATUS,\"Server is starting,please try later.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (ServerCheckRequest.class.getName().equals(type)) {\n    Payload serverCheckResponseP=GrpcUtils.convert(new ServerCheckResponse(CONTEXT_KEY_CONN_ID.get()));\n    traceIfNecessary(serverCheckResponseP,false);\n    responseObserver.onNext(serverCheckResponseP);\n    responseObserver.onCompleted();\n    return;\n  }\n  RequestHandler requestHandler=requestHandlerRegistry.getByRequestType(type);\n  if (requestHandler == null) {\n    Loggers.REMOTE_DIGEST.warn(String.format(\"[%s] No handler for request type : %s :\",\"grpc\",type));\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.NO_HANDLER,\"RequestHandler Not Found\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  String connectionId=CONTEXT_KEY_CONN_ID.get();\n  boolean requestValid=connectionManager.checkValid(connectionId);\n  if (!requestValid) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid connection Id ,connection [{}] is un registered ,\",\"grpc\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.UN_REGISTER,\"Connection is unregistered.\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Object parseObj=null;\n  try {\n    parseObj=GrpcUtils.parse(grpcRequest);\n  }\n catch (  Exception e) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive from connection [{}] ,error={}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  if (parseObj == null) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parse request is null\",connectionId);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n  if (!(parseObj instanceof Request)) {\n    Loggers.REMOTE_DIGEST.warn(\"[{}] Invalid request receive  ,parsed payload is not a request,parseObj={}\",connectionId,parseObj);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\"));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n  Request request=(Request)parseObj;\n  try {\n    Connection connection=connectionManager.getConnection(CONTEXT_KEY_CONN_ID.get());\n    RequestMeta requestMeta=new RequestMeta();\n    requestMeta.setClientIp(CONTEXT_KEY_CONN_CLIENT_IP.get());\n    requestMeta.setConnectionId(CONTEXT_KEY_CONN_ID.get());\n    requestMeta.setClientPort(CONTEXT_KEY_CONN_CLIENT_PORT.get());\n    requestMeta.setClientVersion(connection.getMetaInfo().getVersion());\n    requestMeta.setLabels(connection.getMetaInfo().getLabels());\n    connectionManager.refreshActiveTime(requestMeta.getConnectionId());\n    Response response=requestHandler.handleRequest(request,requestMeta);\n    Payload payloadResponse=GrpcUtils.convert(response);\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n  }\n catch (  Throwable e) {\n    Loggers.REMOTE_DIGEST.error(\"[{}] Fail to handle request from connection [{}] ,error message :{}\",\"grpc\",connectionId,e);\n    Payload payloadResponse=GrpcUtils.convert(buildErrorResponse(ResponseCode.FAIL.getCode(),e.getMessage()));\n    traceIfNecessary(payloadResponse,false);\n    responseObserver.onNext(payloadResponse);\n    responseObserver.onCompleted();\n    return;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 527,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 155,
        "startColumnNumber" : 29,
        "endLineNumber" : 155,
        "endColumnNumber" : 94
      },
      "nodeContext" : "buildErrorResponse(NacosException.BAD_GATEWAY,\"Invalid request\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 144,
    "startColumnNumber" : 76,
    "endLineNumber" : 144,
    "endColumnNumber" : 93
  }, {
    "charLength" : 17,
    "startLineNumber" : 155,
    "startColumnNumber" : 76,
    "endLineNumber" : 155,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}