{
  "id" : 495,
  "expression" : "dataV.slice()",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/webrtc/JavaI420Buffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataV.slice()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 66,
      "startColumnNumber" : 12,
      "endLineNumber" : 66,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 25
      },
      "nodeContext" : "dataV=dataV.slice()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 26
      },
      "nodeContext" : "dataV=dataV.slice();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 54,
        "startColumnNumber" : 42,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (dataY == null || dataU == null || dataV == null) {\n    throw new IllegalArgumentException(\"Data buffers cannot be null.\");\n  }\n  if (!dataY.isDirect() || !dataU.isDirect() || !dataV.isDirect()) {\n    throw new IllegalArgumentException(\"Data buffers must be direct byte buffers.\");\n  }\n  dataY=dataY.slice();\n  dataU=dataU.slice();\n  dataV=dataV.slice();\n  final int chromaWidth=(width + 1) / 2;\n  final int chromaHeight=(height + 1) / 2;\n  checkCapacity(dataY,width,height,strideY);\n  checkCapacity(dataU,chromaWidth,chromaHeight,strideU);\n  checkCapacity(dataV,chromaWidth,chromaHeight,strideV);\n  return new JavaI420Buffer(width,height,dataY,strideY,dataU,strideU,dataV,strideV,releaseCallback);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Wraps existing ByteBuffers into JavaI420Buffer object without copying the contents. \n */\npublic static JavaI420Buffer wrap(int width,int height,ByteBuffer dataY,int strideY,ByteBuffer dataU,int strideU,ByteBuffer dataV,int strideV,@Nullable Runnable releaseCallback){\n  if (dataY == null || dataU == null || dataV == null) {\n    throw new IllegalArgumentException(\"Data buffers cannot be null.\");\n  }\n  if (!dataY.isDirect() || !dataU.isDirect() || !dataV.isDirect()) {\n    throw new IllegalArgumentException(\"Data buffers must be direct byte buffers.\");\n  }\n  dataY=dataY.slice();\n  dataU=dataU.slice();\n  dataV=dataV.slice();\n  final int chromaWidth=(width + 1) / 2;\n  final int chromaHeight=(height + 1) / 2;\n  checkCapacity(dataY,width,height,strideY);\n  checkCapacity(dataU,chromaWidth,chromaHeight,strideU);\n  checkCapacity(dataV,chromaWidth,chromaHeight,strideV);\n  return new JavaI420Buffer(width,height,dataY,strideY,dataU,strideU,dataV,strideV,releaseCallback);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 26
      },
      "nodeContext" : "dataV=dataV.slice();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.nio.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 66,
    "startColumnNumber" : 12,
    "endLineNumber" : 66,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}