{
  "id" : 73,
  "expression" : "(entity == null) && (status == -1)",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/resteasy-reactive/common/runtime/src/main/java/org/jboss/resteasy/reactive/common/jaxrs/AbstractRestResponseBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(entity == null) && (status == -1)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 176,
      "startColumnNumber" : 12,
      "endLineNumber" : 176,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((entity == null) && (status == -1)) {\n  response.status=204;\n}\n else if (status == -1) {\n  response.status=200;\n}\n else {\n  response.status=status;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 174,
        "startColumnNumber" : 110,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  response.entity=(T)entity;\n  if ((entity == null) && (status == -1)) {\n    response.status=204;\n  }\n else   if (status == -1) {\n    response.status=200;\n  }\n else {\n    response.status=status;\n  }\n  response.reasonPhrase=reasonPhrase;\n  if (copyHeaders) {\n    response.headers=new CaseInsensitiveMap<>();\n    response.headers.putAll(metadata);\n  }\n else {\n    response.headers=metadata;\n  }\n  response.entityAnnotations=entityAnnotations;\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 820,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public <OtherT extends RestResponseImpl<T>>OtherT populateResponse(OtherT response,boolean copyHeaders){\n  response.entity=(T)entity;\n  if ((entity == null) && (status == -1)) {\n    response.status=204;\n  }\n else   if (status == -1) {\n    response.status=200;\n  }\n else {\n    response.status=status;\n  }\n  response.reasonPhrase=reasonPhrase;\n  if (copyHeaders) {\n    response.headers=new CaseInsensitiveMap<>();\n    response.headers.putAll(metadata);\n  }\n else {\n    response.headers=metadata;\n  }\n  response.entityAnnotations=entityAnnotations;\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((entity == null) && (status == -1)) {\n  response.status=204;\n}\n else if (status == -1) {\n  response.status=200;\n}\n else {\n  response.status=status;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 176,
    "startColumnNumber" : 12,
    "endLineNumber" : 176,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}