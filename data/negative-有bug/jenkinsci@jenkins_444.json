{
  "id" : 444,
  "expression" : "exploitFile",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/util/XStream2Security383Test.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "exploitFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 66,
      "startColumnNumber" : 16,
      "endLineNumber" : 66,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 36
      },
      "nodeContext" : "exploitFile.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "exploitFile.exists() && !exploitFile.delete()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (exploitFile.exists() && !exploitFile.delete()) {\n  throw new IllegalStateException(\"file exists and cannot be deleted\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n  finally {\n  exploitFile.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 62,
        "startColumnNumber" : 47,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"SECURITY-383\") public void testXmlLoad() throws Exception {\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "exploitFile.exists() && !exploitFile.delete()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "exploitFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 66,
      "startColumnNumber" : 41,
      "endLineNumber" : 66,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 66,
        "startColumnNumber" : 41,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "exploitFile.delete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 66,
        "startColumnNumber" : 40,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "!exploitFile.delete()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "exploitFile.exists() && !exploitFile.delete()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (exploitFile.exists() && !exploitFile.delete()) {\n  throw new IllegalStateException(\"file exists and cannot be deleted\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n  finally {\n  exploitFile.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 62,
        "startColumnNumber" : 47,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"SECURITY-383\") public void testXmlLoad() throws Exception {\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "exploitFile.exists() && !exploitFile.delete()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "exploitFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 75,
      "startColumnNumber" : 55,
      "endLineNumber" : 75,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 75,
        "startColumnNumber" : 55,
        "endLineNumber" : 75,
        "endColumnNumber" : 84
      },
      "nodeContext" : "exploitFile.getAbsolutePath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 75,
        "startColumnNumber" : 25,
        "endLineNumber" : 75,
        "endColumnNumber" : 85
      },
      "nodeContext" : "exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 85
      },
      "nodeContext" : "exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 86
      },
      "nodeContext" : "exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n  finally {\n  exploitFile.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 62,
        "startColumnNumber" : 47,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"SECURITY-383\") public void testXmlLoad() throws Exception {\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 86
      },
      "nodeContext" : "exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "exploitFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 84,
      "startColumnNumber" : 58,
      "endLineNumber" : 84,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 84,
        "startColumnNumber" : 58,
        "endLineNumber" : 84,
        "endColumnNumber" : 78
      },
      "nodeContext" : "exploitFile.exists()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertFalse(\"no file should be created here\",exploitFile.exists())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertFalse(\"no file should be created here\",exploitFile.exists());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n  finally {\n  exploitFile.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 62,
        "startColumnNumber" : 47,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"SECURITY-383\") public void testXmlLoad() throws Exception {\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertFalse(\"no file should be created here\",exploitFile.exists());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "exploitFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 86,
      "startColumnNumber" : 12,
      "endLineNumber" : 86,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 32
      },
      "nodeContext" : "exploitFile.delete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 33
      },
      "nodeContext" : "exploitFile.delete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 85,
        "startColumnNumber" : 18,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  exploitFile.delete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (exploitFile.exists() && !exploitFile.delete()) {\n    throw new IllegalStateException(\"file exists and cannot be deleted\");\n  }\n  File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n  String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n  exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n  FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n  try {\n    Items.load(j.jenkins,tempJobDir);\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n  assertFalse(\"no file should be created here\",exploitFile.exists());\n}\n  finally {\n  exploitFile.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 62,
        "startColumnNumber" : 47,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"SECURITY-383\") public void testXmlLoad() throws Exception {\n  File exploitFile=f.newFile();\n  try {\n    if (exploitFile.exists() && !exploitFile.delete()) {\n      throw new IllegalStateException(\"file exists and cannot be deleted\");\n    }\n    File tempJobDir=new File(j.jenkins.getRootDir(),\"security383\");\n    String exploitXml=IOUtils.toString(XStream2Security383Test.class.getResourceAsStream(\"/hudson/util/XStream2Security383Test/config.xml\"),StandardCharsets.UTF_8);\n    exploitXml=exploitXml.replace(\"@TOKEN@\",exploitFile.getAbsolutePath());\n    FileUtils.write(new File(tempJobDir,\"config.xml\"),exploitXml,StandardCharsets.UTF_8);\n    try {\n      Items.load(j.jenkins,tempJobDir);\n    }\n catch (    Exception e) {\n      e.printStackTrace();\n    }\n    assertFalse(\"no file should be created here\",exploitFile.exists());\n  }\n  finally {\n    exploitFile.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 33
      },
      "nodeContext" : "exploitFile.delete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 66,
    "startColumnNumber" : 16,
    "endLineNumber" : 66,
    "endColumnNumber" : 27
  }, {
    "charLength" : 11,
    "startLineNumber" : 66,
    "startColumnNumber" : 41,
    "endLineNumber" : 66,
    "endColumnNumber" : 52
  }, {
    "charLength" : 11,
    "startLineNumber" : 75,
    "startColumnNumber" : 55,
    "endLineNumber" : 75,
    "endColumnNumber" : 66
  }, {
    "charLength" : 11,
    "startLineNumber" : 84,
    "startColumnNumber" : 58,
    "endLineNumber" : 84,
    "endColumnNumber" : 69
  }, {
    "charLength" : 11,
    "startLineNumber" : 86,
    "startColumnNumber" : 12,
    "endLineNumber" : 86,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}