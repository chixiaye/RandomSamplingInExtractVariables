{
  "id" : 120,
  "expression" : "rs.length == RS_LEN + 1",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-crypto/src/main/java/cn/hutool/crypto/SmUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rs.length == RS_LEN + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 276,
      "startColumnNumber" : 13,
      "endLineNumber" : 276,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 276,
        "startColumnNumber" : 13,
        "endLineNumber" : 276,
        "endColumnNumber" : 50
      },
      "nodeContext" : "rs.length == RS_LEN + 1 && rs[0] == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 276,
        "startColumnNumber" : 9,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (rs.length == RS_LEN + 1 && rs[0] == 0) {\n  return Arrays.copyOfRange(rs,1,RS_LEN + 1);\n}\n else if (rs.length < RS_LEN) {\n  byte[] result=new byte[RS_LEN];\n  Arrays.fill(result,(byte)0);\n  System.arraycopy(rs,0,result,RS_LEN - rs.length,rs.length);\n  return result;\n}\n else {\n  throw new CryptoException(\"Error rs: {}\",Hex.toHexString(rs));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 274,
        "startColumnNumber" : 2,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (rs.length == RS_LEN) {\n  return rs;\n}\n else if (rs.length == RS_LEN + 1 && rs[0] == 0) {\n  return Arrays.copyOfRange(rs,1,RS_LEN + 1);\n}\n else if (rs.length < RS_LEN) {\n  byte[] result=new byte[RS_LEN];\n  Arrays.fill(result,(byte)0);\n  System.arraycopy(rs,0,result,RS_LEN - rs.length,rs.length);\n  return result;\n}\n else {\n  throw new CryptoException(\"Error rs: {}\",Hex.toHexString(rs));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 270,
        "startColumnNumber" : 65,
        "endLineNumber" : 286,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  byte[] rs=rOrS.toByteArray();\n  if (rs.length == RS_LEN) {\n    return rs;\n  }\n else   if (rs.length == RS_LEN + 1 && rs[0] == 0) {\n    return Arrays.copyOfRange(rs,1,RS_LEN + 1);\n  }\n else   if (rs.length < RS_LEN) {\n    byte[] result=new byte[RS_LEN];\n    Arrays.fill(result,(byte)0);\n    System.arraycopy(rs,0,result,RS_LEN - rs.length,rs.length);\n    return result;\n  }\n else {\n    throw new CryptoException(\"Error rs: {}\",Hex.toHexString(rs));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 263,
        "startColumnNumber" : 1,
        "endLineNumber" : 286,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * BigInteger转固定长度bytes\n * @param rOrS {@link BigInteger}\n * @return 固定长度bytes\n * @since 4.5.0\n */\nprivate static byte[] bigIntToFixedLengthBytes(BigInteger rOrS){\n  byte[] rs=rOrS.toByteArray();\n  if (rs.length == RS_LEN) {\n    return rs;\n  }\n else   if (rs.length == RS_LEN + 1 && rs[0] == 0) {\n    return Arrays.copyOfRange(rs,1,RS_LEN + 1);\n  }\n else   if (rs.length < RS_LEN) {\n    byte[] result=new byte[RS_LEN];\n    Arrays.fill(result,(byte)0);\n    System.arraycopy(rs,0,result,RS_LEN - rs.length,rs.length);\n    return result;\n  }\n else {\n    throw new CryptoException(\"Error rs: {}\",Hex.toHexString(rs));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 276,
        "startColumnNumber" : 13,
        "endLineNumber" : 276,
        "endColumnNumber" : 50
      },
      "nodeContext" : "rs.length == RS_LEN + 1 && rs[0] == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 276,
    "startColumnNumber" : 13,
    "endLineNumber" : 276,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}