{
  "id" : 255,
  "expression" : "matcher instanceof ClassNameMatcher",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/main/java/com/navercorp/pinpoint/test/InstrumentTranslator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "matcher instanceof ClassNameMatcher",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 64,
      "startColumnNumber" : 12,
      "endLineNumber" : 64,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (matcher instanceof ClassNameMatcher) {\n  ClassNameMatcher classNameMatcher=(ClassNameMatcher)matcher;\n  String className=classNameMatcher.getClassName();\n  addTransformer0(transformer,className);\n}\n else if (matcher instanceof MultiClassNameMatcher) {\n  final MultiClassNameMatcher classNameMatcher=(MultiClassNameMatcher)matcher;\n  List<String> classNameList=classNameMatcher.getClassNames();\n  for (  String className : classNameList) {\n    addTransformer0(transformer,className);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"unsupported Matcher \" + matcher);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 61,
        "startColumnNumber" : 74,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Matcher matcher=transformer.getMatcher();\n  if (matcher instanceof ClassNameMatcher) {\n    ClassNameMatcher classNameMatcher=(ClassNameMatcher)matcher;\n    String className=classNameMatcher.getClassName();\n    addTransformer0(transformer,className);\n  }\n else   if (matcher instanceof MultiClassNameMatcher) {\n    final MultiClassNameMatcher classNameMatcher=(MultiClassNameMatcher)matcher;\n    List<String> classNameList=classNameMatcher.getClassNames();\n    for (    String className : classNameList) {\n      addTransformer0(transformer,className);\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"unsupported Matcher \" + matcher);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void addTransformer(MatchableClassFileTransformer transformer){\n  final Matcher matcher=transformer.getMatcher();\n  if (matcher instanceof ClassNameMatcher) {\n    ClassNameMatcher classNameMatcher=(ClassNameMatcher)matcher;\n    String className=classNameMatcher.getClassName();\n    addTransformer0(transformer,className);\n  }\n else   if (matcher instanceof MultiClassNameMatcher) {\n    final MultiClassNameMatcher classNameMatcher=(MultiClassNameMatcher)matcher;\n    List<String> classNameList=classNameMatcher.getClassNames();\n    for (    String className : classNameList) {\n      addTransformer0(transformer,className);\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"unsupported Matcher \" + matcher);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (matcher instanceof ClassNameMatcher) {\n  ClassNameMatcher classNameMatcher=(ClassNameMatcher)matcher;\n  String className=classNameMatcher.getClassName();\n  addTransformer0(transformer,className);\n}\n else if (matcher instanceof MultiClassNameMatcher) {\n  final MultiClassNameMatcher classNameMatcher=(MultiClassNameMatcher)matcher;\n  List<String> classNameList=classNameMatcher.getClassNames();\n  for (  String className : classNameList) {\n    addTransformer0(transformer,className);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"unsupported Matcher \" + matcher);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 64,
    "startColumnNumber" : 12,
    "endLineNumber" : 64,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}