{
  "id" : 262,
  "expression" : "50",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/other/LazyRangeAdderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "50",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 45,
      "startColumnNumber" : 26,
      "endLineNumber" : 45,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 45,
        "startColumnNumber" : 22,
        "endLineNumber" : 45,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < 50",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 55,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < 50; i++) {\n  int l=randValue(0,n);\n  int r=randValue(0,n);\n  l=Math.min(l,r);\n  r=Math.max(l,r);\n  int x=randValue(-100,100);\n  lazyRangeAdder.add(l,r,x);\n  slowRangeAdd(arr2,l,r,x);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 36,
        "startColumnNumber" : 35,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int[] arr1=new int[n];\n  randomFill(arr1);\n  int[] arr2=arr1.clone();\n  LazyRangeAdder lazyRangeAdder=new LazyRangeAdder(arr1);\n  for (int i=0; i < 50; i++) {\n    int l=randValue(0,n);\n    int r=randValue(0,n);\n    l=Math.min(l,r);\n    r=Math.max(l,r);\n    int x=randValue(-100,100);\n    lazyRangeAdder.add(l,r,x);\n    slowRangeAdd(arr2,l,r,x);\n  }\n  lazyRangeAdder.done();\n  assertArrayEquals(arr1,arr2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int n=1; n < 1000; n++) {\n  int[] arr1=new int[n];\n  randomFill(arr1);\n  int[] arr2=arr1.clone();\n  LazyRangeAdder lazyRangeAdder=new LazyRangeAdder(arr1);\n  for (int i=0; i < 50; i++) {\n    int l=randValue(0,n);\n    int r=randValue(0,n);\n    l=Math.min(l,r);\n    r=Math.max(l,r);\n    int x=randValue(-100,100);\n    lazyRangeAdder.add(l,r,x);\n    slowRangeAdd(arr2,l,r,x);\n  }\n  lazyRangeAdder.done();\n  assertArrayEquals(arr1,arr2);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 121,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 34,
        "startColumnNumber" : 41,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int n=1; n < 1000; n++) {\n    int[] arr1=new int[n];\n    randomFill(arr1);\n    int[] arr2=arr1.clone();\n    LazyRangeAdder lazyRangeAdder=new LazyRangeAdder(arr1);\n    for (int i=0; i < 50; i++) {\n      int l=randValue(0,n);\n      int r=randValue(0,n);\n      l=Math.min(l,r);\n      r=Math.max(l,r);\n      int x=randValue(-100,100);\n      lazyRangeAdder.add(l,r,x);\n      slowRangeAdd(arr2,l,r,x);\n    }\n    lazyRangeAdder.done();\n    assertArrayEquals(arr1,arr2);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void randomRangeAdditionTests(){\n  for (int n=1; n < 1000; n++) {\n    int[] arr1=new int[n];\n    randomFill(arr1);\n    int[] arr2=arr1.clone();\n    LazyRangeAdder lazyRangeAdder=new LazyRangeAdder(arr1);\n    for (int i=0; i < 50; i++) {\n      int l=randValue(0,n);\n      int r=randValue(0,n);\n      l=Math.min(l,r);\n      r=Math.max(l,r);\n      int x=randValue(-100,100);\n      lazyRangeAdder.add(l,r,x);\n      slowRangeAdd(arr2,l,r,x);\n    }\n    lazyRangeAdder.done();\n    assertArrayEquals(arr1,arr2);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 45,
        "startColumnNumber" : 22,
        "endLineNumber" : 45,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < 50",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 45,
    "startColumnNumber" : 26,
    "endLineNumber" : 45,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}