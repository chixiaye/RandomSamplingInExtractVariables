{
  "id" : 341,
  "expression" : "startPadding != 0",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/datasource/src/main/java/com/google/android/exoplayer2/upstream/AesFlushingCipher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "startPadding != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 62,
      "startColumnNumber" : 10,
      "endLineNumber" : 62,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (startPadding != 0) {\n  updateInPlace(new byte[startPadding],0,startPadding);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n  blockSize=cipher.getBlockSize();\n  zerosBlock=new byte[blockSize];\n  flushedBlock=new byte[blockSize];\n  long counter=offset / blockSize;\n  int startPadding=(int)(offset % blockSize);\n  cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n  if (startPadding != 0) {\n    updateInPlace(new byte[startPadding],0,startPadding);\n  }\n}\n catch (NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 813,
        "startLineNumber" : 50,
        "startColumnNumber" : 80,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 891,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public AesFlushingCipher(int mode,byte[] secretKey,long nonce,long offset){\n  try {\n    cipher=Cipher.getInstance(\"AES/CTR/NoPadding\");\n    blockSize=cipher.getBlockSize();\n    zerosBlock=new byte[blockSize];\n    flushedBlock=new byte[blockSize];\n    long counter=offset / blockSize;\n    int startPadding=(int)(offset % blockSize);\n    cipher.init(mode,new SecretKeySpec(secretKey,Util.splitAtFirst(cipher.getAlgorithm(),\"/\")[0]),new IvParameterSpec(getInitializationVector(nonce,counter)));\n    if (startPadding != 0) {\n      updateInPlace(new byte[startPadding],0,startPadding);\n    }\n  }\n catch (  NoSuchAlgorithmException|NoSuchPaddingException|InvalidKeyException|InvalidAlgorithmParameterException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (startPadding != 0) {\n  updateInPlace(new byte[startPadding],0,startPadding);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 62,
    "startColumnNumber" : 10,
    "endLineNumber" : 62,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}