{
  "id" : 222,
  "expression" : "Float.NaN",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/qrcode/detector/Detector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Float.NaN",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 359,
      "startColumnNumber" : 11,
      "endLineNumber" : 359,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 359,
        "startColumnNumber" : 4,
        "endLineNumber" : 359,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return Float.NaN;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1877,
        "startLineNumber" : 306,
        "startColumnNumber" : 81,
        "endLineNumber" : 360,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean steep=Math.abs(toY - fromY) > Math.abs(toX - fromX);\n  if (steep) {\n    int temp=fromX;\n    fromX=fromY;\n    fromY=temp;\n    temp=toX;\n    toX=toY;\n    toY=temp;\n  }\n  int dx=Math.abs(toX - fromX);\n  int dy=Math.abs(toY - fromY);\n  int error=-dx / 2;\n  int xstep=fromX < toX ? 1 : -1;\n  int ystep=fromY < toY ? 1 : -1;\n  int state=0;\n  int xLimit=toX + xstep;\n  for (int x=fromX, y=fromY; x != xLimit; x+=xstep) {\n    int realX=steep ? y : x;\n    int realY=steep ? x : y;\n    if ((state == 1) == image.get(realX,realY)) {\n      if (state == 2) {\n        return MathUtils.distance(x,y,fromX,fromY);\n      }\n      state++;\n    }\n    error+=dy;\n    if (error > 0) {\n      if (y == toY) {\n        break;\n      }\n      y+=ystep;\n      error-=dx;\n    }\n  }\n  if (state == 2) {\n    return MathUtils.distance(toX + xstep,toY,fromX,fromY);\n  }\n  return Float.NaN;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2375,
        "startLineNumber" : 298,
        "startColumnNumber" : 2,
        "endLineNumber" : 360,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>This method traces a line from a point in the image, in the direction towards another point. It begins in a black region, and keeps going until it finds white, then black, then white again. It reports the distance from the start to this point.</p> <p>This is used when figuring out how wide a finder pattern is, when the finder pattern may be skewed or rotated.</p>\n */\nprivate float sizeOfBlackWhiteBlackRun(int fromX,int fromY,int toX,int toY){\n  boolean steep=Math.abs(toY - fromY) > Math.abs(toX - fromX);\n  if (steep) {\n    int temp=fromX;\n    fromX=fromY;\n    fromY=temp;\n    temp=toX;\n    toX=toY;\n    toY=temp;\n  }\n  int dx=Math.abs(toX - fromX);\n  int dy=Math.abs(toY - fromY);\n  int error=-dx / 2;\n  int xstep=fromX < toX ? 1 : -1;\n  int ystep=fromY < toY ? 1 : -1;\n  int state=0;\n  int xLimit=toX + xstep;\n  for (int x=fromX, y=fromY; x != xLimit; x+=xstep) {\n    int realX=steep ? y : x;\n    int realY=steep ? x : y;\n    if ((state == 1) == image.get(realX,realY)) {\n      if (state == 2) {\n        return MathUtils.distance(x,y,fromX,fromY);\n      }\n      state++;\n    }\n    error+=dy;\n    if (error > 0) {\n      if (y == toY) {\n        break;\n      }\n      y+=ystep;\n      error-=dx;\n    }\n  }\n  if (state == 2) {\n    return MathUtils.distance(toX + xstep,toY,fromX,fromY);\n  }\n  return Float.NaN;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 359,
        "startColumnNumber" : 4,
        "endLineNumber" : 359,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return Float.NaN;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 359,
    "startColumnNumber" : 11,
    "endLineNumber" : 359,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}