{
  "id" : 255,
  "expression" : "str",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/convert/ConvertOtherTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "str",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 39,
      "startColumnNumber" : 41,
      "endLineNumber" : 39,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 39,
        "startColumnNumber" : 20,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Convert.strToUnicode(str)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 39,
        "startColumnNumber" : 9,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "unicode2=Convert.strToUnicode(str)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 46
      },
      "nodeContext" : "String unicode2=Convert.strToUnicode(str);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 28,
        "startColumnNumber" : 27,
        "endLineNumber" : 44,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String a=\"我是一个小小的可爱的字符串\";\n  String unicode=Convert.strToUnicode(a);\n  Assert.assertEquals(\"\\\\u6211\\\\u662f\\\\u4e00\\\\u4e2a\\\\u5c0f\\\\u5c0f\\\\u7684\\\\u53ef\\\\u7231\\\\u7684\\\\u5b57\\\\u7b26\\\\u4e32\",unicode);\n  String raw=Convert.unicodeToStr(unicode);\n  Assert.assertEquals(raw,a);\n  String str=\"你 好\";\n  String unicode2=Convert.strToUnicode(str);\n  Assert.assertEquals(\"\\\\u4f60\\\\u00a0\\\\u597d\",unicode2);\n  String str2=Convert.unicodeToStr(unicode2);\n  Assert.assertEquals(str,str2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 27,
        "startColumnNumber" : 1,
        "endLineNumber" : 44,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void unicodeTest(){\n  String a=\"我是一个小小的可爱的字符串\";\n  String unicode=Convert.strToUnicode(a);\n  Assert.assertEquals(\"\\\\u6211\\\\u662f\\\\u4e00\\\\u4e2a\\\\u5c0f\\\\u5c0f\\\\u7684\\\\u53ef\\\\u7231\\\\u7684\\\\u5b57\\\\u7b26\\\\u4e32\",unicode);\n  String raw=Convert.unicodeToStr(unicode);\n  Assert.assertEquals(raw,a);\n  String str=\"你 好\";\n  String unicode2=Convert.strToUnicode(str);\n  Assert.assertEquals(\"\\\\u4f60\\\\u00a0\\\\u597d\",unicode2);\n  String str2=Convert.unicodeToStr(unicode2);\n  Assert.assertEquals(str,str2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 46
      },
      "nodeContext" : "String unicode2=Convert.strToUnicode(str);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "str",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 43,
      "startColumnNumber" : 22,
      "endLineNumber" : 43,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Assert.assertEquals(str,str2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Assert.assertEquals(str,str2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 28,
        "startColumnNumber" : 27,
        "endLineNumber" : 44,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String a=\"我是一个小小的可爱的字符串\";\n  String unicode=Convert.strToUnicode(a);\n  Assert.assertEquals(\"\\\\u6211\\\\u662f\\\\u4e00\\\\u4e2a\\\\u5c0f\\\\u5c0f\\\\u7684\\\\u53ef\\\\u7231\\\\u7684\\\\u5b57\\\\u7b26\\\\u4e32\",unicode);\n  String raw=Convert.unicodeToStr(unicode);\n  Assert.assertEquals(raw,a);\n  String str=\"你 好\";\n  String unicode2=Convert.strToUnicode(str);\n  Assert.assertEquals(\"\\\\u4f60\\\\u00a0\\\\u597d\",unicode2);\n  String str2=Convert.unicodeToStr(unicode2);\n  Assert.assertEquals(str,str2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 27,
        "startColumnNumber" : 1,
        "endLineNumber" : 44,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void unicodeTest(){\n  String a=\"我是一个小小的可爱的字符串\";\n  String unicode=Convert.strToUnicode(a);\n  Assert.assertEquals(\"\\\\u6211\\\\u662f\\\\u4e00\\\\u4e2a\\\\u5c0f\\\\u5c0f\\\\u7684\\\\u53ef\\\\u7231\\\\u7684\\\\u5b57\\\\u7b26\\\\u4e32\",unicode);\n  String raw=Convert.unicodeToStr(unicode);\n  Assert.assertEquals(raw,a);\n  String str=\"你 好\";\n  String unicode2=Convert.strToUnicode(str);\n  Assert.assertEquals(\"\\\\u4f60\\\\u00a0\\\\u597d\",unicode2);\n  String str2=Convert.unicodeToStr(unicode2);\n  Assert.assertEquals(str,str2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Assert.assertEquals(str,str2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 39,
    "startColumnNumber" : 41,
    "endLineNumber" : 39,
    "endColumnNumber" : 44
  }, {
    "charLength" : 3,
    "startLineNumber" : 43,
    "startColumnNumber" : 22,
    "endLineNumber" : 43,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}