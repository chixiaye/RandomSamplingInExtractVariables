{
  "id" : 36,
  "expression" : "(fontFile.exists() && fontFile.length() > 0)",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/app/TermuxActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(fontFile.exists() && fontFile.length() > 0)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 182,
      "startColumnNumber" : 41,
      "endLineNumber" : 182,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 182,
        "startColumnNumber" : 41,
        "endLineNumber" : 182,
        "endColumnNumber" : 142
      },
      "nodeContext" : "(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 182,
        "startColumnNumber" : 27,
        "endLineNumber" : 182,
        "endColumnNumber" : 142
      },
      "nodeContext" : "newTypeface=(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 182,
        "startColumnNumber" : 12,
        "endLineNumber" : 182,
        "endColumnNumber" : 143
      },
      "nodeContext" : "final Typeface newTypeface=(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1068,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  @SuppressLint(\"SdCardPath\") File fontFile=new File(\"/data/data/com.termux/files/home/.termux/font.ttf\");\n  @SuppressLint(\"SdCardPath\") File colorsFile=new File(\"/data/data/com.termux/files/home/.termux/colors.properties\");\n  final Properties props=new Properties();\n  if (colorsFile.isFile()) {\n    try (InputStream in=new FileInputStream(colorsFile)){\n      props.load(in);\n    }\n   }\n  TerminalColors.COLOR_SCHEME.updateWith(props);\n  TerminalSession session=getCurrentTermSession();\n  if (session != null && session.getEmulator() != null) {\n    session.getEmulator().mColors.reset();\n  }\n  updateBackgroundColor();\n  final Typeface newTypeface=(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE;\n  mTerminalView.setTypeface(newTypeface);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  @SuppressLint(\"SdCardPath\") File fontFile=new File(\"/data/data/com.termux/files/home/.termux/font.ttf\");\n  @SuppressLint(\"SdCardPath\") File colorsFile=new File(\"/data/data/com.termux/files/home/.termux/colors.properties\");\n  final Properties props=new Properties();\n  if (colorsFile.isFile()) {\n    try (InputStream in=new FileInputStream(colorsFile)){\n      props.load(in);\n    }\n   }\n  TerminalColors.COLOR_SCHEME.updateWith(props);\n  TerminalSession session=getCurrentTermSession();\n  if (session != null && session.getEmulator() != null) {\n    session.getEmulator().mColors.reset();\n  }\n  updateBackgroundColor();\n  final Typeface newTypeface=(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE;\n  mTerminalView.setTypeface(newTypeface);\n}\n catch (Exception e) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Error in checkForFontAndColors()\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 136,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1201,
        "startLineNumber" : 162,
        "startColumnNumber" : 33,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    @SuppressLint(\"SdCardPath\") File fontFile=new File(\"/data/data/com.termux/files/home/.termux/font.ttf\");\n    @SuppressLint(\"SdCardPath\") File colorsFile=new File(\"/data/data/com.termux/files/home/.termux/colors.properties\");\n    final Properties props=new Properties();\n    if (colorsFile.isFile()) {\n      try (InputStream in=new FileInputStream(colorsFile)){\n        props.load(in);\n      }\n     }\n    TerminalColors.COLOR_SCHEME.updateWith(props);\n    TerminalSession session=getCurrentTermSession();\n    if (session != null && session.getEmulator() != null) {\n      session.getEmulator().mColors.reset();\n    }\n    updateBackgroundColor();\n    final Typeface newTypeface=(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE;\n    mTerminalView.setTypeface(newTypeface);\n  }\n catch (  Exception e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error in checkForFontAndColors()\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 162,
        "startColumnNumber" : 4,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void checkForFontAndColors(){\n  try {\n    @SuppressLint(\"SdCardPath\") File fontFile=new File(\"/data/data/com.termux/files/home/.termux/font.ttf\");\n    @SuppressLint(\"SdCardPath\") File colorsFile=new File(\"/data/data/com.termux/files/home/.termux/colors.properties\");\n    final Properties props=new Properties();\n    if (colorsFile.isFile()) {\n      try (InputStream in=new FileInputStream(colorsFile)){\n        props.load(in);\n      }\n     }\n    TerminalColors.COLOR_SCHEME.updateWith(props);\n    TerminalSession session=getCurrentTermSession();\n    if (session != null && session.getEmulator() != null) {\n      session.getEmulator().mColors.reset();\n    }\n    updateBackgroundColor();\n    final Typeface newTypeface=(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE;\n    mTerminalView.setTypeface(newTypeface);\n  }\n catch (  Exception e) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Error in checkForFontAndColors()\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 182,
        "startColumnNumber" : 12,
        "endLineNumber" : 182,
        "endColumnNumber" : 143
      },
      "nodeContext" : "final Typeface newTypeface=(fontFile.exists() && fontFile.length() > 0) ? Typeface.createFromFile(fontFile) : Typeface.MONOSPACE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 182,
    "startColumnNumber" : 41,
    "endLineNumber" : 182,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}