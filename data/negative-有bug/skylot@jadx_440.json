{
  "id" : 440,
  "expression" : "16",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/trycatch/TestTryCatchInIf.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "16",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 22,
      "startColumnNumber" : 36,
      "endLineNumber" : 22,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Integer.parseInt(value,16)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 22,
        "endColumnNumber" : 39
      },
      "nodeContext" : "key=Integer.parseInt(value,16)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 22,
        "endColumnNumber" : 40
      },
      "nodeContext" : "key=Integer.parseInt(value,16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 20,
        "startColumnNumber" : 33,
        "endLineNumber" : 23,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  value=value.substring(2);\n  key=Integer.parseInt(value,16);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 20,
        "startColumnNumber" : 5,
        "endLineNumber" : 25,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (value.startsWith(\"0x\")) {\n  value=value.substring(2);\n  key=Integer.parseInt(value,16);\n}\n else {\n  key=Integer.parseInt(value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int key;\n  if (value.startsWith(\"0x\")) {\n    value=value.substring(2);\n    key=Integer.parseInt(value,16);\n  }\n else {\n    key=Integer.parseInt(value);\n  }\n  return name + \"=\" + key;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  int key;\n  if (value.startsWith(\"0x\")) {\n    value=value.substring(2);\n    key=Integer.parseInt(value,16);\n  }\n else {\n    key=Integer.parseInt(value);\n  }\n  return name + \"=\" + key;\n}\n catch (NumberFormatException e) {\n  return \"Failed to parse number\";\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 17,
        "startColumnNumber" : 22,
        "endLineNumber" : 30,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  try {\n    int key;\n    if (value.startsWith(\"0x\")) {\n      value=value.substring(2);\n      key=Integer.parseInt(value,16);\n    }\n else {\n      key=Integer.parseInt(value);\n    }\n    return name + \"=\" + key;\n  }\n catch (  NumberFormatException e) {\n    return \"Failed to parse number\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 17,
        "startColumnNumber" : 3,
        "endLineNumber" : 30,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (value != null) {\n  try {\n    int key;\n    if (value.startsWith(\"0x\")) {\n      value=value.substring(2);\n      key=Integer.parseInt(value,16);\n    }\n else {\n      key=Integer.parseInt(value);\n    }\n    return name + \"=\" + key;\n  }\n catch (  NumberFormatException e) {\n    return \"Failed to parse number\";\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 16,
        "startColumnNumber" : 49,
        "endLineNumber" : 33,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (value != null) {\n    try {\n      int key;\n      if (value.startsWith(\"0x\")) {\n        value=value.substring(2);\n        key=Integer.parseInt(value,16);\n      }\n else {\n        key=Integer.parseInt(value);\n      }\n      return name + \"=\" + key;\n    }\n catch (    NumberFormatException e) {\n      return \"Failed to parse number\";\n    }\n  }\n  System.out.println(\"?\");\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 33,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private String test(String name,String value){\n  if (value != null) {\n    try {\n      int key;\n      if (value.startsWith(\"0x\")) {\n        value=value.substring(2);\n        key=Integer.parseInt(value,16);\n      }\n else {\n        key=Integer.parseInt(value);\n      }\n      return name + \"=\" + key;\n    }\n catch (    NumberFormatException e) {\n      return \"Failed to parse number\";\n    }\n  }\n  System.out.println(\"?\");\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 22,
        "endColumnNumber" : 40
      },
      "nodeContext" : "key=Integer.parseInt(value,16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 22,
    "startColumnNumber" : 36,
    "endLineNumber" : 22,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}