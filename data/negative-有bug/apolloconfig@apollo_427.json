{
  "id" : 427,
  "expression" : "null",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/NamespaceLockController.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 32,
      "startColumnNumber" : 21,
      "endLineNumber" : 32,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 25
      },
      "nodeContext" : "namespace == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (namespace == null) {\n  throw new BadRequestException(\"namespace not exist.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 30,
        "startColumnNumber" : 84,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@RequestMapping(\"/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/lock\") public NamespaceLockDTO getNamespaceLockOwner(@PathVariable String appId,@PathVariable String clusterName,@PathVariable String namespaceName){\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 25
      },
      "nodeContext" : "namespace == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 37,
      "startColumnNumber" : 13,
      "endLineNumber" : 37,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 36,
        "startColumnNumber" : 51,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 30,
        "startColumnNumber" : 84,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@RequestMapping(\"/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/lock\") public NamespaceLockDTO getNamespaceLockOwner(@PathVariable String appId,@PathVariable String clusterName,@PathVariable String namespaceName){\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 42,
      "startColumnNumber" : 16,
      "endLineNumber" : 42,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 20
      },
      "nodeContext" : "lock == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (lock == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 30,
        "startColumnNumber" : 84,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@RequestMapping(\"/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/lock\") public NamespaceLockDTO getNamespaceLockOwner(@PathVariable String appId,@PathVariable String clusterName,@PathVariable String namespaceName){\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 20
      },
      "nodeContext" : "lock == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 43,
      "startColumnNumber" : 13,
      "endLineNumber" : 43,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 42,
        "startColumnNumber" : 22,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (lock == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 30,
        "startColumnNumber" : 84,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@RequestMapping(\"/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/lock\") public NamespaceLockDTO getNamespaceLockOwner(@PathVariable String appId,@PathVariable String clusterName,@PathVariable String namespaceName){\n  Namespace namespace=namespaceService.findOne(appId,clusterName,namespaceName);\n  if (namespace == null) {\n    throw new BadRequestException(\"namespace not exist.\");\n  }\n  if (apolloSwitcher.isNamespaceLockSwitchOff()) {\n    return null;\n  }\n  NamespaceLock lock=namespaceLockService.findLock(namespace.getId());\n  if (lock == null) {\n    return null;\n  }\n  return BeanUtils.transfrom(NamespaceLockDTO.class,lock);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 32,
    "startColumnNumber" : 21,
    "endLineNumber" : 32,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 37,
    "startColumnNumber" : 13,
    "endLineNumber" : 37,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 42,
    "startColumnNumber" : 16,
    "endLineNumber" : 42,
    "endColumnNumber" : 20
  }, {
    "charLength" : 4,
    "startLineNumber" : 43,
    "startColumnNumber" : 13,
    "endLineNumber" : 43,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}