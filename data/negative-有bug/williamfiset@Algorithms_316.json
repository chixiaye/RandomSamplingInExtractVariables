{
  "id" : 316,
  "expression" : "dp[0]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/MinimumCostConvexPolygonTriangulation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dp[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 38,
      "startColumnNumber" : 11,
      "endLineNumber" : 38,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 38,
        "startColumnNumber" : 11,
        "endLineNumber" : 38,
        "endColumnNumber" : 25
      },
      "nodeContext" : "dp[0][len - 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 26
      },
      "nodeContext" : "return dp[0][len - 1];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 22,
        "startColumnNumber" : 67,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int len=polygon.length;\n  if (len < 3)   return 0;\n  double[][] dp=new double[len][len];\n  for (int i=2; i < len; i++) {\n    for (int j=0; j + i < len; j++) {\n      dp[j][j + i]=Integer.MAX_VALUE;\n      for (int k=j + 1; k < j + i; k++) {\n        dp[j][j + i]=Math.min(dp[j][j + i],dp[j][k] + dp[k][j + i] + cost(polygon[j],polygon[j + i],polygon[k]));\n      }\n    }\n  }\n  return dp[0][len - 1];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static double minimumCostTriangulation(Point2D[] polygon){\n  int len=polygon.length;\n  if (len < 3)   return 0;\n  double[][] dp=new double[len][len];\n  for (int i=2; i < len; i++) {\n    for (int j=0; j + i < len; j++) {\n      dp[j][j + i]=Integer.MAX_VALUE;\n      for (int k=j + 1; k < j + i; k++) {\n        dp[j][j + i]=Math.min(dp[j][j + i],dp[j][k] + dp[k][j + i] + cost(polygon[j],polygon[j + i],polygon[k]));\n      }\n    }\n  }\n  return dp[0][len - 1];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 26
      },
      "nodeContext" : "return dp[0][len - 1];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "double[]"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 38,
    "startColumnNumber" : 11,
    "endLineNumber" : 38,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}