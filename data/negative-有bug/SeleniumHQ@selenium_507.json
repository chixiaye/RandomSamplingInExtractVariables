{
  "id" : 507,
  "expression" : "\"Fishy\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/support/pagefactory/internal/LocatingElementHandlerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Fishy\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 52,
      "startColumnNumber" : 19,
      "endLineNumber" : 52,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 27
      },
      "nodeContext" : "proxy.sendKeys(\"Fishy\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 28
      },
      "nodeContext" : "proxy.sendKeys(\"Fishy\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 41,
        "startColumnNumber" : 52,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final ElementLocator locator=mock(ElementLocator.class);\n  final WebElement element=mock(WebElement.class);\n  when(locator.findElement()).thenReturn(element);\n  LocatingElementHandler handler=new LocatingElementHandler(locator);\n  WebElement proxy=(WebElement)Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{WebElement.class},handler);\n  proxy.sendKeys(\"Fishy\");\n  proxy.submit();\n  verify(locator,times(2)).findElement();\n  verify(element).sendKeys(\"Fishy\");\n  verify(element).submit();\n  verifyNoMoreInteractions(locator,element);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldAlwaysLocateTheElementPerCall(){\n  final ElementLocator locator=mock(ElementLocator.class);\n  final WebElement element=mock(WebElement.class);\n  when(locator.findElement()).thenReturn(element);\n  LocatingElementHandler handler=new LocatingElementHandler(locator);\n  WebElement proxy=(WebElement)Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{WebElement.class},handler);\n  proxy.sendKeys(\"Fishy\");\n  proxy.submit();\n  verify(locator,times(2)).findElement();\n  verify(element).sendKeys(\"Fishy\");\n  verify(element).submit();\n  verifyNoMoreInteractions(locator,element);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 28
      },
      "nodeContext" : "proxy.sendKeys(\"Fishy\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Fishy\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 56,
      "startColumnNumber" : 29,
      "endLineNumber" : 56,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 37
      },
      "nodeContext" : "verify(element).sendKeys(\"Fishy\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 38
      },
      "nodeContext" : "verify(element).sendKeys(\"Fishy\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 41,
        "startColumnNumber" : 52,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final ElementLocator locator=mock(ElementLocator.class);\n  final WebElement element=mock(WebElement.class);\n  when(locator.findElement()).thenReturn(element);\n  LocatingElementHandler handler=new LocatingElementHandler(locator);\n  WebElement proxy=(WebElement)Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{WebElement.class},handler);\n  proxy.sendKeys(\"Fishy\");\n  proxy.submit();\n  verify(locator,times(2)).findElement();\n  verify(element).sendKeys(\"Fishy\");\n  verify(element).submit();\n  verifyNoMoreInteractions(locator,element);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldAlwaysLocateTheElementPerCall(){\n  final ElementLocator locator=mock(ElementLocator.class);\n  final WebElement element=mock(WebElement.class);\n  when(locator.findElement()).thenReturn(element);\n  LocatingElementHandler handler=new LocatingElementHandler(locator);\n  WebElement proxy=(WebElement)Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{WebElement.class},handler);\n  proxy.sendKeys(\"Fishy\");\n  proxy.submit();\n  verify(locator,times(2)).findElement();\n  verify(element).sendKeys(\"Fishy\");\n  verify(element).submit();\n  verifyNoMoreInteractions(locator,element);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 38
      },
      "nodeContext" : "verify(element).sendKeys(\"Fishy\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 52,
    "startColumnNumber" : 19,
    "endLineNumber" : 52,
    "endColumnNumber" : 26
  }, {
    "charLength" : 7,
    "startLineNumber" : 56,
    "startColumnNumber" : 29,
    "endLineNumber" : 56,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}