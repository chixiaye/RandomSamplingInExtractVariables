{
  "id" : 487,
  "expression" : "TextUtils",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/fragments/list/playlist/PlaylistFragment.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TextUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 284,
      "startColumnNumber" : 13,
      "endLineNumber" : 284,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 284,
        "startColumnNumber" : 13,
        "endLineNumber" : 284,
        "endColumnNumber" : 56
      },
      "nodeContext" : "TextUtils.isEmpty(result.getUploaderName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 284,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 56
      },
      "nodeContext" : "!TextUtils.isEmpty(result.getUploaderName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 284,
        "startColumnNumber" : 8,
        "endLineNumber" : 298,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!TextUtils.isEmpty(result.getUploaderName())) {\n  headerUploaderName.setText(result.getUploaderName());\n  if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n    headerUploaderLayout.setOnClickListener(v -> {\n      try {\n        NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n      }\n catch (      Exception e) {\n        ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n      }\n    }\n);\n  }\n}\n else {\n  headerUploaderName.setText(R.string.playlist_no_uploader);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 277,
        "startColumnNumber" : 65,
        "endLineNumber" : 334,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  headerStreamCount.setText(Localization.localizeStreamCount(getContext(),result.getStreamCount()));\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),true));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2768,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 334,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handleResult(@NonNull final PlaylistInfo result){\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  headerStreamCount.setText(Localization.localizeStreamCount(getContext(),result.getStreamCount()));\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),true));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 284,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 56
      },
      "nodeContext" : "!TextUtils.isEmpty(result.getUploaderName())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "TextUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 286,
      "startColumnNumber" : 17,
      "endLineNumber" : 286,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 286,
        "startColumnNumber" : 17,
        "endLineNumber" : 286,
        "endColumnNumber" : 59
      },
      "nodeContext" : "TextUtils.isEmpty(result.getUploaderUrl())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 286,
        "startColumnNumber" : 16,
        "endLineNumber" : 286,
        "endColumnNumber" : 59
      },
      "nodeContext" : "!TextUtils.isEmpty(result.getUploaderUrl())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 507,
        "startLineNumber" : 286,
        "startColumnNumber" : 12,
        "endLineNumber" : 295,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n  headerUploaderLayout.setOnClickListener(v -> {\n    try {\n      NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n    }\n catch (    Exception e) {\n      ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n    }\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 284,
        "startColumnNumber" : 58,
        "endLineNumber" : 296,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  headerUploaderName.setText(result.getUploaderName());\n  if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n    headerUploaderLayout.setOnClickListener(v -> {\n      try {\n        NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n      }\n catch (      Exception e) {\n        ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 772,
        "startLineNumber" : 284,
        "startColumnNumber" : 8,
        "endLineNumber" : 298,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!TextUtils.isEmpty(result.getUploaderName())) {\n  headerUploaderName.setText(result.getUploaderName());\n  if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n    headerUploaderLayout.setOnClickListener(v -> {\n      try {\n        NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n      }\n catch (      Exception e) {\n        ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n      }\n    }\n);\n  }\n}\n else {\n  headerUploaderName.setText(R.string.playlist_no_uploader);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 277,
        "startColumnNumber" : 65,
        "endLineNumber" : 334,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  headerStreamCount.setText(Localization.localizeStreamCount(getContext(),result.getStreamCount()));\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),true));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2768,
        "startLineNumber" : 276,
        "startColumnNumber" : 4,
        "endLineNumber" : 334,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handleResult(@NonNull final PlaylistInfo result){\n  super.handleResult(result);\n  animateView(headerRootLayout,true,100);\n  animateView(headerUploaderLayout,true,300);\n  headerUploaderLayout.setOnClickListener(null);\n  if (!TextUtils.isEmpty(result.getUploaderName())) {\n    headerUploaderName.setText(result.getUploaderName());\n    if (!TextUtils.isEmpty(result.getUploaderUrl())) {\n      headerUploaderLayout.setOnClickListener(v -> {\n        try {\n          NavigationHelper.openChannelFragment(getFM(),result.getServiceId(),result.getUploaderUrl(),result.getUploaderName());\n        }\n catch (        Exception e) {\n          ErrorActivity.reportUiError((AppCompatActivity)getActivity(),e);\n        }\n      }\n);\n    }\n  }\n else {\n    headerUploaderName.setText(R.string.playlist_no_uploader);\n  }\n  playlistCtrl.setVisibility(View.VISIBLE);\n  IMAGE_LOADER.displayImage(result.getUploaderAvatarUrl(),headerUploaderAvatar,ImageDisplayConstants.DISPLAY_AVATAR_OPTIONS);\n  headerStreamCount.setText(Localization.localizeStreamCount(getContext(),result.getStreamCount()));\n  if (!result.getErrors().isEmpty()) {\n    showSnackBarError(result.getErrors(),UserAction.REQUESTED_PLAYLIST,NewPipe.getNameOfService(result.getServiceId()),result.getUrl(),0);\n  }\n  remotePlaylistManager.getPlaylist(result).flatMap(lists -> getUpdateProcessor(lists,result),(lists,id) -> lists).onBackpressureLatest().observeOn(AndroidSchedulers.mainThread()).subscribe(getPlaylistBookmarkSubscriber());\n  headerPlayAllButton.setOnClickListener(view -> NavigationHelper.playOnMainPlayer(activity,getPlayQueue(),true));\n  headerPopupButton.setOnClickListener(view -> NavigationHelper.playOnPopupPlayer(activity,getPlayQueue(),false));\n  headerBackgroundButton.setOnClickListener(view -> NavigationHelper.playOnBackgroundPlayer(activity,getPlayQueue(),false));\n  headerPopupButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnPopupPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n  headerBackgroundButton.setOnLongClickListener(view -> {\n    NavigationHelper.enqueueOnBackgroundPlayer(activity,getPlayQueue(),true);\n    return true;\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 286,
        "startColumnNumber" : 16,
        "endLineNumber" : 286,
        "endColumnNumber" : 59
      },
      "nodeContext" : "!TextUtils.isEmpty(result.getUploaderUrl())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 284,
    "startColumnNumber" : 13,
    "endLineNumber" : 284,
    "endColumnNumber" : 22
  }, {
    "charLength" : 9,
    "startLineNumber" : 286,
    "startColumnNumber" : 17,
    "endLineNumber" : 286,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}