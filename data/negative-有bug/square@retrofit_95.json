{
  "id" : 95,
  "expression" : "new AtomicReference<>()",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-adapters/rxjava3/src/test/java/retrofit2/adapter/rxjava3/AsyncTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AtomicReference<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 114,
      "startColumnNumber" : 48,
      "endLineNumber" : 114,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 114,
        "startColumnNumber" : 37,
        "endLineNumber" : 114,
        "endColumnNumber" : 71
      },
      "nodeContext" : "errorRef=new AtomicReference<>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final AtomicReference<Throwable> errorRef=new AtomicReference<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 110,
        "startColumnNumber" : 82,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  server.enqueue(new MockResponse());\n  final CountDownLatch latch=new CountDownLatch(1);\n  final AtomicReference<Throwable> errorRef=new AtomicReference<>();\n  RxJavaPlugins.setErrorHandler(throwable -> {\n    if (!errorRef.compareAndSet(null,throwable)) {\n      throw Exceptions.propagate(throwable);\n    }\n    latch.countDown();\n  }\n);\n  TestObserver<Void> observer=new TestObserver<>();\n  final RuntimeException e=new RuntimeException();\n  service.completable().subscribe(new ForwardingCompletableObserver(observer){\n    @Override public void onComplete(){\n      throw e;\n    }\n  }\n);\n  latch.await(1,SECONDS);\n  assertThat(errorRef.get().getCause()).isSameAs(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void throwingInOnCompleteDeliveredToPlugin() throws InterruptedException {\n  server.enqueue(new MockResponse());\n  final CountDownLatch latch=new CountDownLatch(1);\n  final AtomicReference<Throwable> errorRef=new AtomicReference<>();\n  RxJavaPlugins.setErrorHandler(throwable -> {\n    if (!errorRef.compareAndSet(null,throwable)) {\n      throw Exceptions.propagate(throwable);\n    }\n    latch.countDown();\n  }\n);\n  TestObserver<Void> observer=new TestObserver<>();\n  final RuntimeException e=new RuntimeException();\n  service.completable().subscribe(new ForwardingCompletableObserver(observer){\n    @Override public void onComplete(){\n      throw e;\n    }\n  }\n);\n  latch.await(1,SECONDS);\n  assertThat(errorRef.get().getCause()).isSameAs(e);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final AtomicReference<Throwable> errorRef=new AtomicReference<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicReference<java.lang.Throwable>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 114,
    "startColumnNumber" : 48,
    "endLineNumber" : 114,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}