{
  "id" : 145,
  "expression" : "readString(scanner)",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/hexagonal/src/main/java/com/iluwatar/hexagonal/service/LotteryConsoleServiceImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "readString(scanner)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 55,
      "startColumnNumber" : 13,
      "endLineNumber" : 55,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 32
      },
      "nodeContext" : "id=readString(scanner)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 33
      },
      "nodeContext" : "var id=readString(scanner);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 53,
        "startColumnNumber" : 67,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  logger.info(\"What is the ID of the lottery ticket?\");\n  var id=readString(scanner);\n  logger.info(\"Give the 4 comma separated winning numbers?\");\n  var numbers=readString(scanner);\n  try {\n    var winningNumbers=Arrays.stream(numbers.split(\",\")).map(Integer::parseInt).limit(4).collect(Collectors.toSet());\n    final var lotteryTicketId=new LotteryTicketId(Integer.parseInt(id));\n    final var lotteryNumbers=LotteryNumbers.create(winningNumbers);\n    var result=service.checkTicketForPrize(lotteryTicketId,lotteryNumbers);\n    if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.WIN_PRIZE)) {\n      logger.info(\"Congratulations! The lottery ticket has won!\");\n    }\n else     if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.NO_PRIZE)) {\n      logger.info(\"Unfortunately the lottery ticket did not win.\");\n    }\n else {\n      logger.info(\"Such lottery ticket has not been submitted.\");\n    }\n  }\n catch (  Exception e) {\n    logger.info(\"Failed checking the lottery ticket - please try again.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void checkTicket(LotteryService service,Scanner scanner){\n  logger.info(\"What is the ID of the lottery ticket?\");\n  var id=readString(scanner);\n  logger.info(\"Give the 4 comma separated winning numbers?\");\n  var numbers=readString(scanner);\n  try {\n    var winningNumbers=Arrays.stream(numbers.split(\",\")).map(Integer::parseInt).limit(4).collect(Collectors.toSet());\n    final var lotteryTicketId=new LotteryTicketId(Integer.parseInt(id));\n    final var lotteryNumbers=LotteryNumbers.create(winningNumbers);\n    var result=service.checkTicketForPrize(lotteryTicketId,lotteryNumbers);\n    if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.WIN_PRIZE)) {\n      logger.info(\"Congratulations! The lottery ticket has won!\");\n    }\n else     if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.NO_PRIZE)) {\n      logger.info(\"Unfortunately the lottery ticket did not win.\");\n    }\n else {\n      logger.info(\"Such lottery ticket has not been submitted.\");\n    }\n  }\n catch (  Exception e) {\n    logger.info(\"Failed checking the lottery ticket - please try again.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 33
      },
      "nodeContext" : "var id=readString(scanner);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "readString(scanner)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 57,
      "startColumnNumber" : 18,
      "endLineNumber" : 57,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 37
      },
      "nodeContext" : "numbers=readString(scanner)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 38
      },
      "nodeContext" : "var numbers=readString(scanner);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 53,
        "startColumnNumber" : 67,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  logger.info(\"What is the ID of the lottery ticket?\");\n  var id=readString(scanner);\n  logger.info(\"Give the 4 comma separated winning numbers?\");\n  var numbers=readString(scanner);\n  try {\n    var winningNumbers=Arrays.stream(numbers.split(\",\")).map(Integer::parseInt).limit(4).collect(Collectors.toSet());\n    final var lotteryTicketId=new LotteryTicketId(Integer.parseInt(id));\n    final var lotteryNumbers=LotteryNumbers.create(winningNumbers);\n    var result=service.checkTicketForPrize(lotteryTicketId,lotteryNumbers);\n    if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.WIN_PRIZE)) {\n      logger.info(\"Congratulations! The lottery ticket has won!\");\n    }\n else     if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.NO_PRIZE)) {\n      logger.info(\"Unfortunately the lottery ticket did not win.\");\n    }\n else {\n      logger.info(\"Such lottery ticket has not been submitted.\");\n    }\n  }\n catch (  Exception e) {\n    logger.info(\"Failed checking the lottery ticket - please try again.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void checkTicket(LotteryService service,Scanner scanner){\n  logger.info(\"What is the ID of the lottery ticket?\");\n  var id=readString(scanner);\n  logger.info(\"Give the 4 comma separated winning numbers?\");\n  var numbers=readString(scanner);\n  try {\n    var winningNumbers=Arrays.stream(numbers.split(\",\")).map(Integer::parseInt).limit(4).collect(Collectors.toSet());\n    final var lotteryTicketId=new LotteryTicketId(Integer.parseInt(id));\n    final var lotteryNumbers=LotteryNumbers.create(winningNumbers);\n    var result=service.checkTicketForPrize(lotteryTicketId,lotteryNumbers);\n    if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.WIN_PRIZE)) {\n      logger.info(\"Congratulations! The lottery ticket has won!\");\n    }\n else     if (result.getResult().equals(LotteryTicketCheckResult.CheckResult.NO_PRIZE)) {\n      logger.info(\"Unfortunately the lottery ticket did not win.\");\n    }\n else {\n      logger.info(\"Such lottery ticket has not been submitted.\");\n    }\n  }\n catch (  Exception e) {\n    logger.info(\"Failed checking the lottery ticket - please try again.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 38
      },
      "nodeContext" : "var numbers=readString(scanner);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 55,
    "startColumnNumber" : 13,
    "endLineNumber" : 55,
    "endColumnNumber" : 32
  }, {
    "charLength" : 19,
    "startLineNumber" : 57,
    "startColumnNumber" : 18,
    "endLineNumber" : 57,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}