{
  "id" : 174,
  "expression" : "functionMatches.get(functionIndex)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/preproc/PdePreprocessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "functionMatches.get(functionIndex)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 333,
      "startColumnNumber" : 13,
      "endLineNumber" : 333,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 333,
        "startColumnNumber" : 12,
        "endLineNumber" : 333,
        "endColumnNumber" : 48
      },
      "nodeContext" : "(functionMatches.get(functionIndex))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 333,
        "startColumnNumber" : 12,
        "endLineNumber" : 333,
        "endColumnNumber" : 93
      },
      "nodeContext" : "(functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 336,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n  functionMatches.remove(functionIndex);\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 332,
        "startColumnNumber" : 93,
        "endLineNumber" : 337,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n    functionMatches.remove(functionIndex);\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 332,
        "startColumnNumber" : 6,
        "endLineNumber" : 337,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n  if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n    functionMatches.remove(functionIndex);\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 331,
        "startColumnNumber" : 92,
        "endLineNumber" : 338,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n    if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n      functionMatches.remove(functionIndex);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 331,
        "startColumnNumber" : 4,
        "endLineNumber" : 338,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int functionIndex=functionMatches.size() - 1; functionIndex >= 0; functionIndex--) {\n  for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n    if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n      functionMatches.remove(functionIndex);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 310,
        "startColumnNumber" : 49,
        "endLineNumber" : 341,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  in=collapseBraces(strip(in));\n  Pattern prototypePattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*;)\");\n  Pattern functionPattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*\\\\{)\");\n  ArrayList<String> prototypeMatches=new ArrayList<String>();\n  Matcher prototypeMatcher=prototypePattern.matcher(in);\n  while (prototypeMatcher.find())   prototypeMatches.add(prototypeMatcher.group(0) + \";\");\n  ArrayList<String> functionMatches=new ArrayList<String>();\n  Matcher functionMatcher=functionPattern.matcher(in);\n  while (functionMatcher.find())   functionMatches.add(functionMatcher.group(0) + \";\");\n  for (int functionIndex=functionMatches.size() - 1; functionIndex >= 0; functionIndex--) {\n    for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n      if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n        functionMatches.remove(functionIndex);\n        break;\n      }\n    }\n  }\n  return functionMatches;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 310,
        "startColumnNumber" : 2,
        "endLineNumber" : 341,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public ArrayList<String> prototypes(String in){\n  in=collapseBraces(strip(in));\n  Pattern prototypePattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*;)\");\n  Pattern functionPattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*\\\\{)\");\n  ArrayList<String> prototypeMatches=new ArrayList<String>();\n  Matcher prototypeMatcher=prototypePattern.matcher(in);\n  while (prototypeMatcher.find())   prototypeMatches.add(prototypeMatcher.group(0) + \";\");\n  ArrayList<String> functionMatches=new ArrayList<String>();\n  Matcher functionMatcher=functionPattern.matcher(in);\n  while (functionMatcher.find())   functionMatches.add(functionMatcher.group(0) + \";\");\n  for (int functionIndex=functionMatches.size() - 1; functionIndex >= 0; functionIndex--) {\n    for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n      if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n        functionMatches.remove(functionIndex);\n        break;\n      }\n    }\n  }\n  return functionMatches;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 333,
        "startColumnNumber" : 12,
        "endLineNumber" : 333,
        "endColumnNumber" : 93
      },
      "nodeContext" : "(functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 333,
    "startColumnNumber" : 13,
    "endLineNumber" : 333,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}