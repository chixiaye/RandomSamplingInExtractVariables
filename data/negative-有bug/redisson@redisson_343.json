{
  "id" : 343,
  "expression" : "pattern",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-26/src/main/java/org/redisson/spring/data/connection/RedissonReactiveClusterKeyCommands.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pattern",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 57,
      "startColumnNumber" : 143,
      "endLineNumber" : 57,
      "endColumnNumber" : 150
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 57,
        "startColumnNumber" : 131,
        "endLineNumber" : 57,
        "endColumnNumber" : 151
      },
      "nodeContext" : "toByteArray(pattern)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 57,
        "startColumnNumber" : 60,
        "endLineNumber" : 57,
        "endColumnNumber" : 152
      },
      "nodeContext" : "executorService.readAllAsync(StringCodec.INSTANCE,RedisCommands.KEYS,toByteArray(pattern))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 57,
        "endColumnNumber" : 152
      },
      "nodeContext" : "futures=executorService.readAllAsync(StringCodec.INSTANCE,RedisCommands.KEYS,toByteArray(pattern))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 153
      },
      "nodeContext" : "List<CompletableFuture<List<String>>> futures=executorService.readAllAsync(StringCodec.INSTANCE,RedisCommands.KEYS,toByteArray(pattern));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 56,
        "startColumnNumber" : 62,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<CompletableFuture<List<String>>> futures=executorService.readAllAsync(StringCodec.INSTANCE,RedisCommands.KEYS,toByteArray(pattern));\n  CompletableFuture<Void> ff=CompletableFuture.allOf(futures.toArray(new CompletableFuture[0]));\n  CompletableFuture<List<String>> future=ff.thenApply(r -> {\n    return futures.stream().flatMap(f -> f.getNow(new ArrayList<>()).stream()).collect(Collectors.toList());\n  }\n).toCompletableFuture();\n  return new CompletableFutureWrapper<>(future);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 56,
        "startColumnNumber" : 56,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  List<CompletableFuture<List<String>>> futures=executorService.readAllAsync(StringCodec.INSTANCE,RedisCommands.KEYS,toByteArray(pattern));\n  CompletableFuture<Void> ff=CompletableFuture.allOf(futures.toArray(new CompletableFuture[0]));\n  CompletableFuture<List<String>> future=ff.thenApply(r -> {\n    return futures.stream().flatMap(f -> f.getNow(new ArrayList<>()).stream()).collect(Collectors.toList());\n  }\n).toCompletableFuture();\n  return new CompletableFutureWrapper<>(future);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 97,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 153
      },
      "nodeContext" : "List<CompletableFuture<List<String>>> futures=executorService.readAllAsync(StringCodec.INSTANCE,RedisCommands.KEYS,toByteArray(pattern));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.nio.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 57,
    "startColumnNumber" : 143,
    "endLineNumber" : 57,
    "endColumnNumber" : 150
  } ],
  "layoutRelationDataList" : [ ]
}