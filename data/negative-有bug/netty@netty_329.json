{
  "id" : 329,
  "expression" : "arrOffset < len",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arrOffset < len",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 393,
      "startColumnNumber" : 30,
      "endLineNumber" : 393,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 393,
        "startColumnNumber" : 12,
        "endLineNumber" : 401,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n  ByteBuf b=buffers[arrOffset];\n  if (b == null) {\n    break;\n  }\n  Component c=newComponent(ensureAccessible(b),nextOffset);\n  components[ci]=c;\n  nextOffset=c.endOffset;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 389,
        "startColumnNumber" : 12,
        "endLineNumber" : 403,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkComponentIndex(cIndex);\n  shiftComps(cIndex,count);\n  int nextOffset=cIndex > 0 ? components[cIndex - 1].endOffset : 0;\n  for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n    ByteBuf b=buffers[arrOffset];\n    if (b == null) {\n      break;\n    }\n    Component c=newComponent(ensureAccessible(b),nextOffset);\n    components[ci]=c;\n    nextOffset=c.endOffset;\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 389,
        "startColumnNumber" : 8,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  checkComponentIndex(cIndex);\n  shiftComps(cIndex,count);\n  int nextOffset=cIndex > 0 ? components[cIndex - 1].endOffset : 0;\n  for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n    ByteBuf b=buffers[arrOffset];\n    if (b == null) {\n      break;\n    }\n    Component c=newComponent(ensureAccessible(b),nextOffset);\n    components[ci]=c;\n    nextOffset=c.endOffset;\n  }\n  return this;\n}\n  finally {\n  if (ci < componentCount) {\n    if (ci < cIndex + count) {\n      removeCompRange(ci,cIndex + count);\n      for (; arrOffset < len; ++arrOffset) {\n        ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n      }\n    }\n    updateComponentOffsets(ci);\n  }\n  if (increaseWriterIndex && ci > cIndex && ci <= componentCount) {\n    writerIndex+=components[ci - 1].endOffset - components[cIndex].offset;\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 371,
        "startColumnNumber" : 64,
        "endLineNumber" : 419,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int len=buffers.length, count=len - arrOffset;\n  int readableBytes=0;\n  int capacity=capacity();\n  for (int i=arrOffset; i < buffers.length; i++) {\n    ByteBuf b=buffers[i];\n    if (b == null) {\n      break;\n    }\n    readableBytes+=b.readableBytes();\n    checkForOverflow(capacity,readableBytes);\n  }\n  int ci=Integer.MAX_VALUE;\n  try {\n    checkComponentIndex(cIndex);\n    shiftComps(cIndex,count);\n    int nextOffset=cIndex > 0 ? components[cIndex - 1].endOffset : 0;\n    for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n      ByteBuf b=buffers[arrOffset];\n      if (b == null) {\n        break;\n      }\n      Component c=newComponent(ensureAccessible(b),nextOffset);\n      components[ci]=c;\n      nextOffset=c.endOffset;\n    }\n    return this;\n  }\n  finally {\n    if (ci < componentCount) {\n      if (ci < cIndex + count) {\n        removeCompRange(ci,cIndex + count);\n        for (; arrOffset < len; ++arrOffset) {\n          ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n        }\n      }\n      updateComponentOffsets(ci);\n    }\n    if (increaseWriterIndex && ci > cIndex && ci <= componentCount) {\n      writerIndex+=components[ci - 1].endOffset - components[cIndex].offset;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 370,
        "startColumnNumber" : 4,
        "endLineNumber" : 419,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private CompositeByteBuf addComponents0(boolean increaseWriterIndex,final int cIndex,ByteBuf[] buffers,int arrOffset){\n  final int len=buffers.length, count=len - arrOffset;\n  int readableBytes=0;\n  int capacity=capacity();\n  for (int i=arrOffset; i < buffers.length; i++) {\n    ByteBuf b=buffers[i];\n    if (b == null) {\n      break;\n    }\n    readableBytes+=b.readableBytes();\n    checkForOverflow(capacity,readableBytes);\n  }\n  int ci=Integer.MAX_VALUE;\n  try {\n    checkComponentIndex(cIndex);\n    shiftComps(cIndex,count);\n    int nextOffset=cIndex > 0 ? components[cIndex - 1].endOffset : 0;\n    for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n      ByteBuf b=buffers[arrOffset];\n      if (b == null) {\n        break;\n      }\n      Component c=newComponent(ensureAccessible(b),nextOffset);\n      components[ci]=c;\n      nextOffset=c.endOffset;\n    }\n    return this;\n  }\n  finally {\n    if (ci < componentCount) {\n      if (ci < cIndex + count) {\n        removeCompRange(ci,cIndex + count);\n        for (; arrOffset < len; ++arrOffset) {\n          ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n        }\n      }\n      updateComponentOffsets(ci);\n    }\n    if (increaseWriterIndex && ci > cIndex && ci <= componentCount) {\n      writerIndex+=components[ci - 1].endOffset - components[cIndex].offset;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 393,
        "startColumnNumber" : 12,
        "endLineNumber" : 401,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n  ByteBuf b=buffers[arrOffset];\n  if (b == null) {\n    break;\n  }\n  Component c=newComponent(ensureAccessible(b),nextOffset);\n  components[ci]=c;\n  nextOffset=c.endOffset;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "arrOffset < len",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 409,
      "startColumnNumber" : 27,
      "endLineNumber" : 409,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 409,
        "startColumnNumber" : 20,
        "endLineNumber" : 411,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (; arrOffset < len; ++arrOffset) {\n  ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 406,
        "startColumnNumber" : 41,
        "endLineNumber" : 412,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  removeCompRange(ci,cIndex + count);\n  for (; arrOffset < len; ++arrOffset) {\n    ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 406,
        "startColumnNumber" : 16,
        "endLineNumber" : 412,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (ci < cIndex + count) {\n  removeCompRange(ci,cIndex + count);\n  for (; arrOffset < len; ++arrOffset) {\n    ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 405,
        "startColumnNumber" : 37,
        "endLineNumber" : 414,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (ci < cIndex + count) {\n    removeCompRange(ci,cIndex + count);\n    for (; arrOffset < len; ++arrOffset) {\n      ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n    }\n  }\n  updateComponentOffsets(ci);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 405,
        "startColumnNumber" : 12,
        "endLineNumber" : 414,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ci < componentCount) {\n  if (ci < cIndex + count) {\n    removeCompRange(ci,cIndex + count);\n    for (; arrOffset < len; ++arrOffset) {\n      ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n    }\n  }\n  updateComponentOffsets(ci);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 766,
        "startLineNumber" : 403,
        "startColumnNumber" : 18,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (ci < componentCount) {\n    if (ci < cIndex + count) {\n      removeCompRange(ci,cIndex + count);\n      for (; arrOffset < len; ++arrOffset) {\n        ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n      }\n    }\n    updateComponentOffsets(ci);\n  }\n  if (increaseWriterIndex && ci > cIndex && ci <= componentCount) {\n    writerIndex+=components[ci - 1].endOffset - components[cIndex].offset;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 389,
        "startColumnNumber" : 8,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  checkComponentIndex(cIndex);\n  shiftComps(cIndex,count);\n  int nextOffset=cIndex > 0 ? components[cIndex - 1].endOffset : 0;\n  for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n    ByteBuf b=buffers[arrOffset];\n    if (b == null) {\n      break;\n    }\n    Component c=newComponent(ensureAccessible(b),nextOffset);\n    components[ci]=c;\n    nextOffset=c.endOffset;\n  }\n  return this;\n}\n  finally {\n  if (ci < componentCount) {\n    if (ci < cIndex + count) {\n      removeCompRange(ci,cIndex + count);\n      for (; arrOffset < len; ++arrOffset) {\n        ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n      }\n    }\n    updateComponentOffsets(ci);\n  }\n  if (increaseWriterIndex && ci > cIndex && ci <= componentCount) {\n    writerIndex+=components[ci - 1].endOffset - components[cIndex].offset;\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2057,
        "startLineNumber" : 371,
        "startColumnNumber" : 64,
        "endLineNumber" : 419,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int len=buffers.length, count=len - arrOffset;\n  int readableBytes=0;\n  int capacity=capacity();\n  for (int i=arrOffset; i < buffers.length; i++) {\n    ByteBuf b=buffers[i];\n    if (b == null) {\n      break;\n    }\n    readableBytes+=b.readableBytes();\n    checkForOverflow(capacity,readableBytes);\n  }\n  int ci=Integer.MAX_VALUE;\n  try {\n    checkComponentIndex(cIndex);\n    shiftComps(cIndex,count);\n    int nextOffset=cIndex > 0 ? components[cIndex - 1].endOffset : 0;\n    for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n      ByteBuf b=buffers[arrOffset];\n      if (b == null) {\n        break;\n      }\n      Component c=newComponent(ensureAccessible(b),nextOffset);\n      components[ci]=c;\n      nextOffset=c.endOffset;\n    }\n    return this;\n  }\n  finally {\n    if (ci < componentCount) {\n      if (ci < cIndex + count) {\n        removeCompRange(ci,cIndex + count);\n        for (; arrOffset < len; ++arrOffset) {\n          ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n        }\n      }\n      updateComponentOffsets(ci);\n    }\n    if (increaseWriterIndex && ci > cIndex && ci <= componentCount) {\n      writerIndex+=components[ci - 1].endOffset - components[cIndex].offset;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 214,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 370,
        "startColumnNumber" : 4,
        "endLineNumber" : 419,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private CompositeByteBuf addComponents0(boolean increaseWriterIndex,final int cIndex,ByteBuf[] buffers,int arrOffset){\n  final int len=buffers.length, count=len - arrOffset;\n  int readableBytes=0;\n  int capacity=capacity();\n  for (int i=arrOffset; i < buffers.length; i++) {\n    ByteBuf b=buffers[i];\n    if (b == null) {\n      break;\n    }\n    readableBytes+=b.readableBytes();\n    checkForOverflow(capacity,readableBytes);\n  }\n  int ci=Integer.MAX_VALUE;\n  try {\n    checkComponentIndex(cIndex);\n    shiftComps(cIndex,count);\n    int nextOffset=cIndex > 0 ? components[cIndex - 1].endOffset : 0;\n    for (ci=cIndex; arrOffset < len; arrOffset++, ci++) {\n      ByteBuf b=buffers[arrOffset];\n      if (b == null) {\n        break;\n      }\n      Component c=newComponent(ensureAccessible(b),nextOffset);\n      components[ci]=c;\n      nextOffset=c.endOffset;\n    }\n    return this;\n  }\n  finally {\n    if (ci < componentCount) {\n      if (ci < cIndex + count) {\n        removeCompRange(ci,cIndex + count);\n        for (; arrOffset < len; ++arrOffset) {\n          ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n        }\n      }\n      updateComponentOffsets(ci);\n    }\n    if (increaseWriterIndex && ci > cIndex && ci <= componentCount) {\n      writerIndex+=components[ci - 1].endOffset - components[cIndex].offset;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 409,
        "startColumnNumber" : 20,
        "endLineNumber" : 411,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (; arrOffset < len; ++arrOffset) {\n  ReferenceCountUtil.safeRelease(buffers[arrOffset]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 393,
    "startColumnNumber" : 30,
    "endLineNumber" : 393,
    "endColumnNumber" : 45
  }, {
    "charLength" : 15,
    "startLineNumber" : 409,
    "startColumnNumber" : 27,
    "endLineNumber" : 409,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}