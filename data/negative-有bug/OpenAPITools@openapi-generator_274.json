{
  "id" : 274,
  "expression" : "!serverVariable.enumValues.contains(value)",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/client/petstore/java/feign-no-nullable/src/main/java/org/openapitools/client/ServerConfiguration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!serverVariable.enumValues.contains(value)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 41,
      "startColumnNumber" : 60,
      "endLineNumber" : 41,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 41,
        "startColumnNumber" : 20,
        "endLineNumber" : 41,
        "endColumnNumber" : 102
      },
      "nodeContext" : "serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 41,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {\n  throw new IllegalArgumentException(\"The variable \" + name + \" in the server URL has invalid value \"+ value+ \".\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 39,
        "startColumnNumber" : 66,
        "endLineNumber" : 44,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  value=variables.get(name);\n  if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {\n    throw new IllegalArgumentException(\"The variable \" + name + \" in the server URL has invalid value \"+ value+ \".\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (variables != null && variables.containsKey(name)) {\n  value=variables.get(name);\n  if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {\n    throw new IllegalArgumentException(\"The variable \" + name + \" in the server URL has invalid value \"+ value+ \".\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 34,
        "startColumnNumber" : 84,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=variable.getKey();\n  ServerVariable serverVariable=variable.getValue();\n  String value=serverVariable.defaultValue;\n  if (variables != null && variables.containsKey(name)) {\n    value=variables.get(name);\n    if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {\n      throw new IllegalArgumentException(\"The variable \" + name + \" in the server URL has invalid value \"+ value+ \".\");\n    }\n  }\n  url=url.replaceAll(\"\\\\{\" + name + \"\\\\}\",value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,ServerVariable> variable : this.variables.entrySet()) {\n  String name=variable.getKey();\n  ServerVariable serverVariable=variable.getValue();\n  String value=serverVariable.defaultValue;\n  if (variables != null && variables.containsKey(name)) {\n    value=variables.get(name);\n    if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {\n      throw new IllegalArgumentException(\"The variable \" + name + \" in the server URL has invalid value \"+ value+ \".\");\n    }\n  }\n  url=url.replaceAll(\"\\\\{\" + name + \"\\\\}\",value);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 30,
        "startColumnNumber" : 53,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String url=this.URL;\n  for (  Map.Entry<String,ServerVariable> variable : this.variables.entrySet()) {\n    String name=variable.getKey();\n    ServerVariable serverVariable=variable.getValue();\n    String value=serverVariable.defaultValue;\n    if (variables != null && variables.containsKey(name)) {\n      value=variables.get(name);\n      if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {\n        throw new IllegalArgumentException(\"The variable \" + name + \" in the server URL has invalid value \"+ value+ \".\");\n      }\n    }\n    url=url.replaceAll(\"\\\\{\" + name + \"\\\\}\",value);\n  }\n  return url;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Format URL template using given variables.\n * @param variables A map between a variable name and its value.\n * @return Formatted URL.\n */\npublic String URL(Map<String,String> variables){\n  String url=this.URL;\n  for (  Map.Entry<String,ServerVariable> variable : this.variables.entrySet()) {\n    String name=variable.getKey();\n    ServerVariable serverVariable=variable.getValue();\n    String value=serverVariable.defaultValue;\n    if (variables != null && variables.containsKey(name)) {\n      value=variables.get(name);\n      if (serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)) {\n        throw new IllegalArgumentException(\"The variable \" + name + \" in the server URL has invalid value \"+ value+ \".\");\n      }\n    }\n    url=url.replaceAll(\"\\\\{\" + name + \"\\\\}\",value);\n  }\n  return url;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 41,
        "startColumnNumber" : 20,
        "endLineNumber" : 41,
        "endColumnNumber" : 102
      },
      "nodeContext" : "serverVariable.enumValues.size() > 0 && !serverVariable.enumValues.contains(value)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 41,
    "startColumnNumber" : 60,
    "endLineNumber" : 41,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ ]
}