{
  "id" : 154,
  "expression" : "ShareIntentUtil",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerSoLoader.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ShareIntentUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 73,
      "startColumnNumber" : 38,
      "endLineNumber" : 73,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 73,
        "startColumnNumber" : 38,
        "endLineNumber" : 73,
        "endColumnNumber" : 86
      },
      "nodeContext" : "ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 142
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 143
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 72,
        "startColumnNumber" : 64,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 71,
        "startColumnNumber" : 54,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n    return false;\n  }\n  String middle=info.path + \"/\" + info.name;\n  libs.put(middle,info.md5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ShareBsDiffPatchInfo info : libraryList) {\n  if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n    return false;\n  }\n  String middle=info.path + \"/\" + info.name;\n  libs.put(middle,info.md5);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2076,
        "startLineNumber" : 53,
        "startColumnNumber" : 113,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2348,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * all the library files in meta file exist? fast check, only check whether exist\n * @param directory\n * @return boolean\n */\npublic static boolean checkComplete(String directory,ShareSecurityCheck securityCheck,Intent intentResult){\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 143
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.loader.shareutil.ShareIntentUtil"
  }, {
    "nodeContext" : "ShareIntentUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 74,
      "startColumnNumber" : 16,
      "endLineNumber" : 74,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 117
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 118
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 72,
        "startColumnNumber" : 64,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 71,
        "startColumnNumber" : 54,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n    return false;\n  }\n  String middle=info.path + \"/\" + info.name;\n  libs.put(middle,info.md5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ShareBsDiffPatchInfo info : libraryList) {\n  if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n    return false;\n  }\n  String middle=info.path + \"/\" + info.name;\n  libs.put(middle,info.md5);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2076,
        "startLineNumber" : 53,
        "startColumnNumber" : 113,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2348,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * all the library files in meta file exist? fast check, only check whether exist\n * @param directory\n * @return boolean\n */\npublic static boolean checkComplete(String directory,ShareSecurityCheck securityCheck,Intent intentResult){\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 118
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.loader.shareutil.ShareIntentUtil"
  }, {
    "nodeContext" : "ShareIntentUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 86,
      "startColumnNumber" : 12,
      "endLineNumber" : 86,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 126
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 127
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 85,
        "startColumnNumber" : 63,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2076,
        "startLineNumber" : 53,
        "startColumnNumber" : 113,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2348,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * all the library files in meta file exist? fast check, only check whether exist\n * @param directory\n * @return boolean\n */\npublic static boolean checkComplete(String directory,ShareSecurityCheck securityCheck,Intent intentResult){\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 127
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.loader.shareutil.ShareIntentUtil"
  }, {
    "nodeContext" : "ShareIntentUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 94,
      "startColumnNumber" : 16,
      "endLineNumber" : 94,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 125
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 126
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 93,
        "startColumnNumber" : 58,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!SharePatchFileUtil.isLegalFile(libFile)) {\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 91,
        "startColumnNumber" : 46,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File libFile=new File(libraryPath + relative);\n  if (!SharePatchFileUtil.isLegalFile(libFile)) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String relative : libs.keySet()) {\n  File libFile=new File(libraryPath + relative);\n  if (!SharePatchFileUtil.isLegalFile(libFile)) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2076,
        "startLineNumber" : 53,
        "startColumnNumber" : 113,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2348,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * all the library files in meta file exist? fast check, only check whether exist\n * @param directory\n * @return boolean\n */\npublic static boolean checkComplete(String directory,ShareSecurityCheck securityCheck,Intent intentResult){\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 126
      },
      "nodeContext" : "ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.loader.shareutil.ShareIntentUtil"
  }, {
    "nodeContext" : "ShareIntentUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 95,
      "startColumnNumber" : 38,
      "endLineNumber" : 95,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 95,
        "startColumnNumber" : 38,
        "endLineNumber" : 95,
        "endColumnNumber" : 83
      },
      "nodeContext" : "ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 111
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 112
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 93,
        "startColumnNumber" : 58,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!SharePatchFileUtil.isLegalFile(libFile)) {\n  ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 91,
        "startColumnNumber" : 46,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File libFile=new File(libraryPath + relative);\n  if (!SharePatchFileUtil.isLegalFile(libFile)) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String relative : libs.keySet()) {\n  File libFile=new File(libraryPath + relative);\n  if (!SharePatchFileUtil.isLegalFile(libFile)) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n    intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2076,
        "startLineNumber" : 53,
        "startColumnNumber" : 113,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2348,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * all the library files in meta file exist? fast check, only check whether exist\n * @param directory\n * @return boolean\n */\npublic static boolean checkComplete(String directory,ShareSecurityCheck securityCheck,Intent intentResult){\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 112
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.loader.shareutil.ShareIntentUtil"
  }, {
    "nodeContext" : "ShareIntentUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 101,
      "startColumnNumber" : 30,
      "endLineNumber" : 101,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 101,
        "startColumnNumber" : 30,
        "endLineNumber" : 101,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ShareIntentUtil.INTENT_PATCH_LIBS_PATH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 75
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2076,
        "startLineNumber" : 53,
        "startColumnNumber" : 113,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2348,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * all the library files in meta file exist? fast check, only check whether exist\n * @param directory\n * @return boolean\n */\npublic static boolean checkComplete(String directory,ShareSecurityCheck securityCheck,Intent intentResult){\n  String meta=securityCheck.getMetaContentMap().get(SO_MEAT_FILE);\n  if (meta == null) {\n    return true;\n  }\n  ArrayList<ShareBsDiffPatchInfo> libraryList=new ArrayList<>();\n  ShareBsDiffPatchInfo.parseDiffPatchInfo(meta,libraryList);\n  if (libraryList.isEmpty()) {\n    return true;\n  }\n  String libraryPath=directory + \"/\" + SO_PATH+ \"/\";\n  HashMap<String,String> libs=new HashMap<>();\n  for (  ShareBsDiffPatchInfo info : libraryList) {\n    if (!ShareBsDiffPatchInfo.checkDiffPatchInfo(info)) {\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_PACKAGE_PATCH_CHECK,ShareConstants.ERROR_PACKAGE_CHECK_LIB_META_CORRUPTED);\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_PACKAGE_CHECK_FAIL);\n      return false;\n    }\n    String middle=info.path + \"/\" + info.name;\n    libs.put(middle,info.md5);\n  }\n  File libraryDir=new File(libraryPath);\n  if (!libraryDir.exists() || !libraryDir.isDirectory()) {\n    ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_DIRECTORY_NOT_EXIST);\n    return false;\n  }\n  for (  String relative : libs.keySet()) {\n    File libFile=new File(libraryPath + relative);\n    if (!SharePatchFileUtil.isLegalFile(libFile)) {\n      ShareIntentUtil.setIntentReturnCode(intentResult,ShareConstants.ERROR_LOAD_PATCH_VERSION_LIB_FILE_NOT_EXIST);\n      intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_MISSING_LIB_PATH,libFile.getAbsolutePath());\n      return false;\n    }\n  }\n  intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_LIBS_PATH,libs);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.loader.shareutil.ShareIntentUtil"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 73,
    "startColumnNumber" : 38,
    "endLineNumber" : 73,
    "endColumnNumber" : 53
  }, {
    "charLength" : 15,
    "startLineNumber" : 74,
    "startColumnNumber" : 16,
    "endLineNumber" : 74,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 86,
    "startColumnNumber" : 12,
    "endLineNumber" : 86,
    "endColumnNumber" : 27
  }, {
    "charLength" : 15,
    "startLineNumber" : 94,
    "startColumnNumber" : 16,
    "endLineNumber" : 94,
    "endColumnNumber" : 31
  }, {
    "charLength" : 15,
    "startLineNumber" : 95,
    "startColumnNumber" : 38,
    "endLineNumber" : 95,
    "endColumnNumber" : 53
  }, {
    "charLength" : 15,
    "startLineNumber" : 101,
    "startColumnNumber" : 30,
    "endLineNumber" : 101,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}