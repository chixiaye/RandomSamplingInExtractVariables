{
  "id" : 148,
  "expression" : "'D'",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/main/java/com/alibaba/fastjson/serializer/NumberCodec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'D'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 102,
      "startColumnNumber" : 26,
      "endLineNumber" : 102,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 30
      },
      "nodeContext" : "out.write('D')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 31
      },
      "nodeContext" : "out.write('D');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 101,
        "startColumnNumber" : 77,
        "endLineNumber" : 103,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  out.write('D');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n  out.write('D');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String doubleText;\n  if (decimalFormat == null) {\n    doubleText=Double.toString(doubleValue);\n    if (doubleText.endsWith(\".0\")) {\n      doubleText=doubleText.substring(0,doubleText.length() - 2);\n    }\n  }\n else {\n    doubleText=decimalFormat.format(doubleValue);\n  }\n  out.append(doubleText);\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    out.write('D');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 87,
        "startColumnNumber" : 15,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Double.isInfinite(doubleValue)) {\n  out.writeNull();\n}\n else {\n  String doubleText;\n  if (decimalFormat == null) {\n    doubleText=Double.toString(doubleValue);\n    if (doubleText.endsWith(\".0\")) {\n      doubleText=doubleText.substring(0,doubleText.length() - 2);\n    }\n  }\n else {\n    doubleText=decimalFormat.format(doubleValue);\n  }\n  out.append(doubleText);\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    out.write('D');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Double.isNaN(doubleValue)) {\n  out.writeNull();\n}\n else if (Double.isInfinite(doubleValue)) {\n  out.writeNull();\n}\n else {\n  String doubleText;\n  if (decimalFormat == null) {\n    doubleText=Double.toString(doubleValue);\n    if (doubleText.endsWith(\".0\")) {\n      doubleText=doubleText.substring(0,doubleText.length() - 2);\n    }\n  }\n else {\n    doubleText=decimalFormat.format(doubleValue);\n  }\n  out.append(doubleText);\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n    out.write('D');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 50,
        "startColumnNumber" : 117,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullNumberAsZero.mask) != 0) {\n      out.write('0');\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof Float) {\n    float floatValue=((Float)object).floatValue();\n    if (Float.isNaN(floatValue)) {\n      out.writeNull();\n    }\n else     if (Float.isInfinite(floatValue)) {\n      out.writeNull();\n    }\n else {\n      String floatText=Float.toString(floatValue);\n      if (floatText.endsWith(\".0\")) {\n        floatText=floatText.substring(0,floatText.length() - 2);\n      }\n      out.write(floatText);\n      if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n        out.write('F');\n      }\n    }\n    return;\n  }\n  double doubleValue=((Double)object).doubleValue();\n  if (Double.isNaN(doubleValue)) {\n    out.writeNull();\n  }\n else   if (Double.isInfinite(doubleValue)) {\n    out.writeNull();\n  }\n else {\n    String doubleText;\n    if (decimalFormat == null) {\n      doubleText=Double.toString(doubleValue);\n      if (doubleText.endsWith(\".0\")) {\n        doubleText=doubleText.substring(0,doubleText.length() - 2);\n      }\n    }\n else {\n      doubleText=decimalFormat.format(doubleValue);\n    }\n    out.append(doubleText);\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      out.write('D');\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2006,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void write(JSONSerializer serializer,Object object,Object fieldName,Type fieldType) throws IOException {\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullNumberAsZero.mask) != 0) {\n      out.write('0');\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof Float) {\n    float floatValue=((Float)object).floatValue();\n    if (Float.isNaN(floatValue)) {\n      out.writeNull();\n    }\n else     if (Float.isInfinite(floatValue)) {\n      out.writeNull();\n    }\n else {\n      String floatText=Float.toString(floatValue);\n      if (floatText.endsWith(\".0\")) {\n        floatText=floatText.substring(0,floatText.length() - 2);\n      }\n      out.write(floatText);\n      if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n        out.write('F');\n      }\n    }\n    return;\n  }\n  double doubleValue=((Double)object).doubleValue();\n  if (Double.isNaN(doubleValue)) {\n    out.writeNull();\n  }\n else   if (Double.isInfinite(doubleValue)) {\n    out.writeNull();\n  }\n else {\n    String doubleText;\n    if (decimalFormat == null) {\n      doubleText=Double.toString(doubleValue);\n      if (doubleText.endsWith(\".0\")) {\n        doubleText=doubleText.substring(0,doubleText.length() - 2);\n      }\n    }\n else {\n      doubleText=decimalFormat.format(doubleValue);\n    }\n    out.append(doubleText);\n    if ((out.features & SerializerFeature.WriteClassName.mask) != 0) {\n      out.write('D');\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 31
      },
      "nodeContext" : "out.write('D');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 102,
    "startColumnNumber" : 26,
    "endLineNumber" : 102,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}