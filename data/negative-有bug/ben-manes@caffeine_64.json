{
  "id" : 64,
  "expression" : "\"Wrong removal cause for \"",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/test/java/com/github/benmanes/caffeine/cache/testing/HasRemovalNotifications.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Wrong removal cause for \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 102,
      "startColumnNumber" : 17,
      "endLineNumber" : 102,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 102,
        "startColumnNumber" : 17,
        "endLineNumber" : 102,
        "endColumnNumber" : 58
      },
      "nodeContext" : "\"Wrong removal cause for \" + notification",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(\"Wrong removal cause for \" + notification,notification.getCause(),is(cause))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 96
      },
      "nodeContext" : "assertThat(\"Wrong removal cause for \" + notification,notification.getCause(),is(cause));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 101,
        "startColumnNumber" : 23,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(\"Wrong removal cause for \" + notification,notification.getCause(),is(cause));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (cause != null) {\n  assertThat(\"Wrong removal cause for \" + notification,notification.getCause(),is(cause));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 80,
        "startColumnNumber" : 73,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (notification.getCause()) {\ncase EXPLICIT:case REPLACED:    assertThat(notification.wasEvicted(),is(false));\n  assertThat(notification.getKey(),is(not(nullValue())));\nassertThat(notification.getValue(),is(not(nullValue())));\nbreak;\ncase EXPIRED:case SIZE:assertThat(notification.wasEvicted(),is(true));\nassertThat(notification.getKey(),is(not(nullValue())));\nassertThat(notification.getValue(),is(not(nullValue())));\nbreak;\ncase COLLECTED:assertThat(notification.wasEvicted(),is(true));\nif (context.keyReferenceType() == ReferenceType.STRONG) {\nassertThat(notification.getKey(),is(not(nullValue())));\n}\nif (context.valueReferenceType() == ReferenceType.STRONG) {\nassertThat(notification.getKey(),is(not(nullValue())));\n}\n}\nif (cause != null) {\nassertThat(\"Wrong removal cause for \" + notification,notification.getCause(),is(cause));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1116,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void checkNotification(RemovalNotification<?,?> notification){\nswitch (notification.getCause()) {\ncase EXPLICIT:case REPLACED:    assertThat(notification.wasEvicted(),is(false));\n  assertThat(notification.getKey(),is(not(nullValue())));\nassertThat(notification.getValue(),is(not(nullValue())));\nbreak;\ncase EXPIRED:case SIZE:assertThat(notification.wasEvicted(),is(true));\nassertThat(notification.getKey(),is(not(nullValue())));\nassertThat(notification.getValue(),is(not(nullValue())));\nbreak;\ncase COLLECTED:assertThat(notification.wasEvicted(),is(true));\nif (context.keyReferenceType() == ReferenceType.STRONG) {\nassertThat(notification.getKey(),is(not(nullValue())));\n}\nif (context.valueReferenceType() == ReferenceType.STRONG) {\nassertThat(notification.getKey(),is(not(nullValue())));\n}\n}\nif (cause != null) {\nassertThat(\"Wrong removal cause for \" + notification,notification.getCause(),is(cause));\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 102,
        "endColumnNumber" : 96
      },
      "nodeContext" : "assertThat(\"Wrong removal cause for \" + notification,notification.getCause(),is(cause));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 102,
    "startColumnNumber" : 17,
    "endLineNumber" : 102,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}