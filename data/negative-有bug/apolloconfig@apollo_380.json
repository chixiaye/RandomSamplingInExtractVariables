{
  "id" : 380,
  "expression" : "0",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 92,
      "startColumnNumber" : 47,
      "endLineNumber" : 92,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 92,
        "startColumnNumber" : 38,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "list.get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 92,
        "startColumnNumber" : 38,
        "endLineNumber" : 92,
        "endColumnNumber" : 60
      },
      "nodeContext" : "list.get(0).getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 92,
        "startColumnNumber" : 30,
        "endLineNumber" : 92,
        "endColumnNumber" : 60
      },
      "nodeContext" : "clazz=list.get(0).getClass()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 92,
        "startColumnNumber" : 6,
        "endLineNumber" : 92,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Class<? extends Object> clazz=list.get(0).getClass();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<? extends Object> clazz=list.get(0).getClass();\n  Field field=deepFindField(clazz,key);\n  if (field == null)   throw new IllegalArgumentException(\"Could not find the key\");\n  field.setAccessible(true);\n  for (  Object o : list) {\n    map.put((K)field.get(o),(V)o);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Class<? extends Object> clazz=list.get(0).getClass();\n  Field field=deepFindField(clazz,key);\n  if (field == null)   throw new IllegalArgumentException(\"Could not find the key\");\n  field.setAccessible(true);\n  for (  Object o : list) {\n    map.put((K)field.get(o),(V)o);\n  }\n}\n catch (Exception e) {\n  throw new BeanUtilsException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 86,
        "startColumnNumber" : 83,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<K,V> map=new HashMap<K,V>();\n  if (CollectionUtils.isEmpty(list)) {\n    return map;\n  }\n  try {\n    Class<? extends Object> clazz=list.get(0).getClass();\n    Field field=deepFindField(clazz,key);\n    if (field == null)     throw new IllegalArgumentException(\"Could not find the key\");\n    field.setAccessible(true);\n    for (    Object o : list) {\n      map.put((K)field.get(o),(V)o);\n    }\n  }\n catch (  Exception e) {\n    throw new BeanUtilsException(e);\n  }\n  return map;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * 用于将一个列表转换为列表中的对象的某个属性映射到列表中的对象 <pre> List<UserDTO> userList = userService.queryUsers(); Map<Integer, userDTO> userIdToUser = BeanUtil.mapByKey(\"userId\", userList); </pre>\n * @param key 属性名\n */\n@SuppressWarnings(\"unchecked\") public static <K,V>Map<K,V> mapByKey(String key,List<? extends Object> list){\n  Map<K,V> map=new HashMap<K,V>();\n  if (CollectionUtils.isEmpty(list)) {\n    return map;\n  }\n  try {\n    Class<? extends Object> clazz=list.get(0).getClass();\n    Field field=deepFindField(clazz,key);\n    if (field == null)     throw new IllegalArgumentException(\"Could not find the key\");\n    field.setAccessible(true);\n    for (    Object o : list) {\n      map.put((K)field.get(o),(V)o);\n    }\n  }\n catch (  Exception e) {\n    throw new BeanUtilsException(e);\n  }\n  return map;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 92,
        "startColumnNumber" : 6,
        "endLineNumber" : 92,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Class<? extends Object> clazz=list.get(0).getClass();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 92,
    "startColumnNumber" : 47,
    "endLineNumber" : 92,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}