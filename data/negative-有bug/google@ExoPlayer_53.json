{
  "id" : 53,
  "expression" : "true",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/test/java/com/google/android/exoplayer2/source/SampleQueueTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 186,
      "startColumnNumber" : 28,
      "endLineNumber" : 186,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 184,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertReadSample(i * 1000,true,false,false,new byte[1],0,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 184,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 27
      },
      "nodeContext" : "assertReadSample(i * 1000,true,false,false,new byte[1],0,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 183,
        "startColumnNumber" : 53,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertReadSample(i * 1000,true,false,false,new byte[1],0,1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < numberOfSamplesToInput; i++) {\n  assertReadSample(i * 1000,true,false,false,new byte[1],0,1);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 168,
        "startColumnNumber" : 34,
        "endLineNumber" : 194,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int numberOfSamplesToInput=3 * SampleQueue.SAMPLE_CAPACITY_INCREMENT + 1;\n  sampleQueue.format(FORMAT_1);\n  sampleQueue.sampleData(new ParsableByteArray(numberOfSamplesToInput),numberOfSamplesToInput);\n  for (int i=0; i < numberOfSamplesToInput; i++) {\n    sampleQueue.sampleMetadata(i * 1000,C.BUFFER_FLAG_KEY_FRAME,1,numberOfSamplesToInput - i - 1,null);\n  }\n  assertReadFormat(false,FORMAT_1);\n  for (int i=0; i < numberOfSamplesToInput; i++) {\n    assertReadSample(i * 1000,true,false,false,new byte[1],0,1);\n  }\n  assertReadNothing(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 167,
        "startColumnNumber" : 2,
        "endLineNumber" : 194,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void capacityIncreases(){\n  int numberOfSamplesToInput=3 * SampleQueue.SAMPLE_CAPACITY_INCREMENT + 1;\n  sampleQueue.format(FORMAT_1);\n  sampleQueue.sampleData(new ParsableByteArray(numberOfSamplesToInput),numberOfSamplesToInput);\n  for (int i=0; i < numberOfSamplesToInput; i++) {\n    sampleQueue.sampleMetadata(i * 1000,C.BUFFER_FLAG_KEY_FRAME,1,numberOfSamplesToInput - i - 1,null);\n  }\n  assertReadFormat(false,FORMAT_1);\n  for (int i=0; i < numberOfSamplesToInput; i++) {\n    assertReadSample(i * 1000,true,false,false,new byte[1],0,1);\n  }\n  assertReadNothing(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 184,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertReadSample(i * 1000,true,false,false,new byte[1],0,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 186,
    "startColumnNumber" : 28,
    "endLineNumber" : 186,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}