{
  "id" : 276,
  "expression" : "elements",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/reactor-core/src/test/java/com/baeldung/reactor/NetworkTrafficProducerPushUnitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "elements",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 17,
      "startColumnNumber" : 34,
      "endLineNumber" : 17,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 17,
        "startColumnNumber" : 34,
        "endLineNumber" : 17,
        "endColumnNumber" : 47
      },
      "nodeContext" : "elements::add",
      "nodeType" : "ExpressionMethodReference",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 48
      },
      "nodeContext" : "trafficProducer.subscribe(elements::add)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 49
      },
      "nodeContext" : "trafficProducer.subscribe(elements::add);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 13,
        "startColumnNumber" : 143,
        "endLineNumber" : 21,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> elements=new ArrayList<>();\n  NetworkTrafficProducerPush trafficProducer=new NetworkTrafficProducerPush();\n  trafficProducer.subscribe(elements::add);\n  trafficProducer.onPacket(\"Packet[A18]\");\n  assertThat(elements).containsExactly(\"Packet[A18]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenFluxWithAsynchronousPushWithListener_whenListenerIsInvoked_thenItemCollectedByTheSubscriber() throws InterruptedException {\n  List<String> elements=new ArrayList<>();\n  NetworkTrafficProducerPush trafficProducer=new NetworkTrafficProducerPush();\n  trafficProducer.subscribe(elements::add);\n  trafficProducer.onPacket(\"Packet[A18]\");\n  assertThat(elements).containsExactly(\"Packet[A18]\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 49
      },
      "nodeContext" : "trafficProducer.subscribe(elements::add);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "elements",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 20,
      "startColumnNumber" : 19,
      "endLineNumber" : 20,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertThat(elements)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(elements).containsExactly(\"Packet[A18]\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertThat(elements).containsExactly(\"Packet[A18]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 13,
        "startColumnNumber" : 143,
        "endLineNumber" : 21,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> elements=new ArrayList<>();\n  NetworkTrafficProducerPush trafficProducer=new NetworkTrafficProducerPush();\n  trafficProducer.subscribe(elements::add);\n  trafficProducer.onPacket(\"Packet[A18]\");\n  assertThat(elements).containsExactly(\"Packet[A18]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenFluxWithAsynchronousPushWithListener_whenListenerIsInvoked_thenItemCollectedByTheSubscriber() throws InterruptedException {\n  List<String> elements=new ArrayList<>();\n  NetworkTrafficProducerPush trafficProducer=new NetworkTrafficProducerPush();\n  trafficProducer.subscribe(elements::add);\n  trafficProducer.onPacket(\"Packet[A18]\");\n  assertThat(elements).containsExactly(\"Packet[A18]\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertThat(elements).containsExactly(\"Packet[A18]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 17,
    "startColumnNumber" : 34,
    "endLineNumber" : 17,
    "endColumnNumber" : 42
  }, {
    "charLength" : 8,
    "startLineNumber" : 20,
    "startColumnNumber" : 19,
    "endLineNumber" : 20,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}