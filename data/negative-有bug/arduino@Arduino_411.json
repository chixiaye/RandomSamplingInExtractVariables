{
  "id" : 411,
  "expression" : "((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/cc/arduino/packages/uploaders/SerialUploader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 89,
      "startLineNumber" : 226,
      "startColumnNumber" : 10,
      "endLineNumber" : 226,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 19,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 226,
        "startColumnNumber" : 6,
        "endLineNumber" : 230,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)) {\n  if (verbose)   System.out.println(\"Uploading using selected port: \" + uploadPort);\n  return uploadPort;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 194,
        "startColumnNumber" : 28,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> now=Serial.list();\n  List<String> diff=new ArrayList<String>(now);\n  diff.removeAll(before);\n  if (verbose) {\n    System.out.print(\"PORTS {\");\n    for (    String p : before)     System.out.print(p + \", \");\n    System.out.print(\"} / {\");\n    for (    String p : now)     System.out.print(p + \", \");\n    System.out.print(\"} => {\");\n    for (    String p : diff)     System.out.print(p + \", \");\n    System.out.println(\"}\");\n  }\n  if (diff.size() > 0) {\n    String newPort=diff.get(0);\n    if (verbose)     System.out.println(\"Found upload port: \" + newPort);\n    return newPort;\n  }\n  before=now;\n  Thread.sleep(250);\n  elapsed+=250;\n  if (((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)) {\n    if (verbose)     System.out.println(\"Uploading using selected port: \" + uploadPort);\n    return uploadPort;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (elapsed < 10000) {\n  List<String> now=Serial.list();\n  List<String> diff=new ArrayList<String>(now);\n  diff.removeAll(before);\n  if (verbose) {\n    System.out.print(\"PORTS {\");\n    for (    String p : before)     System.out.print(p + \", \");\n    System.out.print(\"} / {\");\n    for (    String p : now)     System.out.print(p + \", \");\n    System.out.print(\"} => {\");\n    for (    String p : diff)     System.out.print(p + \", \");\n    System.out.println(\"}\");\n  }\n  if (diff.size() > 0) {\n    String newPort=diff.get(0);\n    if (verbose)     System.out.println(\"Found upload port: \" + newPort);\n    return newPort;\n  }\n  before=now;\n  Thread.sleep(250);\n  elapsed+=250;\n  if (((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)) {\n    if (verbose)     System.out.println(\"Uploading using selected port: \" + uploadPort);\n    return uploadPort;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 188,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1614,
        "startLineNumber" : 191,
        "startColumnNumber" : 120,
        "endLineNumber" : 235,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int elapsed=0;\n  while (elapsed < 10000) {\n    List<String> now=Serial.list();\n    List<String> diff=new ArrayList<String>(now);\n    diff.removeAll(before);\n    if (verbose) {\n      System.out.print(\"PORTS {\");\n      for (      String p : before)       System.out.print(p + \", \");\n      System.out.print(\"} / {\");\n      for (      String p : now)       System.out.print(p + \", \");\n      System.out.print(\"} => {\");\n      for (      String p : diff)       System.out.print(p + \", \");\n      System.out.println(\"}\");\n    }\n    if (diff.size() > 0) {\n      String newPort=diff.get(0);\n      if (verbose)       System.out.println(\"Found upload port: \" + newPort);\n      return newPort;\n    }\n    before=now;\n    Thread.sleep(250);\n    elapsed+=250;\n    if (((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)) {\n      if (verbose)       System.out.println(\"Uploading using selected port: \" + uploadPort);\n      return uploadPort;\n    }\n  }\n  throw new RunnerException(_(\"Couldn't find a Board on the selected port. Check that you have the correct port selected.  If it is correct, try pressing the board's reset button after initiating the upload.\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1732,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 235,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private String waitForUploadPort(String uploadPort,List<String> before) throws InterruptedException, RunnerException {\n  int elapsed=0;\n  while (elapsed < 10000) {\n    List<String> now=Serial.list();\n    List<String> diff=new ArrayList<String>(now);\n    diff.removeAll(before);\n    if (verbose) {\n      System.out.print(\"PORTS {\");\n      for (      String p : before)       System.out.print(p + \", \");\n      System.out.print(\"} / {\");\n      for (      String p : now)       System.out.print(p + \", \");\n      System.out.print(\"} => {\");\n      for (      String p : diff)       System.out.print(p + \", \");\n      System.out.println(\"}\");\n    }\n    if (diff.size() > 0) {\n      String newPort=diff.get(0);\n      if (verbose)       System.out.println(\"Found upload port: \" + newPort);\n      return newPort;\n    }\n    before=now;\n    Thread.sleep(250);\n    elapsed+=250;\n    if (((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)) {\n      if (verbose)       System.out.println(\"Uploading using selected port: \" + uploadPort);\n      return uploadPort;\n    }\n  }\n  throw new RunnerException(_(\"Couldn't find a Board on the selected port. Check that you have the correct port selected.  If it is correct, try pressing the board's reset button after initiating the upload.\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 226,
        "startColumnNumber" : 6,
        "endLineNumber" : 230,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (((!OSUtils.isWindows() && elapsed >= 500) || elapsed >= 5000) && now.contains(uploadPort)) {\n  if (verbose)   System.out.println(\"Uploading using selected port: \" + uploadPort);\n  return uploadPort;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    },
    "tokenLength" : 14,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 89,
    "startLineNumber" : 226,
    "startColumnNumber" : 10,
    "endLineNumber" : 226,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ ]
}