{
  "id" : 2,
  "expression" : "threadLocal",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/DaoSessionConcurrentTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "threadLocal",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 333,
      "startColumnNumber" : 8,
      "endLineNumber" : 333,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 333,
        "endColumnNumber" : 25
      },
      "nodeContext" : "threadLocal.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 333,
        "endColumnNumber" : 26
      },
      "nodeContext" : "threadLocal.get();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 325,
        "startColumnNumber" : 40,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Database db=dao.getDatabase();\n  ThreadLocal<DatabaseStatement> threadLocal=new ThreadLocal<DatabaseStatement>(){\n    @Override protected DatabaseStatement initialValue(){\n      return db.compileStatement(\"SELECT 42\");\n    }\n  }\n;\n  threadLocal.get();\n  long start=SystemClock.currentThreadTimeMillis();\n  for (int i=0; i < 1000; i++) {\n    DatabaseStatement sqLiteStatement=threadLocal.get();\n    assertNotNull(sqLiteStatement);\n  }\n  Long time=SystemClock.currentThreadTimeMillis() - start;\n  DaoLog.d(\"TIME: \" + time + \"ms\");\n  assertTrue(time < 10);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 321,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * We could put the statements inside ThreadLocals (fast enough), but it comes with initialization penalty for new threads and costs more memory.\n */\npublic void _testThreadLocalSpeed(){\n  final Database db=dao.getDatabase();\n  ThreadLocal<DatabaseStatement> threadLocal=new ThreadLocal<DatabaseStatement>(){\n    @Override protected DatabaseStatement initialValue(){\n      return db.compileStatement(\"SELECT 42\");\n    }\n  }\n;\n  threadLocal.get();\n  long start=SystemClock.currentThreadTimeMillis();\n  for (int i=0; i < 1000; i++) {\n    DatabaseStatement sqLiteStatement=threadLocal.get();\n    assertNotNull(sqLiteStatement);\n  }\n  Long time=SystemClock.currentThreadTimeMillis() - start;\n  DaoLog.d(\"TIME: \" + time + \"ms\");\n  assertTrue(time < 10);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 333,
        "endColumnNumber" : 26
      },
      "nodeContext" : "threadLocal.get();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.ThreadLocal<org.greenrobot.greendao.database.DatabaseStatement>"
  }, {
    "nodeContext" : "threadLocal",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 336,
      "startColumnNumber" : 48,
      "endLineNumber" : 336,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 336,
        "startColumnNumber" : 48,
        "endLineNumber" : 336,
        "endColumnNumber" : 65
      },
      "nodeContext" : "threadLocal.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 336,
        "startColumnNumber" : 30,
        "endLineNumber" : 336,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sqLiteStatement=threadLocal.get()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 336,
        "startColumnNumber" : 12,
        "endLineNumber" : 336,
        "endColumnNumber" : 66
      },
      "nodeContext" : "DatabaseStatement sqLiteStatement=threadLocal.get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 335,
        "startColumnNumber" : 39,
        "endLineNumber" : 338,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DatabaseStatement sqLiteStatement=threadLocal.get();\n  assertNotNull(sqLiteStatement);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 335,
        "startColumnNumber" : 8,
        "endLineNumber" : 338,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 1000; i++) {\n  DatabaseStatement sqLiteStatement=threadLocal.get();\n  assertNotNull(sqLiteStatement);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 325,
        "startColumnNumber" : 40,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Database db=dao.getDatabase();\n  ThreadLocal<DatabaseStatement> threadLocal=new ThreadLocal<DatabaseStatement>(){\n    @Override protected DatabaseStatement initialValue(){\n      return db.compileStatement(\"SELECT 42\");\n    }\n  }\n;\n  threadLocal.get();\n  long start=SystemClock.currentThreadTimeMillis();\n  for (int i=0; i < 1000; i++) {\n    DatabaseStatement sqLiteStatement=threadLocal.get();\n    assertNotNull(sqLiteStatement);\n  }\n  Long time=SystemClock.currentThreadTimeMillis() - start;\n  DaoLog.d(\"TIME: \" + time + \"ms\");\n  assertTrue(time < 10);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 321,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * We could put the statements inside ThreadLocals (fast enough), but it comes with initialization penalty for new threads and costs more memory.\n */\npublic void _testThreadLocalSpeed(){\n  final Database db=dao.getDatabase();\n  ThreadLocal<DatabaseStatement> threadLocal=new ThreadLocal<DatabaseStatement>(){\n    @Override protected DatabaseStatement initialValue(){\n      return db.compileStatement(\"SELECT 42\");\n    }\n  }\n;\n  threadLocal.get();\n  long start=SystemClock.currentThreadTimeMillis();\n  for (int i=0; i < 1000; i++) {\n    DatabaseStatement sqLiteStatement=threadLocal.get();\n    assertNotNull(sqLiteStatement);\n  }\n  Long time=SystemClock.currentThreadTimeMillis() - start;\n  DaoLog.d(\"TIME: \" + time + \"ms\");\n  assertTrue(time < 10);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 336,
        "startColumnNumber" : 12,
        "endLineNumber" : 336,
        "endColumnNumber" : 66
      },
      "nodeContext" : "DatabaseStatement sqLiteStatement=threadLocal.get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.ThreadLocal<org.greenrobot.greendao.database.DatabaseStatement>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 333,
    "startColumnNumber" : 8,
    "endLineNumber" : 333,
    "endColumnNumber" : 19
  }, {
    "charLength" : 11,
    "startLineNumber" : 336,
    "startColumnNumber" : 48,
    "endLineNumber" : 336,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}