{
  "id" : 333,
  "expression" : "\"asList\"",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/steps/ConfigBuildSteps.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"asList\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 75,
      "startColumnNumber" : 64,
      "endLineNumber" : 75,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 101
      },
      "nodeContext" : "MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 74,
        "startColumnNumber" : 42,
        "endLineNumber" : 75,
        "endColumnNumber" : 109
      },
      "nodeContext" : "mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 74,
        "startColumnNumber" : 35,
        "endLineNumber" : 75,
        "endColumnNumber" : 109
      },
      "nodeContext" : "list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 110
      },
      "nodeContext" : "final ResultHandle list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 58,
        "startColumnNumber" : 77,
        "endLineNumber" : 77,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final ResultHandle array=mc.newArray(ConfigSource.class,mc.load(runTimeSources.size()));\n  for (int i=0; i < runTimeSources.size(); i++) {\n    final RunTimeConfigurationSourceBuildItem runTimeSource=runTimeSources.get(i);\n    final String className=runTimeSource.getClassName();\n    final OptionalInt priority=runTimeSource.getPriority();\n    ResultHandle value;\n    if (priority.isPresent()) {\n      value=mc.newInstance(MethodDescriptor.ofConstructor(className,int.class),mc.load(priority.getAsInt()));\n    }\n else {\n      value=mc.newInstance(MethodDescriptor.ofConstructor(className));\n    }\n    mc.writeArrayValue(array,i,value);\n  }\n  final ResultHandle list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array);\n  mc.returnValue(list);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1302,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (MethodCreator mc=cc.getMethodCreator(MethodDescriptor.ofMethod(ConfigSourceProvider.class,\"getConfigSources\",Iterable.class,ClassLoader.class))){\n  final ResultHandle array=mc.newArray(ConfigSource.class,mc.load(runTimeSources.size()));\n  for (int i=0; i < runTimeSources.size(); i++) {\n    final RunTimeConfigurationSourceBuildItem runTimeSource=runTimeSources.get(i);\n    final String className=runTimeSource.getClassName();\n    final OptionalInt priority=runTimeSource.getPriority();\n    ResultHandle value;\n    if (priority.isPresent()) {\n      value=mc.newInstance(MethodDescriptor.ofConstructor(className,int.class),mc.load(priority.getAsInt()));\n    }\n else {\n      value=mc.newInstance(MethodDescriptor.ofConstructor(className));\n    }\n    mc.writeArrayValue(array,i,value);\n  }\n  final ResultHandle list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array);\n  mc.returnValue(list);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 159,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1326,
        "startLineNumber" : 56,
        "startColumnNumber" : 51,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (MethodCreator mc=cc.getMethodCreator(MethodDescriptor.ofMethod(ConfigSourceProvider.class,\"getConfigSources\",Iterable.class,ClassLoader.class))){\n    final ResultHandle array=mc.newArray(ConfigSource.class,mc.load(runTimeSources.size()));\n    for (int i=0; i < runTimeSources.size(); i++) {\n      final RunTimeConfigurationSourceBuildItem runTimeSource=runTimeSources.get(i);\n      final String className=runTimeSource.getClassName();\n      final OptionalInt priority=runTimeSource.getPriority();\n      ResultHandle value;\n      if (priority.isPresent()) {\n        value=mc.newInstance(MethodDescriptor.ofConstructor(className,int.class),mc.load(priority.getAsInt()));\n      }\n else {\n        value=mc.newInstance(MethodDescriptor.ofConstructor(className));\n      }\n      mc.writeArrayValue(array,i,value);\n    }\n    final ResultHandle list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array);\n    mc.returnValue(list);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1525,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (ClassCreator cc=ClassCreator.builder().interfaces(ConfigSourceProvider.class).setFinal(true).className(PROVIDER_CLASS_NAME).classOutput(classOutput).build()){\n  try (MethodCreator mc=cc.getMethodCreator(MethodDescriptor.ofMethod(ConfigSourceProvider.class,\"getConfigSources\",Iterable.class,ClassLoader.class))){\n    final ResultHandle array=mc.newArray(ConfigSource.class,mc.load(runTimeSources.size()));\n    for (int i=0; i < runTimeSources.size(); i++) {\n      final RunTimeConfigurationSourceBuildItem runTimeSource=runTimeSources.get(i);\n      final String className=runTimeSource.getClassName();\n      final OptionalInt priority=runTimeSource.getPriority();\n      ResultHandle value;\n      if (priority.isPresent()) {\n        value=mc.newInstance(MethodDescriptor.ofConstructor(className,int.class),mc.load(priority.getAsInt()));\n      }\n else {\n        value=mc.newInstance(MethodDescriptor.ofConstructor(className));\n      }\n      mc.writeArrayValue(array,i,value);\n    }\n    final ResultHandle list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array);\n    mc.returnValue(list);\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 185,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1711,
        "startLineNumber" : 48,
        "startColumnNumber" : 53,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (liveReloadBuildItem.isLiveReload()) {\n    return;\n  }\n  ClassOutput classOutput=new GeneratedClassGizmoAdaptor(generatedClass,false);\n  try (ClassCreator cc=ClassCreator.builder().interfaces(ConfigSourceProvider.class).setFinal(true).className(PROVIDER_CLASS_NAME).classOutput(classOutput).build()){\n    try (MethodCreator mc=cc.getMethodCreator(MethodDescriptor.ofMethod(ConfigSourceProvider.class,\"getConfigSources\",Iterable.class,ClassLoader.class))){\n      final ResultHandle array=mc.newArray(ConfigSource.class,mc.load(runTimeSources.size()));\n      for (int i=0; i < runTimeSources.size(); i++) {\n        final RunTimeConfigurationSourceBuildItem runTimeSource=runTimeSources.get(i);\n        final String className=runTimeSource.getClassName();\n        final OptionalInt priority=runTimeSource.getPriority();\n        ResultHandle value;\n        if (priority.isPresent()) {\n          value=mc.newInstance(MethodDescriptor.ofConstructor(className,int.class),mc.load(priority.getAsInt()));\n        }\n else {\n          value=mc.newInstance(MethodDescriptor.ofConstructor(className));\n        }\n        mc.writeArrayValue(array,i,value);\n      }\n      final ResultHandle list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array);\n      mc.returnValue(list);\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1937,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@BuildStep void generateConfigSources(List<RunTimeConfigurationSourceBuildItem> runTimeSources,final BuildProducer<GeneratedClassBuildItem> generatedClass,LiveReloadBuildItem liveReloadBuildItem){\n  if (liveReloadBuildItem.isLiveReload()) {\n    return;\n  }\n  ClassOutput classOutput=new GeneratedClassGizmoAdaptor(generatedClass,false);\n  try (ClassCreator cc=ClassCreator.builder().interfaces(ConfigSourceProvider.class).setFinal(true).className(PROVIDER_CLASS_NAME).classOutput(classOutput).build()){\n    try (MethodCreator mc=cc.getMethodCreator(MethodDescriptor.ofMethod(ConfigSourceProvider.class,\"getConfigSources\",Iterable.class,ClassLoader.class))){\n      final ResultHandle array=mc.newArray(ConfigSource.class,mc.load(runTimeSources.size()));\n      for (int i=0; i < runTimeSources.size(); i++) {\n        final RunTimeConfigurationSourceBuildItem runTimeSource=runTimeSources.get(i);\n        final String className=runTimeSource.getClassName();\n        final OptionalInt priority=runTimeSource.getPriority();\n        ResultHandle value;\n        if (priority.isPresent()) {\n          value=mc.newInstance(MethodDescriptor.ofConstructor(className,int.class),mc.load(priority.getAsInt()));\n        }\n else {\n          value=mc.newInstance(MethodDescriptor.ofConstructor(className));\n        }\n        mc.writeArrayValue(array,i,value);\n      }\n      final ResultHandle list=mc.invokeStaticMethod(MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class),array);\n      mc.returnValue(list);\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 101
      },
      "nodeContext" : "MethodDescriptor.ofMethod(Arrays.class,\"asList\",List.class,Object[].class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 75,
    "startColumnNumber" : 64,
    "endLineNumber" : 75,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}