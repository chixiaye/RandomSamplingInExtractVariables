{
  "id" : 228,
  "expression" : "name",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/transformations/OneInputTransformation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 20,
      "endLineNumber" : 71,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 87
      },
      "nodeContext" : "this(input,name,SimpleOperatorFactory.of(operator),outputType,parallelism);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 70,
        "startColumnNumber" : 29,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this(input,name,SimpleOperatorFactory.of(operator),outputType,parallelism);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a new  {@code OneInputTransformation} from the given input and operator.\n * @param input The input {@code Transformation}\n * @param name The name of the {@code Transformation}, this will be shown in Visualizations and the Log\n * @param operator The {@code TwoInputStreamOperator}\n * @param outputType The type of the elements produced by this {@code OneInputTransformation}\n * @param parallelism The parallelism of this {@code OneInputTransformation}\n */\npublic OneInputTransformation(Transformation<IN> input,String name,OneInputStreamOperator<IN,OUT> operator,TypeInformation<OUT> outputType,int parallelism){\n  this(input,name,SimpleOperatorFactory.of(operator),outputType,parallelism);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 87
      },
      "nodeContext" : "this(input,name,SimpleOperatorFactory.of(operator),outputType,parallelism);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 20,
    "endLineNumber" : 71,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}