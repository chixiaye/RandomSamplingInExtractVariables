{
  "id" : 236,
  "expression" : "JenkinsRule",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/AboutJenkinsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JenkinsRule",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 79,
      "startColumnNumber" : 8,
      "endLineNumber" : 79,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 29
      },
      "nodeContext" : "JenkinsRule.WebClient",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 29
      },
      "nodeContext" : "JenkinsRule.WebClient",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2595,
        "startLineNumber" : 50,
        "startColumnNumber" : 77,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String ADMIN=\"admin\";\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  final String READONLY=\"readonly\";\n  final String MANAGER_READONLY=\"manager-readonly\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.ADMINISTER).everywhere().to(ADMIN).grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER).grant(Jenkins.READ).everywhere().to(READONLY).grant(Jenkins.SYSTEM_READ).everywhere().to(READONLY).grant(Jenkins.READ).everywhere().to(MANAGER_READONLY).grant(Jenkins.MANAGE).everywhere().to(MANAGER_READONLY).grant(Jenkins.SYSTEM_READ).everywhere().to(MANAGER_READONLY));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n{\n    wc.login(USER);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  }\n{\n    wc.login(ADMIN);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n    assertThat(page.getWebResponse().getContentAsString(),containsString(\"Mavenized dependencies\"));\n  }\n{\n    wc.login(MANAGER);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  }\n{\n    wc.login(READONLY);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  }\n{\n    wc.login(MANAGER_READONLY);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2707,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"SECURITY-771\") public void onlyAdminOrManageOrSystemReadCanReadAbout() throws Exception {\n  final String ADMIN=\"admin\";\n  final String USER=\"user\";\n  final String MANAGER=\"manager\";\n  final String READONLY=\"readonly\";\n  final String MANAGER_READONLY=\"manager-readonly\";\n  j.jenkins.setSecurityRealm(j.createDummySecurityRealm());\n  j.jenkins.setAuthorizationStrategy(new MockAuthorizationStrategy().grant(Jenkins.ADMINISTER).everywhere().to(ADMIN).grant(Jenkins.READ).everywhere().to(USER).grant(Jenkins.READ).everywhere().to(MANAGER).grant(Jenkins.MANAGE).everywhere().to(MANAGER).grant(Jenkins.READ).everywhere().to(READONLY).grant(Jenkins.SYSTEM_READ).everywhere().to(READONLY).grant(Jenkins.READ).everywhere().to(MANAGER_READONLY).grant(Jenkins.MANAGE).everywhere().to(MANAGER_READONLY).grant(Jenkins.SYSTEM_READ).everywhere().to(MANAGER_READONLY));\n  JenkinsRule.WebClient wc=j.createWebClient().withThrowExceptionOnFailingStatusCode(false);\n{\n    wc.login(USER);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_FORBIDDEN,page.getWebResponse().getStatusCode());\n  }\n{\n    wc.login(ADMIN);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n    assertThat(page.getWebResponse().getContentAsString(),containsString(\"Mavenized dependencies\"));\n  }\n{\n    wc.login(MANAGER);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  }\n{\n    wc.login(READONLY);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  }\n{\n    wc.login(MANAGER_READONLY);\n    HtmlPage page=wc.goTo(\"about/\");\n    assertEquals(HttpURLConnection.HTTP_OK,page.getWebResponse().getStatusCode());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 29
      },
      "nodeContext" : "JenkinsRule.WebClient",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "JenkinsRule"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 79,
    "startColumnNumber" : 8,
    "endLineNumber" : 79,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}