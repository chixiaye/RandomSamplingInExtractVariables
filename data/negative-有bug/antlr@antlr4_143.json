{
  "id" : 143,
  "expression" : "literal.charAt(i + 1) == 'u'",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/misc/CharSupport.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "literal.charAt(i + 1) == 'u'",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 94,
      "startColumnNumber" : 20,
      "endLineNumber" : 94,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 9,
        "endLineNumber" : 94,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i + 1 < n && literal.charAt(i + 1) == 'u'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 895,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (i + 1 < n && literal.charAt(i + 1) == 'u') {\n  if (i + 2 < n && literal.charAt(i + 2) == '{') {\n    end=i + 3;\n    while (true) {\n      if (end + 1 > n)       return null;\n      char charAt=literal.charAt(end++);\n      if (charAt == '}') {\n        break;\n      }\n      if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n        return null;\n      }\n    }\n  }\n else {\n    for (end=i + 2; end < i + 6; end++) {\n      if (end > n)       return null;\n      char charAt=literal.charAt(end);\n      if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n        return null;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 92,
        "startColumnNumber" : 36,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  end=i + 2;\n  if (i + 1 < n && literal.charAt(i + 1) == 'u') {\n    if (i + 2 < n && literal.charAt(i + 2) == '{') {\n      end=i + 3;\n      while (true) {\n        if (end + 1 > n)         return null;\n        char charAt=literal.charAt(end++);\n        if (charAt == '}') {\n          break;\n        }\n        if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n          return null;\n        }\n      }\n    }\n else {\n      for (end=i + 2; end < i + 6; end++) {\n        if (end > n)         return null;\n        char charAt=literal.charAt(end);\n        if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n          return null;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 92,
        "startColumnNumber" : 3,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (literal.charAt(i) == '\\\\') {\n  end=i + 2;\n  if (i + 1 < n && literal.charAt(i + 1) == 'u') {\n    if (i + 2 < n && literal.charAt(i + 2) == '{') {\n      end=i + 3;\n      while (true) {\n        if (end + 1 > n)         return null;\n        char charAt=literal.charAt(end++);\n        if (charAt == '}') {\n          break;\n        }\n        if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n          return null;\n        }\n      }\n    }\n else {\n      for (end=i + 2; end < i + 6; end++) {\n        if (end > n)         return null;\n        char charAt=literal.charAt(end);\n        if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n          return null;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 163,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 90,
        "startColumnNumber" : 18,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int end=i + 1;\n  if (literal.charAt(i) == '\\\\') {\n    end=i + 2;\n    if (i + 1 < n && literal.charAt(i + 1) == 'u') {\n      if (i + 2 < n && literal.charAt(i + 2) == '{') {\n        end=i + 3;\n        while (true) {\n          if (end + 1 > n)           return null;\n          char charAt=literal.charAt(end++);\n          if (charAt == '}') {\n            break;\n          }\n          if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n            return null;\n          }\n        }\n      }\n else {\n        for (end=i + 2; end < i + 6; end++) {\n          if (end > n)           return null;\n          char charAt=literal.charAt(end);\n          if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n            return null;\n          }\n        }\n      }\n    }\n  }\n  if (end > n)   return null;\n  String esc=literal.substring(i,end);\n  int c=getCharValueFromCharInGrammarLiteral(esc);\n  if (c == -1) {\n    return null;\n  }\n else   buf.appendCodePoint(c);\n  i=end;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1304,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (i < n) {\n  int end=i + 1;\n  if (literal.charAt(i) == '\\\\') {\n    end=i + 2;\n    if (i + 1 < n && literal.charAt(i + 1) == 'u') {\n      if (i + 2 < n && literal.charAt(i + 2) == '{') {\n        end=i + 3;\n        while (true) {\n          if (end + 1 > n)           return null;\n          char charAt=literal.charAt(end++);\n          if (charAt == '}') {\n            break;\n          }\n          if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n            return null;\n          }\n        }\n      }\n else {\n        for (end=i + 2; end < i + 6; end++) {\n          if (end > n)           return null;\n          char charAt=literal.charAt(end);\n          if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n            return null;\n          }\n        }\n      }\n    }\n  }\n  if (end > n)   return null;\n  String esc=literal.substring(i,end);\n  int c=getCharValueFromCharInGrammarLiteral(esc);\n  if (c == -1) {\n    return null;\n  }\n else   buf.appendCodePoint(c);\n  i=end;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 215,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1467,
        "startLineNumber" : 86,
        "startColumnNumber" : 72,
        "endLineNumber" : 129,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  StringBuilder buf=new StringBuilder();\n  int i=1;\n  int n=literal.length() - 1;\n  while (i < n) {\n    int end=i + 1;\n    if (literal.charAt(i) == '\\\\') {\n      end=i + 2;\n      if (i + 1 < n && literal.charAt(i + 1) == 'u') {\n        if (i + 2 < n && literal.charAt(i + 2) == '{') {\n          end=i + 3;\n          while (true) {\n            if (end + 1 > n)             return null;\n            char charAt=literal.charAt(end++);\n            if (charAt == '}') {\n              break;\n            }\n            if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n              return null;\n            }\n          }\n        }\n else {\n          for (end=i + 2; end < i + 6; end++) {\n            if (end > n)             return null;\n            char charAt=literal.charAt(end);\n            if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n              return null;\n            }\n          }\n        }\n      }\n    }\n    if (end > n)     return null;\n    String esc=literal.substring(i,end);\n    int c=getCharValueFromCharInGrammarLiteral(esc);\n    if (c == -1) {\n      return null;\n    }\n else     buf.appendCodePoint(c);\n    i=end;\n  }\n  return buf.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1538,
        "startLineNumber" : 86,
        "startColumnNumber" : 1,
        "endLineNumber" : 129,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static String getStringFromGrammarStringLiteral(String literal){\n  StringBuilder buf=new StringBuilder();\n  int i=1;\n  int n=literal.length() - 1;\n  while (i < n) {\n    int end=i + 1;\n    if (literal.charAt(i) == '\\\\') {\n      end=i + 2;\n      if (i + 1 < n && literal.charAt(i + 1) == 'u') {\n        if (i + 2 < n && literal.charAt(i + 2) == '{') {\n          end=i + 3;\n          while (true) {\n            if (end + 1 > n)             return null;\n            char charAt=literal.charAt(end++);\n            if (charAt == '}') {\n              break;\n            }\n            if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n              return null;\n            }\n          }\n        }\n else {\n          for (end=i + 2; end < i + 6; end++) {\n            if (end > n)             return null;\n            char charAt=literal.charAt(end);\n            if (!Character.isDigit(charAt) && !(charAt >= 'a' && charAt <= 'f') && !(charAt >= 'A' && charAt <= 'F')) {\n              return null;\n            }\n          }\n        }\n      }\n    }\n    if (end > n)     return null;\n    String esc=literal.substring(i,end);\n    int c=getCharValueFromCharInGrammarLiteral(esc);\n    if (c == -1) {\n      return null;\n    }\n else     buf.appendCodePoint(c);\n    i=end;\n  }\n  return buf.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 9,
        "endLineNumber" : 94,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i + 1 < n && literal.charAt(i + 1) == 'u'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 94,
    "startColumnNumber" : 20,
    "endLineNumber" : 94,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}