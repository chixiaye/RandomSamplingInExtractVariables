{
  "id" : 325,
  "expression" : "(strLen=str.length())",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(strLen=str.length())",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 320,
      "startColumnNumber" : 27,
      "endLineNumber" : 320,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 320,
        "startColumnNumber" : 27,
        "endLineNumber" : 320,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(strLen=str.length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 320,
        "startColumnNumber" : 12,
        "endLineNumber" : 320,
        "endColumnNumber" : 55
      },
      "nodeContext" : "str == null || (strLen=str.length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 320,
        "startColumnNumber" : 8,
        "endLineNumber" : 322,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (str == null || (strLen=str.length()) == 0) {\n  return str;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 315,
        "startColumnNumber" : 78,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isEmpty(concatStr)) {\n    concatStr=EMPTY;\n  }\n  int strLen;\n  if (str == null || (strLen=str.length()) == 0) {\n    return str;\n  }\n  final char firstChar=str.charAt(0);\n  if (Character.isTitleCase(firstChar)) {\n    return str;\n  }\n  StringBuilder sb=new StringBuilder(strLen);\n  sb.append(concatStr);\n  sb.append(Character.toTitleCase(firstChar));\n  sb.append(str.substring(1));\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 306,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 拼接字符串第二个字符串第一个字母大写 </p>\n * @param concatStr\n * @param str\n * @return\n */\npublic static String concatCapitalize(String concatStr,final String str){\n  if (isEmpty(concatStr)) {\n    concatStr=EMPTY;\n  }\n  int strLen;\n  if (str == null || (strLen=str.length()) == 0) {\n    return str;\n  }\n  final char firstChar=str.charAt(0);\n  if (Character.isTitleCase(firstChar)) {\n    return str;\n  }\n  StringBuilder sb=new StringBuilder(strLen);\n  sb.append(concatStr);\n  sb.append(Character.toTitleCase(firstChar));\n  sb.append(str.substring(1));\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 320,
        "startColumnNumber" : 12,
        "endLineNumber" : 320,
        "endColumnNumber" : 55
      },
      "nodeContext" : "str == null || (strLen=str.length()) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 320,
    "startColumnNumber" : 27,
    "endLineNumber" : 320,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}