{
  "id" : 323,
  "expression" : "\"-\"",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/test/src/test/java/com/bumptech/glide/load/resource/bitmap/HardwareConfigStateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"-\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 254,
      "startColumnNumber" : 43,
      "endLineNumber" : 254,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 254,
        "startColumnNumber" : 37,
        "endLineNumber" : 254,
        "endColumnNumber" : 97
      },
      "nodeContext" : "{\".\",\"-\",\"\",\"S\",\"SM\",\"SM-\",\"SM-G\",\"SM-G9.\",\"SM-G93\"}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 10,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 254,
        "startColumnNumber" : 24,
        "endLineNumber" : 254,
        "endColumnNumber" : 97
      },
      "nodeContext" : "new String[]{\".\",\"-\",\"\",\"S\",\"SM\",\"SM-\",\"SM-G\",\"SM-G9.\",\"SM-G93\"}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 275,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String model : new String[]{\".\",\"-\",\"\",\"S\",\"SM\",\"SM-\",\"SM-G\",\"SM-G9.\",\"SM-G93\"}) {\n  ShadowBuild.setModel(model);\n  HardwareConfigState state=new HardwareConfigState();\n  state.unblockHardwareBitmaps();\n  BitmapFactory.Options options=new BitmapFactory.Options();\n  options.inPreferredConfig=null;\n  options.inMutable=true;\n  boolean result=state.setHardwareConfigIfAllowed(HardwareConfigState.MIN_HARDWARE_DIMENSION_O,HardwareConfigState.MIN_HARDWARE_DIMENSION_O,options,true,false);\n  assertWithMessage(\"model: \" + model).that(result).isTrue();\n  assertWithMessage(\"model: \" + model).that(options.inMutable).isFalse();\n  assertWithMessage(\"model: \" + model).that(options.inPreferredConfig).isEqualTo(Bitmap.Config.HARDWARE);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 120,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 253,
        "startColumnNumber" : 82,
        "endLineNumber" : 276,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  String model : new String[]{\".\",\"-\",\"\",\"S\",\"SM\",\"SM-\",\"SM-G\",\"SM-G9.\",\"SM-G93\"}) {\n    ShadowBuild.setModel(model);\n    HardwareConfigState state=new HardwareConfigState();\n    state.unblockHardwareBitmaps();\n    BitmapFactory.Options options=new BitmapFactory.Options();\n    options.inPreferredConfig=null;\n    options.inMutable=true;\n    boolean result=state.setHardwareConfigIfAllowed(HardwareConfigState.MIN_HARDWARE_DIMENSION_O,HardwareConfigState.MIN_HARDWARE_DIMENSION_O,options,true,false);\n    assertWithMessage(\"model: \" + model).that(result).isTrue();\n    assertWithMessage(\"model: \" + model).that(options.inMutable).isFalse();\n    assertWithMessage(\"model: \" + model).that(options.inPreferredConfig).isEqualTo(Bitmap.Config.HARDWARE);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 251,
        "startColumnNumber" : 2,
        "endLineNumber" : 276,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Config(sdk=Build.VERSION_CODES.O) @Test public void setHardwareConfigIfAllowed_withShortOrEmptyModelNames_returnsTrue(){\n  for (  String model : new String[]{\".\",\"-\",\"\",\"S\",\"SM\",\"SM-\",\"SM-G\",\"SM-G9.\",\"SM-G93\"}) {\n    ShadowBuild.setModel(model);\n    HardwareConfigState state=new HardwareConfigState();\n    state.unblockHardwareBitmaps();\n    BitmapFactory.Options options=new BitmapFactory.Options();\n    options.inPreferredConfig=null;\n    options.inMutable=true;\n    boolean result=state.setHardwareConfigIfAllowed(HardwareConfigState.MIN_HARDWARE_DIMENSION_O,HardwareConfigState.MIN_HARDWARE_DIMENSION_O,options,true,false);\n    assertWithMessage(\"model: \" + model).that(result).isTrue();\n    assertWithMessage(\"model: \" + model).that(options.inMutable).isFalse();\n    assertWithMessage(\"model: \" + model).that(options.inPreferredConfig).isEqualTo(Bitmap.Config.HARDWARE);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 254,
        "startColumnNumber" : 24,
        "endLineNumber" : 254,
        "endColumnNumber" : 97
      },
      "nodeContext" : "new String[]{\".\",\"-\",\"\",\"S\",\"SM\",\"SM-\",\"SM-G\",\"SM-G9.\",\"SM-G93\"}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 254,
    "startColumnNumber" : 43,
    "endLineNumber" : 254,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}