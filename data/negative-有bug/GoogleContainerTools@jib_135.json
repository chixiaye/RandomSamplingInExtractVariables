{
  "id" : 135,
  "expression" : "\"Cannot find field 'schemaVersion' in manifest\"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/registry/ManifestPuller.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Cannot find field 'schemaVersion' in manifest\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 114,
      "startColumnNumber" : 47,
      "endLineNumber" : 114,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 95
      },
      "nodeContext" : "new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 96
      },
      "nodeContext" : "throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 113,
        "startColumnNumber" : 36,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!node.has(\"schemaVersion\")) {\n  throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 111,
        "startColumnNumber" : 57,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Instantiates a  {@link ManifestTemplate} from a JSON string. This checks the {@code schemaVersion} field of the JSON to determine which manifest version to use.\n */\nprivate T getManifestTemplateFromJson(String jsonString) throws IOException, UnknownManifestFormatException {\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 96
      },
      "nodeContext" : "throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 114,
    "startColumnNumber" : 47,
    "endLineNumber" : 114,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}