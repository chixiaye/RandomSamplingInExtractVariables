{
  "id" : 36,
  "expression" : "j",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Others/SieveOfEratosthenes.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 26,
      "startColumnNumber" : 31,
      "endLineNumber" : 26,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 3,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 26,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i * j",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 26,
        "endColumnNumber" : 37
      },
      "nodeContext" : "i * j <= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 26,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int j=2; i * j <= n; j++) {\n  arr[i * j]=0;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 25,
        "startColumnNumber" : 29,
        "endLineNumber" : 29,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int j=2; i * j <= n; j++) {\n    arr[i * j]=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 25,
        "startColumnNumber" : 12,
        "endLineNumber" : 29,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (arr[i] == 1) {\n  for (int j=2; i * j <= n; j++) {\n    arr[i * j]=0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 24,
        "startColumnNumber" : 42,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (arr[i] == 1) {\n    for (int j=2; i * j <= n; j++) {\n      arr[i * j]=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=2; i <= Math.sqrt(n); i++) {\n  if (arr[i] == 1) {\n    for (int j=2; i * j <= n; j++) {\n      arr[i * j]=0;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 15,
        "startColumnNumber" : 46,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int[] arr=new int[n + 1];\n  for (int i=0; i <= n; i++) {\n    arr[i]=1;\n  }\n  arr[0]=arr[1]=0;\n  for (int i=2; i <= Math.sqrt(n); i++) {\n    if (arr[i] == 1) {\n      for (int j=2; i * j <= n; j++) {\n        arr[i * j]=0;\n      }\n    }\n  }\n  for (int i=0; i < n + 1; i++) {\n    if (arr[i] == 1) {\n      System.out.print(i + \" \");\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method implements the Sieve of Eratosthenes Algorithm\n * @param n The number till which we have to check for primePrints all the prime numbers till n\n */\npublic static void findPrimesTillN(int n){\n  int[] arr=new int[n + 1];\n  for (int i=0; i <= n; i++) {\n    arr[i]=1;\n  }\n  arr[0]=arr[1]=0;\n  for (int i=2; i <= Math.sqrt(n); i++) {\n    if (arr[i] == 1) {\n      for (int j=2; i * j <= n; j++) {\n        arr[i * j]=0;\n      }\n    }\n  }\n  for (int i=0; i < n + 1; i++) {\n    if (arr[i] == 1) {\n      System.out.print(i + \" \");\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 26,
        "startColumnNumber" : 29,
        "endLineNumber" : 26,
        "endColumnNumber" : 37
      },
      "nodeContext" : "i * j <= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 27,
      "startColumnNumber" : 26,
      "endLineNumber" : 27,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 3,
        "startLineNumber" : 27,
        "startColumnNumber" : 24,
        "endLineNumber" : 27,
        "endColumnNumber" : 27
      },
      "nodeContext" : "i * j",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 27,
        "startColumnNumber" : 20,
        "endLineNumber" : 27,
        "endColumnNumber" : 28
      },
      "nodeContext" : "arr[i * j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 27,
        "startColumnNumber" : 20,
        "endLineNumber" : 27,
        "endColumnNumber" : 32
      },
      "nodeContext" : "arr[i * j]=0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 27,
        "startColumnNumber" : 20,
        "endLineNumber" : 27,
        "endColumnNumber" : 33
      },
      "nodeContext" : "arr[i * j]=0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 26,
        "startColumnNumber" : 43,
        "endLineNumber" : 28,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  arr[i * j]=0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 26,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int j=2; i * j <= n; j++) {\n  arr[i * j]=0;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 25,
        "startColumnNumber" : 29,
        "endLineNumber" : 29,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (int j=2; i * j <= n; j++) {\n    arr[i * j]=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 25,
        "startColumnNumber" : 12,
        "endLineNumber" : 29,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (arr[i] == 1) {\n  for (int j=2; i * j <= n; j++) {\n    arr[i * j]=0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 24,
        "startColumnNumber" : 42,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (arr[i] == 1) {\n    for (int j=2; i * j <= n; j++) {\n      arr[i * j]=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=2; i <= Math.sqrt(n); i++) {\n  if (arr[i] == 1) {\n    for (int j=2; i * j <= n; j++) {\n      arr[i * j]=0;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 15,
        "startColumnNumber" : 46,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int[] arr=new int[n + 1];\n  for (int i=0; i <= n; i++) {\n    arr[i]=1;\n  }\n  arr[0]=arr[1]=0;\n  for (int i=2; i <= Math.sqrt(n); i++) {\n    if (arr[i] == 1) {\n      for (int j=2; i * j <= n; j++) {\n        arr[i * j]=0;\n      }\n    }\n  }\n  for (int i=0; i < n + 1; i++) {\n    if (arr[i] == 1) {\n      System.out.print(i + \" \");\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 8,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method implements the Sieve of Eratosthenes Algorithm\n * @param n The number till which we have to check for primePrints all the prime numbers till n\n */\npublic static void findPrimesTillN(int n){\n  int[] arr=new int[n + 1];\n  for (int i=0; i <= n; i++) {\n    arr[i]=1;\n  }\n  arr[0]=arr[1]=0;\n  for (int i=2; i <= Math.sqrt(n); i++) {\n    if (arr[i] == 1) {\n      for (int j=2; i * j <= n; j++) {\n        arr[i * j]=0;\n      }\n    }\n  }\n  for (int i=0; i < n + 1; i++) {\n    if (arr[i] == 1) {\n      System.out.print(i + \" \");\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 27,
        "startColumnNumber" : 20,
        "endLineNumber" : 27,
        "endColumnNumber" : 33
      },
      "nodeContext" : "arr[i * j]=0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 26,
    "startColumnNumber" : 31,
    "endLineNumber" : 26,
    "endColumnNumber" : 32
  }, {
    "charLength" : 1,
    "startLineNumber" : 27,
    "startColumnNumber" : 26,
    "endLineNumber" : 27,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}