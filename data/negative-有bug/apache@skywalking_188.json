{
  "id" : 188,
  "expression" : "longTaskTimer",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-application-toolkit/apm-toolkit-micrometer-registry/src/test/java/org/apache/skywalking/apm/meter/micrometer/SkywalkingLongTaskTimerTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "longTaskTimer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 36,
      "startColumnNumber" : 20,
      "endLineNumber" : 36,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 39
      },
      "nodeContext" : "addLongTask(longTaskTimer,450)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 40
      },
      "nodeContext" : "addLongTask(longTaskTimer,450);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 30,
        "startColumnNumber" : 57,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimple() throws InterruptedException {\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 40
      },
      "nodeContext" : "addLongTask(longTaskTimer,450);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.apm.meter.micrometer.LongTaskTimer"
  }, {
    "nodeContext" : "longTaskTimer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 37,
      "startColumnNumber" : 20,
      "endLineNumber" : 37,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 38
      },
      "nodeContext" : "addLongTask(longTaskTimer,20)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 39
      },
      "nodeContext" : "addLongTask(longTaskTimer,20);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 30,
        "startColumnNumber" : 57,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimple() throws InterruptedException {\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 39
      },
      "nodeContext" : "addLongTask(longTaskTimer,20);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.apm.meter.micrometer.LongTaskTimer"
  }, {
    "nodeContext" : "longTaskTimer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 43,
      "startColumnNumber" : 26,
      "endLineNumber" : 43,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 43,
        "startColumnNumber" : 26,
        "endLineNumber" : 43,
        "endColumnNumber" : 74
      },
      "nodeContext" : "longTaskTimer instanceof SkywalkingLongTaskTimer",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 30,
        "startColumnNumber" : 57,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimple() throws InterruptedException {\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.apm.meter.micrometer.LongTaskTimer"
  }, {
    "nodeContext" : "longTaskTimer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 44,
      "startColumnNumber" : 72,
      "endLineNumber" : 44,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 44,
        "startColumnNumber" : 46,
        "endLineNumber" : 44,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(SkywalkingLongTaskTimer)longTaskTimer",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 44,
        "startColumnNumber" : 38,
        "endLineNumber" : 44,
        "endColumnNumber" : 85
      },
      "nodeContext" : "timer=(SkywalkingLongTaskTimer)longTaskTimer",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 86
      },
      "nodeContext" : "final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 30,
        "startColumnNumber" : 57,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimple() throws InterruptedException {\n  final SkywalkingMeterRegistry registry=new SkywalkingMeterRegistry();\n  final LongTaskTimer longTaskTimer=registry.more().longTaskTimer(\"test_simple_long_task_timer\",\"skywalking\",\"test\");\n  addLongTask(longTaskTimer,450);\n  addLongTask(longTaskTimer,20);\n  TimeUnit.MILLISECONDS.sleep(200);\n  Assert.assertTrue(longTaskTimer instanceof SkywalkingLongTaskTimer);\n  final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n  Assert.assertEquals(1,timer.activeTasks());\n  Assert.assertTrue(timer.duration(TimeUnit.MILLISECONDS) > 0);\n  Assert.assertTrue(timer.max(TimeUnit.MILLISECONDS) > 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 86
      },
      "nodeContext" : "final SkywalkingLongTaskTimer timer=(SkywalkingLongTaskTimer)longTaskTimer;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.apm.meter.micrometer.LongTaskTimer"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 36,
    "startColumnNumber" : 20,
    "endLineNumber" : 36,
    "endColumnNumber" : 33
  }, {
    "charLength" : 13,
    "startLineNumber" : 37,
    "startColumnNumber" : 20,
    "endLineNumber" : 37,
    "endColumnNumber" : 33
  }, {
    "charLength" : 13,
    "startLineNumber" : 43,
    "startColumnNumber" : 26,
    "endLineNumber" : 43,
    "endColumnNumber" : 39
  }, {
    "charLength" : 13,
    "startLineNumber" : 44,
    "startColumnNumber" : 72,
    "endLineNumber" : 44,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}