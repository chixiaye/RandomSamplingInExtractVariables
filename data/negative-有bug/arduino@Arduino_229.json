{
  "id" : 229,
  "expression" : "(value >> 8)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/windows/Registry.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(value >> 8)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 247,
      "startColumnNumber" : 21,
      "endLineNumber" : 247,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 247,
        "startColumnNumber" : 21,
        "endLineNumber" : 247,
        "endColumnNumber" : 40
      },
      "nodeContext" : "(value >> 8) & 0xff",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 247,
        "startColumnNumber" : 20,
        "endLineNumber" : 247,
        "endColumnNumber" : 41
      },
      "nodeContext" : "((value >> 8) & 0xff)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 247,
        "startColumnNumber" : 14,
        "endLineNumber" : 247,
        "endColumnNumber" : 41
      },
      "nodeContext" : "(byte)((value >> 8) & 0xff)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 247,
        "startColumnNumber" : 4,
        "endLineNumber" : 247,
        "endColumnNumber" : 41
      },
      "nodeContext" : "data[1]=(byte)((value >> 8) & 0xff)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 247,
        "startColumnNumber" : 4,
        "endLineNumber" : 247,
        "endColumnNumber" : 42
      },
      "nodeContext" : "data[1]=(byte)((value >> 8) & 0xff);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 239,
        "startColumnNumber" : 106,
        "endLineNumber" : 261,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Advapi32 advapi32;\n  int handle;\n  byte[] data;\n  boolean ret=false;\n  data=new byte[4];\n  data[0]=(byte)(value & 0xff);\n  data[1]=(byte)((value >> 8) & 0xff);\n  data[2]=(byte)((value >> 16) & 0xff);\n  data[3]=(byte)((value >> 24) & 0xff);\n  advapi32=Advapi32.INSTANCE;\n  handle=openKey(rootKey,subKeyName,WINNT.KEY_READ | WINNT.KEY_WRITE);\n  if (handle != 0) {\n    if (advapi32.RegSetValueEx(handle,name,0,WINNT.REG_DWORD,data,data.length) == WINERROR.ERROR_SUCCESS) {\n      ret=true;\n    }\n    advapi32.RegCloseKey(handle);\n  }\n  return (ret);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 229,
        "startColumnNumber" : 2,
        "endLineNumber" : 261,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Writes an int value.\n * @return true on success\n * @param rootKey root key\n * @param subKeyName key name\n * @param name value name\n * @param value value\n */\npublic static boolean setIntValue(REGISTRY_ROOT_KEY rootKey,String subKeyName,String name,int value){\n  Advapi32 advapi32;\n  int handle;\n  byte[] data;\n  boolean ret=false;\n  data=new byte[4];\n  data[0]=(byte)(value & 0xff);\n  data[1]=(byte)((value >> 8) & 0xff);\n  data[2]=(byte)((value >> 16) & 0xff);\n  data[3]=(byte)((value >> 24) & 0xff);\n  advapi32=Advapi32.INSTANCE;\n  handle=openKey(rootKey,subKeyName,WINNT.KEY_READ | WINNT.KEY_WRITE);\n  if (handle != 0) {\n    if (advapi32.RegSetValueEx(handle,name,0,WINNT.REG_DWORD,data,data.length) == WINERROR.ERROR_SUCCESS) {\n      ret=true;\n    }\n    advapi32.RegCloseKey(handle);\n  }\n  return (ret);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 247,
        "startColumnNumber" : 4,
        "endLineNumber" : 247,
        "endColumnNumber" : 42
      },
      "nodeContext" : "data[1]=(byte)((value >> 8) & 0xff);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 247,
    "startColumnNumber" : 21,
    "endLineNumber" : 247,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}