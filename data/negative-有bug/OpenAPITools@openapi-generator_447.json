{
  "id" : 447,
  "expression" : "\"#include \\\"\"",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/CppUE4ClientCodegen.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"#include \\\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 192,
      "startColumnNumber" : 43,
      "endLineNumber" : 192,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 192,
        "startColumnNumber" : 43,
        "endLineNumber" : 192,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"#include \\\"\" + modelNamePrefix + \"Helpers.h\\\"\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 91
      },
      "nodeContext" : "importMapping.put(\"HttpFileInput\",\"#include \\\"\" + modelNamePrefix + \"Helpers.h\\\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 92
      },
      "nodeContext" : "importMapping.put(\"HttpFileInput\",\"#include \\\"\" + modelNamePrefix + \"Helpers.h\\\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6574,
        "startLineNumber" : 53,
        "startColumnNumber" : 33,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super();\n  generatorMetadata=GeneratorMetadata.newBuilder(generatorMetadata).stability(Stability.BETA).build();\n  outputFolder=\"generated-code/cpp-ue4\";\n  if (\"\".equals(modelNamePrefix)) {\n    modelNamePrefix=unrealModuleName;\n  }\n  modelTemplateFiles.put(\"model-header.mustache\",\".h\");\n  modelTemplateFiles.put(\"model-source.mustache\",\".cpp\");\n  apiTemplateFiles.put(\"api-header.mustache\",\".h\");\n  apiTemplateFiles.put(\"api-source.mustache\",\".cpp\");\n  apiTemplateFiles.put(\"api-operations-header.mustache\",\".h\");\n  apiTemplateFiles.put(\"api-operations-source.mustache\",\".cpp\");\n  embeddedTemplateDir=templateDir=\"cpp-ue4\";\n  addOption(CPP_NAMESPACE,CPP_NAMESPACE_DESC,this.cppNamespace);\n  addOption(UNREAL_MODULE_NAME,UNREAL_MODULE_NAME_DESC,this.unrealModuleName);\n  addSwitch(CodegenConstants.OPTIONAL_PROJECT_FILE,OPTIONAL_PROJECT_FILE_DESC,this.optionalProjectFileFlag);\n  additionalProperties.put(\"apiVersion\",apiVersion);\n  additionalProperties().put(\"modelNamePrefix\",modelNamePrefix);\n  additionalProperties().put(\"modelPackage\",modelPackage);\n  additionalProperties().put(\"apiPackage\",apiPackage);\n  additionalProperties().put(\"dllapi\",unrealModuleName.toUpperCase(Locale.ROOT) + \"_API\");\n  additionalProperties().put(\"unrealModuleName\",unrealModuleName);\n  additionalProperties.put(\"cppNamespace\",cppNamespace);\n  additionalProperties.put(\"unrealModuleName\",unrealModuleName);\n  languageSpecificPrimitives=new HashSet<>(Arrays.asList(\"bool\",\"int32\",\"int64\",\"float\",\"double\",\"FString\",\"FDateTime\",\"FGuid\",\"TArray\",\"TArray<uint8>\",\"TMap\",\"TSharedPtr<FJsonObject>\",\"TSharedPtr<FJsonValue>\"));\n  supportingFiles.add(new SupportingFile(\"model-base-header.mustache\",publicFolder,modelNamePrefix + \"BaseModel.h\"));\n  supportingFiles.add(new SupportingFile(\"model-base-source.mustache\",privateFolder,modelNamePrefix + \"BaseModel.cpp\"));\n  supportingFiles.add(new SupportingFile(\"helpers-header.mustache\",publicFolder,modelNamePrefix + \"Helpers.h\"));\n  supportingFiles.add(new SupportingFile(\"helpers-source.mustache\",privateFolder,modelNamePrefix + \"Helpers.cpp\"));\n  if (optionalProjectFileFlag) {\n    supportingFiles.add(new SupportingFile(\"Build.cs.mustache\",unrealModuleName + \".Build.cs\"));\n    supportingFiles.add(new SupportingFile(\"module-header.mustache\",privateFolder,unrealModuleName + \"Module.h\"));\n    supportingFiles.add(new SupportingFile(\"module-source.mustache\",privateFolder,unrealModuleName + \"Module.cpp\"));\n  }\n  super.typeMapping=new HashMap<>();\n  typeMapping.clear();\n  typeMapping.put(\"integer\",\"int32\");\n  typeMapping.put(\"long\",\"int64\");\n  typeMapping.put(\"float\",\"float\");\n  typeMapping.put(\"number\",\"double\");\n  typeMapping.put(\"double\",\"double\");\n  typeMapping.put(\"string\",\"FString\");\n  typeMapping.put(\"byte\",\"uint8\");\n  typeMapping.put(\"binary\",\"TArray<uint8>\");\n  typeMapping.put(\"ByteArray\",\"TArray<uint8>\");\n  typeMapping.put(\"password\",\"FString\");\n  typeMapping.put(\"boolean\",\"bool\");\n  typeMapping.put(\"date\",\"FDateTime\");\n  typeMapping.put(\"Date\",\"FDateTime\");\n  typeMapping.put(\"date-time\",\"FDateTime\");\n  typeMapping.put(\"DateTime\",\"FDateTime\");\n  typeMapping.put(\"array\",\"TArray\");\n  typeMapping.put(\"list\",\"TArray\");\n  typeMapping.put(\"map\",\"TMap\");\n  typeMapping.put(\"object\",\"TSharedPtr<FJsonObject>\");\n  typeMapping.put(\"Object\",\"TSharedPtr<FJsonObject>\");\n  typeMapping.put(\"file\",\"HttpFileInput\");\n  typeMapping.put(\"UUID\",\"FGuid\");\n  typeMapping.put(\"AnyType\",\"TSharedPtr<FJsonValue>\");\n  importMapping=new HashMap<>();\n  importMapping.put(\"HttpFileInput\",\"#include \\\"\" + modelNamePrefix + \"Helpers.h\\\"\");\n  namespaces=new HashMap<>();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 440,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6603,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public CppUE4ClientCodegen(){\n  super();\n  generatorMetadata=GeneratorMetadata.newBuilder(generatorMetadata).stability(Stability.BETA).build();\n  outputFolder=\"generated-code/cpp-ue4\";\n  if (\"\".equals(modelNamePrefix)) {\n    modelNamePrefix=unrealModuleName;\n  }\n  modelTemplateFiles.put(\"model-header.mustache\",\".h\");\n  modelTemplateFiles.put(\"model-source.mustache\",\".cpp\");\n  apiTemplateFiles.put(\"api-header.mustache\",\".h\");\n  apiTemplateFiles.put(\"api-source.mustache\",\".cpp\");\n  apiTemplateFiles.put(\"api-operations-header.mustache\",\".h\");\n  apiTemplateFiles.put(\"api-operations-source.mustache\",\".cpp\");\n  embeddedTemplateDir=templateDir=\"cpp-ue4\";\n  addOption(CPP_NAMESPACE,CPP_NAMESPACE_DESC,this.cppNamespace);\n  addOption(UNREAL_MODULE_NAME,UNREAL_MODULE_NAME_DESC,this.unrealModuleName);\n  addSwitch(CodegenConstants.OPTIONAL_PROJECT_FILE,OPTIONAL_PROJECT_FILE_DESC,this.optionalProjectFileFlag);\n  additionalProperties.put(\"apiVersion\",apiVersion);\n  additionalProperties().put(\"modelNamePrefix\",modelNamePrefix);\n  additionalProperties().put(\"modelPackage\",modelPackage);\n  additionalProperties().put(\"apiPackage\",apiPackage);\n  additionalProperties().put(\"dllapi\",unrealModuleName.toUpperCase(Locale.ROOT) + \"_API\");\n  additionalProperties().put(\"unrealModuleName\",unrealModuleName);\n  additionalProperties.put(\"cppNamespace\",cppNamespace);\n  additionalProperties.put(\"unrealModuleName\",unrealModuleName);\n  languageSpecificPrimitives=new HashSet<>(Arrays.asList(\"bool\",\"int32\",\"int64\",\"float\",\"double\",\"FString\",\"FDateTime\",\"FGuid\",\"TArray\",\"TArray<uint8>\",\"TMap\",\"TSharedPtr<FJsonObject>\",\"TSharedPtr<FJsonValue>\"));\n  supportingFiles.add(new SupportingFile(\"model-base-header.mustache\",publicFolder,modelNamePrefix + \"BaseModel.h\"));\n  supportingFiles.add(new SupportingFile(\"model-base-source.mustache\",privateFolder,modelNamePrefix + \"BaseModel.cpp\"));\n  supportingFiles.add(new SupportingFile(\"helpers-header.mustache\",publicFolder,modelNamePrefix + \"Helpers.h\"));\n  supportingFiles.add(new SupportingFile(\"helpers-source.mustache\",privateFolder,modelNamePrefix + \"Helpers.cpp\"));\n  if (optionalProjectFileFlag) {\n    supportingFiles.add(new SupportingFile(\"Build.cs.mustache\",unrealModuleName + \".Build.cs\"));\n    supportingFiles.add(new SupportingFile(\"module-header.mustache\",privateFolder,unrealModuleName + \"Module.h\"));\n    supportingFiles.add(new SupportingFile(\"module-source.mustache\",privateFolder,unrealModuleName + \"Module.cpp\"));\n  }\n  super.typeMapping=new HashMap<>();\n  typeMapping.clear();\n  typeMapping.put(\"integer\",\"int32\");\n  typeMapping.put(\"long\",\"int64\");\n  typeMapping.put(\"float\",\"float\");\n  typeMapping.put(\"number\",\"double\");\n  typeMapping.put(\"double\",\"double\");\n  typeMapping.put(\"string\",\"FString\");\n  typeMapping.put(\"byte\",\"uint8\");\n  typeMapping.put(\"binary\",\"TArray<uint8>\");\n  typeMapping.put(\"ByteArray\",\"TArray<uint8>\");\n  typeMapping.put(\"password\",\"FString\");\n  typeMapping.put(\"boolean\",\"bool\");\n  typeMapping.put(\"date\",\"FDateTime\");\n  typeMapping.put(\"Date\",\"FDateTime\");\n  typeMapping.put(\"date-time\",\"FDateTime\");\n  typeMapping.put(\"DateTime\",\"FDateTime\");\n  typeMapping.put(\"array\",\"TArray\");\n  typeMapping.put(\"list\",\"TArray\");\n  typeMapping.put(\"map\",\"TMap\");\n  typeMapping.put(\"object\",\"TSharedPtr<FJsonObject>\");\n  typeMapping.put(\"Object\",\"TSharedPtr<FJsonObject>\");\n  typeMapping.put(\"file\",\"HttpFileInput\");\n  typeMapping.put(\"UUID\",\"FGuid\");\n  typeMapping.put(\"AnyType\",\"TSharedPtr<FJsonValue>\");\n  importMapping=new HashMap<>();\n  importMapping.put(\"HttpFileInput\",\"#include \\\"\" + modelNamePrefix + \"Helpers.h\\\"\");\n  namespaces=new HashMap<>();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 443,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 92
      },
      "nodeContext" : "importMapping.put(\"HttpFileInput\",\"#include \\\"\" + modelNamePrefix + \"Helpers.h\\\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 192,
    "startColumnNumber" : 43,
    "endLineNumber" : 192,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}