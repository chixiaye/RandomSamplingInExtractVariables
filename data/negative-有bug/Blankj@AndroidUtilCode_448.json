{
  "id" : 448,
  "expression" : "len",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/LogUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "len",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 253,
      "startColumnNumber" : 59,
      "endLineNumber" : 253,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 253,
        "startColumnNumber" : 55,
        "endLineNumber" : 253,
        "endColumnNumber" : 62
      },
      "nodeContext" : "i < len",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 253,
        "startColumnNumber" : 16,
        "endLineNumber" : 262,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0, len=contents.length; i < len; ++i) {\n  Object content=contents[i];\n  sb.append(ARGS).append(\"[\").append(i).append(\"]\").append(\" = \").append(content == null ? NULL : content.toString()).append(LINE_SEP);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 251,
        "startColumnNumber" : 19,
        "endLineNumber" : 264,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder();\n  for (int i=0, len=contents.length; i < len; ++i) {\n    Object content=contents[i];\n    sb.append(ARGS).append(\"[\").append(i).append(\"]\").append(\" = \").append(content == null ? NULL : content.toString()).append(LINE_SEP);\n  }\n  body=sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 919,
        "startLineNumber" : 243,
        "startColumnNumber" : 12,
        "endLineNumber" : 264,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (contents.length == 1) {\n  Object object=contents[0];\n  body=object == null ? NULL : object.toString();\n  if (type == JSON) {\n    body=formatJson(body);\n  }\n else   if (type == XML) {\n    body=formatXml(body);\n  }\n}\n else {\n  StringBuilder sb=new StringBuilder();\n  for (int i=0, len=contents.length; i < len; ++i) {\n    Object content=contents[i];\n    sb.append(ARGS).append(\"[\").append(i).append(\"]\").append(\" = \").append(content == null ? NULL : content.toString()).append(LINE_SEP);\n  }\n  body=sb.toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 118,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 242,
        "startColumnNumber" : 30,
        "endLineNumber" : 265,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (contents.length == 1) {\n    Object object=contents[0];\n    body=object == null ? NULL : object.toString();\n    if (type == JSON) {\n      body=formatJson(body);\n    }\n else     if (type == XML) {\n      body=formatXml(body);\n    }\n  }\n else {\n    StringBuilder sb=new StringBuilder();\n    for (int i=0, len=contents.length; i < len; ++i) {\n      Object content=contents[i];\n      sb.append(ARGS).append(\"[\").append(i).append(\"]\").append(\" = \").append(content == null ? NULL : content.toString()).append(LINE_SEP);\n    }\n    body=sb.toString();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 242,
        "startColumnNumber" : 8,
        "endLineNumber" : 265,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (contents != null) {\n  if (contents.length == 1) {\n    Object object=contents[0];\n    body=object == null ? NULL : object.toString();\n    if (type == JSON) {\n      body=formatJson(body);\n    }\n else     if (type == XML) {\n      body=formatXml(body);\n    }\n  }\n else {\n    StringBuilder sb=new StringBuilder();\n    for (int i=0, len=contents.length; i < len; ++i) {\n      Object content=contents[i];\n      sb.append(ARGS).append(\"[\").append(i).append(\"]\").append(\" = \").append(content == null ? NULL : content.toString()).append(LINE_SEP);\n    }\n    body=sb.toString();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 123,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 240,
        "startColumnNumber" : 80,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String body=NULL_TIPS;\n  if (contents != null) {\n    if (contents.length == 1) {\n      Object object=contents[0];\n      body=object == null ? NULL : object.toString();\n      if (type == JSON) {\n        body=formatJson(body);\n      }\n else       if (type == XML) {\n        body=formatXml(body);\n      }\n    }\n else {\n      StringBuilder sb=new StringBuilder();\n      for (int i=0, len=contents.length; i < len; ++i) {\n        Object content=contents[i];\n        sb.append(ARGS).append(\"[\").append(i).append(\"]\").append(\" = \").append(content == null ? NULL : content.toString()).append(LINE_SEP);\n      }\n      body=sb.toString();\n    }\n  }\n  return body;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1111,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static String processBody(final int type,final Object... contents){\n  String body=NULL_TIPS;\n  if (contents != null) {\n    if (contents.length == 1) {\n      Object object=contents[0];\n      body=object == null ? NULL : object.toString();\n      if (type == JSON) {\n        body=formatJson(body);\n      }\n else       if (type == XML) {\n        body=formatXml(body);\n      }\n    }\n else {\n      StringBuilder sb=new StringBuilder();\n      for (int i=0, len=contents.length; i < len; ++i) {\n        Object content=contents[i];\n        sb.append(ARGS).append(\"[\").append(i).append(\"]\").append(\" = \").append(content == null ? NULL : content.toString()).append(LINE_SEP);\n      }\n      body=sb.toString();\n    }\n  }\n  return body;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 253,
        "startColumnNumber" : 55,
        "endLineNumber" : 253,
        "endColumnNumber" : 62
      },
      "nodeContext" : "i < len",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 253,
    "startColumnNumber" : 59,
    "endLineNumber" : 253,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}