{
  "id" : 92,
  "expression" : "org.eclipse.microprofile.health",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/mongodb-client/deployment/src/test/java/io/quarkus/mongodb/DefaultAndNamedMongoClientConfigTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "org.eclipse.microprofile.health",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 67,
      "startColumnNumber" : 8,
      "endLineNumber" : 67,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 59
      },
      "nodeContext" : "org.eclipse.microprofile.health.HealthCheckResponse",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 59
      },
      "nodeContext" : "org.eclipse.microprofile.health.HealthCheckResponse",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 85
      },
      "nodeContext" : "org.eclipse.microprofile.health.HealthCheckResponse response=health.call();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 55,
        "startColumnNumber" : 47,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertProperConnection(client,27018);\n  assertProperConnection(client2,27019);\n  assertThat(client.listDatabases().first()).isNotEmpty();\n  assertThat(client2.listDatabases().first()).isNotEmpty();\n  assertThat(Arc.container().instance(MongoClient.class).get()).isNotNull();\n  assertThat(Arc.container().instance(MongoClient.class,Default.Literal.INSTANCE).get()).isNotNull();\n  assertThat(Arc.container().instance(MongoClient.class,NamedLiteral.of(\"cluster2\")).get()).isNotNull();\n  assertThat(Arc.container().instance(MongoClient.class,NamedLiteral.of(\"cluster3\")).get()).isNull();\n  org.eclipse.microprofile.health.HealthCheckResponse response=health.call();\n  assertThat(response.getStatus()).isEqualTo(HealthCheckResponse.Status.UP);\n  assertThat(response.getData()).isNotEmpty();\n  assertThat(response.getData().get()).hasSize(2).contains(entry(\"<default>\",\"OK\"),entry(\"cluster2\",\"OK\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNamedDataSourceInjection(){\n  assertProperConnection(client,27018);\n  assertProperConnection(client2,27019);\n  assertThat(client.listDatabases().first()).isNotEmpty();\n  assertThat(client2.listDatabases().first()).isNotEmpty();\n  assertThat(Arc.container().instance(MongoClient.class).get()).isNotNull();\n  assertThat(Arc.container().instance(MongoClient.class,Default.Literal.INSTANCE).get()).isNotNull();\n  assertThat(Arc.container().instance(MongoClient.class,NamedLiteral.of(\"cluster2\")).get()).isNotNull();\n  assertThat(Arc.container().instance(MongoClient.class,NamedLiteral.of(\"cluster3\")).get()).isNull();\n  org.eclipse.microprofile.health.HealthCheckResponse response=health.call();\n  assertThat(response.getStatus()).isEqualTo(HealthCheckResponse.Status.UP);\n  assertThat(response.getData()).isNotEmpty();\n  assertThat(response.getData().get()).hasSize(2).contains(entry(\"<default>\",\"OK\"),entry(\"cluster2\",\"OK\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 85
      },
      "nodeContext" : "org.eclipse.microprofile.health.HealthCheckResponse response=health.call();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "org.eclipse"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 67,
    "startColumnNumber" : 8,
    "endLineNumber" : 67,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}