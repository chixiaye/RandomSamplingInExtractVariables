{
  "id" : 12,
  "expression" : "jitter",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/utils/ExponentialBackoffTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jitter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 33,
      "startColumnNumber" : 48,
      "endLineNumber" : 33,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 32,
        "startColumnNumber" : 48,
        "endLineNumber" : 34,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 32,
        "startColumnNumber" : 27,
        "endLineNumber" : 34,
        "endColumnNumber" : 9
      },
      "nodeContext" : "exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 10
      },
      "nodeContext" : "ExponentialBackoff exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 27,
        "startColumnNumber" : 41,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long scaleFactor=100;\n  int ratio=2;\n  long backoffMax=2000;\n  double jitter=0.2;\n  ExponentialBackoff exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter);\n  for (int i=0; i <= 100; i++) {\n    for (int attempts=0; attempts <= 10; attempts++) {\n      if (attempts <= 4) {\n        assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n      }\n else {\n        assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testExponentialBackoff(){\n  long scaleFactor=100;\n  int ratio=2;\n  long backoffMax=2000;\n  double jitter=0.2;\n  ExponentialBackoff exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter);\n  for (int i=0; i <= 100; i++) {\n    for (int attempts=0; attempts <= 10; attempts++) {\n      if (attempts <= 4) {\n        assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n      }\n else {\n        assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 32,
        "startColumnNumber" : 48,
        "endLineNumber" : 34,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "jitter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 41,
      "startColumnNumber" : 70,
      "endLineNumber" : 41,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 41,
        "startColumnNumber" : 28,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "scaleFactor * Math.pow(ratio,attempts) * jitter",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 39,
        "startColumnNumber" : 20,
        "endLineNumber" : 41,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 39,
        "startColumnNumber" : 20,
        "endLineNumber" : 41,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 38,
        "startColumnNumber" : 35,
        "endLineNumber" : 42,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (attempts <= 4) {\n  assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n}\n else {\n  assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 37,
        "startColumnNumber" : 63,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (attempts <= 4) {\n    assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n  }\n else {\n    assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int attempts=0; attempts <= 10; attempts++) {\n  if (attempts <= 4) {\n    assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n  }\n else {\n    assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 36,
        "startColumnNumber" : 39,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int attempts=0; attempts <= 10; attempts++) {\n    if (attempts <= 4) {\n      assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n    }\n else {\n      assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i <= 100; i++) {\n  for (int attempts=0; attempts <= 10; attempts++) {\n    if (attempts <= 4) {\n      assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n    }\n else {\n      assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 27,
        "startColumnNumber" : 41,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long scaleFactor=100;\n  int ratio=2;\n  long backoffMax=2000;\n  double jitter=0.2;\n  ExponentialBackoff exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter);\n  for (int i=0; i <= 100; i++) {\n    for (int attempts=0; attempts <= 10; attempts++) {\n      if (attempts <= 4) {\n        assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n      }\n else {\n        assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testExponentialBackoff(){\n  long scaleFactor=100;\n  int ratio=2;\n  long backoffMax=2000;\n  double jitter=0.2;\n  ExponentialBackoff exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter);\n  for (int i=0; i <= 100; i++) {\n    for (int attempts=0; attempts <= 10; attempts++) {\n      if (attempts <= 4) {\n        assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n      }\n else {\n        assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 41,
        "startColumnNumber" : 28,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "scaleFactor * Math.pow(ratio,attempts) * jitter",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "jitter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 43,
      "startColumnNumber" : 89,
      "endLineNumber" : 43,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 43,
        "startColumnNumber" : 85,
        "endLineNumber" : 43,
        "endColumnNumber" : 95
      },
      "nodeContext" : "1 + jitter",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 43,
        "startColumnNumber" : 84,
        "endLineNumber" : 43,
        "endColumnNumber" : 96
      },
      "nodeContext" : "(1 + jitter)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 43,
        "startColumnNumber" : 71,
        "endLineNumber" : 43,
        "endColumnNumber" : 96
      },
      "nodeContext" : "backoffMax * (1 + jitter)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 43,
        "startColumnNumber" : 31,
        "endLineNumber" : 43,
        "endColumnNumber" : 96
      },
      "nodeContext" : "exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 97
      },
      "nodeContext" : "assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 42,
        "startColumnNumber" : 23,
        "endLineNumber" : 44,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (attempts <= 4) {\n  assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n}\n else {\n  assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 37,
        "startColumnNumber" : 63,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (attempts <= 4) {\n    assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n  }\n else {\n    assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int attempts=0; attempts <= 10; attempts++) {\n  if (attempts <= 4) {\n    assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n  }\n else {\n    assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 36,
        "startColumnNumber" : 39,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int attempts=0; attempts <= 10; attempts++) {\n    if (attempts <= 4) {\n      assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n    }\n else {\n      assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i <= 100; i++) {\n  for (int attempts=0; attempts <= 10; attempts++) {\n    if (attempts <= 4) {\n      assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n    }\n else {\n      assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 27,
        "startColumnNumber" : 41,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long scaleFactor=100;\n  int ratio=2;\n  long backoffMax=2000;\n  double jitter=0.2;\n  ExponentialBackoff exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter);\n  for (int i=0; i <= 100; i++) {\n    for (int attempts=0; attempts <= 10; attempts++) {\n      if (attempts <= 4) {\n        assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n      }\n else {\n        assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testExponentialBackoff(){\n  long scaleFactor=100;\n  int ratio=2;\n  long backoffMax=2000;\n  double jitter=0.2;\n  ExponentialBackoff exponentialBackoff=new ExponentialBackoff(scaleFactor,ratio,backoffMax,jitter);\n  for (int i=0; i <= 100; i++) {\n    for (int attempts=0; attempts <= 10; attempts++) {\n      if (attempts <= 4) {\n        assertEquals(scaleFactor * Math.pow(ratio,attempts),exponentialBackoff.backoff(attempts),scaleFactor * Math.pow(ratio,attempts) * jitter);\n      }\n else {\n        assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertTrue(exponentialBackoff.backoff(attempts) <= backoffMax * (1 + jitter));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 33,
    "startColumnNumber" : 48,
    "endLineNumber" : 33,
    "endColumnNumber" : 54
  }, {
    "charLength" : 6,
    "startLineNumber" : 41,
    "startColumnNumber" : 70,
    "endLineNumber" : 41,
    "endColumnNumber" : 76
  }, {
    "charLength" : 6,
    "startLineNumber" : 43,
    "startColumnNumber" : 89,
    "endLineNumber" : 43,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}