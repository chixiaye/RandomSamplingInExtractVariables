{
  "id" : 237,
  "expression" : "activitiesHolder.getEnclosingEBeanHolder(element)",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/TraceProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "activitiesHolder.getEnclosingEBeanHolder(element)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 50,
      "startColumnNumber" : 23,
      "endLineNumber" : 50,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 50,
        "startColumnNumber" : 14,
        "endLineNumber" : 50,
        "endColumnNumber" : 72
      },
      "nodeContext" : "holder=activitiesHolder.getEnclosingEBeanHolder(element)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 73
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1951,
        "startLineNumber" : 49,
        "startColumnNumber" : 91,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String tag=extractTag(executableElement);\n  int level=executableElement.getAnnotation(Trace.class).level();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JClass systemClass=holder.refClass(System.class);\n  JMethod method=helper.overrideAnnotatedMethod(executableElement,holder);\n  JBlock previousMethodBody=helper.removeBody(method);\n  JBlock methodBody=method.body();\n  JInvocation isLoggableInvocation=logClass.staticInvoke(\"isLoggable\");\n  isLoggableInvocation.arg(JExpr.lit(tag)).arg(logLevelFromInt(level,logClass));\n  JConditional ifStatement=methodBody._if(isLoggableInvocation);\n  JInvocation currentTimeInvoke=systemClass.staticInvoke(\"currentTimeMillis\");\n  JBlock _thenBody=ifStatement._then();\n  JVar startDeclaration=_thenBody.decl(codeModel.LONG,\"start\",currentTimeInvoke);\n  String methodName=\"[\" + element.toString() + \"]\";\n  String logMethodName=logMethodNameFromLevel(level);\n  JInvocation logEnterInvoke=logClass.staticInvoke(logMethodName);\n  logEnterInvoke.arg(tag);\n  JExpression enterMessage=JExpr.lit(\"Entering \" + methodName);\n  logEnterInvoke.arg(enterMessage);\n  _thenBody.add(logEnterInvoke);\n  JTryBlock tryBlock=_thenBody._try();\n  tryBlock.body().add(previousMethodBody);\n  JBlock finallyBlock=tryBlock._finally();\n  JVar durationDeclaration=finallyBlock.decl(codeModel.LONG,\"duration\",currentTimeInvoke.minus(startDeclaration));\n  JInvocation logExitInvoke=logClass.staticInvoke(logMethodName);\n  logExitInvoke.arg(tag);\n  JExpression exitMessage=JExpr.lit(\"Exiting \" + methodName + \", duration in ms: \").plus(durationDeclaration);\n  logExitInvoke.arg(exitMessage);\n  finallyBlock.add(logExitInvoke);\n  JBlock elseBlock=ifStatement._else();\n  elseBlock.add(previousMethodBody);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2052,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  ExecutableElement executableElement=(ExecutableElement)element;\n  String tag=extractTag(executableElement);\n  int level=executableElement.getAnnotation(Trace.class).level();\n  JClass logClass=holder.refClass(\"android.util.Log\");\n  JClass systemClass=holder.refClass(System.class);\n  JMethod method=helper.overrideAnnotatedMethod(executableElement,holder);\n  JBlock previousMethodBody=helper.removeBody(method);\n  JBlock methodBody=method.body();\n  JInvocation isLoggableInvocation=logClass.staticInvoke(\"isLoggable\");\n  isLoggableInvocation.arg(JExpr.lit(tag)).arg(logLevelFromInt(level,logClass));\n  JConditional ifStatement=methodBody._if(isLoggableInvocation);\n  JInvocation currentTimeInvoke=systemClass.staticInvoke(\"currentTimeMillis\");\n  JBlock _thenBody=ifStatement._then();\n  JVar startDeclaration=_thenBody.decl(codeModel.LONG,\"start\",currentTimeInvoke);\n  String methodName=\"[\" + element.toString() + \"]\";\n  String logMethodName=logMethodNameFromLevel(level);\n  JInvocation logEnterInvoke=logClass.staticInvoke(logMethodName);\n  logEnterInvoke.arg(tag);\n  JExpression enterMessage=JExpr.lit(\"Entering \" + methodName);\n  logEnterInvoke.arg(enterMessage);\n  _thenBody.add(logEnterInvoke);\n  JTryBlock tryBlock=_thenBody._try();\n  tryBlock.body().add(previousMethodBody);\n  JBlock finallyBlock=tryBlock._finally();\n  JVar durationDeclaration=finallyBlock.decl(codeModel.LONG,\"duration\",currentTimeInvoke.minus(startDeclaration));\n  JInvocation logExitInvoke=logClass.staticInvoke(logMethodName);\n  logExitInvoke.arg(tag);\n  JExpression exitMessage=JExpr.lit(\"Exiting \" + methodName + \", duration in ms: \").plus(durationDeclaration);\n  logExitInvoke.arg(exitMessage);\n  finallyBlock.add(logExitInvoke);\n  JBlock elseBlock=ifStatement._else();\n  elseBlock.add(previousMethodBody);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 73
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "com.googlecode.androidannotations.processing.EBeanHolder"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 50,
    "startColumnNumber" : 23,
    "endLineNumber" : 50,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}