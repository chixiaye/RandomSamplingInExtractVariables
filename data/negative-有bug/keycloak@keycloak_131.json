{
  "id" : 131,
  "expression" : "allowedOrigins.contains(origin)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/adapters/oidc/adapter-core/src/main/java/org/keycloak/adapters/AuthenticatedActionsHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "allowedOrigins.contains(origin)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 126,
      "startColumnNumber" : 77,
      "endLineNumber" : 126,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 126,
        "startColumnNumber" : 76,
        "endLineNumber" : 126,
        "endColumnNumber" : 108
      },
      "nodeContext" : "!allowedOrigins.contains(origin)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 126,
        "startColumnNumber" : 43,
        "endLineNumber" : 126,
        "endColumnNumber" : 108
      },
      "nodeContext" : "!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 126,
        "startColumnNumber" : 42,
        "endLineNumber" : 126,
        "endColumnNumber" : 109
      },
      "nodeContext" : "(!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 126,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 109
      },
      "nodeContext" : "allowedOrigins == null || (!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (allowedOrigins == null || (!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))) {\n  if (allowedOrigins == null) {\n    log.debugv(\"allowedOrigins was null in token\");\n  }\n else {\n    log.debugv(\"allowedOrigins did not contain origin\");\n  }\n  facade.getResponse().sendError(403);\n  facade.getResponse().end();\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 120,
        "startColumnNumber" : 88,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AccessToken token=securityContext.getToken();\n  Set<String> allowedOrigins=token.getAllowedOrigins();\n  log.debugf(\"Allowed origins in token: %s\",allowedOrigins);\n  if (allowedOrigins == null || (!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))) {\n    if (allowedOrigins == null) {\n      log.debugv(\"allowedOrigins was null in token\");\n    }\n else {\n      log.debugv(\"allowedOrigins did not contain origin\");\n    }\n    facade.getResponse().sendError(403);\n    facade.getResponse().end();\n    return true;\n  }\n  log.debugv(\"returning origin: {0}\",origin);\n  facade.getResponse().setStatus(200);\n  facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_ORIGIN,origin);\n  facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS,\"true\");\n  if (exposeHeaders != null) {\n    facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_EXPOSE_HEADERS,exposeHeaders);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (securityContext != null && origin != null && !origin.equals(requestOrigin)) {\n  AccessToken token=securityContext.getToken();\n  Set<String> allowedOrigins=token.getAllowedOrigins();\n  log.debugf(\"Allowed origins in token: %s\",allowedOrigins);\n  if (allowedOrigins == null || (!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))) {\n    if (allowedOrigins == null) {\n      log.debugv(\"allowedOrigins was null in token\");\n    }\n else {\n      log.debugv(\"allowedOrigins did not contain origin\");\n    }\n    facade.getResponse().sendError(403);\n    facade.getResponse().end();\n    return true;\n  }\n  log.debugv(\"returning origin: {0}\",origin);\n  facade.getResponse().setStatus(200);\n  facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_ORIGIN,origin);\n  facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS,\"true\");\n  if (exposeHeaders != null) {\n    facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_EXPOSE_HEADERS,exposeHeaders);\n  }\n}\n else {\n  log.debugv(\"cors validation not needed as we are not a secure session or origin header was null: {0}\",facade.getRequest().getURI());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 101,
        "startColumnNumber" : 37,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!deployment.isCors())   return false;\n  KeycloakSecurityContext securityContext=facade.getSecurityContext();\n  String origin=facade.getRequest().getHeader(CorsHeaders.ORIGIN);\n  origin=\"null\".equals(origin) ? null : origin;\n  String exposeHeaders=deployment.getCorsExposedHeaders();\n  if (deployment.getPolicyEnforcer() != null) {\n    if (exposeHeaders != null) {\n      exposeHeaders+=\",\";\n    }\n else {\n      exposeHeaders=\"\";\n    }\n    exposeHeaders+=\"WWW-Authenticate\";\n  }\n  String requestOrigin=UriUtils.getOrigin(facade.getRequest().getURI());\n  log.debugv(\"Origin: {0} uri: {1}\",origin,facade.getRequest().getURI());\n  if (securityContext != null && origin != null && !origin.equals(requestOrigin)) {\n    AccessToken token=securityContext.getToken();\n    Set<String> allowedOrigins=token.getAllowedOrigins();\n    log.debugf(\"Allowed origins in token: %s\",allowedOrigins);\n    if (allowedOrigins == null || (!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))) {\n      if (allowedOrigins == null) {\n        log.debugv(\"allowedOrigins was null in token\");\n      }\n else {\n        log.debugv(\"allowedOrigins did not contain origin\");\n      }\n      facade.getResponse().sendError(403);\n      facade.getResponse().end();\n      return true;\n    }\n    log.debugv(\"returning origin: {0}\",origin);\n    facade.getResponse().setStatus(200);\n    facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_ORIGIN,origin);\n    facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS,\"true\");\n    if (exposeHeaders != null) {\n      facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_EXPOSE_HEADERS,exposeHeaders);\n    }\n  }\n else {\n    log.debugv(\"cors validation not needed as we are not a secure session or origin header was null: {0}\",facade.getRequest().getURI());\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2222,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected boolean corsRequest(){\n  if (!deployment.isCors())   return false;\n  KeycloakSecurityContext securityContext=facade.getSecurityContext();\n  String origin=facade.getRequest().getHeader(CorsHeaders.ORIGIN);\n  origin=\"null\".equals(origin) ? null : origin;\n  String exposeHeaders=deployment.getCorsExposedHeaders();\n  if (deployment.getPolicyEnforcer() != null) {\n    if (exposeHeaders != null) {\n      exposeHeaders+=\",\";\n    }\n else {\n      exposeHeaders=\"\";\n    }\n    exposeHeaders+=\"WWW-Authenticate\";\n  }\n  String requestOrigin=UriUtils.getOrigin(facade.getRequest().getURI());\n  log.debugv(\"Origin: {0} uri: {1}\",origin,facade.getRequest().getURI());\n  if (securityContext != null && origin != null && !origin.equals(requestOrigin)) {\n    AccessToken token=securityContext.getToken();\n    Set<String> allowedOrigins=token.getAllowedOrigins();\n    log.debugf(\"Allowed origins in token: %s\",allowedOrigins);\n    if (allowedOrigins == null || (!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))) {\n      if (allowedOrigins == null) {\n        log.debugv(\"allowedOrigins was null in token\");\n      }\n else {\n        log.debugv(\"allowedOrigins did not contain origin\");\n      }\n      facade.getResponse().sendError(403);\n      facade.getResponse().end();\n      return true;\n    }\n    log.debugv(\"returning origin: {0}\",origin);\n    facade.getResponse().setStatus(200);\n    facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_ORIGIN,origin);\n    facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS,\"true\");\n    if (exposeHeaders != null) {\n      facade.getResponse().setHeader(CorsHeaders.ACCESS_CONTROL_EXPOSE_HEADERS,exposeHeaders);\n    }\n  }\n else {\n    log.debugv(\"cors validation not needed as we are not a secure session or origin header was null: {0}\",facade.getRequest().getURI());\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 126,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 109
      },
      "nodeContext" : "allowedOrigins == null || (!allowedOrigins.contains(\"*\") && !allowedOrigins.contains(origin))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 126,
    "startColumnNumber" : 77,
    "endLineNumber" : 126,
    "endColumnNumber" : 108
  } ],
  "layoutRelationDataList" : [ ]
}