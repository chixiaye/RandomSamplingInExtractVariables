{
  "id" : 91,
  "expression" : "\"fakegen\"",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/tests/src/test/java/power/ItemLiquidGeneratorTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"fakegen\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 37,
      "startColumnNumber" : 106,
      "endLineNumber" : 37,
      "endColumnNumber" : 115
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 37,
        "startColumnNumber" : 106,
        "endLineNumber" : 37,
        "endColumnNumber" : 135
      },
      "nodeContext" : "\"fakegen\" + System.nanoTime()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 37,
        "startColumnNumber" : 20,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new ItemLiquidGenerator(inputType != InputType.liquids,inputType != InputType.items,\"fakegen\" + System.nanoTime()){\n{\n    powerProduction=0.1f;\n    itemDuration=fakeItemDuration;\n    maxLiquidGenerate=maximumLiquidUsage;\n    buildType=ItemLiquidGeneratorBuild::new;\n  }\n  @Override public float getItemEfficiency(  Item item){\n    return item.flammability;\n  }\n  @Override public float getLiquidEfficiency(  Liquid liquid){\n    return liquid.flammability;\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "generator=new ItemLiquidGenerator(inputType != InputType.liquids,inputType != InputType.items,\"fakegen\" + System.nanoTime()){\n{\n    powerProduction=0.1f;\n    itemDuration=fakeItemDuration;\n    maxLiquidGenerate=maximumLiquidUsage;\n    buildType=ItemLiquidGeneratorBuild::new;\n  }\n  @Override public float getItemEfficiency(  Item item){\n    return item.flammability;\n  }\n  @Override public float getLiquidEfficiency(  Liquid liquid){\n    return liquid.flammability;\n  }\n}\n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 10
      },
      "nodeContext" : "generator=new ItemLiquidGenerator(inputType != InputType.liquids,inputType != InputType.items,\"fakegen\" + System.nanoTime()){\n{\n    powerProduction=0.1f;\n    itemDuration=fakeItemDuration;\n    maxLiquidGenerate=maximumLiquidUsage;\n    buildType=ItemLiquidGeneratorBuild::new;\n  }\n  @Override public float getItemEfficiency(  Item item){\n    return item.flammability;\n  }\n  @Override public float getLiquidEfficiency(  Liquid liquid){\n    return liquid.flammability;\n  }\n}\n;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 52,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Vars.state=new GameState();\n  Vars.state.rules=new Rules();\n  generator=new ItemLiquidGenerator(inputType != InputType.liquids,inputType != InputType.items,\"fakegen\" + System.nanoTime()){\n{\n      powerProduction=0.1f;\n      itemDuration=fakeItemDuration;\n      maxLiquidGenerate=maximumLiquidUsage;\n      buildType=ItemLiquidGeneratorBuild::new;\n    }\n    @Override public float getItemEfficiency(    Item item){\n      return item.flammability;\n    }\n    @Override public float getLiquidEfficiency(    Liquid liquid){\n      return liquid.flammability;\n    }\n  }\n;\n  tile=createFakeTile(0,0,generator);\n  entity=(ItemLiquidGeneratorBuild)tile.build;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void createGenerator(InputType inputType){\n  Vars.state=new GameState();\n  Vars.state.rules=new Rules();\n  generator=new ItemLiquidGenerator(inputType != InputType.liquids,inputType != InputType.items,\"fakegen\" + System.nanoTime()){\n{\n      powerProduction=0.1f;\n      itemDuration=fakeItemDuration;\n      maxLiquidGenerate=maximumLiquidUsage;\n      buildType=ItemLiquidGeneratorBuild::new;\n    }\n    @Override public float getItemEfficiency(    Item item){\n      return item.flammability;\n    }\n    @Override public float getLiquidEfficiency(    Liquid liquid){\n      return liquid.flammability;\n    }\n  }\n;\n  tile=createFakeTile(0,0,generator);\n  entity=(ItemLiquidGeneratorBuild)tile.build;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 37,
        "startColumnNumber" : 106,
        "endLineNumber" : 37,
        "endColumnNumber" : 135
      },
      "nodeContext" : "\"fakegen\" + System.nanoTime()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 37,
    "startColumnNumber" : 106,
    "endLineNumber" : 37,
    "endColumnNumber" : 115
  } ],
  "layoutRelationDataList" : [ ]
}