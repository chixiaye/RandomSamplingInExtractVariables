{
  "id" : 506,
  "expression" : "new File(url.toURI().getRawPath())",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/security/oauthbearer/secured/ConfigurationUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new File(url.toURI().getRawPath())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 72,
      "startColumnNumber" : 19,
      "endLineNumber" : 72,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 72,
        "startColumnNumber" : 19,
        "endLineNumber" : 72,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new File(url.toURI().getRawPath()).getAbsoluteFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 71
      },
      "nodeContext" : "file=new File(url.toURI().getRawPath()).getAbsoluteFile()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 72
      },
      "nodeContext" : "file=new File(url.toURI().getRawPath()).getAbsoluteFile();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  file=new File(url.toURI().getRawPath()).getAbsoluteFile();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  file=new File(url.toURI().getRawPath()).getAbsoluteFile();\n}\n catch (URISyntaxException e) {\n  throw new ConfigException(name,url.toString(),String.format(\"The OAuth configuration option %s contains a URL (%s) that is malformed: %s\",name,url,e.getMessage()));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 67,
        "startColumnNumber" : 42,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=validateUrl(name);\n  File file;\n  try {\n    file=new File(url.toURI().getRawPath()).getAbsoluteFile();\n  }\n catch (  URISyntaxException e) {\n    throw new ConfigException(name,url.toString(),String.format(\"The OAuth configuration option %s contains a URL (%s) that is malformed: %s\",name,url,e.getMessage()));\n  }\n  if (!file.exists())   throw new ConfigException(name,file,String.format(\"The OAuth configuration option %s contains a file (%s) that doesn't exist\",name,file));\n  if (!file.canRead())   throw new ConfigException(name,file,String.format(\"The OAuth configuration option %s contains a file (%s) that doesn't have read permission\",name,file));\n  if (file.isDirectory())   throw new ConfigException(name,file,String.format(\"The OAuth configuration option %s references a directory (%s), not a file\",name,file));\n  return file.toPath();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Validates that, if a value is supplied, is a file that: <li> <ul>exists</ul> <ul>has read permission</ul> <ul>points to a file</ul> </li> If the value is null or an empty string, it is assumed to be an \"empty\" value and thus. ignored. Any whitespace is trimmed off of the beginning and end.\n */\npublic Path validateFile(String name){\n  URL url=validateUrl(name);\n  File file;\n  try {\n    file=new File(url.toURI().getRawPath()).getAbsoluteFile();\n  }\n catch (  URISyntaxException e) {\n    throw new ConfigException(name,url.toString(),String.format(\"The OAuth configuration option %s contains a URL (%s) that is malformed: %s\",name,url,e.getMessage()));\n  }\n  if (!file.exists())   throw new ConfigException(name,file,String.format(\"The OAuth configuration option %s contains a file (%s) that doesn't exist\",name,file));\n  if (!file.canRead())   throw new ConfigException(name,file,String.format(\"The OAuth configuration option %s contains a file (%s) that doesn't have read permission\",name,file));\n  if (file.isDirectory())   throw new ConfigException(name,file,String.format(\"The OAuth configuration option %s references a directory (%s), not a file\",name,file));\n  return file.toPath();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 72
      },
      "nodeContext" : "file=new File(url.toURI().getRawPath()).getAbsoluteFile();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 72,
    "startColumnNumber" : 19,
    "endLineNumber" : 72,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}