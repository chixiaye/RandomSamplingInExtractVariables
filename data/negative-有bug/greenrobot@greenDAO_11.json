{
  "id" : 11,
  "expression" : "uncached",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/query/LazyListTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "uncached",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 124,
      "startColumnNumber" : 16,
      "endLineNumber" : 124,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (uncached) {\n  assertNull(listLazy.peek(i));\n}\n else {\n  assertNotNull(listLazy.peek(i));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 109,
        "startColumnNumber" : 39,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(iterator.hasNext());\n  assertEquals(i > 0,iterator.hasPrevious());\n  assertEquals(i,iterator.nextIndex());\n  assertEquals(i - 1,iterator.previousIndex());\n  if (i > 0) {\n    TestEntity entityPrevious=list.get(i - 1);\n    assertEquals(entityPrevious.getId(),iterator.previous().getId());\n    iterator.next();\n  }\n  TestEntity entity=list.get(i);\n  assertNull(listLazy.peek(i));\n  TestEntity lazyEntity=iterator.next();\n  if (uncached) {\n    assertNull(listLazy.peek(i));\n  }\n else {\n    assertNotNull(listLazy.peek(i));\n  }\n  assertEquals(entity.getId(),lazyEntity.getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  assertTrue(iterator.hasNext());\n  assertEquals(i > 0,iterator.hasPrevious());\n  assertEquals(i,iterator.nextIndex());\n  assertEquals(i - 1,iterator.previousIndex());\n  if (i > 0) {\n    TestEntity entityPrevious=list.get(i - 1);\n    assertEquals(entityPrevious.getId(),iterator.previous().getId());\n    iterator.next();\n  }\n  TestEntity entity=list.get(i);\n  assertNull(listLazy.peek(i));\n  TestEntity lazyEntity=iterator.next();\n  if (uncached) {\n    assertNull(listLazy.peek(i));\n  }\n else {\n    assertNotNull(listLazy.peek(i));\n  }\n  assertEquals(entity.getId(),lazyEntity.getId());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 125,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 100,
        "startColumnNumber" : 109,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ListIterator<TestEntity> iterator=listLazy.listIterator();\n  try {\n    iterator.previous();\n    fail(\"previous should throw here\");\n  }\n catch (  NoSuchElementException expected) {\n  }\n  int size=list.size();\n  for (int i=0; i < size; i++) {\n    assertTrue(iterator.hasNext());\n    assertEquals(i > 0,iterator.hasPrevious());\n    assertEquals(i,iterator.nextIndex());\n    assertEquals(i - 1,iterator.previousIndex());\n    if (i > 0) {\n      TestEntity entityPrevious=list.get(i - 1);\n      assertEquals(entityPrevious.getId(),iterator.previous().getId());\n      iterator.next();\n    }\n    TestEntity entity=list.get(i);\n    assertNull(listLazy.peek(i));\n    TestEntity lazyEntity=iterator.next();\n    if (uncached) {\n      assertNull(listLazy.peek(i));\n    }\n else {\n      assertNotNull(listLazy.peek(i));\n    }\n    assertEquals(entity.getId(),lazyEntity.getId());\n  }\n  assertFalse(iterator.hasNext());\n  try {\n    iterator.next();\n    fail(\"next should throw here\");\n  }\n catch (  NoSuchElementException expected) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void testIterator(ArrayList<TestEntity> list,LazyList<TestEntity> listLazy,boolean uncached){\n  ListIterator<TestEntity> iterator=listLazy.listIterator();\n  try {\n    iterator.previous();\n    fail(\"previous should throw here\");\n  }\n catch (  NoSuchElementException expected) {\n  }\n  int size=list.size();\n  for (int i=0; i < size; i++) {\n    assertTrue(iterator.hasNext());\n    assertEquals(i > 0,iterator.hasPrevious());\n    assertEquals(i,iterator.nextIndex());\n    assertEquals(i - 1,iterator.previousIndex());\n    if (i > 0) {\n      TestEntity entityPrevious=list.get(i - 1);\n      assertEquals(entityPrevious.getId(),iterator.previous().getId());\n      iterator.next();\n    }\n    TestEntity entity=list.get(i);\n    assertNull(listLazy.peek(i));\n    TestEntity lazyEntity=iterator.next();\n    if (uncached) {\n      assertNull(listLazy.peek(i));\n    }\n else {\n      assertNotNull(listLazy.peek(i));\n    }\n    assertEquals(entity.getId(),lazyEntity.getId());\n  }\n  assertFalse(iterator.hasNext());\n  try {\n    iterator.next();\n    fail(\"next should throw here\");\n  }\n catch (  NoSuchElementException expected) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (uncached) {\n  assertNull(listLazy.peek(i));\n}\n else {\n  assertNotNull(listLazy.peek(i));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 124,
    "startColumnNumber" : 16,
    "endLineNumber" : 124,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}