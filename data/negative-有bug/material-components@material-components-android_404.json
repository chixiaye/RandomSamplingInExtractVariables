{
  "id" : 404,
  "expression" : "constraints",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/datepicker/SingleDateSelector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "constraints",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 117,
      "startColumnNumber" : 69,
      "endLineNumber" : 117,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new DateFormatTextWatcher(formatHint,format,dateTextInput,constraints){\n  @Override void onValidDate(  @Nullable Long day){\n    if (day == null) {\n      clearSelection();\n    }\n else {\n      select(day);\n    }\n    listener.onSelectionChanged(getSelection());\n  }\n  @Override void onInvalidDate(){\n    listener.onIncompleteSelectionChanged();\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 10
      },
      "nodeContext" : "dateEditText.addTextChangedListener(new DateFormatTextWatcher(formatHint,format,dateTextInput,constraints){\n  @Override void onValidDate(  @Nullable Long day){\n    if (day == null) {\n      clearSelection();\n    }\n else {\n      select(day);\n    }\n    listener.onSelectionChanged(getSelection());\n  }\n  @Override void onInvalidDate(){\n    listener.onIncompleteSelectionChanged();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 11
      },
      "nodeContext" : "dateEditText.addTextChangedListener(new DateFormatTextWatcher(formatHint,format,dateTextInput,constraints){\n  @Override void onValidDate(  @Nullable Long day){\n    if (day == null) {\n      clearSelection();\n    }\n else {\n      select(day);\n    }\n    listener.onSelectionChanged(getSelection());\n  }\n  @Override void onInvalidDate(){\n    listener.onIncompleteSelectionChanged();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 53,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 99,
        "startColumnNumber" : 64,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  View root=layoutInflater.inflate(R.layout.mtrl_picker_text_input_date,viewGroup,false);\n  TextInputLayout dateTextInput=root.findViewById(R.id.mtrl_picker_text_input_date);\n  EditText dateEditText=dateTextInput.getEditText();\n  if (ManufacturerUtils.isDateInputKeyboardMissingSeparatorCharacters()) {\n    dateEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);\n  }\n  SimpleDateFormat format=UtcDates.getTextInputFormat();\n  String formatHint=UtcDates.getTextInputHint(root.getResources(),format);\n  dateTextInput.setPlaceholderText(formatHint);\n  if (selectedItem != null) {\n    dateEditText.setText(format.format(selectedItem));\n  }\n  dateEditText.addTextChangedListener(new DateFormatTextWatcher(formatHint,format,dateTextInput,constraints){\n    @Override void onValidDate(    @Nullable Long day){\n      if (day == null) {\n        clearSelection();\n      }\n else {\n        select(day);\n      }\n      listener.onSelectionChanged(getSelection());\n    }\n    @Override void onInvalidDate(){\n      listener.onIncompleteSelectionChanged();\n    }\n  }\n);\n  DateSelector.showKeyboardWithAutoHideBehavior(dateEditText);\n  return root;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1712,
        "startLineNumber" : 93,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public View onCreateTextInputView(@NonNull LayoutInflater layoutInflater,@Nullable ViewGroup viewGroup,@Nullable Bundle bundle,CalendarConstraints constraints,final @NonNull OnSelectionChangedListener<Long> listener){\n  View root=layoutInflater.inflate(R.layout.mtrl_picker_text_input_date,viewGroup,false);\n  TextInputLayout dateTextInput=root.findViewById(R.id.mtrl_picker_text_input_date);\n  EditText dateEditText=dateTextInput.getEditText();\n  if (ManufacturerUtils.isDateInputKeyboardMissingSeparatorCharacters()) {\n    dateEditText.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_URI);\n  }\n  SimpleDateFormat format=UtcDates.getTextInputFormat();\n  String formatHint=UtcDates.getTextInputHint(root.getResources(),format);\n  dateTextInput.setPlaceholderText(formatHint);\n  if (selectedItem != null) {\n    dateEditText.setText(format.format(selectedItem));\n  }\n  dateEditText.addTextChangedListener(new DateFormatTextWatcher(formatHint,format,dateTextInput,constraints){\n    @Override void onValidDate(    @Nullable Long day){\n      if (day == null) {\n        clearSelection();\n      }\n else {\n        select(day);\n      }\n      listener.onSelectionChanged(getSelection());\n    }\n    @Override void onInvalidDate(){\n      listener.onIncompleteSelectionChanged();\n    }\n  }\n);\n  DateSelector.showKeyboardWithAutoHideBehavior(dateEditText);\n  return root;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new DateFormatTextWatcher(formatHint,format,dateTextInput,constraints){\n  @Override void onValidDate(  @Nullable Long day){\n    if (day == null) {\n      clearSelection();\n    }\n else {\n      select(day);\n    }\n    listener.onSelectionChanged(getSelection());\n  }\n  @Override void onInvalidDate(){\n    listener.onIncompleteSelectionChanged();\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 49,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.datepicker.CalendarConstraints"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 117,
    "startColumnNumber" : 69,
    "endLineNumber" : 117,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}