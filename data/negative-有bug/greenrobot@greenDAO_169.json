{
  "id" : 169,
  "expression" : "i",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/DaoGenerator/src/de/greenrobot/daogenerator/DaoUtil.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 7,
      "startColumnNumber" : 24,
      "endLineNumber" : 7,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 7,
        "startColumnNumber" : 24,
        "endLineNumber" : 7,
        "endColumnNumber" : 44
      },
      "nodeContext" : "i < builder.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 7,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < builder.length(); i++) {\n  boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n  boolean isUpper=Character.isUpperCase(builder.charAt(i));\n  if (isUpper && !lastWasUpper) {\n    builder.insert(i,'_');\n    i++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 5,
        "startColumnNumber" : 49,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String dbName(String javaName){\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 7,
        "startColumnNumber" : 24,
        "endLineNumber" : 7,
        "endColumnNumber" : 44
      },
      "nodeContext" : "i < builder.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 8,
      "startColumnNumber" : 72,
      "endLineNumber" : 8,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 8,
        "startColumnNumber" : 72,
        "endLineNumber" : 8,
        "endColumnNumber" : 77
      },
      "nodeContext" : "i - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 8,
        "startColumnNumber" : 57,
        "endLineNumber" : 8,
        "endColumnNumber" : 78
      },
      "nodeContext" : "builder.charAt(i - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 8,
        "startColumnNumber" : 35,
        "endLineNumber" : 8,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Character.isUpperCase(builder.charAt(i - 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 8,
        "startColumnNumber" : 20,
        "endLineNumber" : 8,
        "endColumnNumber" : 79
      },
      "nodeContext" : "lastWasUpper=Character.isUpperCase(builder.charAt(i - 1))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 8,
        "startColumnNumber" : 12,
        "endLineNumber" : 8,
        "endColumnNumber" : 80
      },
      "nodeContext" : "boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 7,
        "startColumnNumber" : 51,
        "endLineNumber" : 14,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n  boolean isUpper=Character.isUpperCase(builder.charAt(i));\n  if (isUpper && !lastWasUpper) {\n    builder.insert(i,'_');\n    i++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 7,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < builder.length(); i++) {\n  boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n  boolean isUpper=Character.isUpperCase(builder.charAt(i));\n  if (isUpper && !lastWasUpper) {\n    builder.insert(i,'_');\n    i++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 5,
        "startColumnNumber" : 49,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String dbName(String javaName){\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 8,
        "startColumnNumber" : 12,
        "endLineNumber" : 8,
        "endColumnNumber" : 80
      },
      "nodeContext" : "boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 9,
      "startColumnNumber" : 67,
      "endLineNumber" : 9,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 9,
        "startColumnNumber" : 52,
        "endLineNumber" : 9,
        "endColumnNumber" : 69
      },
      "nodeContext" : "builder.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 9,
        "startColumnNumber" : 30,
        "endLineNumber" : 9,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Character.isUpperCase(builder.charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 9,
        "startColumnNumber" : 20,
        "endLineNumber" : 9,
        "endColumnNumber" : 70
      },
      "nodeContext" : "isUpper=Character.isUpperCase(builder.charAt(i))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 9,
        "startColumnNumber" : 12,
        "endLineNumber" : 9,
        "endColumnNumber" : 71
      },
      "nodeContext" : "boolean isUpper=Character.isUpperCase(builder.charAt(i));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 7,
        "startColumnNumber" : 51,
        "endLineNumber" : 14,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n  boolean isUpper=Character.isUpperCase(builder.charAt(i));\n  if (isUpper && !lastWasUpper) {\n    builder.insert(i,'_');\n    i++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 7,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < builder.length(); i++) {\n  boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n  boolean isUpper=Character.isUpperCase(builder.charAt(i));\n  if (isUpper && !lastWasUpper) {\n    builder.insert(i,'_');\n    i++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 5,
        "startColumnNumber" : 49,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String dbName(String javaName){\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 9,
        "startColumnNumber" : 12,
        "endLineNumber" : 9,
        "endColumnNumber" : 71
      },
      "nodeContext" : "boolean isUpper=Character.isUpperCase(builder.charAt(i));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 11,
      "startColumnNumber" : 31,
      "endLineNumber" : 11,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 11,
        "startColumnNumber" : 16,
        "endLineNumber" : 11,
        "endColumnNumber" : 38
      },
      "nodeContext" : "builder.insert(i,'_')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 11,
        "startColumnNumber" : 16,
        "endLineNumber" : 11,
        "endColumnNumber" : 39
      },
      "nodeContext" : "builder.insert(i,'_');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 10,
        "startColumnNumber" : 42,
        "endLineNumber" : 13,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  builder.insert(i,'_');\n  i++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 10,
        "startColumnNumber" : 12,
        "endLineNumber" : 13,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isUpper && !lastWasUpper) {\n  builder.insert(i,'_');\n  i++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 7,
        "startColumnNumber" : 51,
        "endLineNumber" : 14,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n  boolean isUpper=Character.isUpperCase(builder.charAt(i));\n  if (isUpper && !lastWasUpper) {\n    builder.insert(i,'_');\n    i++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 7,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < builder.length(); i++) {\n  boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n  boolean isUpper=Character.isUpperCase(builder.charAt(i));\n  if (isUpper && !lastWasUpper) {\n    builder.insert(i,'_');\n    i++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 5,
        "startColumnNumber" : 49,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 5,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String dbName(String javaName){\n  StringBuilder builder=new StringBuilder(javaName);\n  for (int i=1; i < builder.length(); i++) {\n    boolean lastWasUpper=Character.isUpperCase(builder.charAt(i - 1));\n    boolean isUpper=Character.isUpperCase(builder.charAt(i));\n    if (isUpper && !lastWasUpper) {\n      builder.insert(i,'_');\n      i++;\n    }\n  }\n  return builder.toString().toUpperCase();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 11,
        "startColumnNumber" : 16,
        "endLineNumber" : 11,
        "endColumnNumber" : 39
      },
      "nodeContext" : "builder.insert(i,'_');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 7,
    "startColumnNumber" : 24,
    "endLineNumber" : 7,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 8,
    "startColumnNumber" : 72,
    "endLineNumber" : 8,
    "endColumnNumber" : 73
  }, {
    "charLength" : 1,
    "startLineNumber" : 9,
    "startColumnNumber" : 67,
    "endLineNumber" : 9,
    "endColumnNumber" : 68
  }, {
    "charLength" : 1,
    "startLineNumber" : 11,
    "startColumnNumber" : 31,
    "endLineNumber" : 11,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}