{
  "id" : 124,
  "expression" : "traceId",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-storage/mysql-v1/src/main/java/zipkin2/storage/mysql/v1/MySQLSpanStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "traceId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 71,
      "startColumnNumber" : 65,
      "endLineNumber" : 71,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 73
      },
      "nodeContext" : "selectFromSpansAndAnnotationsFactory.create(traceIdHigh,traceId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 74
      },
      "nodeContext" : "dataSourceCallFactory.create(selectFromSpansAndAnnotationsFactory.create(traceIdHigh,traceId))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 71,
        "endColumnNumber" : 74
      },
      "nodeContext" : "result=dataSourceCallFactory.create(selectFromSpansAndAnnotationsFactory.create(traceIdHigh,traceId))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 75
      },
      "nodeContext" : "DataSourceCall<List<Span>> result=dataSourceCallFactory.create(selectFromSpansAndAnnotationsFactory.create(traceIdHigh,traceId));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 63,
        "startColumnNumber" : 64,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  hexTraceId=Span.normalizeTraceId(hexTraceId);\n  long traceIdHigh=hexTraceId.length() == 32 ? lowerHexToUnsignedLong(hexTraceId,0) : 0L;\n  long traceId=lowerHexToUnsignedLong(hexTraceId);\n  DataSourceCall<List<Span>> result=dataSourceCallFactory.create(selectFromSpansAndAnnotationsFactory.create(traceIdHigh,traceId));\n  return strictTraceId ? result.map(StrictTraceId.filterSpans(hexTraceId)) : result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Call<List<Span>> getTrace(String hexTraceId){\n  hexTraceId=Span.normalizeTraceId(hexTraceId);\n  long traceIdHigh=hexTraceId.length() == 32 ? lowerHexToUnsignedLong(hexTraceId,0) : 0L;\n  long traceId=lowerHexToUnsignedLong(hexTraceId);\n  DataSourceCall<List<Span>> result=dataSourceCallFactory.create(selectFromSpansAndAnnotationsFactory.create(traceIdHigh,traceId));\n  return strictTraceId ? result.map(StrictTraceId.filterSpans(hexTraceId)) : result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 73
      },
      "nodeContext" : "selectFromSpansAndAnnotationsFactory.create(traceIdHigh,traceId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 71,
    "startColumnNumber" : 65,
    "endLineNumber" : 71,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}