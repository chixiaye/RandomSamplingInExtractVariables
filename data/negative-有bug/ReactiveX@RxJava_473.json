{
  "id" : 473,
  "expression" : "new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableTakeLastOneTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 161,
      "startLineNumber" : 90,
      "startColumnNumber" : 52,
      "endLineNumber" : 95,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 22,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 90,
        "startColumnNumber" : 21,
        "endLineNumber" : 95,
        "endColumnNumber" : 15
      },
      "nodeContext" : "Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 90,
        "startColumnNumber" : 21,
        "endLineNumber" : 96,
        "endColumnNumber" : 24
      },
      "nodeContext" : "Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n).takeLast(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 90,
        "startColumnNumber" : 21,
        "endLineNumber" : 96,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n).takeLast(0).count()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 90,
        "startColumnNumber" : 21,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n).takeLast(0).count().toBlocking()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 90,
        "startColumnNumber" : 21,
        "endLineNumber" : 96,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n).takeLast(0).count().toBlocking().single()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 90,
        "startColumnNumber" : 13,
        "endLineNumber" : 96,
        "endColumnNumber" : 54
      },
      "nodeContext" : "count=Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n).takeLast(0).count().toBlocking().single()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 40,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 55
      },
      "nodeContext" : "long count=Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n).takeLast(0).count().toBlocking().single();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 42,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 87,
        "startColumnNumber" : 66,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger upstreamCount=new AtomicInteger();\n  final int num=10;\n  long count=Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n    @Override public void accept(    Integer t){\n      upstreamCount.incrementAndGet();\n    }\n  }\n).takeLast(0).count().toBlocking().single();\n  assertEquals(num,upstreamCount.get());\n  assertEquals(0L,count);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTakeLastZeroProcessesAllItemsButIgnoresThem(){\n  final AtomicInteger upstreamCount=new AtomicInteger();\n  final int num=10;\n  long count=Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n    @Override public void accept(    Integer t){\n      upstreamCount.incrementAndGet();\n    }\n  }\n).takeLast(0).count().toBlocking().single();\n  assertEquals(num,upstreamCount.get());\n  assertEquals(0L,count);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 90,
        "startColumnNumber" : 21,
        "endLineNumber" : 95,
        "endColumnNumber" : 15
      },
      "nodeContext" : "Flowable.range(1,num).doOnNext(new Consumer<Integer>(){\n  @Override public void accept(  Integer t){\n    upstreamCount.incrementAndGet();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    },
    "tokenLength" : 7,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 161,
    "startLineNumber" : 90,
    "startColumnNumber" : 52,
    "endLineNumber" : 95,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}