{
  "id" : 442,
  "expression" : "Collections",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableToMultimapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 287,
      "startColumnNumber" : 24,
      "endLineNumber" : 287,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 287,
        "startColumnNumber" : 24,
        "endLineNumber" : 287,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Collections.singleton(\"eee\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 287,
        "startColumnNumber" : 8,
        "endLineNumber" : 287,
        "endColumnNumber" : 53
      },
      "nodeContext" : "expected.put(3,Collections.singleton(\"eee\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 287,
        "startColumnNumber" : 8,
        "endLineNumber" : 287,
        "endColumnNumber" : 54
      },
      "nodeContext" : "expected.put(3,Collections.singleton(\"eee\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1605,
        "startLineNumber" : 255,
        "startColumnNumber" : 62,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<String> source=Flowable.just(\"cc\",\"cc\",\"eee\",\"eee\");\n  Function<Integer,Collection<String>> collectionFactory=new Function<Integer,Collection<String>>(){\n    @Override public Collection<String> apply(    Integer t1){\n      if (t1 == 2) {\n        throw new RuntimeException(\"Forced failure\");\n      }\n else {\n        return new HashSet<String>();\n      }\n    }\n  }\n;\n  Function<String,String> identity=new Function<String,String>(){\n    @Override public String apply(    String v){\n      return v;\n    }\n  }\n;\n  Supplier<Map<Integer,Collection<String>>> mapSupplier=new Supplier<Map<Integer,Collection<String>>>(){\n    @Override public Map<Integer,Collection<String>> get(){\n      return new HashMap<Integer,Collection<String>>();\n    }\n  }\n;\n  Flowable<Map<Integer,Collection<String>>> mapped=source.toMultimap(lengthFunc,identity,mapSupplier,collectionFactory);\n  Map<Integer,Collection<String>> expected=new HashMap<Integer,Collection<String>>();\n  expected.put(2,Arrays.asList(\"cc\",\"dd\"));\n  expected.put(3,Collections.singleton(\"eee\"));\n  mapped.subscribe(objectObserver);\n  verify(objectObserver,times(1)).onError(any(Throwable.class));\n  verify(objectObserver,never()).onNext(expected);\n  verify(objectObserver,never()).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 268,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToMultimapWithThrowingCollectionFactory(){\n  Flowable<String> source=Flowable.just(\"cc\",\"cc\",\"eee\",\"eee\");\n  Function<Integer,Collection<String>> collectionFactory=new Function<Integer,Collection<String>>(){\n    @Override public Collection<String> apply(    Integer t1){\n      if (t1 == 2) {\n        throw new RuntimeException(\"Forced failure\");\n      }\n else {\n        return new HashSet<String>();\n      }\n    }\n  }\n;\n  Function<String,String> identity=new Function<String,String>(){\n    @Override public String apply(    String v){\n      return v;\n    }\n  }\n;\n  Supplier<Map<Integer,Collection<String>>> mapSupplier=new Supplier<Map<Integer,Collection<String>>>(){\n    @Override public Map<Integer,Collection<String>> get(){\n      return new HashMap<Integer,Collection<String>>();\n    }\n  }\n;\n  Flowable<Map<Integer,Collection<String>>> mapped=source.toMultimap(lengthFunc,identity,mapSupplier,collectionFactory);\n  Map<Integer,Collection<String>> expected=new HashMap<Integer,Collection<String>>();\n  expected.put(2,Arrays.asList(\"cc\",\"dd\"));\n  expected.put(3,Collections.singleton(\"eee\"));\n  mapped.subscribe(objectObserver);\n  verify(objectObserver,times(1)).onError(any(Throwable.class));\n  verify(objectObserver,never()).onNext(expected);\n  verify(objectObserver,never()).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 274,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 287,
        "startColumnNumber" : 8,
        "endLineNumber" : 287,
        "endColumnNumber" : 54
      },
      "nodeContext" : "expected.put(3,Collections.singleton(\"eee\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 287,
    "startColumnNumber" : 24,
    "endLineNumber" : 287,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}