{
  "id" : 190,
  "expression" : "len <= 0",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/FailoverClusterInvoker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "len <= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 62,
      "startColumnNumber" : 12,
      "endLineNumber" : 62,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (len <= 0) {\n  len=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3124,
        "startLineNumber" : 57,
        "startColumnNumber" : 128,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Invoker<T>> copyInvokers=invokers;\n  checkInvokers(copyInvokers,invocation);\n  String methodName=RpcUtils.getMethodName(invocation);\n  int len=getUrl().getMethodParameter(methodName,RETRIES_KEY,DEFAULT_RETRIES) + 1;\n  if (len <= 0) {\n    len=1;\n  }\n  RpcException le=null;\n  List<Invoker<T>> invoked=new ArrayList<Invoker<T>>(copyInvokers.size());\n  Set<String> providers=new HashSet<String>(len);\n  for (int i=0; i < len; i++) {\n    if (i > 0) {\n      checkWhetherDestroyed();\n      copyInvokers=list(invocation);\n      checkInvokers(copyInvokers,invocation);\n    }\n    Invoker<T> invoker=select(loadbalance,invocation,copyInvokers,invoked);\n    invoked.add(invoker);\n    RpcContext.getServiceContext().setInvokers((List)invoked);\n    try {\n      Result result=invokeWithContext(invoker,invocation);\n      if (le != null && logger.isWarnEnabled()) {\n        logger.warn(\"Although retry the method \" + methodName + \" in the service \"+ getInterface().getName()+ \" was successful by the provider \"+ invoker.getUrl().getAddress()+ \", but there have been failed providers \"+ providers+ \" (\"+ providers.size()+ \"/\"+ copyInvokers.size()+ \") from the registry \"+ directory.getUrl().getAddress()+ \" on the consumer \"+ NetUtils.getLocalHost()+ \" using the dubbo version \"+ Version.getVersion()+ \". Last error is: \"+ le.getMessage(),le);\n      }\n      return result;\n    }\n catch (    RpcException e) {\n      if (e.isBiz()) {\n        throw e;\n      }\n      le=e;\n    }\ncatch (    Throwable e) {\n      le=new RpcException(e.getMessage(),e);\n    }\n finally {\n      providers.add(invoker.getUrl().getAddress());\n    }\n  }\n  throw new RpcException(le.getCode(),\"Failed to invoke the method \" + methodName + \" in the service \"+ getInterface().getName()+ \". Tried \"+ len+ \" times of the providers \"+ providers+ \" (\"+ providers.size()+ \"/\"+ copyInvokers.size()+ \") from the registry \"+ directory.getUrl().getAddress()+ \" on the consumer \"+ NetUtils.getLocalHost()+ \" using the dubbo version \"+ Version.getVersion()+ \". Last error is: \"+ le.getMessage(),le.getCause() != null ? le.getCause() : le);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 320,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3313,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings({\"unchecked\",\"rawtypes\"}) public Result doInvoke(Invocation invocation,final List<Invoker<T>> invokers,LoadBalance loadbalance) throws RpcException {\n  List<Invoker<T>> copyInvokers=invokers;\n  checkInvokers(copyInvokers,invocation);\n  String methodName=RpcUtils.getMethodName(invocation);\n  int len=getUrl().getMethodParameter(methodName,RETRIES_KEY,DEFAULT_RETRIES) + 1;\n  if (len <= 0) {\n    len=1;\n  }\n  RpcException le=null;\n  List<Invoker<T>> invoked=new ArrayList<Invoker<T>>(copyInvokers.size());\n  Set<String> providers=new HashSet<String>(len);\n  for (int i=0; i < len; i++) {\n    if (i > 0) {\n      checkWhetherDestroyed();\n      copyInvokers=list(invocation);\n      checkInvokers(copyInvokers,invocation);\n    }\n    Invoker<T> invoker=select(loadbalance,invocation,copyInvokers,invoked);\n    invoked.add(invoker);\n    RpcContext.getServiceContext().setInvokers((List)invoked);\n    try {\n      Result result=invokeWithContext(invoker,invocation);\n      if (le != null && logger.isWarnEnabled()) {\n        logger.warn(\"Although retry the method \" + methodName + \" in the service \"+ getInterface().getName()+ \" was successful by the provider \"+ invoker.getUrl().getAddress()+ \", but there have been failed providers \"+ providers+ \" (\"+ providers.size()+ \"/\"+ copyInvokers.size()+ \") from the registry \"+ directory.getUrl().getAddress()+ \" on the consumer \"+ NetUtils.getLocalHost()+ \" using the dubbo version \"+ Version.getVersion()+ \". Last error is: \"+ le.getMessage(),le);\n      }\n      return result;\n    }\n catch (    RpcException e) {\n      if (e.isBiz()) {\n        throw e;\n      }\n      le=e;\n    }\ncatch (    Throwable e) {\n      le=new RpcException(e.getMessage(),e);\n    }\n finally {\n      providers.add(invoker.getUrl().getAddress());\n    }\n  }\n  throw new RpcException(le.getCode(),\"Failed to invoke the method \" + methodName + \" in the service \"+ getInterface().getName()+ \". Tried \"+ len+ \" times of the providers \"+ providers+ \" (\"+ providers.size()+ \"/\"+ copyInvokers.size()+ \") from the registry \"+ directory.getUrl().getAddress()+ \" on the consumer \"+ NetUtils.getLocalHost()+ \" using the dubbo version \"+ Version.getVersion()+ \". Last error is: \"+ le.getMessage(),le.getCause() != null ? le.getCause() : le);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (len <= 0) {\n  len=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 62,
    "startColumnNumber" : 12,
    "endLineNumber" : 62,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}