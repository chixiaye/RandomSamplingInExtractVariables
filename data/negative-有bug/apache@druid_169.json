{
  "id" : 169,
  "expression" : "999",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/segment/loading/StorageLocationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "999",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 152,
      "startColumnNumber" : 67,
      "endLineNumber" : 152,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 152,
        "startColumnNumber" : 30,
        "endLineNumber" : 152,
        "endColumnNumber" : 71
      },
      "nodeContext" : "makeSegment(\"2012-01-01/2012-01-02\",999)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 72
      },
      "nodeContext" : "loc.maybeReserve(\"test3\",makeSegment(\"2012-01-01/2012-01-02\",999))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 73
      },
      "nodeContext" : "loc.maybeReserve(\"test3\",makeSegment(\"2012-01-01/2012-01-02\",999));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1505,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ServiceEmitter emitter=Mockito.mock(ServiceEmitter.class);\n  ArgumentCaptor<ServiceEventBuilder> argumentCaptor=ArgumentCaptor.forClass(ServiceEventBuilder.class);\n  EmittingLogger.registerEmitter(emitter);\n  File dir=temporaryFolder.newFolder();\n  long expectedAvail=1000L;\n  StorageLocation loc=new StorageLocation(dir,expectedAvail,null);\n  verifyLoc(expectedAvail,loc);\n  final DataSegment secondSegment=makeSegment(\"2012-01-02/2012-01-03\",23);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail-=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test2\",secondSegment);\n  expectedAvail-=23;\n  verifyLoc(expectedAvail,loc);\n  loc.removeSegmentDir(new File(dir,\"test1\"),makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail+=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test3\",makeSegment(\"2012-01-01/2012-01-02\",999));\n  expectedAvail-=999;\n  verifyLoc(expectedAvail,loc);\n  Mockito.verify(emitter).emit(argumentCaptor.capture());\n  AlertBuilder alertBuilder=(AlertBuilder)argumentCaptor.getValue();\n  String description=alertBuilder.build(ImmutableMap.of()).getDescription();\n  Assert.assertNotNull(description);\n  Assert.assertTrue(description,description.contains(\"Please increase druid.segmentCache.locations maxSize param\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMaybeReserve() throws IOException {\n  ServiceEmitter emitter=Mockito.mock(ServiceEmitter.class);\n  ArgumentCaptor<ServiceEventBuilder> argumentCaptor=ArgumentCaptor.forClass(ServiceEventBuilder.class);\n  EmittingLogger.registerEmitter(emitter);\n  File dir=temporaryFolder.newFolder();\n  long expectedAvail=1000L;\n  StorageLocation loc=new StorageLocation(dir,expectedAvail,null);\n  verifyLoc(expectedAvail,loc);\n  final DataSegment secondSegment=makeSegment(\"2012-01-02/2012-01-03\",23);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail-=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test2\",secondSegment);\n  expectedAvail-=23;\n  verifyLoc(expectedAvail,loc);\n  loc.removeSegmentDir(new File(dir,\"test1\"),makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail+=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test3\",makeSegment(\"2012-01-01/2012-01-02\",999));\n  expectedAvail-=999;\n  verifyLoc(expectedAvail,loc);\n  Mockito.verify(emitter).emit(argumentCaptor.capture());\n  AlertBuilder alertBuilder=(AlertBuilder)argumentCaptor.getValue();\n  String description=alertBuilder.build(ImmutableMap.of()).getDescription();\n  Assert.assertNotNull(description);\n  Assert.assertTrue(description,description.contains(\"Please increase druid.segmentCache.locations maxSize param\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 73
      },
      "nodeContext" : "loc.maybeReserve(\"test3\",makeSegment(\"2012-01-01/2012-01-02\",999));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "999",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 153,
      "startColumnNumber" : 21,
      "endLineNumber" : 153,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 24
      },
      "nodeContext" : "expectedAvail-=999",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 25
      },
      "nodeContext" : "expectedAvail-=999;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1505,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ServiceEmitter emitter=Mockito.mock(ServiceEmitter.class);\n  ArgumentCaptor<ServiceEventBuilder> argumentCaptor=ArgumentCaptor.forClass(ServiceEventBuilder.class);\n  EmittingLogger.registerEmitter(emitter);\n  File dir=temporaryFolder.newFolder();\n  long expectedAvail=1000L;\n  StorageLocation loc=new StorageLocation(dir,expectedAvail,null);\n  verifyLoc(expectedAvail,loc);\n  final DataSegment secondSegment=makeSegment(\"2012-01-02/2012-01-03\",23);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail-=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test2\",secondSegment);\n  expectedAvail-=23;\n  verifyLoc(expectedAvail,loc);\n  loc.removeSegmentDir(new File(dir,\"test1\"),makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail+=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test3\",makeSegment(\"2012-01-01/2012-01-02\",999));\n  expectedAvail-=999;\n  verifyLoc(expectedAvail,loc);\n  Mockito.verify(emitter).emit(argumentCaptor.capture());\n  AlertBuilder alertBuilder=(AlertBuilder)argumentCaptor.getValue();\n  String description=alertBuilder.build(ImmutableMap.of()).getDescription();\n  Assert.assertNotNull(description);\n  Assert.assertTrue(description,description.contains(\"Please increase druid.segmentCache.locations maxSize param\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 161,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMaybeReserve() throws IOException {\n  ServiceEmitter emitter=Mockito.mock(ServiceEmitter.class);\n  ArgumentCaptor<ServiceEventBuilder> argumentCaptor=ArgumentCaptor.forClass(ServiceEventBuilder.class);\n  EmittingLogger.registerEmitter(emitter);\n  File dir=temporaryFolder.newFolder();\n  long expectedAvail=1000L;\n  StorageLocation loc=new StorageLocation(dir,expectedAvail,null);\n  verifyLoc(expectedAvail,loc);\n  final DataSegment secondSegment=makeSegment(\"2012-01-02/2012-01-03\",23);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail-=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test1\",makeSegment(\"2012-01-01/2012-01-02\",10));\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test2\",secondSegment);\n  expectedAvail-=23;\n  verifyLoc(expectedAvail,loc);\n  loc.removeSegmentDir(new File(dir,\"test1\"),makeSegment(\"2012-01-01/2012-01-02\",10));\n  expectedAvail+=10;\n  verifyLoc(expectedAvail,loc);\n  loc.maybeReserve(\"test3\",makeSegment(\"2012-01-01/2012-01-02\",999));\n  expectedAvail-=999;\n  verifyLoc(expectedAvail,loc);\n  Mockito.verify(emitter).emit(argumentCaptor.capture());\n  AlertBuilder alertBuilder=(AlertBuilder)argumentCaptor.getValue();\n  String description=alertBuilder.build(ImmutableMap.of()).getDescription();\n  Assert.assertNotNull(description);\n  Assert.assertTrue(description,description.contains(\"Please increase druid.segmentCache.locations maxSize param\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 25
      },
      "nodeContext" : "expectedAvail-=999;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 152,
    "startColumnNumber" : 67,
    "endLineNumber" : 152,
    "endColumnNumber" : 70
  }, {
    "charLength" : 3,
    "startLineNumber" : 153,
    "startColumnNumber" : 21,
    "endLineNumber" : 153,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}