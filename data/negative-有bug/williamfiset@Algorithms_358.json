{
  "id" : 358,
  "expression" : "(-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/CircleCircleIntersectionArea.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 69,
      "startColumnNumber" : 32,
      "endLineNumber" : 69,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 24,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 69,
        "startColumnNumber" : 27,
        "endLineNumber" : 69,
        "endColumnNumber" : 87
      },
      "nodeContext" : "sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 69,
        "startColumnNumber" : 21,
        "endLineNumber" : 69,
        "endColumnNumber" : 87
      },
      "nodeContext" : "0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 69,
        "startColumnNumber" : 13,
        "endLineNumber" : 69,
        "endColumnNumber" : 87
      },
      "nodeContext" : "part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 63,
        "startColumnNumber" : 11,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  double d=dist;\n  Double part1=r * r * arccosSafe((d * d + r * r - R * R) / (2 * d * r));\n  Double part2=R * R * arccosSafe((d * d + R * R - r * r) / (2 * d * R));\n  Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n  return part1 + part2 - part3;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 657,
        "startLineNumber" : 53,
        "startColumnNumber" : 11,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (intersections.length == 1) {\n  if (dist < R) {\n    return PI * r * r;\n  }\n else {\n    return 0;\n  }\n}\n else {\n  double d=dist;\n  Double part1=r * r * arccosSafe((d * d + r * r - R * R) / (2 * d * r));\n  Double part2=R * R * arccosSafe((d * d + R * R - r * r) / (2 * d * R));\n  Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n  return part1 + part2 - part3;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 49,
        "startColumnNumber" : 11,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (intersections.length == 0) {\n  return 0;\n}\n else if (intersections.length == 1) {\n  if (dist < R) {\n    return PI * r * r;\n  }\n else {\n    return 0;\n  }\n}\n else {\n  double d=dist;\n  Double part1=r * r * arccosSafe((d * d + r * r - R * R) / (2 * d * r));\n  Double part2=R * R * arccosSafe((d * d + R * R - r * r) / (2 * d * R));\n  Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n  return part1 + part2 - part3;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (intersections == null) {\n  return PI * r * r;\n}\n else if (intersections.length == 0) {\n  return 0;\n}\n else if (intersections.length == 1) {\n  if (dist < R) {\n    return PI * r * r;\n  }\n else {\n    return 0;\n  }\n}\n else {\n  double d=dist;\n  Double part1=r * r * arccosSafe((d * d + r * r - R * R) / (2 * d * r));\n  Double part2=R * R * arccosSafe((d * d + R * R - r * r) / (2 * d * R));\n  Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n  return part1 + part2 - part3;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 140,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1163,
        "startLineNumber" : 29,
        "startColumnNumber" : 98,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double r=r1, R=r2;\n  Point2D c=c1, C=c2;\n  if (r1 > r2) {\n    r=r2;\n    R=r1;\n    c=c2;\n    C=c1;\n  }\n  double dist=c1.distance(c2);\n  Point2D[] intersections=circleCircleIntersection(c1,r1,c2,r2);\n  if (intersections == null) {\n    return PI * r * r;\n  }\n else   if (intersections.length == 0) {\n    return 0;\n  }\n else   if (intersections.length == 1) {\n    if (dist < R) {\n      return PI * r * r;\n    }\n else {\n      return 0;\n    }\n  }\n else {\n    double d=dist;\n    Double part1=r * r * arccosSafe((d * d + r * r - R * R) / (2 * d * r));\n    Double part2=R * R * arccosSafe((d * d + R * R - r * r) / (2 * d * R));\n    Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n    return part1 + part2 - part3;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1259,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static double circleCircleIntersectionArea(Point2D c1,double r1,Point2D c2,double r2){\n  double r=r1, R=r2;\n  Point2D c=c1, C=c2;\n  if (r1 > r2) {\n    r=r2;\n    R=r1;\n    c=c2;\n    C=c1;\n  }\n  double dist=c1.distance(c2);\n  Point2D[] intersections=circleCircleIntersection(c1,r1,c2,r2);\n  if (intersections == null) {\n    return PI * r * r;\n  }\n else   if (intersections.length == 0) {\n    return 0;\n  }\n else   if (intersections.length == 1) {\n    if (dist < R) {\n      return PI * r * r;\n    }\n else {\n      return 0;\n    }\n  }\n else {\n    double d=dist;\n    Double part1=r * r * arccosSafe((d * d + r * r - R * R) / (2 * d * r));\n    Double part2=R * R * arccosSafe((d * d + R * R - r * r) / (2 * d * R));\n    Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n    return part1 + part2 - part3;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Double part3=0.5 * sqrt((-d + r + R) * (d + r - R) * (d - r + R)* (d + r + R));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    },
    "tokenLength" : 23,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 69,
    "startColumnNumber" : 32,
    "endLineNumber" : 69,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}