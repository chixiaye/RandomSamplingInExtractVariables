{
  "id" : 349,
  "expression" : "tagNameToPaths.get(tagName)",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/util/xml/AbstractXmlPathFinder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tagNameToPaths.get(tagName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 65,
      "startColumnNumber" : 49,
      "endLineNumber" : 65,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 65,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 76
      },
      "nodeContext" : "setOfPaths=tagNameToPaths.get(tagName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 65,
        "endColumnNumber" : 77
      },
      "nodeContext" : "HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (reader.getEventType()) {\ncase XMLStreamReader.START_ELEMENT:  sb.append('/').append(tagName=reader.getLocalName());\noffset=reader.getLocation().getCharacterOffset();\nbreak;\ncase XMLStreamReader.END_ELEMENT:sb.setLength(sb.length() - reader.getLocalName().length() - 1);\nbreak;\ncase XMLStreamReader.CHARACTERS:HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\nif (setOfPaths != null) {\nString path=sb.toString();\nif (setOfPaths.contains(path)) {\nwhile (offset > 0) {\nif (text.charAt(offset) == '>') {\nbreak;\n}\n else {\noffset--;\n}\n}\nhandle(path.substring(1),reader.getText(),offset + 1);\n}\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 115,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1355,
        "startLineNumber" : 52,
        "startColumnNumber" : 37,
        "endLineNumber" : 85,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  reader.next();\nswitch (reader.getEventType()) {\ncase XMLStreamReader.START_ELEMENT:    sb.append('/').append(tagName=reader.getLocalName());\n  offset=reader.getLocation().getCharacterOffset();\nbreak;\ncase XMLStreamReader.END_ELEMENT:sb.setLength(sb.length() - reader.getLocalName().length() - 1);\nbreak;\ncase XMLStreamReader.CHARACTERS:HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\nif (setOfPaths != null) {\nString path=sb.toString();\nif (setOfPaths.contains(path)) {\nwhile (offset > 0) {\nif (text.charAt(offset) == '>') {\nbreak;\n}\n else {\noffset--;\n}\n}\nhandle(path.substring(1),reader.getText(),offset + 1);\n}\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1380,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (reader.hasNext()) {\n  reader.next();\nswitch (reader.getEventType()) {\ncase XMLStreamReader.START_ELEMENT:    sb.append('/').append(tagName=reader.getLocalName());\n  offset=reader.getLocation().getCharacterOffset();\nbreak;\ncase XMLStreamReader.END_ELEMENT:sb.setLength(sb.length() - reader.getLocalName().length() - 1);\nbreak;\ncase XMLStreamReader.CHARACTERS:HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\nif (setOfPaths != null) {\nString path=sb.toString();\nif (setOfPaths.contains(path)) {\nwhile (offset > 0) {\nif (text.charAt(offset) == '>') {\nbreak;\n}\n else {\noffset--;\n}\n}\nhandle(path.substring(1),reader.getText(),offset + 1);\n}\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1636,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  XMLInputFactory factory=XMLInputFactory.newInstance();\n  XMLStreamReader reader=factory.createXMLStreamReader(new StringReader(text));\n  String tagName=\"\";\n  int offset=0;\n  while (reader.hasNext()) {\n    reader.next();\nswitch (reader.getEventType()) {\ncase XMLStreamReader.START_ELEMENT:      sb.append('/').append(tagName=reader.getLocalName());\n    offset=reader.getLocation().getCharacterOffset();\n  break;\ncase XMLStreamReader.END_ELEMENT:sb.setLength(sb.length() - reader.getLocalName().length() - 1);\nbreak;\ncase XMLStreamReader.CHARACTERS:HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\nif (setOfPaths != null) {\nString path=sb.toString();\nif (setOfPaths.contains(path)) {\nwhile (offset > 0) {\nif (text.charAt(offset) == '>') {\n  break;\n}\n else {\n  offset--;\n}\n}\nhandle(path.substring(1),reader.getText(),offset + 1);\n}\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1736,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  XMLInputFactory factory=XMLInputFactory.newInstance();\n  XMLStreamReader reader=factory.createXMLStreamReader(new StringReader(text));\n  String tagName=\"\";\n  int offset=0;\n  while (reader.hasNext()) {\n    reader.next();\nswitch (reader.getEventType()) {\ncase XMLStreamReader.START_ELEMENT:      sb.append('/').append(tagName=reader.getLocalName());\n    offset=reader.getLocation().getCharacterOffset();\n  break;\ncase XMLStreamReader.END_ELEMENT:sb.setLength(sb.length() - reader.getLocalName().length() - 1);\nbreak;\ncase XMLStreamReader.CHARACTERS:HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\nif (setOfPaths != null) {\nString path=sb.toString();\nif (setOfPaths.contains(path)) {\nwhile (offset > 0) {\nif (text.charAt(offset) == '>') {\n  break;\n}\n else {\n  offset--;\n}\n}\nhandle(path.substring(1),reader.getText(),offset + 1);\n}\n}\nbreak;\n}\n}\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 168,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1782,
        "startLineNumber" : 42,
        "startColumnNumber" : 34,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  sb.setLength(0);\n  try {\n    XMLInputFactory factory=XMLInputFactory.newInstance();\n    XMLStreamReader reader=factory.createXMLStreamReader(new StringReader(text));\n    String tagName=\"\";\n    int offset=0;\n    while (reader.hasNext()) {\n      reader.next();\nswitch (reader.getEventType()) {\ncase XMLStreamReader.START_ELEMENT:        sb.append('/').append(tagName=reader.getLocalName());\n      offset=reader.getLocation().getCharacterOffset();\n    break;\ncase XMLStreamReader.END_ELEMENT:  sb.setLength(sb.length() - reader.getLocalName().length() - 1);\nbreak;\ncase XMLStreamReader.CHARACTERS:HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\nif (setOfPaths != null) {\nString path=sb.toString();\nif (setOfPaths.contains(path)) {\nwhile (offset > 0) {\n  if (text.charAt(offset) == '>') {\n    break;\n  }\n else {\n    offset--;\n  }\n}\nhandle(path.substring(1),reader.getText(),offset + 1);\n}\n}\nbreak;\n}\n}\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1812,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void find(String text){\n  sb.setLength(0);\n  try {\n    XMLInputFactory factory=XMLInputFactory.newInstance();\n    XMLStreamReader reader=factory.createXMLStreamReader(new StringReader(text));\n    String tagName=\"\";\n    int offset=0;\n    while (reader.hasNext()) {\n      reader.next();\nswitch (reader.getEventType()) {\ncase XMLStreamReader.START_ELEMENT:        sb.append('/').append(tagName=reader.getLocalName());\n      offset=reader.getLocation().getCharacterOffset();\n    break;\ncase XMLStreamReader.END_ELEMENT:  sb.setLength(sb.length() - reader.getLocalName().length() - 1);\nbreak;\ncase XMLStreamReader.CHARACTERS:HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\nif (setOfPaths != null) {\nString path=sb.toString();\nif (setOfPaths.contains(path)) {\nwhile (offset > 0) {\n  if (text.charAt(offset) == '>') {\n    break;\n  }\n else {\n    offset--;\n  }\n}\nhandle(path.substring(1),reader.getText(),offset + 1);\n}\n}\nbreak;\n}\n}\n}\n catch (XMLStreamException e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 65,
        "endColumnNumber" : 77
      },
      "nodeContext" : "HashSet<String> setOfPaths=tagNameToPaths.get(tagName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.HashSet<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 65,
    "startColumnNumber" : 49,
    "endLineNumber" : 65,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}