{
  "id" : 421,
  "expression" : "\"UTF-8\"",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/impl/launcher/commands/VersionCommand.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"UTF-8\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 57,
      "startColumnNumber" : 45,
      "endLineNumber" : 57,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 57,
        "startColumnNumber" : 29,
        "endLineNumber" : 57,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new Scanner(is,\"UTF-8\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 57,
        "startColumnNumber" : 29,
        "endLineNumber" : 57,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 57,
        "startColumnNumber" : 19,
        "endLineNumber" : 57,
        "endColumnNumber" : 73
      },
      "nodeContext" : "scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 57,
        "startColumnNumber" : 11,
        "endLineNumber" : 57,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Scanner scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try (Scanner scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")){\n  return scanner.hasNext() ? scanner.next() : \"\";\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 53,
        "startColumnNumber" : 96,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (is == null) {\n    throw new IllegalStateException(\"Cannot find vertx-version.txt on classpath\");\n  }\n  try (Scanner scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")){\n    return scanner.hasNext() ? scanner.next() : \"\";\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (InputStream is=getClass().getClassLoader().getResourceAsStream(\"vertx-version.txt\")){\n  if (is == null) {\n    throw new IllegalStateException(\"Cannot find vertx-version.txt on classpath\");\n  }\n  try (Scanner scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")){\n    return scanner.hasNext() ? scanner.next() : \"\";\n  }\n }\n catch (IOException e) {\n  throw new IllegalStateException(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 52,
        "startColumnNumber" : 29,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try (InputStream is=getClass().getClassLoader().getResourceAsStream(\"vertx-version.txt\")){\n    if (is == null) {\n      throw new IllegalStateException(\"Cannot find vertx-version.txt on classpath\");\n    }\n    try (Scanner scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")){\n      return scanner.hasNext() ? scanner.next() : \"\";\n    }\n   }\n catch (  IOException e) {\n    throw new IllegalStateException(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads the version from the  {@code vertx-version.txt} file.\n * @return the version\n */\npublic String getVersion(){\n  try (InputStream is=getClass().getClassLoader().getResourceAsStream(\"vertx-version.txt\")){\n    if (is == null) {\n      throw new IllegalStateException(\"Cannot find vertx-version.txt on classpath\");\n    }\n    try (Scanner scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")){\n      return scanner.hasNext() ? scanner.next() : \"\";\n    }\n   }\n catch (  IOException e) {\n    throw new IllegalStateException(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 57,
        "startColumnNumber" : 11,
        "endLineNumber" : 57,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Scanner scanner=new Scanner(is,\"UTF-8\").useDelimiter(\"\\\\A\")",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 57,
    "startColumnNumber" : 45,
    "endLineNumber" : 57,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}