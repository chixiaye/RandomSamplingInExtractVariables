{
  "id" : 337,
  "expression" : "\"new ReusableByteOutStream($L)\"",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/annotations/src/main/java/mindustry/annotations/remote/RemoteWriteGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"new ReusableByteOutStream($L)\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 32,
      "startColumnNumber" : 25,
      "endLineNumber" : 32,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 31,
        "startColumnNumber" : 34,
        "endLineNumber" : 32,
        "endColumnNumber" : 86
      },
      "nodeContext" : "FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 31,
        "startColumnNumber" : 34,
        "endLineNumber" : 32,
        "endColumnNumber" : 94
      },
      "nodeContext" : "FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 31,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 95
      },
      "nodeContext" : "classBuilder.addField(FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize).build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 31,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 96
      },
      "nodeContext" : "classBuilder.addField(FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize).build());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 25,
        "startColumnNumber" : 39,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeSpec.Builder classBuilder=TypeSpec.classBuilder(entry.name).addModifiers(Modifier.PUBLIC);\n  classBuilder.addJavadoc(RemoteProcess.autogenWarning);\n  classBuilder.addField(FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize).build());\n  classBuilder.addField(FieldSpec.builder(Writes.class,\"WRITE\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new Writes(new $T(OUT))\",DataOutputStream.class).build());\n  for (  MethodEntry methodEntry : entry.methods) {\n    if (methodEntry.where.isClient || methodEntry.target.isAll) {\n      writeMethodVariant(classBuilder,methodEntry,true,false);\n    }\n    if (methodEntry.where.isServer && methodEntry.target.isOne) {\n      writeMethodVariant(classBuilder,methodEntry,false,false);\n    }\n    if (methodEntry.where.isServer && methodEntry.forward) {\n      writeMethodVariant(classBuilder,methodEntry,true,true);\n    }\n  }\n  TypeSpec spec=classBuilder.build();\n  JavaFile.builder(packageName,spec).build().writeTo(BaseProcessor.filer);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1918,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ClassEntry entry : entries) {\n  TypeSpec.Builder classBuilder=TypeSpec.classBuilder(entry.name).addModifiers(Modifier.PUBLIC);\n  classBuilder.addJavadoc(RemoteProcess.autogenWarning);\n  classBuilder.addField(FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize).build());\n  classBuilder.addField(FieldSpec.builder(Writes.class,\"WRITE\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new Writes(new $T(OUT))\",DataOutputStream.class).build());\n  for (  MethodEntry methodEntry : entry.methods) {\n    if (methodEntry.where.isClient || methodEntry.target.isAll) {\n      writeMethodVariant(classBuilder,methodEntry,true,false);\n    }\n    if (methodEntry.where.isServer && methodEntry.target.isOne) {\n      writeMethodVariant(classBuilder,methodEntry,false,false);\n    }\n    if (methodEntry.where.isServer && methodEntry.forward) {\n      writeMethodVariant(classBuilder,methodEntry,true,true);\n    }\n  }\n  TypeSpec spec=classBuilder.build();\n  JavaFile.builder(packageName,spec).build().writeTo(BaseProcessor.filer);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 176,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 23,
        "startColumnNumber" : 91,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  ClassEntry entry : entries) {\n    TypeSpec.Builder classBuilder=TypeSpec.classBuilder(entry.name).addModifiers(Modifier.PUBLIC);\n    classBuilder.addJavadoc(RemoteProcess.autogenWarning);\n    classBuilder.addField(FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize).build());\n    classBuilder.addField(FieldSpec.builder(Writes.class,\"WRITE\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new Writes(new $T(OUT))\",DataOutputStream.class).build());\n    for (    MethodEntry methodEntry : entry.methods) {\n      if (methodEntry.where.isClient || methodEntry.target.isAll) {\n        writeMethodVariant(classBuilder,methodEntry,true,false);\n      }\n      if (methodEntry.where.isServer && methodEntry.target.isOne) {\n        writeMethodVariant(classBuilder,methodEntry,false,false);\n      }\n      if (methodEntry.where.isServer && methodEntry.forward) {\n        writeMethodVariant(classBuilder,methodEntry,true,true);\n      }\n    }\n    TypeSpec spec=classBuilder.build();\n    JavaFile.builder(packageName,spec).build().writeTo(BaseProcessor.filer);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2069,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Generates all classes in this list. \n */\npublic void generateFor(Seq<ClassEntry> entries,String packageName) throws IOException {\n  for (  ClassEntry entry : entries) {\n    TypeSpec.Builder classBuilder=TypeSpec.classBuilder(entry.name).addModifiers(Modifier.PUBLIC);\n    classBuilder.addJavadoc(RemoteProcess.autogenWarning);\n    classBuilder.addField(FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize).build());\n    classBuilder.addField(FieldSpec.builder(Writes.class,\"WRITE\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new Writes(new $T(OUT))\",DataOutputStream.class).build());\n    for (    MethodEntry methodEntry : entry.methods) {\n      if (methodEntry.where.isClient || methodEntry.target.isAll) {\n        writeMethodVariant(classBuilder,methodEntry,true,false);\n      }\n      if (methodEntry.where.isServer && methodEntry.target.isOne) {\n        writeMethodVariant(classBuilder,methodEntry,false,false);\n      }\n      if (methodEntry.where.isServer && methodEntry.forward) {\n        writeMethodVariant(classBuilder,methodEntry,true,true);\n      }\n    }\n    TypeSpec spec=classBuilder.build();\n    JavaFile.builder(packageName,spec).build().writeTo(BaseProcessor.filer);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 31,
        "startColumnNumber" : 34,
        "endLineNumber" : 32,
        "endColumnNumber" : 86
      },
      "nodeContext" : "FieldSpec.builder(ReusableByteOutStream.class,\"OUT\",Modifier.STATIC,Modifier.PRIVATE,Modifier.FINAL).initializer(\"new ReusableByteOutStream($L)\",RemoteProcess.maxPacketSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 32,
    "startColumnNumber" : 25,
    "endLineNumber" : 32,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}