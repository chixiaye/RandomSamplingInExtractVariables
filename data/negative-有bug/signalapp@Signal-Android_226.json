{
  "id" : 226,
  "expression" : "Log",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/core-util/src/main/java/org/signal/core/util/GraphemeClusterLimitFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 44,
      "startColumnNumber" : 8,
      "endLineNumber" : 44,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 43,
        "startColumnNumber" : 34,
        "endLineNumber" : 46,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n  return \"\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (newExpectedCount > max) {\n  Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n  return \"\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 36,
        "startColumnNumber" : 22,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  breakIteratorCompat.setText(sourceFragment);\n  int sourceLength=breakIteratorCompat.countBreaks();\n  CharSequence trimmedSource=breakIteratorCompat.take(sourceLength - (length - max));\n  breakIteratorCompat.setText(String.format(\"%s%s%s\",head,trimmedSource,tail));\n  int newExpectedCount=breakIteratorCompat.countBreaks();\n  if (newExpectedCount > max) {\n    Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n    return \"\";\n  }\n  return trimmedSource;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (length > max) {\n  breakIteratorCompat.setText(sourceFragment);\n  int sourceLength=breakIteratorCompat.countBreaks();\n  CharSequence trimmedSource=breakIteratorCompat.take(sourceLength - (length - max));\n  breakIteratorCompat.setText(String.format(\"%s%s%s\",head,trimmedSource,tail));\n  int newExpectedCount=breakIteratorCompat.countBreaks();\n  if (newExpectedCount > max) {\n    Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n    return \"\";\n  }\n  return trimmedSource;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 27,
        "startColumnNumber" : 106,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CharSequence sourceFragment=source.subSequence(start,end);\n  CharSequence head=dest.subSequence(0,dstart);\n  CharSequence tail=dest.subSequence(dend,dest.length());\n  breakIteratorCompat.setText(String.format(\"%s%s%s\",head,sourceFragment,tail));\n  int length=breakIteratorCompat.countBreaks();\n  if (length > max) {\n    breakIteratorCompat.setText(sourceFragment);\n    int sourceLength=breakIteratorCompat.countBreaks();\n    CharSequence trimmedSource=breakIteratorCompat.take(sourceLength - (length - max));\n    breakIteratorCompat.setText(String.format(\"%s%s%s\",head,trimmedSource,tail));\n    int newExpectedCount=breakIteratorCompat.countBreaks();\n    if (newExpectedCount > max) {\n      Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n      return \"\";\n    }\n    return trimmedSource;\n  }\n  return source;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public CharSequence filter(CharSequence source,int start,int end,Spanned dest,int dstart,int dend){\n  CharSequence sourceFragment=source.subSequence(start,end);\n  CharSequence head=dest.subSequence(0,dstart);\n  CharSequence tail=dest.subSequence(dend,dest.length());\n  breakIteratorCompat.setText(String.format(\"%s%s%s\",head,sourceFragment,tail));\n  int length=breakIteratorCompat.countBreaks();\n  if (length > max) {\n    breakIteratorCompat.setText(sourceFragment);\n    int sourceLength=breakIteratorCompat.countBreaks();\n    CharSequence trimmedSource=breakIteratorCompat.take(sourceLength - (length - max));\n    breakIteratorCompat.setText(String.format(\"%s%s%s\",head,trimmedSource,tail));\n    int newExpectedCount=breakIteratorCompat.countBreaks();\n    if (newExpectedCount > max) {\n      Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n      return \"\";\n    }\n    return trimmedSource;\n  }\n  return source;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Log.w(TAG,\"Failed to create string under the required length \" + newExpectedCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.signal.core.util.logging.Log"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 44,
    "startColumnNumber" : 8,
    "endLineNumber" : 44,
    "endColumnNumber" : 11
  } ],
  "layoutRelationDataList" : [ ]
}