{
  "id" : 400,
  "expression" : "currentKafkaProducer",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-contrib/eureka-kafka/src/main/java/com/netflix/eureka2/server/audit/kafka/KafkaAuditService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "currentKafkaProducer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 74,
      "startColumnNumber" : 20,
      "endLineNumber" : 74,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 74,
        "startColumnNumber" : 20,
        "endLineNumber" : 74,
        "endColumnNumber" : 48
      },
      "nodeContext" : "currentKafkaProducer != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (currentKafkaProducer != null) {\n  AuditRecord record=auditRecordQueue.peek();\n  try {\n    KeyedMessage<String,byte[]> message=new KeyedMessage<>(topic,Json.toByteArrayJson(record));\n    kafkaProducer.send(message);\n    auditRecordQueue.poll();\n  }\n catch (  Exception e) {\n    logger.error(\"Kafka message send error; reconnecting\",e);\n    kafkaProducer=null;\n    scheduleReconnect();\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 72,
        "startColumnNumber" : 48,
        "endLineNumber" : 87,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Producer<String,byte[]> currentKafkaProducer=kafkaProducer;\n  if (currentKafkaProducer != null) {\n    AuditRecord record=auditRecordQueue.peek();\n    try {\n      KeyedMessage<String,byte[]> message=new KeyedMessage<>(topic,Json.toByteArrayJson(record));\n      kafkaProducer.send(message);\n      auditRecordQueue.poll();\n    }\n catch (    Exception e) {\n      logger.error(\"Kafka message send error; reconnecting\",e);\n      kafkaProducer=null;\n      scheduleReconnect();\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (!auditRecordQueue.isEmpty()) {\n  Producer<String,byte[]> currentKafkaProducer=kafkaProducer;\n  if (currentKafkaProducer != null) {\n    AuditRecord record=auditRecordQueue.peek();\n    try {\n      KeyedMessage<String,byte[]> message=new KeyedMessage<>(topic,Json.toByteArrayJson(record));\n      kafkaProducer.send(message);\n      auditRecordQueue.poll();\n    }\n catch (    Exception e) {\n      logger.error(\"Kafka message send error; reconnecting\",e);\n      kafkaProducer=null;\n      scheduleReconnect();\n      return;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 82,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 853,
        "startLineNumber" : 70,
        "startColumnNumber" : 27,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  processorScheduled.set(false);\n  while (!auditRecordQueue.isEmpty()) {\n    Producer<String,byte[]> currentKafkaProducer=kafkaProducer;\n    if (currentKafkaProducer != null) {\n      AuditRecord record=auditRecordQueue.peek();\n      try {\n        KeyedMessage<String,byte[]> message=new KeyedMessage<>(topic,Json.toByteArrayJson(record));\n        kafkaProducer.send(message);\n        auditRecordQueue.poll();\n      }\n catch (      Exception e) {\n        logger.error(\"Kafka message send error; reconnecting\",e);\n        kafkaProducer=null;\n        scheduleReconnect();\n        return;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void call(){\n  processorScheduled.set(false);\n  while (!auditRecordQueue.isEmpty()) {\n    Producer<String,byte[]> currentKafkaProducer=kafkaProducer;\n    if (currentKafkaProducer != null) {\n      AuditRecord record=auditRecordQueue.peek();\n      try {\n        KeyedMessage<String,byte[]> message=new KeyedMessage<>(topic,Json.toByteArrayJson(record));\n        kafkaProducer.send(message);\n        auditRecordQueue.poll();\n      }\n catch (      Exception e) {\n        logger.error(\"Kafka message send error; reconnecting\",e);\n        kafkaProducer=null;\n        scheduleReconnect();\n        return;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 74,
        "startColumnNumber" : 20,
        "endLineNumber" : 74,
        "endColumnNumber" : 48
      },
      "nodeContext" : "currentKafkaProducer != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.server.audit.kafka.Producer<java.lang.String,byte[]>"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 74,
    "startColumnNumber" : 20,
    "endLineNumber" : 74,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}