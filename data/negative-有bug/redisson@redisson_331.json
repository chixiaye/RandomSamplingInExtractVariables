{
  "id" : 331,
  "expression" : "names.contains(buckets.get(0).getName())",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/RedissonBucketReactiveTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "names.contains(buckets.get(0).getName())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 107,
      "startColumnNumber" : 26,
      "endLineNumber" : 107,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(0).getName()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(0).getName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 98,
        "startColumnNumber" : 34,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindPattern(){\n  Collection<String> names=Arrays.asList(\"test:testGetPattern:one\",\"test:testGetPattern:two\");\n  Collection<String> vals=Arrays.asList(\"one-val\",\"two-val\");\n  sync(redisson.getBucket(\"test:three\").set(\"three-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:one\").set(\"one-val\"));\n  sync(redisson.getBucket(\"test:testGetPattern:two\").set(\"two-val\"));\n  List<RBucketReactive<String>> buckets=redisson.findBuckets(\"test:testGetPattern:*\");\n  Assert.assertEquals(2,buckets.size());\n  Assert.assertTrue(names.contains(buckets.get(0).getName()));\n  Assert.assertTrue(names.contains(buckets.get(1).getName()));\n  Assert.assertTrue(vals.contains(sync(buckets.get(0).get())));\n  Assert.assertTrue(vals.contains(sync(buckets.get(1).get())));\n  for (  RBucketReactive<String> bucket : buckets) {\n    bucket.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertTrue(names.contains(buckets.get(0).getName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 107,
    "startColumnNumber" : 26,
    "endLineNumber" : 107,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}