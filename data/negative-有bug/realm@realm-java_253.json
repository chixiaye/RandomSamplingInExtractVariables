{
  "id" : 253,
  "expression" : "RealmLog.class",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/examples/unitTestExample/src/test/java/io/realm/examples/unittesting/ExampleActivityTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RealmLog.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 85,
      "startColumnNumber" : 19,
      "endLineNumber" : 85,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mockStatic(RealmLog.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mockStatic(RealmLog.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4088,
        "startLineNumber" : 81,
        "startColumnNumber" : 41,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockStatic(RealmCore.class);\n  mockStatic(RealmLog.class);\n  mockStatic(Realm.class);\n  mockStatic(RealmConfiguration.class);\n  Realm.init(RuntimeEnvironment.application);\n  final Realm mockRealm=mock(Realm.class);\n  final RealmConfiguration mockRealmConfig=mock(RealmConfiguration.class);\n  doNothing().when(RealmCore.class);\n  RealmCore.loadLibrary(any(Context.class));\n  whenNew(RealmConfiguration.class).withAnyArguments().thenReturn(mockRealmConfig);\n  when(Realm.getDefaultInstance()).thenReturn(mockRealm);\n  when(mockRealm.createObject(Person.class)).thenReturn(new Person());\n  Person p1=new Person();\n  p1.setAge(14);\n  p1.setName(\"John Young\");\n  Person p2=new Person();\n  p2.setAge(89);\n  p2.setName(\"John Senior\");\n  Person p3=new Person();\n  p3.setAge(27);\n  p3.setName(\"Jane\");\n  Person p4=new Person();\n  p4.setAge(42);\n  p4.setName(\"Robert\");\n  List<Person> personList=Arrays.asList(p1,p2,p3,p4);\n  RealmQuery<Person> personQuery=mockRealmQuery();\n  when(personQuery.findFirst()).thenReturn(personList.get(0));\n  when(mockRealm.where(Person.class)).thenReturn(personQuery);\n  when(personQuery.equalTo(anyString(),anyInt())).thenReturn(personQuery);\n  mockStatic(RealmResults.class);\n  RealmResults<Person> people=mockRealmResults();\n  when(mockRealm.where(Person.class).findAll()).thenReturn(people);\n  when(personQuery.between(anyString(),anyInt(),anyInt())).thenReturn(personQuery);\n  when(personQuery.beginsWith(anyString(),anyString())).thenReturn(personQuery);\n  when(personQuery.findAll()).thenReturn(people);\n  when(people.iterator()).thenReturn(personList.iterator());\n  when(people.size()).thenReturn(personList.size());\n  this.mockRealm=mockRealm;\n  this.people=people;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 340,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4137,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void setup() throws Exception {\n  mockStatic(RealmCore.class);\n  mockStatic(RealmLog.class);\n  mockStatic(Realm.class);\n  mockStatic(RealmConfiguration.class);\n  Realm.init(RuntimeEnvironment.application);\n  final Realm mockRealm=mock(Realm.class);\n  final RealmConfiguration mockRealmConfig=mock(RealmConfiguration.class);\n  doNothing().when(RealmCore.class);\n  RealmCore.loadLibrary(any(Context.class));\n  whenNew(RealmConfiguration.class).withAnyArguments().thenReturn(mockRealmConfig);\n  when(Realm.getDefaultInstance()).thenReturn(mockRealm);\n  when(mockRealm.createObject(Person.class)).thenReturn(new Person());\n  Person p1=new Person();\n  p1.setAge(14);\n  p1.setName(\"John Young\");\n  Person p2=new Person();\n  p2.setAge(89);\n  p2.setName(\"John Senior\");\n  Person p3=new Person();\n  p3.setAge(27);\n  p3.setName(\"Jane\");\n  Person p4=new Person();\n  p4.setAge(42);\n  p4.setName(\"Robert\");\n  List<Person> personList=Arrays.asList(p1,p2,p3,p4);\n  RealmQuery<Person> personQuery=mockRealmQuery();\n  when(personQuery.findFirst()).thenReturn(personList.get(0));\n  when(mockRealm.where(Person.class)).thenReturn(personQuery);\n  when(personQuery.equalTo(anyString(),anyInt())).thenReturn(personQuery);\n  mockStatic(RealmResults.class);\n  RealmResults<Person> people=mockRealmResults();\n  when(mockRealm.where(Person.class).findAll()).thenReturn(people);\n  when(personQuery.between(anyString(),anyInt(),anyInt())).thenReturn(personQuery);\n  when(personQuery.beginsWith(anyString(),anyString())).thenReturn(personQuery);\n  when(personQuery.findAll()).thenReturn(people);\n  when(people.iterator()).thenReturn(personList.iterator());\n  when(people.size()).thenReturn(personList.size());\n  this.mockRealm=mockRealm;\n  this.people=people;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mockStatic(RealmLog.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<io.realm.log.RealmLog>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 85,
    "startColumnNumber" : 19,
    "endLineNumber" : 85,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}