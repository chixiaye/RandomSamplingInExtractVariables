{
  "id" : 388,
  "expression" : "scratchIndicesList",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/hls/HlsMediaPeriod.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "scratchIndicesList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 703,
      "startColumnNumber" : 6,
      "endLineNumber" : 703,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 703,
        "startColumnNumber" : 6,
        "endLineNumber" : 703,
        "endColumnNumber" : 32
      },
      "nodeContext" : "scratchIndicesList.clear()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 703,
        "startColumnNumber" : 6,
        "endLineNumber" : 703,
        "endColumnNumber" : 33
      },
      "nodeContext" : "scratchIndicesList.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 693,
        "startColumnNumber" : 32,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String name=audioRenditions.get(renditionByNameIndex).name;\n  if (!alreadyGroupedNames.add(name)) {\n    continue;\n  }\n  boolean renditionsHaveCodecs=true;\n  scratchPlaylistUrls.clear();\n  scratchPlaylistFormats.clear();\n  scratchIndicesList.clear();\n  for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n    if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n      Rendition rendition=audioRenditions.get(renditionIndex);\n      scratchIndicesList.add(renditionIndex);\n      scratchPlaylistUrls.add(rendition.url);\n      scratchPlaylistFormats.add(rendition.format);\n      renditionsHaveCodecs&=rendition.format.codecs != null;\n    }\n  }\n  HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n  manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n  sampleStreamWrappers.add(sampleStreamWrapper);\n  if (allowChunklessPreparation && renditionsHaveCodecs) {\n    Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n    sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 691,
        "startColumnNumber" : 4,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n  String name=audioRenditions.get(renditionByNameIndex).name;\n  if (!alreadyGroupedNames.add(name)) {\n    continue;\n  }\n  boolean renditionsHaveCodecs=true;\n  scratchPlaylistUrls.clear();\n  scratchPlaylistFormats.clear();\n  scratchIndicesList.clear();\n  for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n    if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n      Rendition rendition=audioRenditions.get(renditionIndex);\n      scratchIndicesList.add(renditionIndex);\n      scratchPlaylistUrls.add(rendition.url);\n      scratchPlaylistFormats.add(rendition.format);\n      renditionsHaveCodecs&=rendition.format.codecs != null;\n    }\n  }\n  HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n  manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n  sampleStreamWrappers.add(sampleStreamWrapper);\n  if (allowChunklessPreparation && renditionsHaveCodecs) {\n    Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n    sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2304,
        "startLineNumber" : 683,
        "startColumnNumber" : 54,
        "endLineNumber" : 733,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ArrayList<Uri> scratchPlaylistUrls=new ArrayList<>(audioRenditions.size());\n  ArrayList<Format> scratchPlaylistFormats=new ArrayList<>(audioRenditions.size());\n  ArrayList<Integer> scratchIndicesList=new ArrayList<>(audioRenditions.size());\n  HashSet<String> alreadyGroupedNames=new HashSet<>();\n  for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n    String name=audioRenditions.get(renditionByNameIndex).name;\n    if (!alreadyGroupedNames.add(name)) {\n      continue;\n    }\n    boolean renditionsHaveCodecs=true;\n    scratchPlaylistUrls.clear();\n    scratchPlaylistFormats.clear();\n    scratchIndicesList.clear();\n    for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n      if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n        Rendition rendition=audioRenditions.get(renditionIndex);\n        scratchIndicesList.add(renditionIndex);\n        scratchPlaylistUrls.add(rendition.url);\n        scratchPlaylistFormats.add(rendition.format);\n        renditionsHaveCodecs&=rendition.format.codecs != null;\n      }\n    }\n    HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n    manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n    sampleStreamWrappers.add(sampleStreamWrapper);\n    if (allowChunklessPreparation && renditionsHaveCodecs) {\n      Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n      sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 678,
        "startColumnNumber" : 2,
        "endLineNumber" : 733,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void buildAndPrepareAudioSampleStreamWrappers(long positionUs,List<Rendition> audioRenditions,List<HlsSampleStreamWrapper> sampleStreamWrappers,List<int[]> manifestUrlsIndicesPerWrapper,Map<String,DrmInitData> overridingDrmInitData){\n  ArrayList<Uri> scratchPlaylistUrls=new ArrayList<>(audioRenditions.size());\n  ArrayList<Format> scratchPlaylistFormats=new ArrayList<>(audioRenditions.size());\n  ArrayList<Integer> scratchIndicesList=new ArrayList<>(audioRenditions.size());\n  HashSet<String> alreadyGroupedNames=new HashSet<>();\n  for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n    String name=audioRenditions.get(renditionByNameIndex).name;\n    if (!alreadyGroupedNames.add(name)) {\n      continue;\n    }\n    boolean renditionsHaveCodecs=true;\n    scratchPlaylistUrls.clear();\n    scratchPlaylistFormats.clear();\n    scratchIndicesList.clear();\n    for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n      if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n        Rendition rendition=audioRenditions.get(renditionIndex);\n        scratchIndicesList.add(renditionIndex);\n        scratchPlaylistUrls.add(rendition.url);\n        scratchPlaylistFormats.add(rendition.format);\n        renditionsHaveCodecs&=rendition.format.codecs != null;\n      }\n    }\n    HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n    manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n    sampleStreamWrappers.add(sampleStreamWrapper);\n    if (allowChunklessPreparation && renditionsHaveCodecs) {\n      Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n      sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 703,
        "startColumnNumber" : 6,
        "endLineNumber" : 703,
        "endColumnNumber" : 33
      },
      "nodeContext" : "scratchIndicesList.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.Integer>"
  }, {
    "nodeContext" : "scratchIndicesList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 708,
      "startColumnNumber" : 10,
      "endLineNumber" : 708,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 708,
        "startColumnNumber" : 10,
        "endLineNumber" : 708,
        "endColumnNumber" : 48
      },
      "nodeContext" : "scratchIndicesList.add(renditionIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 708,
        "startColumnNumber" : 10,
        "endLineNumber" : 708,
        "endColumnNumber" : 49
      },
      "nodeContext" : "scratchIndicesList.add(renditionIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 706,
        "startColumnNumber" : 75,
        "endLineNumber" : 712,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Rendition rendition=audioRenditions.get(renditionIndex);\n  scratchIndicesList.add(renditionIndex);\n  scratchPlaylistUrls.add(rendition.url);\n  scratchPlaylistFormats.add(rendition.format);\n  renditionsHaveCodecs&=rendition.format.codecs != null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 706,
        "startColumnNumber" : 8,
        "endLineNumber" : 712,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n  Rendition rendition=audioRenditions.get(renditionIndex);\n  scratchIndicesList.add(renditionIndex);\n  scratchPlaylistUrls.add(rendition.url);\n  scratchPlaylistFormats.add(rendition.format);\n  renditionsHaveCodecs&=rendition.format.codecs != null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 705,
        "startColumnNumber" : 94,
        "endLineNumber" : 713,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n    Rendition rendition=audioRenditions.get(renditionIndex);\n    scratchIndicesList.add(renditionIndex);\n    scratchPlaylistUrls.add(rendition.url);\n    scratchPlaylistFormats.add(rendition.format);\n    renditionsHaveCodecs&=rendition.format.codecs != null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 705,
        "startColumnNumber" : 6,
        "endLineNumber" : 713,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n  if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n    Rendition rendition=audioRenditions.get(renditionIndex);\n    scratchIndicesList.add(renditionIndex);\n    scratchPlaylistUrls.add(rendition.url);\n    scratchPlaylistFormats.add(rendition.format);\n    renditionsHaveCodecs&=rendition.format.codecs != null;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 693,
        "startColumnNumber" : 32,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String name=audioRenditions.get(renditionByNameIndex).name;\n  if (!alreadyGroupedNames.add(name)) {\n    continue;\n  }\n  boolean renditionsHaveCodecs=true;\n  scratchPlaylistUrls.clear();\n  scratchPlaylistFormats.clear();\n  scratchIndicesList.clear();\n  for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n    if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n      Rendition rendition=audioRenditions.get(renditionIndex);\n      scratchIndicesList.add(renditionIndex);\n      scratchPlaylistUrls.add(rendition.url);\n      scratchPlaylistFormats.add(rendition.format);\n      renditionsHaveCodecs&=rendition.format.codecs != null;\n    }\n  }\n  HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n  manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n  sampleStreamWrappers.add(sampleStreamWrapper);\n  if (allowChunklessPreparation && renditionsHaveCodecs) {\n    Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n    sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 691,
        "startColumnNumber" : 4,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n  String name=audioRenditions.get(renditionByNameIndex).name;\n  if (!alreadyGroupedNames.add(name)) {\n    continue;\n  }\n  boolean renditionsHaveCodecs=true;\n  scratchPlaylistUrls.clear();\n  scratchPlaylistFormats.clear();\n  scratchIndicesList.clear();\n  for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n    if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n      Rendition rendition=audioRenditions.get(renditionIndex);\n      scratchIndicesList.add(renditionIndex);\n      scratchPlaylistUrls.add(rendition.url);\n      scratchPlaylistFormats.add(rendition.format);\n      renditionsHaveCodecs&=rendition.format.codecs != null;\n    }\n  }\n  HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n  manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n  sampleStreamWrappers.add(sampleStreamWrapper);\n  if (allowChunklessPreparation && renditionsHaveCodecs) {\n    Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n    sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2304,
        "startLineNumber" : 683,
        "startColumnNumber" : 54,
        "endLineNumber" : 733,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ArrayList<Uri> scratchPlaylistUrls=new ArrayList<>(audioRenditions.size());\n  ArrayList<Format> scratchPlaylistFormats=new ArrayList<>(audioRenditions.size());\n  ArrayList<Integer> scratchIndicesList=new ArrayList<>(audioRenditions.size());\n  HashSet<String> alreadyGroupedNames=new HashSet<>();\n  for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n    String name=audioRenditions.get(renditionByNameIndex).name;\n    if (!alreadyGroupedNames.add(name)) {\n      continue;\n    }\n    boolean renditionsHaveCodecs=true;\n    scratchPlaylistUrls.clear();\n    scratchPlaylistFormats.clear();\n    scratchIndicesList.clear();\n    for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n      if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n        Rendition rendition=audioRenditions.get(renditionIndex);\n        scratchIndicesList.add(renditionIndex);\n        scratchPlaylistUrls.add(rendition.url);\n        scratchPlaylistFormats.add(rendition.format);\n        renditionsHaveCodecs&=rendition.format.codecs != null;\n      }\n    }\n    HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n    manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n    sampleStreamWrappers.add(sampleStreamWrapper);\n    if (allowChunklessPreparation && renditionsHaveCodecs) {\n      Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n      sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 678,
        "startColumnNumber" : 2,
        "endLineNumber" : 733,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void buildAndPrepareAudioSampleStreamWrappers(long positionUs,List<Rendition> audioRenditions,List<HlsSampleStreamWrapper> sampleStreamWrappers,List<int[]> manifestUrlsIndicesPerWrapper,Map<String,DrmInitData> overridingDrmInitData){\n  ArrayList<Uri> scratchPlaylistUrls=new ArrayList<>(audioRenditions.size());\n  ArrayList<Format> scratchPlaylistFormats=new ArrayList<>(audioRenditions.size());\n  ArrayList<Integer> scratchIndicesList=new ArrayList<>(audioRenditions.size());\n  HashSet<String> alreadyGroupedNames=new HashSet<>();\n  for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n    String name=audioRenditions.get(renditionByNameIndex).name;\n    if (!alreadyGroupedNames.add(name)) {\n      continue;\n    }\n    boolean renditionsHaveCodecs=true;\n    scratchPlaylistUrls.clear();\n    scratchPlaylistFormats.clear();\n    scratchIndicesList.clear();\n    for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n      if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n        Rendition rendition=audioRenditions.get(renditionIndex);\n        scratchIndicesList.add(renditionIndex);\n        scratchPlaylistUrls.add(rendition.url);\n        scratchPlaylistFormats.add(rendition.format);\n        renditionsHaveCodecs&=rendition.format.codecs != null;\n      }\n    }\n    HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n    manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n    sampleStreamWrappers.add(sampleStreamWrapper);\n    if (allowChunklessPreparation && renditionsHaveCodecs) {\n      Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n      sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 708,
        "startColumnNumber" : 10,
        "endLineNumber" : 708,
        "endColumnNumber" : 49
      },
      "nodeContext" : "scratchIndicesList.add(renditionIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.Integer>"
  }, {
    "nodeContext" : "scratchIndicesList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 724,
      "startColumnNumber" : 53,
      "endLineNumber" : 724,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 724,
        "startColumnNumber" : 40,
        "endLineNumber" : 724,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Util.toArray(scratchIndicesList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 724,
        "startColumnNumber" : 6,
        "endLineNumber" : 724,
        "endColumnNumber" : 73
      },
      "nodeContext" : "manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 724,
        "startColumnNumber" : 6,
        "endLineNumber" : 724,
        "endColumnNumber" : 74
      },
      "nodeContext" : "manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 693,
        "startColumnNumber" : 32,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String name=audioRenditions.get(renditionByNameIndex).name;\n  if (!alreadyGroupedNames.add(name)) {\n    continue;\n  }\n  boolean renditionsHaveCodecs=true;\n  scratchPlaylistUrls.clear();\n  scratchPlaylistFormats.clear();\n  scratchIndicesList.clear();\n  for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n    if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n      Rendition rendition=audioRenditions.get(renditionIndex);\n      scratchIndicesList.add(renditionIndex);\n      scratchPlaylistUrls.add(rendition.url);\n      scratchPlaylistFormats.add(rendition.format);\n      renditionsHaveCodecs&=rendition.format.codecs != null;\n    }\n  }\n  HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n  manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n  sampleStreamWrappers.add(sampleStreamWrapper);\n  if (allowChunklessPreparation && renditionsHaveCodecs) {\n    Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n    sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 691,
        "startColumnNumber" : 4,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n  String name=audioRenditions.get(renditionByNameIndex).name;\n  if (!alreadyGroupedNames.add(name)) {\n    continue;\n  }\n  boolean renditionsHaveCodecs=true;\n  scratchPlaylistUrls.clear();\n  scratchPlaylistFormats.clear();\n  scratchIndicesList.clear();\n  for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n    if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n      Rendition rendition=audioRenditions.get(renditionIndex);\n      scratchIndicesList.add(renditionIndex);\n      scratchPlaylistUrls.add(rendition.url);\n      scratchPlaylistFormats.add(rendition.format);\n      renditionsHaveCodecs&=rendition.format.codecs != null;\n    }\n  }\n  HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n  manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n  sampleStreamWrappers.add(sampleStreamWrapper);\n  if (allowChunklessPreparation && renditionsHaveCodecs) {\n    Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n    sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2304,
        "startLineNumber" : 683,
        "startColumnNumber" : 54,
        "endLineNumber" : 733,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ArrayList<Uri> scratchPlaylistUrls=new ArrayList<>(audioRenditions.size());\n  ArrayList<Format> scratchPlaylistFormats=new ArrayList<>(audioRenditions.size());\n  ArrayList<Integer> scratchIndicesList=new ArrayList<>(audioRenditions.size());\n  HashSet<String> alreadyGroupedNames=new HashSet<>();\n  for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n    String name=audioRenditions.get(renditionByNameIndex).name;\n    if (!alreadyGroupedNames.add(name)) {\n      continue;\n    }\n    boolean renditionsHaveCodecs=true;\n    scratchPlaylistUrls.clear();\n    scratchPlaylistFormats.clear();\n    scratchIndicesList.clear();\n    for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n      if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n        Rendition rendition=audioRenditions.get(renditionIndex);\n        scratchIndicesList.add(renditionIndex);\n        scratchPlaylistUrls.add(rendition.url);\n        scratchPlaylistFormats.add(rendition.format);\n        renditionsHaveCodecs&=rendition.format.codecs != null;\n      }\n    }\n    HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n    manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n    sampleStreamWrappers.add(sampleStreamWrapper);\n    if (allowChunklessPreparation && renditionsHaveCodecs) {\n      Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n      sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 678,
        "startColumnNumber" : 2,
        "endLineNumber" : 733,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void buildAndPrepareAudioSampleStreamWrappers(long positionUs,List<Rendition> audioRenditions,List<HlsSampleStreamWrapper> sampleStreamWrappers,List<int[]> manifestUrlsIndicesPerWrapper,Map<String,DrmInitData> overridingDrmInitData){\n  ArrayList<Uri> scratchPlaylistUrls=new ArrayList<>(audioRenditions.size());\n  ArrayList<Format> scratchPlaylistFormats=new ArrayList<>(audioRenditions.size());\n  ArrayList<Integer> scratchIndicesList=new ArrayList<>(audioRenditions.size());\n  HashSet<String> alreadyGroupedNames=new HashSet<>();\n  for (int renditionByNameIndex=0; renditionByNameIndex < audioRenditions.size(); renditionByNameIndex++) {\n    String name=audioRenditions.get(renditionByNameIndex).name;\n    if (!alreadyGroupedNames.add(name)) {\n      continue;\n    }\n    boolean renditionsHaveCodecs=true;\n    scratchPlaylistUrls.clear();\n    scratchPlaylistFormats.clear();\n    scratchIndicesList.clear();\n    for (int renditionIndex=0; renditionIndex < audioRenditions.size(); renditionIndex++) {\n      if (Util.areEqual(name,audioRenditions.get(renditionIndex).name)) {\n        Rendition rendition=audioRenditions.get(renditionIndex);\n        scratchIndicesList.add(renditionIndex);\n        scratchPlaylistUrls.add(rendition.url);\n        scratchPlaylistFormats.add(rendition.format);\n        renditionsHaveCodecs&=rendition.format.codecs != null;\n      }\n    }\n    HlsSampleStreamWrapper sampleStreamWrapper=buildSampleStreamWrapper(C.TRACK_TYPE_AUDIO,scratchPlaylistUrls.toArray(Util.castNonNullTypeArray(new Uri[0])),scratchPlaylistFormats.toArray(new Format[0]),null,Collections.emptyList(),overridingDrmInitData,positionUs);\n    manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n    sampleStreamWrappers.add(sampleStreamWrapper);\n    if (allowChunklessPreparation && renditionsHaveCodecs) {\n      Format[] renditionFormats=scratchPlaylistFormats.toArray(new Format[0]);\n      sampleStreamWrapper.prepareWithMasterPlaylistInfo(new TrackGroup[]{new TrackGroup(renditionFormats)},0);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 724,
        "startColumnNumber" : 6,
        "endLineNumber" : 724,
        "endColumnNumber" : 74
      },
      "nodeContext" : "manifestUrlsIndicesPerWrapper.add(Util.toArray(scratchIndicesList));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 703,
    "startColumnNumber" : 6,
    "endLineNumber" : 703,
    "endColumnNumber" : 24
  }, {
    "charLength" : 18,
    "startLineNumber" : 708,
    "startColumnNumber" : 10,
    "endLineNumber" : 708,
    "endColumnNumber" : 28
  }, {
    "charLength" : 18,
    "startLineNumber" : 724,
    "startColumnNumber" : 53,
    "endLineNumber" : 724,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}