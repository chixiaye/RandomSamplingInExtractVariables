{
  "id" : 99,
  "expression" : "\"NULL\"",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/main/java/org/apache/ibatis/datasource/pooled/PoolState.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"NULL\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 73,
      "startColumnNumber" : 99,
      "endLineNumber" : 73,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 73,
        "startColumnNumber" : 64,
        "endLineNumber" : 73,
        "endColumnNumber" : 122
      },
      "nodeContext" : "dataSource.getPassword() == null ? \"NULL\" : \"************\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 73,
        "startColumnNumber" : 63,
        "endLineNumber" : 73,
        "endColumnNumber" : 123
      },
      "nodeContext" : "(dataSource.getPassword() == null ? \"NULL\" : \"************\")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 124
      },
      "nodeContext" : "buffer.append(\"\\n jdbcPassword                   \").append((dataSource.getPassword() == null ? \"NULL\" : \"************\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 125
      },
      "nodeContext" : "buffer.append(\"\\n jdbcPassword                   \").append((dataSource.getPassword() == null ? \"NULL\" : \"************\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2349,
        "startLineNumber" : 67,
        "startColumnNumber" : 40,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuffer buffer=new StringBuffer();\n  buffer.append(\"\\n===CONFINGURATION==============================================\");\n  buffer.append(\"\\n jdbcDriver                     \").append(dataSource.getDriver());\n  buffer.append(\"\\n jdbcUrl                        \").append(dataSource.getUrl());\n  buffer.append(\"\\n jdbcUsername                   \").append(dataSource.getUsername());\n  buffer.append(\"\\n jdbcPassword                   \").append((dataSource.getPassword() == null ? \"NULL\" : \"************\"));\n  buffer.append(\"\\n poolMaxActiveConnections       \").append(dataSource.poolMaximumActiveConnections);\n  buffer.append(\"\\n poolMaxIdleConnections         \").append(dataSource.poolMaximumIdleConnections);\n  buffer.append(\"\\n poolMaxCheckoutTime            \").append(dataSource.poolMaximumCheckoutTime);\n  buffer.append(\"\\n poolTimeToWait                 \").append(dataSource.poolTimeToWait);\n  buffer.append(\"\\n poolPingEnabled                \").append(dataSource.poolPingEnabled);\n  buffer.append(\"\\n poolPingQuery                  \").append(dataSource.poolPingQuery);\n  buffer.append(\"\\n poolPingConnectionsNotUsedFor  \").append(dataSource.poolPingConnectionsNotUsedFor);\n  buffer.append(\"\\n ---STATUS-----------------------------------------------------\");\n  buffer.append(\"\\n activeConnections              \").append(getActiveConnectionCount());\n  buffer.append(\"\\n idleConnections                \").append(getIdleConnectionCount());\n  buffer.append(\"\\n requestCount                   \").append(getRequestCount());\n  buffer.append(\"\\n averageRequestTime             \").append(getAverageRequestTime());\n  buffer.append(\"\\n averageCheckoutTime            \").append(getAverageCheckoutTime());\n  buffer.append(\"\\n claimedOverdue                 \").append(getClaimedOverdueConnectionCount());\n  buffer.append(\"\\n averageOverdueCheckoutTime     \").append(getAverageOverdueCheckoutTime());\n  buffer.append(\"\\n hadToWait                      \").append(getHadToWaitCount());\n  buffer.append(\"\\n averageWaitTime                \").append(getAverageWaitTime());\n  buffer.append(\"\\n badConnectionCount             \").append(getBadConnectionCount());\n  buffer.append(\"\\n===============================================================\");\n  return buffer.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2387,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public synchronized String toString(){\n  StringBuffer buffer=new StringBuffer();\n  buffer.append(\"\\n===CONFINGURATION==============================================\");\n  buffer.append(\"\\n jdbcDriver                     \").append(dataSource.getDriver());\n  buffer.append(\"\\n jdbcUrl                        \").append(dataSource.getUrl());\n  buffer.append(\"\\n jdbcUsername                   \").append(dataSource.getUsername());\n  buffer.append(\"\\n jdbcPassword                   \").append((dataSource.getPassword() == null ? \"NULL\" : \"************\"));\n  buffer.append(\"\\n poolMaxActiveConnections       \").append(dataSource.poolMaximumActiveConnections);\n  buffer.append(\"\\n poolMaxIdleConnections         \").append(dataSource.poolMaximumIdleConnections);\n  buffer.append(\"\\n poolMaxCheckoutTime            \").append(dataSource.poolMaximumCheckoutTime);\n  buffer.append(\"\\n poolTimeToWait                 \").append(dataSource.poolTimeToWait);\n  buffer.append(\"\\n poolPingEnabled                \").append(dataSource.poolPingEnabled);\n  buffer.append(\"\\n poolPingQuery                  \").append(dataSource.poolPingQuery);\n  buffer.append(\"\\n poolPingConnectionsNotUsedFor  \").append(dataSource.poolPingConnectionsNotUsedFor);\n  buffer.append(\"\\n ---STATUS-----------------------------------------------------\");\n  buffer.append(\"\\n activeConnections              \").append(getActiveConnectionCount());\n  buffer.append(\"\\n idleConnections                \").append(getIdleConnectionCount());\n  buffer.append(\"\\n requestCount                   \").append(getRequestCount());\n  buffer.append(\"\\n averageRequestTime             \").append(getAverageRequestTime());\n  buffer.append(\"\\n averageCheckoutTime            \").append(getAverageCheckoutTime());\n  buffer.append(\"\\n claimedOverdue                 \").append(getClaimedOverdueConnectionCount());\n  buffer.append(\"\\n averageOverdueCheckoutTime     \").append(getAverageOverdueCheckoutTime());\n  buffer.append(\"\\n hadToWait                      \").append(getHadToWaitCount());\n  buffer.append(\"\\n averageWaitTime                \").append(getAverageWaitTime());\n  buffer.append(\"\\n badConnectionCount             \").append(getBadConnectionCount());\n  buffer.append(\"\\n===============================================================\");\n  return buffer.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 125
      },
      "nodeContext" : "buffer.append(\"\\n jdbcPassword                   \").append((dataSource.getPassword() == null ? \"NULL\" : \"************\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 73,
    "startColumnNumber" : 99,
    "endLineNumber" : 73,
    "endColumnNumber" : 105
  } ],
  "layoutRelationDataList" : [ ]
}