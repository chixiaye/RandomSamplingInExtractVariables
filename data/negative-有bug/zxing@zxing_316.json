{
  "id" : 316,
  "expression" : "size + numBits",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/BitArray.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "size + numBits",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 237,
      "startColumnNumber" : 19,
      "endLineNumber" : 237,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 237,
        "startColumnNumber" : 4,
        "endLineNumber" : 237,
        "endColumnNumber" : 34
      },
      "nodeContext" : "ensureCapacity(size + numBits)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 237,
        "startColumnNumber" : 4,
        "endLineNumber" : 237,
        "endColumnNumber" : 35
      },
      "nodeContext" : "ensureCapacity(size + numBits);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 233,
        "startColumnNumber" : 49,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 0 || numBits > 32) {\n    throw new IllegalArgumentException(\"Num bits must be between 0 and 32\");\n  }\n  ensureCapacity(size + numBits);\n  for (int numBitsLeft=numBits; numBitsLeft > 0; numBitsLeft--) {\n    appendBit(((value >> (numBitsLeft - 1)) & 0x01) == 1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 228,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Appends the least-significant bits, from value, in order from most-significant to least-significant. For example, appending 6 bits from 0x000001E will append the bits 0, 1, 1, 1, 1, 0 in that order.\n */\npublic void appendBits(int value,int numBits){\n  if (numBits < 0 || numBits > 32) {\n    throw new IllegalArgumentException(\"Num bits must be between 0 and 32\");\n  }\n  ensureCapacity(size + numBits);\n  for (int numBitsLeft=numBits; numBitsLeft > 0; numBitsLeft--) {\n    appendBit(((value >> (numBitsLeft - 1)) & 0x01) == 1);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 237,
        "startColumnNumber" : 4,
        "endLineNumber" : 237,
        "endColumnNumber" : 35
      },
      "nodeContext" : "ensureCapacity(size + numBits);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 237,
    "startColumnNumber" : 19,
    "endLineNumber" : 237,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}