{
  "id" : 309,
  "expression" : "meterId.getName()",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/meter/MeterServiceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "meterId.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 191,
      "startColumnNumber" : 51,
      "endLineNumber" : 191,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertEquals(singleValue.getName(),meterId.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertEquals(singleValue.getName(),meterId.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 175,
        "startColumnNumber" : 104,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertNotNull(meterData);\n  if (firstData) {\n    Assert.assertEquals(meterData.getService(),\"testService\");\n    Assert.assertEquals(meterData.getServiceInstance(),\"testServiceInstance\");\n    Assert.assertTrue(meterData.getTimestamp() > 0);\n  }\n else {\n    Assert.assertEquals(meterData.getService(),\"\");\n    Assert.assertEquals(meterData.getServiceInstance(),\"\");\n    Assert.assertTrue(meterData.getTimestamp() == 0L);\n  }\n  Assert.assertEquals(meterData.getMetricCase(),MeterData.MetricCase.SINGLEVALUE);\n  Assert.assertNotNull(meterData.getSingleValue());\n  final MeterSingleValue singleValue=meterData.getSingleValue();\n  Assert.assertEquals(singleValue.getName(),meterId.getName());\n  Assert.assertEquals(singleValue.getLabelsList(),meterId.transformTags());\n  Assert.assertEquals(singleValue.getValue(),count,0.0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Check counter message\n */\nprivate void isSameWithCounter(MeterData meterData,boolean firstData,MeterId meterId,long count){\n  Assert.assertNotNull(meterData);\n  if (firstData) {\n    Assert.assertEquals(meterData.getService(),\"testService\");\n    Assert.assertEquals(meterData.getServiceInstance(),\"testServiceInstance\");\n    Assert.assertTrue(meterData.getTimestamp() > 0);\n  }\n else {\n    Assert.assertEquals(meterData.getService(),\"\");\n    Assert.assertEquals(meterData.getServiceInstance(),\"\");\n    Assert.assertTrue(meterData.getTimestamp() == 0L);\n  }\n  Assert.assertEquals(meterData.getMetricCase(),MeterData.MetricCase.SINGLEVALUE);\n  Assert.assertNotNull(meterData.getSingleValue());\n  final MeterSingleValue singleValue=meterData.getSingleValue();\n  Assert.assertEquals(singleValue.getName(),meterId.getName());\n  Assert.assertEquals(singleValue.getLabelsList(),meterId.transformTags());\n  Assert.assertEquals(singleValue.getValue(),count,0.0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertEquals(singleValue.getName(),meterId.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 191,
    "startColumnNumber" : 51,
    "endLineNumber" : 191,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}