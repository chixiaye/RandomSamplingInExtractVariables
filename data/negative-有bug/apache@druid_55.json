{
  "id" : 55,
  "expression" : "results",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/kinesis-indexing-service/src/test/java/org/apache/druid/indexing/kinesis/KinesisIndexTaskClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "results",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 252,
      "startColumnNumber" : 27,
      "endLineNumber" : 252,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 252,
        "startColumnNumber" : 27,
        "endLineNumber" : 252,
        "endColumnNumber" : 41
      },
      "nodeContext" : "results.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 252,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertEquals(0,results.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 252,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assert.assertEquals(0,results.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 913,
        "startLineNumber" : 230,
        "startColumnNumber" : 2,
        "endLineNumber" : 253,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EasyMock.expect(responseHolder.getStatus()).andReturn(HttpResponseStatus.NOT_FOUND).times(3).andReturn(HttpResponseStatus.OK);\n  EasyMock.expect(responseHolder.getResponse()).andReturn(response);\n  EasyMock.expect(responseHolder.getContent()).andReturn(\"\").times(2).andReturn(\"{}\");\n  EasyMock.expect(response.headers()).andReturn(headers);\n  EasyMock.expect(headers.get(\"X-Druid-Task-Id\")).andReturn(\"a-different-task-id\");\n  EasyMock.expect(httpClient.go(EasyMock.anyObject(Request.class),EasyMock.anyObject(StringFullResponseHandler.class),EasyMock.eq(TEST_HTTP_TIMEOUT))).andReturn(Futures.immediateFuture(responseHolder)).times(2);\n  replayAll();\n  Map<String,String> results=client.getCurrentOffsets(TEST_ID,true);\n  verifyAll();\n  Assert.assertEquals(0,results.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 228,
        "startColumnNumber" : 2,
        "endLineNumber" : 253,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTaskLocationMismatch(){\n  EasyMock.expect(responseHolder.getStatus()).andReturn(HttpResponseStatus.NOT_FOUND).times(3).andReturn(HttpResponseStatus.OK);\n  EasyMock.expect(responseHolder.getResponse()).andReturn(response);\n  EasyMock.expect(responseHolder.getContent()).andReturn(\"\").times(2).andReturn(\"{}\");\n  EasyMock.expect(response.headers()).andReturn(headers);\n  EasyMock.expect(headers.get(\"X-Druid-Task-Id\")).andReturn(\"a-different-task-id\");\n  EasyMock.expect(httpClient.go(EasyMock.anyObject(Request.class),EasyMock.anyObject(StringFullResponseHandler.class),EasyMock.eq(TEST_HTTP_TIMEOUT))).andReturn(Futures.immediateFuture(responseHolder)).times(2);\n  replayAll();\n  Map<String,String> results=client.getCurrentOffsets(TEST_ID,true);\n  verifyAll();\n  Assert.assertEquals(0,results.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 252,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assert.assertEquals(0,results.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 252,
    "startColumnNumber" : 27,
    "endLineNumber" : 252,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}