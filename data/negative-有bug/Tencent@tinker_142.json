{
  "id" : 142,
  "expression" : "libName.isEmpty()",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-lib-no-op/src/main/java/com/tencent/tinker/lib/library/TinkerLoadLibrary.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "libName.isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 31,
      "startColumnNumber" : 31,
      "endLineNumber" : 31,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 12,
        "endLineNumber" : 31,
        "endColumnNumber" : 48
      },
      "nodeContext" : "libName == null || libName.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 31,
        "startColumnNumber" : 12,
        "endLineNumber" : 31,
        "endColumnNumber" : 67
      },
      "nodeContext" : "libName == null || libName.isEmpty() || context == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (libName == null || libName.isEmpty() || context == null) {\n  throw new TinkerRuntimeException(\"libName or context is null!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 30,
        "startColumnNumber" : 71,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (libName == null || libName.isEmpty() || context == null) {\n    throw new TinkerRuntimeException(\"libName or context is null!\");\n  }\n  System.loadLibrary(libName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void loadArmLibrary(Context context,String libName){\n  if (libName == null || libName.isEmpty() || context == null) {\n    throw new TinkerRuntimeException(\"libName or context is null!\");\n  }\n  System.loadLibrary(libName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 31,
        "startColumnNumber" : 12,
        "endLineNumber" : 31,
        "endColumnNumber" : 67
      },
      "nodeContext" : "libName == null || libName.isEmpty() || context == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 31,
    "startColumnNumber" : 31,
    "endLineNumber" : 31,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}