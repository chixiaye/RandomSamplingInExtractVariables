{
  "id" : 30,
  "expression" : "AbstractLogRecord.TRACE_SEGMENT_ID",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-storage-plugin/storage-banyandb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/banyandb/stream/BanyanDBLogQueryDAO.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AbstractLogRecord.TRACE_SEGMENT_ID",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 93,
      "startColumnNumber" : 37,
      "endLineNumber" : 93,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 93,
        "startColumnNumber" : 34,
        "endLineNumber" : 93,
        "endColumnNumber" : 101
      },
      "nodeContext" : "eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 93,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 102
      },
      "nodeContext" : "query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 93,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 103
      },
      "nodeContext" : "query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 92,
        "startColumnNumber" : 76,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 92,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (StringUtil.isNotEmpty(relatedTrace.getSegmentId())) {\n  query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 88,
        "startColumnNumber" : 51,
        "endLineNumber" : 98,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (StringUtil.isNotEmpty(relatedTrace.getTraceId())) {\n    query.and(eq(AbstractLogRecord.TRACE_ID,relatedTrace.getTraceId()));\n  }\n  if (StringUtil.isNotEmpty(relatedTrace.getSegmentId())) {\n    query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n  }\n  if (Objects.nonNull(relatedTrace.getSpanId())) {\n    query.and(eq(AbstractLogRecord.SPAN_ID,(long)relatedTrace.getSpanId()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Objects.nonNull(relatedTrace)) {\n  if (StringUtil.isNotEmpty(relatedTrace.getTraceId())) {\n    query.and(eq(AbstractLogRecord.TRACE_ID,relatedTrace.getTraceId()));\n  }\n  if (StringUtil.isNotEmpty(relatedTrace.getSegmentId())) {\n    query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n  }\n  if (Objects.nonNull(relatedTrace.getSpanId())) {\n    query.and(eq(AbstractLogRecord.SPAN_ID,(long)relatedTrace.getSpanId()));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1538,
        "startLineNumber" : 77,
        "startColumnNumber" : 49,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (StringUtil.isNotEmpty(serviceId)) {\n    query.and(eq(AbstractLogRecord.SERVICE_ID,serviceId));\n  }\n  if (StringUtil.isNotEmpty(serviceInstanceId)) {\n    query.and(eq(AbstractLogRecord.SERVICE_INSTANCE_ID,serviceInstanceId));\n  }\n  if (StringUtil.isNotEmpty(endpointId)) {\n    query.and(eq(AbstractLogRecord.ENDPOINT_ID,endpointId));\n  }\n  if (Objects.nonNull(relatedTrace)) {\n    if (StringUtil.isNotEmpty(relatedTrace.getTraceId())) {\n      query.and(eq(AbstractLogRecord.TRACE_ID,relatedTrace.getTraceId()));\n    }\n    if (StringUtil.isNotEmpty(relatedTrace.getSegmentId())) {\n      query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n    }\n    if (Objects.nonNull(relatedTrace.getSpanId())) {\n      query.and(eq(AbstractLogRecord.SPAN_ID,(long)relatedTrace.getSpanId()));\n    }\n  }\n  if (CollectionUtils.isNotEmpty(tags)) {\n    List<String> tagsConditions=new ArrayList<>(tags.size());\n    for (    final Tag tag : tags) {\n      tagsConditions.add(tag.toString());\n    }\n    query.and(having(LogRecord.TAGS,tagsConditions));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void apply(StreamQuery query){\n  if (StringUtil.isNotEmpty(serviceId)) {\n    query.and(eq(AbstractLogRecord.SERVICE_ID,serviceId));\n  }\n  if (StringUtil.isNotEmpty(serviceInstanceId)) {\n    query.and(eq(AbstractLogRecord.SERVICE_INSTANCE_ID,serviceInstanceId));\n  }\n  if (StringUtil.isNotEmpty(endpointId)) {\n    query.and(eq(AbstractLogRecord.ENDPOINT_ID,endpointId));\n  }\n  if (Objects.nonNull(relatedTrace)) {\n    if (StringUtil.isNotEmpty(relatedTrace.getTraceId())) {\n      query.and(eq(AbstractLogRecord.TRACE_ID,relatedTrace.getTraceId()));\n    }\n    if (StringUtil.isNotEmpty(relatedTrace.getSegmentId())) {\n      query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n    }\n    if (Objects.nonNull(relatedTrace.getSpanId())) {\n      query.and(eq(AbstractLogRecord.SPAN_ID,(long)relatedTrace.getSpanId()));\n    }\n  }\n  if (CollectionUtils.isNotEmpty(tags)) {\n    List<String> tagsConditions=new ArrayList<>(tags.size());\n    for (    final Tag tag : tags) {\n      tagsConditions.add(tag.toString());\n    }\n    query.and(having(LogRecord.TAGS,tagsConditions));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 93,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 103
      },
      "nodeContext" : "query.and(eq(AbstractLogRecord.TRACE_SEGMENT_ID,relatedTrace.getSegmentId()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 93,
    "startColumnNumber" : 37,
    "endLineNumber" : 93,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}