{
  "id" : 481,
  "expression" : "(int)(d + (d < 0.0f ? -0.5f : 0.5f))",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/common/detector/MathUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(int)(d + (d < 0.0f ? -0.5f : 0.5f))",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 37,
      "startColumnNumber" : 11,
      "endLineNumber" : 37,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 13,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 49
      },
      "nodeContext" : "return (int)(d + (d < 0.0f ? -0.5f : 0.5f));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 36,
        "startColumnNumber" : 35,
        "endLineNumber" : 38,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return (int)(d + (d < 0.0f ? -0.5f : 0.5f));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Ends up being a bit faster than  {@link Math#round(float)}. This merely rounds its argument to the nearest int, where x.5 rounds up to x+1. Semantics of this shortcut differ slightly from  {@link Math#round(float)} in that half rounds down for negativevalues. -2.5 rounds to -3, not -2. For purposes here it makes no difference.\n * @param d real value to round\n * @return nearest {@code int}\n */\npublic static int round(float d){\n  return (int)(d + (d < 0.0f ? -0.5f : 0.5f));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 24,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 49
      },
      "nodeContext" : "return (int)(d + (d < 0.0f ? -0.5f : 0.5f));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 10,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 37,
    "startColumnNumber" : 11,
    "endLineNumber" : 37,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}