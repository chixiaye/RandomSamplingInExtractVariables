{
  "id" : 36,
  "expression" : "new FileInputStream(targetFile)",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-library/library-util/src/main/java/org/apache/skywalking/oap/server/library/util/MultipleFilesChangeMonitor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new FileInputStream(targetFile)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 227,
      "startColumnNumber" : 59,
      "endLineNumber" : 227,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 227,
        "startColumnNumber" : 41,
        "endLineNumber" : 227,
        "endColumnNumber" : 90
      },
      "nodeContext" : "fileInputStream=new FileInputStream(targetFile)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 227,
        "startColumnNumber" : 25,
        "endLineNumber" : 227,
        "endColumnNumber" : 90
      },
      "nodeContext" : "FileInputStream fileInputStream=new FileInputStream(targetFile)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 227,
        "startColumnNumber" : 20,
        "endLineNumber" : 247,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try (FileInputStream fileInputStream=new FileInputStream(targetFile)){\n  byte[] b=new byte[1024];\n  ByteArrayOutputStream os=new ByteArrayOutputStream();\n  int c;\n  while ((c=fileInputStream.read(b)) != -1) {\n    os.write(b,0,c);\n  }\n  byte[] newContent=os.toByteArray();\n  if (!Arrays.equals(newContent,fileContent)) {\n    fileContent=newContent;\n    return true;\n  }\n else {\n    return false;\n  }\n}\n catch (FileNotFoundException e) {\n  log.error(\"The existed file turns to missing, watch file=\" + filePath,e);\n}\ncatch (IOException e) {\n  log.error(\"Read file failure, watch file=\" + filePath,e);\n}\n finally {\n  lastModifiedTimestamp=lastModified;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 112,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1234,
        "startLineNumber" : 225,
        "startColumnNumber" : 59,
        "endLineNumber" : 248,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try (FileInputStream fileInputStream=new FileInputStream(targetFile)){\n    byte[] b=new byte[1024];\n    ByteArrayOutputStream os=new ByteArrayOutputStream();\n    int c;\n    while ((c=fileInputStream.read(b)) != -1) {\n      os.write(b,0,c);\n    }\n    byte[] newContent=os.toByteArray();\n    if (!Arrays.equals(newContent,fileContent)) {\n      fileContent=newContent;\n      return true;\n    }\n else {\n      return false;\n    }\n  }\n catch (  FileNotFoundException e) {\n    log.error(\"The existed file turns to missing, watch file=\" + filePath,e);\n  }\ncatch (  IOException e) {\n    log.error(\"Read file failure, watch file=\" + filePath,e);\n  }\n finally {\n    lastModifiedTimestamp=lastModified;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1277,
        "startLineNumber" : 225,
        "startColumnNumber" : 16,
        "endLineNumber" : 248,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (lastModified != lastModifiedTimestamp) {\n  try (FileInputStream fileInputStream=new FileInputStream(targetFile)){\n    byte[] b=new byte[1024];\n    ByteArrayOutputStream os=new ByteArrayOutputStream();\n    int c;\n    while ((c=fileInputStream.read(b)) != -1) {\n      os.write(b,0,c);\n    }\n    byte[] newContent=os.toByteArray();\n    if (!Arrays.equals(newContent,fileContent)) {\n      fileContent=newContent;\n      return true;\n    }\n else {\n      return false;\n    }\n  }\n catch (  FileNotFoundException e) {\n    log.error(\"The existed file turns to missing, watch file=\" + filePath,e);\n  }\ncatch (  IOException e) {\n    log.error(\"Read file failure, watch file=\" + filePath,e);\n  }\n finally {\n    lastModifiedTimestamp=lastModified;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 223,
        "startColumnNumber" : 19,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  long lastModified=targetFile.lastModified();\n  if (lastModified != lastModifiedTimestamp) {\n    try (FileInputStream fileInputStream=new FileInputStream(targetFile)){\n      byte[] b=new byte[1024];\n      ByteArrayOutputStream os=new ByteArrayOutputStream();\n      int c;\n      while ((c=fileInputStream.read(b)) != -1) {\n        os.write(b,0,c);\n      }\n      byte[] newContent=os.toByteArray();\n      if (!Arrays.equals(newContent,fileContent)) {\n        fileContent=newContent;\n        return true;\n      }\n else {\n        return false;\n      }\n    }\n catch (    FileNotFoundException e) {\n      log.error(\"The existed file turns to missing, watch file=\" + filePath,e);\n    }\ncatch (    IOException e) {\n      log.error(\"Read file failure, watch file=\" + filePath,e);\n    }\n finally {\n      lastModifiedTimestamp=lastModified;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1801,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!targetFile.exists()) {\n  if (lastModifiedTimestamp == 0) {\n    return false;\n  }\n else {\n    lastModifiedTimestamp=0;\n    return true;\n  }\n}\n else {\n  long lastModified=targetFile.lastModified();\n  if (lastModified != lastModifiedTimestamp) {\n    try (FileInputStream fileInputStream=new FileInputStream(targetFile)){\n      byte[] b=new byte[1024];\n      ByteArrayOutputStream os=new ByteArrayOutputStream();\n      int c;\n      while ((c=fileInputStream.read(b)) != -1) {\n        os.write(b,0,c);\n      }\n      byte[] newContent=os.toByteArray();\n      if (!Arrays.equals(newContent,fileContent)) {\n        fileContent=newContent;\n        return true;\n      }\n else {\n        return false;\n      }\n    }\n catch (    FileNotFoundException e) {\n      log.error(\"The existed file turns to missing, watch file=\" + filePath,e);\n    }\ncatch (    IOException e) {\n      log.error(\"Read file failure, watch file=\" + filePath,e);\n    }\n finally {\n      lastModifiedTimestamp=lastModified;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 147,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 212,
        "startColumnNumber" : 39,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File targetFile=new File(filePath);\n  if (!targetFile.exists()) {\n    if (lastModifiedTimestamp == 0) {\n      return false;\n    }\n else {\n      lastModifiedTimestamp=0;\n      return true;\n    }\n  }\n else {\n    long lastModified=targetFile.lastModified();\n    if (lastModified != lastModifiedTimestamp) {\n      try (FileInputStream fileInputStream=new FileInputStream(targetFile)){\n        byte[] b=new byte[1024];\n        ByteArrayOutputStream os=new ByteArrayOutputStream();\n        int c;\n        while ((c=fileInputStream.read(b)) != -1) {\n          os.write(b,0,c);\n        }\n        byte[] newContent=os.toByteArray();\n        if (!Arrays.equals(newContent,fileContent)) {\n          fileContent=newContent;\n          return true;\n        }\n else {\n          return false;\n        }\n      }\n catch (      FileNotFoundException e) {\n        log.error(\"The existed file turns to missing, watch file=\" + filePath,e);\n      }\ncatch (      IOException e) {\n        log.error(\"Read file failure, watch file=\" + filePath,e);\n      }\n finally {\n        lastModifiedTimestamp=lastModified;\n      }\n    }\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2097,
        "startLineNumber" : 207,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * Detect the file content change, if yes, reload the file content into the memory as cached data.\n * @return true if file content changed.\n */\nboolean detectContentChanged(){\n  File targetFile=new File(filePath);\n  if (!targetFile.exists()) {\n    if (lastModifiedTimestamp == 0) {\n      return false;\n    }\n else {\n      lastModifiedTimestamp=0;\n      return true;\n    }\n  }\n else {\n    long lastModified=targetFile.lastModified();\n    if (lastModified != lastModifiedTimestamp) {\n      try (FileInputStream fileInputStream=new FileInputStream(targetFile)){\n        byte[] b=new byte[1024];\n        ByteArrayOutputStream os=new ByteArrayOutputStream();\n        int c;\n        while ((c=fileInputStream.read(b)) != -1) {\n          os.write(b,0,c);\n        }\n        byte[] newContent=os.toByteArray();\n        if (!Arrays.equals(newContent,fileContent)) {\n          fileContent=newContent;\n          return true;\n        }\n else {\n          return false;\n        }\n      }\n catch (      FileNotFoundException e) {\n        log.error(\"The existed file turns to missing, watch file=\" + filePath,e);\n      }\ncatch (      IOException e) {\n        log.error(\"Read file failure, watch file=\" + filePath,e);\n      }\n finally {\n        lastModifiedTimestamp=lastModified;\n      }\n    }\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 227,
        "startColumnNumber" : 25,
        "endLineNumber" : 227,
        "endColumnNumber" : 90
      },
      "nodeContext" : "FileInputStream fileInputStream=new FileInputStream(targetFile)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.io.FileInputStream"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 227,
    "startColumnNumber" : 59,
    "endLineNumber" : 227,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}