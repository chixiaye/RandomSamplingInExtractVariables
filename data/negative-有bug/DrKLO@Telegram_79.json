{
  "id" : 79,
  "expression" : "ditheringRunnables",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/BackgroundGradientDrawable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ditheringRunnables",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 239,
      "startColumnNumber" : 8,
      "endLineNumber" : 239,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 239,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 41
      },
      "nodeContext" : "ditheringRunnables.add(runnables)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 239,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ditheringRunnables.add(runnables);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2982,
        "startLineNumber" : 232,
        "startColumnNumber" : 97,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (sizesArr.length == 0) {\n    return null;\n  }\n  final Listener[] listenerReference=new Listener[]{listener};\n  final Runnable[] runnables=new Runnable[sizesArr.length];\n  ditheringRunnables.add(runnables);\n  for (int i=0; i < sizesArr.length; i++) {\n    final IntSize size=sizesArr[i];\n    final int index=i;\n    Utilities.globalQueue.postRunnable(runnables[i]=() -> {\n      Bitmap gradientBitmap=null;\n      try {\n        gradientBitmap=createDitheredGradientBitmap(getOrientation(),colors,size.width,size.height);\n      }\n  finally {\n        final Bitmap bitmap=gradientBitmap;\n        AndroidUtilities.runOnUIThread(() -> {\n          if (!ditheringRunnables.contains(runnables)) {\n            if (bitmap != null) {\n              bitmap.recycle();\n            }\n            return;\n          }\n          if (bitmap != null) {\n            bitmaps.put(size,bitmap);\n          }\n else {\n            bitmaps.remove(size);\n            isForExactBounds.remove(size);\n          }\n          runnables[index]=null;\n          boolean hasNotNull=false;\n          if (runnables.length > 1) {\n            for (int j=0; j < runnables.length; j++) {\n              if (runnables[j] != null) {\n                hasNotNull=true;\n                break;\n              }\n            }\n          }\n          if (!hasNotNull) {\n            ditheringRunnables.remove(runnables);\n          }\n          if (listenerReference[0] != null) {\n            listenerReference[0].onSizeReady(size.width,size.height);\n            if (!hasNotNull) {\n              listenerReference[0].onAllSizesReady();\n              listenerReference[0]=null;\n            }\n          }\n        }\n);\n      }\n    }\n,delay);\n  }\n  return () -> {\n    listenerReference[0]=null;\n    if (ditheringRunnables.contains(runnables)) {\n      Utilities.globalQueue.cancelRunnables(runnables);\n      ditheringRunnables.remove(runnables);\n    }\n    for (int i=0; i < sizesArr.length; i++) {\n      final IntSize size=sizesArr[i];\n      final Bitmap bitmap=bitmaps.remove(size);\n      isForExactBounds.remove(size);\n      if (bitmap != null) {\n        bitmap.recycle();\n      }\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 325,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3075,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Disposable startDitheringInternal(IntSize[] sizesArr,Listener listener,long delay){\n  if (sizesArr.length == 0) {\n    return null;\n  }\n  final Listener[] listenerReference=new Listener[]{listener};\n  final Runnable[] runnables=new Runnable[sizesArr.length];\n  ditheringRunnables.add(runnables);\n  for (int i=0; i < sizesArr.length; i++) {\n    final IntSize size=sizesArr[i];\n    final int index=i;\n    Utilities.globalQueue.postRunnable(runnables[i]=() -> {\n      Bitmap gradientBitmap=null;\n      try {\n        gradientBitmap=createDitheredGradientBitmap(getOrientation(),colors,size.width,size.height);\n      }\n  finally {\n        final Bitmap bitmap=gradientBitmap;\n        AndroidUtilities.runOnUIThread(() -> {\n          if (!ditheringRunnables.contains(runnables)) {\n            if (bitmap != null) {\n              bitmap.recycle();\n            }\n            return;\n          }\n          if (bitmap != null) {\n            bitmaps.put(size,bitmap);\n          }\n else {\n            bitmaps.remove(size);\n            isForExactBounds.remove(size);\n          }\n          runnables[index]=null;\n          boolean hasNotNull=false;\n          if (runnables.length > 1) {\n            for (int j=0; j < runnables.length; j++) {\n              if (runnables[j] != null) {\n                hasNotNull=true;\n                break;\n              }\n            }\n          }\n          if (!hasNotNull) {\n            ditheringRunnables.remove(runnables);\n          }\n          if (listenerReference[0] != null) {\n            listenerReference[0].onSizeReady(size.width,size.height);\n            if (!hasNotNull) {\n              listenerReference[0].onAllSizesReady();\n              listenerReference[0]=null;\n            }\n          }\n        }\n);\n      }\n    }\n,delay);\n  }\n  return () -> {\n    listenerReference[0]=null;\n    if (ditheringRunnables.contains(runnables)) {\n      Utilities.globalQueue.cancelRunnables(runnables);\n      ditheringRunnables.remove(runnables);\n    }\n    for (int i=0; i < sizesArr.length; i++) {\n      final IntSize size=sizesArr[i];\n      final Bitmap bitmap=bitmaps.remove(size);\n      isForExactBounds.remove(size);\n      if (bitmap != null) {\n        bitmap.recycle();\n      }\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 343,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 239,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ditheringRunnables.add(runnables);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Runnable[]>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 239,
    "startColumnNumber" : 8,
    "endLineNumber" : 239,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}