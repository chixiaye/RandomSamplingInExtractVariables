{
  "id" : 215,
  "expression" : "\"    if (arguments[0] === arguments[1]) return false;\\n\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/com/thoughtworks/selenium/webdriven/commands/IsOrdered.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"    if (arguments[0] === arguments[1]) return false;\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 42,
      "startColumnNumber" : 8,
      "endLineNumber" : 42,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 33
      },
      "nodeContext" : "\"    if (arguments[0] === arguments[1]) return false;\\n\" + \"\\n\" + \"    var previousSibling;\\n\"+ \"    while ((previousSibling = arguments[1].previousSibling) != null) {\\n\"+ \"        if (previousSibling === arguments[0]) {\\n\"+ \"            return true;\\n\"+ \"        }\\n\"+ \"        arguments[1] = previousSibling;\\n\"+ \"    }\\n\"+ \"    return false;\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 41,
        "startColumnNumber" : 11,
        "endLineNumber" : 51,
        "endColumnNumber" : 33
      },
      "nodeContext" : "ordered=\"    if (arguments[0] === arguments[1]) return false;\\n\" + \"\\n\" + \"    var previousSibling;\\n\"+ \"    while ((previousSibling = arguments[1].previousSibling) != null) {\\n\"+ \"        if (previousSibling === arguments[0]) {\\n\"+ \"            return true;\\n\"+ \"        }\\n\"+ \"        arguments[1] = previousSibling;\\n\"+ \"    }\\n\"+ \"    return false;\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String ordered=\"    if (arguments[0] === arguments[1]) return false;\\n\" + \"\\n\" + \"    var previousSibling;\\n\"+ \"    while ((previousSibling = arguments[1].previousSibling) != null) {\\n\"+ \"        if (previousSibling === arguments[0]) {\\n\"+ \"            return true;\\n\"+ \"        }\\n\"+ \"        arguments[1] = previousSibling;\\n\"+ \"    }\\n\"+ \"    return false;\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 37,
        "startColumnNumber" : 94,
        "endLineNumber" : 55,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  WebElement one=finder.findElement(driver,locator1);\n  WebElement two=finder.findElement(driver,locator2);\n  String ordered=\"    if (arguments[0] === arguments[1]) return false;\\n\" + \"\\n\" + \"    var previousSibling;\\n\"+ \"    while ((previousSibling = arguments[1].previousSibling) != null) {\\n\"+ \"        if (previousSibling === arguments[0]) {\\n\"+ \"            return true;\\n\"+ \"        }\\n\"+ \"        arguments[1] = previousSibling;\\n\"+ \"    }\\n\"+ \"    return false;\\n\";\n  Boolean result=(Boolean)js.executeScript(driver,ordered,one,two);\n  return result != null && result.booleanValue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected Boolean handleSeleneseCommand(WebDriver driver,String locator1,String locator2){\n  WebElement one=finder.findElement(driver,locator1);\n  WebElement two=finder.findElement(driver,locator2);\n  String ordered=\"    if (arguments[0] === arguments[1]) return false;\\n\" + \"\\n\" + \"    var previousSibling;\\n\"+ \"    while ((previousSibling = arguments[1].previousSibling) != null) {\\n\"+ \"        if (previousSibling === arguments[0]) {\\n\"+ \"            return true;\\n\"+ \"        }\\n\"+ \"        arguments[1] = previousSibling;\\n\"+ \"    }\\n\"+ \"    return false;\\n\";\n  Boolean result=(Boolean)js.executeScript(driver,ordered,one,two);\n  return result != null && result.booleanValue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 33
      },
      "nodeContext" : "\"    if (arguments[0] === arguments[1]) return false;\\n\" + \"\\n\" + \"    var previousSibling;\\n\"+ \"    while ((previousSibling = arguments[1].previousSibling) != null) {\\n\"+ \"        if (previousSibling === arguments[0]) {\\n\"+ \"            return true;\\n\"+ \"        }\\n\"+ \"        arguments[1] = previousSibling;\\n\"+ \"    }\\n\"+ \"    return false;\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 2
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 42,
    "startColumnNumber" : 8,
    "endLineNumber" : 42,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}