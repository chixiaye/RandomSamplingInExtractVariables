{
  "id" : 304,
  "expression" : "AffineTransform.getScaleInstance(scale,scale)",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/unicodefont/effects/DistanceFieldEffect.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AffineTransform.getScaleInstance(scale,scale)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 57,
      "startColumnNumber" : 22,
      "endLineNumber" : 57,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 69
      },
      "nodeContext" : "inputG.setTransform(AffineTransform.getScaleInstance(scale,scale))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 70
      },
      "nodeContext" : "inputG.setTransform(AffineTransform.getScaleInstance(scale,scale));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 55,
        "startColumnNumber" : 58,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Graphics2D inputG=(Graphics2D)image.getGraphics();\n  inputG.setTransform(AffineTransform.getScaleInstance(scale,scale));\n  inputG.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n  inputG.setColor(Color.WHITE);\n  inputG.fill(glyph.getShape());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 63,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Draws the glyph to the given image, upscaled by a factor of  {@link #scale}.\n * @param image the image to draw to\n * @param glyph the glyph to draw\n */\nprivate void drawGlyph(BufferedImage image,Glyph glyph){\n  Graphics2D inputG=(Graphics2D)image.getGraphics();\n  inputG.setTransform(AffineTransform.getScaleInstance(scale,scale));\n  inputG.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS,RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n  inputG.setColor(Color.WHITE);\n  inputG.fill(glyph.getShape());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 70
      },
      "nodeContext" : "inputG.setTransform(AffineTransform.getScaleInstance(scale,scale));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.awt.geom.AffineTransform"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 57,
    "startColumnNumber" : 22,
    "endLineNumber" : 57,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}