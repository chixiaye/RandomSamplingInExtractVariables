{
  "id" : 8,
  "expression" : "mockUserCache.isCached(FAKE_USER_ID)",
  "projectName" : "android10@Android-CleanArchitecture",
  "commitID" : "aa9c9c0aecc7f4bd14974e5d7e672f19327f2bfe",
  "filePath" : "/data-test/src/test/java/com/fernandocejas/android10/sample/data/repository/datasource/UserDataStoreFactoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mockUserCache.isCached(FAKE_USER_ID)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 40,
      "startColumnNumber" : 10,
      "endLineNumber" : 40,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 47
      },
      "nodeContext" : "given(mockUserCache.isCached(FAKE_USER_ID))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 64
      },
      "nodeContext" : "given(mockUserCache.isCached(FAKE_USER_ID)).willReturn(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 65
      },
      "nodeContext" : "given(mockUserCache.isCached(FAKE_USER_ID)).willReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 39,
        "startColumnNumber" : 40,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  given(mockUserCache.isCached(FAKE_USER_ID)).willReturn(true);\n  given(mockUserCache.isExpired()).willReturn(false);\n  UserDataStore userDataStore=userDataStoreFactory.create(FAKE_USER_ID);\n  assertThat(userDataStore,is(notNullValue()));\n  assertThat(userDataStore,is(instanceOf(DiskUserDataStore.class)));\n  verify(mockUserCache).isCached(FAKE_USER_ID);\n  verify(mockUserCache).isExpired();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCreateDiskDataStore(){\n  given(mockUserCache.isCached(FAKE_USER_ID)).willReturn(true);\n  given(mockUserCache.isExpired()).willReturn(false);\n  UserDataStore userDataStore=userDataStoreFactory.create(FAKE_USER_ID);\n  assertThat(userDataStore,is(notNullValue()));\n  assertThat(userDataStore,is(instanceOf(DiskUserDataStore.class)));\n  verify(mockUserCache).isCached(FAKE_USER_ID);\n  verify(mockUserCache).isExpired();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 65
      },
      "nodeContext" : "given(mockUserCache.isCached(FAKE_USER_ID)).willReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 40,
    "startColumnNumber" : 10,
    "endLineNumber" : 40,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}