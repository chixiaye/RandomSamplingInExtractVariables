{
  "id" : 43,
  "expression" : "\"the value for attribute foo has to be one of 'yes' or 'no' instead of 'maybe'\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/bazel/bzlmod/TypeCheckedTagTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"the value for attribute foo has to be one of 'yes' or 'no' instead of 'maybe'\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 79,
      "startLineNumber" : 125,
      "startColumnNumber" : 18,
      "endLineNumber" : 125,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertThat(e).hasMessageThat().contains(\"the value for attribute foo has to be one of 'yes' or 'no' instead of 'maybe'\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertThat(e).hasMessageThat().contains(\"the value for attribute foo has to be one of 'yes' or 'no' instead of 'maybe'\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 111,
        "startColumnNumber" : 47,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ExternalDepsException e=assertThrows(ExternalDepsException.class,() -> TypeCheckedTag.create(createTagClass(attr(\"foo\",Type.STRING).allowedValues(new AllowedValueSet(\"yes\",\"no\")).build()),buildTag(\"tag_name\").addAttr(\"foo\",\"maybe\").build(),null));\n  assertThat(e).hasMessageThat().contains(\"the value for attribute foo has to be one of 'yes' or 'no' instead of 'maybe'\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 110,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void allowedValues() throws Exception {\n  ExternalDepsException e=assertThrows(ExternalDepsException.class,() -> TypeCheckedTag.create(createTagClass(attr(\"foo\",Type.STRING).allowedValues(new AllowedValueSet(\"yes\",\"no\")).build()),buildTag(\"tag_name\").addAttr(\"foo\",\"maybe\").build(),null));\n  assertThat(e).hasMessageThat().contains(\"the value for attribute foo has to be one of 'yes' or 'no' instead of 'maybe'\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertThat(e).hasMessageThat().contains(\"the value for attribute foo has to be one of 'yes' or 'no' instead of 'maybe'\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 15,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 79,
    "startLineNumber" : 125,
    "startColumnNumber" : 18,
    "endLineNumber" : 125,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}