{
  "id" : 87,
  "expression" : "0",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/concurrent/Atomic1.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 24,
      "startColumnNumber" : 22,
      "endLineNumber" : 24,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 24
      },
      "nodeContext" : "atomicInt.set(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 25
      },
      "nodeContext" : "atomicInt.set(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 23,
        "startColumnNumber" : 37,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  atomicInt.set(0);\n  ExecutorService executor=Executors.newFixedThreadPool(2);\n  IntStream.range(0,NUM_INCREMENTS).forEach(i -> {\n    Runnable task=() -> atomicInt.updateAndGet(n -> n + 2);\n    executor.submit(task);\n  }\n);\n  ConcurrentUtils.stop(executor);\n  System.out.format(\"Update: %d\\n\",atomicInt.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testUpdate(){\n  atomicInt.set(0);\n  ExecutorService executor=Executors.newFixedThreadPool(2);\n  IntStream.range(0,NUM_INCREMENTS).forEach(i -> {\n    Runnable task=() -> atomicInt.updateAndGet(n -> n + 2);\n    executor.submit(task);\n  }\n);\n  ConcurrentUtils.stop(executor);\n  System.out.format(\"Update: %d\\n\",atomicInt.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 25
      },
      "nodeContext" : "atomicInt.set(0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 28,
      "startColumnNumber" : 24,
      "endLineNumber" : 28,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 42
      },
      "nodeContext" : "IntStream.range(0,NUM_INCREMENTS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 18
      },
      "nodeContext" : "IntStream.range(0,NUM_INCREMENTS).forEach(i -> {\n  Runnable task=() -> atomicInt.updateAndGet(n -> n + 2);\n  executor.submit(task);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 19
      },
      "nodeContext" : "IntStream.range(0,NUM_INCREMENTS).forEach(i -> {\n  Runnable task=() -> atomicInt.updateAndGet(n -> n + 2);\n  executor.submit(task);\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 23,
        "startColumnNumber" : 37,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  atomicInt.set(0);\n  ExecutorService executor=Executors.newFixedThreadPool(2);\n  IntStream.range(0,NUM_INCREMENTS).forEach(i -> {\n    Runnable task=() -> atomicInt.updateAndGet(n -> n + 2);\n    executor.submit(task);\n  }\n);\n  ConcurrentUtils.stop(executor);\n  System.out.format(\"Update: %d\\n\",atomicInt.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testUpdate(){\n  atomicInt.set(0);\n  ExecutorService executor=Executors.newFixedThreadPool(2);\n  IntStream.range(0,NUM_INCREMENTS).forEach(i -> {\n    Runnable task=() -> atomicInt.updateAndGet(n -> n + 2);\n    executor.submit(task);\n  }\n);\n  ConcurrentUtils.stop(executor);\n  System.out.format(\"Update: %d\\n\",atomicInt.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 42
      },
      "nodeContext" : "IntStream.range(0,NUM_INCREMENTS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 24,
    "startColumnNumber" : 22,
    "endLineNumber" : 24,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 28,
    "startColumnNumber" : 24,
    "endLineNumber" : 28,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}