{
  "id" : 510,
  "expression" : "Constants.BIND_PORT_KEY",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-http/src/test/java/org/apache/dubbo/remoting/http/jetty/JettyHttpBinderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Constants.BIND_PORT_KEY",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 41,
      "startColumnNumber" : 29,
      "endLineNumber" : 41,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 41,
        "startColumnNumber" : 28,
        "endLineNumber" : 41,
        "endColumnNumber" : 75
      },
      "nodeContext" : "{Constants.BIND_PORT_KEY,String.valueOf(port)}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 41,
        "startColumnNumber" : 16,
        "endLineNumber" : 41,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new String[]{Constants.BIND_PORT_KEY,String.valueOf(port)}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 40,
        "startColumnNumber" : 18,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "new ServiceConfigURL(\"http\",\"localhost\",port,new String[]{Constants.BIND_PORT_KEY,String.valueOf(port)})",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "url=new ServiceConfigURL(\"http\",\"localhost\",port,new String[]{Constants.BIND_PORT_KEY,String.valueOf(port)})",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 77
      },
      "nodeContext" : "URL url=new ServiceConfigURL(\"http\",\"localhost\",port,new String[]{Constants.BIND_PORT_KEY,String.valueOf(port)});\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 38,
        "startColumnNumber" : 73,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int port=NetUtils.getAvailablePort();\n  URL url=new ServiceConfigURL(\"http\",\"localhost\",port,new String[]{Constants.BIND_PORT_KEY,String.valueOf(port)});\n  HttpServer httpServer=new JettyHttpServer(url,new HttpHandler(){\n    @Override public void handle(    HttpServletRequest request,    HttpServletResponse response) throws IOException {\n      response.getWriter().write(\"Jetty\");\n    }\n  }\n);\n  String response=Request.Get(url.toJavaURL().toURI()).execute().returnContent().asString();\n  assertThat(response,is(\"Jetty\"));\n  httpServer.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldAbleHandleRequestForJettyBinder() throws Exception {\n  int port=NetUtils.getAvailablePort();\n  URL url=new ServiceConfigURL(\"http\",\"localhost\",port,new String[]{Constants.BIND_PORT_KEY,String.valueOf(port)});\n  HttpServer httpServer=new JettyHttpServer(url,new HttpHandler(){\n    @Override public void handle(    HttpServletRequest request,    HttpServletResponse response) throws IOException {\n      response.getWriter().write(\"Jetty\");\n    }\n  }\n);\n  String response=Request.Get(url.toJavaURL().toURI()).execute().returnContent().asString();\n  assertThat(response,is(\"Jetty\"));\n  httpServer.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 41,
        "startColumnNumber" : 16,
        "endLineNumber" : 41,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new String[]{Constants.BIND_PORT_KEY,String.valueOf(port)}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 41,
    "startColumnNumber" : 29,
    "endLineNumber" : 41,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}