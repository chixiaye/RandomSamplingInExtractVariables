{
  "id" : 114,
  "expression" : "sequence.getCache() != null && sequence.getCache() > 0",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.db2/src/org/jkiss/dbeaver/ext/db2/manager/DB2SequenceManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sequence.getCache() != null && sequence.getCache() > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 155,
      "startColumnNumber" : 12,
      "endLineNumber" : 155,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (sequence.getCache() != null && sequence.getCache() > 0) {\n  sb.append(\"CACHE \").append(sequence.getCache()).append(SPACE);\n}\n else {\n  sb.append(\"NO CACHE \").append(SPACE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1698,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(256);\n  if (forUpdate) {\n    sb.append(SQL_ALTER);\n  }\n else {\n    sb.append(SQL_CREATE);\n  }\n  sb.append(sequence.getFullyQualifiedName(DBPEvaluationContext.DDL)).append(SPACE);\n  if (!(forUpdate)) {\n    sb.append(\"AS \");\n    sb.append(sequence.getPrecision().getSqlKeyword()).append(SPACE);\n  }\n  if (sequence.getStart() != null) {\n    if (forUpdate) {\n      sb.append(\"RESTART WITH \").append(sequence.getStart()).append(SPACE);\n    }\n else {\n      sb.append(\"START WITH \").append(sequence.getStart()).append(SPACE);\n    }\n  }\n  if (sequence.getIncrementBy() != null) {\n    sb.append(\"INCREMENT BY \").append(sequence.getIncrementBy()).append(SPACE);\n  }\n  if (sequence.getMinValue() != null) {\n    sb.append(\"MINVALUE \").append(sequence.getMinValue()).append(SPACE);\n  }\n  if (sequence.getMaxValue() != null) {\n    sb.append(\"MAXVALUE \").append(sequence.getMaxValue()).append(SPACE);\n  }\n  if (sequence.getCycle()) {\n    sb.append(\"CYCLE \").append(SPACE);\n  }\n else {\n    sb.append(\"NO CYCLE \").append(SPACE);\n  }\n  if (sequence.getCache() != null && sequence.getCache() > 0) {\n    sb.append(\"CACHE \").append(sequence.getCache()).append(SPACE);\n  }\n else {\n    sb.append(\"NO CACHE \").append(SPACE);\n  }\n  if (sequence.getOrder()) {\n    sb.append(\"ORDER \").append(SPACE);\n  }\n else {\n    sb.append(\"NO ORDER \").append(SPACE);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 239,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1773,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private String buildStatement(DB2Sequence sequence,Boolean forUpdate){\n  StringBuilder sb=new StringBuilder(256);\n  if (forUpdate) {\n    sb.append(SQL_ALTER);\n  }\n else {\n    sb.append(SQL_CREATE);\n  }\n  sb.append(sequence.getFullyQualifiedName(DBPEvaluationContext.DDL)).append(SPACE);\n  if (!(forUpdate)) {\n    sb.append(\"AS \");\n    sb.append(sequence.getPrecision().getSqlKeyword()).append(SPACE);\n  }\n  if (sequence.getStart() != null) {\n    if (forUpdate) {\n      sb.append(\"RESTART WITH \").append(sequence.getStart()).append(SPACE);\n    }\n else {\n      sb.append(\"START WITH \").append(sequence.getStart()).append(SPACE);\n    }\n  }\n  if (sequence.getIncrementBy() != null) {\n    sb.append(\"INCREMENT BY \").append(sequence.getIncrementBy()).append(SPACE);\n  }\n  if (sequence.getMinValue() != null) {\n    sb.append(\"MINVALUE \").append(sequence.getMinValue()).append(SPACE);\n  }\n  if (sequence.getMaxValue() != null) {\n    sb.append(\"MAXVALUE \").append(sequence.getMaxValue()).append(SPACE);\n  }\n  if (sequence.getCycle()) {\n    sb.append(\"CYCLE \").append(SPACE);\n  }\n else {\n    sb.append(\"NO CYCLE \").append(SPACE);\n  }\n  if (sequence.getCache() != null && sequence.getCache() > 0) {\n    sb.append(\"CACHE \").append(sequence.getCache()).append(SPACE);\n  }\n else {\n    sb.append(\"NO CACHE \").append(SPACE);\n  }\n  if (sequence.getOrder()) {\n    sb.append(\"ORDER \").append(SPACE);\n  }\n else {\n    sb.append(\"NO ORDER \").append(SPACE);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (sequence.getCache() != null && sequence.getCache() > 0) {\n  sb.append(\"CACHE \").append(sequence.getCache()).append(SPACE);\n}\n else {\n  sb.append(\"NO CACHE \").append(SPACE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 155,
    "startColumnNumber" : 12,
    "endLineNumber" : 155,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}