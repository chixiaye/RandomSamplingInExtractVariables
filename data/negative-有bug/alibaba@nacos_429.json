{
  "id" : 429,
  "expression" : "0",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/healthcheck/HttpHealthCheckProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 162,
      "startColumnNumber" : 30,
      "endLineNumber" : 162,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 162,
        "startColumnNumber" : 21,
        "endLineNumber" : 162,
        "endColumnNumber" : 31
      },
      "nodeContext" : "deepth=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 162,
        "startColumnNumber" : 17,
        "endLineNumber" : 162,
        "endColumnNumber" : 31
      },
      "nodeContext" : "int deepth=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 546,
        "startLineNumber" : 162,
        "startColumnNumber" : 12,
        "endLineNumber" : 173,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int deepth=0; deepth < maxStackDepth && cause != null; deepth++) {\n  if (HttpUtils.isTimeoutException(t)) {\n    healthCheckCommon.checkFail(ip,task,\"http:timeout:\" + cause.getMessage());\n    healthCheckCommon.reEvaluateCheckRT(task.getCheckRtNormalized() * 2,task,switchDomain.getHttpHealthParams());\n    return;\n  }\n  cause=cause.getCause();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 157,
        "startColumnNumber" : 41,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ip.setCheckRt(System.currentTimeMillis() - startTime);\n  Throwable cause=t;\n  int maxStackDepth=50;\n  for (int deepth=0; deepth < maxStackDepth && cause != null; deepth++) {\n    if (HttpUtils.isTimeoutException(t)) {\n      healthCheckCommon.checkFail(ip,task,\"http:timeout:\" + cause.getMessage());\n      healthCheckCommon.reEvaluateCheckRT(task.getCheckRtNormalized() * 2,task,switchDomain.getHttpHealthParams());\n      return;\n    }\n    cause=cause.getCause();\n  }\n  if (t instanceof ConnectException) {\n    healthCheckCommon.checkFailNow(ip,task,\"http:unable2connect:\" + t.getMessage());\n    healthCheckCommon.reEvaluateCheckRT(switchDomain.getHttpHealthParams().getMax(),task,switchDomain.getHttpHealthParams());\n  }\n else {\n    healthCheckCommon.checkFail(ip,task,\"http:error:\" + t.getMessage());\n    healthCheckCommon.reEvaluateCheckRT(switchDomain.getHttpHealthParams().getMax(),task,switchDomain.getHttpHealthParams());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void onError(Throwable t){\n  ip.setCheckRt(System.currentTimeMillis() - startTime);\n  Throwable cause=t;\n  int maxStackDepth=50;\n  for (int deepth=0; deepth < maxStackDepth && cause != null; deepth++) {\n    if (HttpUtils.isTimeoutException(t)) {\n      healthCheckCommon.checkFail(ip,task,\"http:timeout:\" + cause.getMessage());\n      healthCheckCommon.reEvaluateCheckRT(task.getCheckRtNormalized() * 2,task,switchDomain.getHttpHealthParams());\n      return;\n    }\n    cause=cause.getCause();\n  }\n  if (t instanceof ConnectException) {\n    healthCheckCommon.checkFailNow(ip,task,\"http:unable2connect:\" + t.getMessage());\n    healthCheckCommon.reEvaluateCheckRT(switchDomain.getHttpHealthParams().getMax(),task,switchDomain.getHttpHealthParams());\n  }\n else {\n    healthCheckCommon.checkFail(ip,task,\"http:error:\" + t.getMessage());\n    healthCheckCommon.reEvaluateCheckRT(switchDomain.getHttpHealthParams().getMax(),task,switchDomain.getHttpHealthParams());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 162,
        "startColumnNumber" : 17,
        "endLineNumber" : 162,
        "endColumnNumber" : 31
      },
      "nodeContext" : "int deepth=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 162,
    "startColumnNumber" : 30,
    "endLineNumber" : 162,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}