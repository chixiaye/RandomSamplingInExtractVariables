{
  "id" : 216,
  "expression" : "source",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/json/BasicJsonTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 113,
      "startColumnNumber" : 44,
      "endLineNumber" : 113,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 113,
        "startColumnNumber" : 24,
        "endLineNumber" : 113,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.loader.getJson(source)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 113,
        "startColumnNumber" : 9,
        "endLineNumber" : 113,
        "endColumnNumber" : 52
      },
      "nodeContext" : "getJsonContent(this.loader.getJson(source))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 53
      },
      "nodeContext" : "return getJsonContent(this.loader.getJson(source));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 111,
        "startColumnNumber" : 54,
        "endLineNumber" : 114,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  verify();\n  return getJsonContent(this.loader.getJson(source));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 104,
        "startColumnNumber" : 1,
        "endLineNumber" : 114,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Create JSON content from the specified String source. The source can contain the JSON itself or, if it ends with  {@code .json}, the name of a resource to be loaded using  {@code resourceLoadClass}.\n * @param source JSON content or a {@code .json} resource name\n * @return the JSON content\n */\npublic JsonContent<Object> from(CharSequence source){\n  verify();\n  return getJsonContent(this.loader.getJson(source));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 53
      },
      "nodeContext" : "return getJsonContent(this.loader.getJson(source));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.CharSequence"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 113,
    "startColumnNumber" : 44,
    "endLineNumber" : 113,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}