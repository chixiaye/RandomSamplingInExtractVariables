{
  "id" : 63,
  "expression" : "list",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/BreadthFirstSearchAdjacencyListIterativeFastQueue.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 159,
      "startColumnNumber" : 8,
      "endLineNumber" : 159,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 20
      },
      "nodeContext" : "list == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (list == null) {\n  list=new ArrayList<Edge>();\n  graph.put(from,list);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 157,
        "startColumnNumber" : 98,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Edge> list=graph.get(from);\n  if (list == null) {\n    list=new ArrayList<Edge>();\n    graph.put(from,list);\n  }\n  list.add(new Edge(from,to,cost));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 157,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void addDirectedEdge(Map<Integer,List<Edge>> graph,int from,int to,int cost){\n  List<Edge> list=graph.get(from);\n  if (list == null) {\n    list=new ArrayList<Edge>();\n    graph.put(from,list);\n  }\n  list.add(new Edge(from,to,cost));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 159,
        "endColumnNumber" : 20
      },
      "nodeContext" : "list == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue.Edge>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 161,
      "startColumnNumber" : 22,
      "endLineNumber" : 161,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 161,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 27
      },
      "nodeContext" : "graph.put(from,list)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 161,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 28
      },
      "nodeContext" : "graph.put(from,list);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 159,
        "startColumnNumber" : 22,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  list=new ArrayList<Edge>();\n  graph.put(from,list);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (list == null) {\n  list=new ArrayList<Edge>();\n  graph.put(from,list);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 157,
        "startColumnNumber" : 98,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Edge> list=graph.get(from);\n  if (list == null) {\n    list=new ArrayList<Edge>();\n    graph.put(from,list);\n  }\n  list.add(new Edge(from,to,cost));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 157,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void addDirectedEdge(Map<Integer,List<Edge>> graph,int from,int to,int cost){\n  List<Edge> list=graph.get(from);\n  if (list == null) {\n    list=new ArrayList<Edge>();\n    graph.put(from,list);\n  }\n  list.add(new Edge(from,to,cost));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 161,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 28
      },
      "nodeContext" : "graph.put(from,list);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue.Edge>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 163,
      "startColumnNumber" : 4,
      "endLineNumber" : 163,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 38
      },
      "nodeContext" : "list.add(new Edge(from,to,cost))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 39
      },
      "nodeContext" : "list.add(new Edge(from,to,cost));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 157,
        "startColumnNumber" : 98,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Edge> list=graph.get(from);\n  if (list == null) {\n    list=new ArrayList<Edge>();\n    graph.put(from,list);\n  }\n  list.add(new Edge(from,to,cost));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 157,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void addDirectedEdge(Map<Integer,List<Edge>> graph,int from,int to,int cost){\n  List<Edge> list=graph.get(from);\n  if (list == null) {\n    list=new ArrayList<Edge>();\n    graph.put(from,list);\n  }\n  list.add(new Edge(from,to,cost));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 39
      },
      "nodeContext" : "list.add(new Edge(from,to,cost));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.williamfiset.algorithms.graphtheory.BreadthFirstSearchAdjacencyListIterativeFastQueue.Edge>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 159,
    "startColumnNumber" : 8,
    "endLineNumber" : 159,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 161,
    "startColumnNumber" : 22,
    "endLineNumber" : 161,
    "endColumnNumber" : 26
  }, {
    "charLength" : 4,
    "startLineNumber" : 163,
    "startColumnNumber" : 4,
    "endLineNumber" : 163,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}