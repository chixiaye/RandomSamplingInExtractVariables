{
  "id" : 143,
  "expression" : "insertExecutor.getPkValuesByColumn()",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/test/java/io/seata/rm/datasource/exec/InsertExecutorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "insertExecutor.getPkValuesByColumn()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 147,
      "startColumnNumber" : 32,
      "endLineNumber" : 147,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 147,
        "startColumnNumber" : 13,
        "endLineNumber" : 147,
        "endColumnNumber" : 68
      },
      "nodeContext" : "pkValuesByColumn=insertExecutor.getPkValuesByColumn()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 69
      },
      "nodeContext" : "List pkValuesByColumn=insertExecutor.getPkValuesByColumn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 140,
        "startColumnNumber" : 62,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockInsertColumns();\n  doReturn(tableMeta).when(insertExecutor).getTableMeta();\n  when(tableMeta.getPkName()).thenReturn(ID_COLUMN);\n  List<Object> pkValues=new ArrayList<>();\n  pkValues.add(PK_VALUE);\n  when(statementProxy.getParamsByIndex(0)).thenReturn(pkValues);\n  List pkValuesByColumn=insertExecutor.getPkValuesByColumn();\n  Assertions.assertEquals(pkValuesByColumn,pkValues);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetPkValuesByColumn() throws SQLException {\n  mockInsertColumns();\n  doReturn(tableMeta).when(insertExecutor).getTableMeta();\n  when(tableMeta.getPkName()).thenReturn(ID_COLUMN);\n  List<Object> pkValues=new ArrayList<>();\n  pkValues.add(PK_VALUE);\n  when(statementProxy.getParamsByIndex(0)).thenReturn(pkValues);\n  List pkValuesByColumn=insertExecutor.getPkValuesByColumn();\n  Assertions.assertEquals(pkValuesByColumn,pkValues);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 69
      },
      "nodeContext" : "List pkValuesByColumn=insertExecutor.getPkValuesByColumn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.List"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 147,
    "startColumnNumber" : 32,
    "endLineNumber" : 147,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}