{
  "id" : 219,
  "expression" : "thisStart < 0 || thisLen - thisStart < length",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/common/src/main/java/io/netty/util/AsciiString.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "thisStart < 0 || thisLen - thisStart < length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 808,
      "startColumnNumber" : 12,
      "endLineNumber" : 808,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 808,
        "startColumnNumber" : 8,
        "endLineNumber" : 810,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (thisStart < 0 || thisLen - thisStart < length) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 800,
        "startColumnNumber" : 92,
        "endLineNumber" : 823,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requireNonNull(string,\"string\");\n  if (start < 0 || string.length() - start < length) {\n    return false;\n  }\n  final int thisLen=length();\n  if (thisStart < 0 || thisLen - thisStart < length) {\n    return false;\n  }\n  if (length <= 0) {\n    return true;\n  }\n  final int thatEnd=start + length;\n  for (int i=start, j=thisStart + arrayOffset(); i < thatEnd; i++, j++) {\n    if (b2c(value[j]) != string.charAt(i)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1278,
        "startLineNumber" : 789,
        "startColumnNumber" : 4,
        "endLineNumber" : 823,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Compares the specified string to this string and compares the specified range of characters to determine if they are the same.\n * @param thisStart the starting offset in this string.\n * @param string the string to compare.\n * @param start the starting offset in the specified string.\n * @param length the number of characters to compare.\n * @return {@code true} if the ranges of characters are equal, {@code false} otherwise\n * @throws NullPointerException if {@code string} is {@code null}.\n */\npublic boolean regionMatches(int thisStart,CharSequence string,int start,int length){\n  requireNonNull(string,\"string\");\n  if (start < 0 || string.length() - start < length) {\n    return false;\n  }\n  final int thisLen=length();\n  if (thisStart < 0 || thisLen - thisStart < length) {\n    return false;\n  }\n  if (length <= 0) {\n    return true;\n  }\n  final int thatEnd=start + length;\n  for (int i=start, j=thisStart + arrayOffset(); i < thatEnd; i++, j++) {\n    if (b2c(value[j]) != string.charAt(i)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 808,
        "startColumnNumber" : 8,
        "endLineNumber" : 810,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (thisStart < 0 || thisLen - thisStart < length) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 808,
    "startColumnNumber" : 12,
    "endLineNumber" : 808,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}