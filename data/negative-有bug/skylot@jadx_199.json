{
  "id" : 199,
  "expression" : "InsnType.ONE_ARG",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/MethodInlineVisitor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InsnType.ONE_ARG",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 112,
      "startColumnNumber" : 18,
      "endLineNumber" : 112,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 112,
        "startColumnNumber" : 6,
        "endLineNumber" : 112,
        "endColumnNumber" : 34
      },
      "nodeContext" : "insnType == InsnType.ONE_ARG",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (insnType == InsnType.ONE_ARG) {\n  InsnArg arg=insn.getArg(0);\n  if (!arg.isInsnWrap()) {\n    return false;\n  }\n  return fixVisibilityOfInlineCode(mth,((InsnWrapArg)arg).getWrapInsn());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 101,
        "startColumnNumber" : 81,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int newVisFlag=AccessFlags.ACC_PUBLIC;\n  InsnType insnType=insn.getType();\n  if (insnType == InsnType.INVOKE) {\n    InvokeNode invoke=(InvokeNode)insn;\n    MethodNode callMthNode=mth.root().deepResolveMethod(invoke.getCallMth());\n    if (callMthNode != null) {\n      FixAccessModifiers.changeVisibility(callMthNode,newVisFlag);\n    }\n    return true;\n  }\n  if (insnType == InsnType.ONE_ARG) {\n    InsnArg arg=insn.getArg(0);\n    if (!arg.isInsnWrap()) {\n      return false;\n    }\n    return fixVisibilityOfInlineCode(mth,((InsnWrapArg)arg).getWrapInsn());\n  }\n  if (insn instanceof IndexInsnNode) {\n    Object indexObj=((IndexInsnNode)insn).getIndex();\n    if (indexObj instanceof FieldInfo) {\n      FieldNode fieldNode=mth.root().deepResolveField(((FieldInfo)indexObj));\n      if (fieldNode != null) {\n        FixAccessModifiers.changeVisibility(fieldNode,newVisFlag);\n      }\n      return true;\n    }\n  }\n  if (Consts.DEBUG) {\n    mth.addAttr(AType.COMMENTS,\"JADX DEBUG: can't inline method, not implemented redirect type: \" + insn);\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1170,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static boolean fixVisibilityOfInlineCode(MethodNode mth,InsnNode insn){\n  int newVisFlag=AccessFlags.ACC_PUBLIC;\n  InsnType insnType=insn.getType();\n  if (insnType == InsnType.INVOKE) {\n    InvokeNode invoke=(InvokeNode)insn;\n    MethodNode callMthNode=mth.root().deepResolveMethod(invoke.getCallMth());\n    if (callMthNode != null) {\n      FixAccessModifiers.changeVisibility(callMthNode,newVisFlag);\n    }\n    return true;\n  }\n  if (insnType == InsnType.ONE_ARG) {\n    InsnArg arg=insn.getArg(0);\n    if (!arg.isInsnWrap()) {\n      return false;\n    }\n    return fixVisibilityOfInlineCode(mth,((InsnWrapArg)arg).getWrapInsn());\n  }\n  if (insn instanceof IndexInsnNode) {\n    Object indexObj=((IndexInsnNode)insn).getIndex();\n    if (indexObj instanceof FieldInfo) {\n      FieldNode fieldNode=mth.root().deepResolveField(((FieldInfo)indexObj));\n      if (fieldNode != null) {\n        FixAccessModifiers.changeVisibility(fieldNode,newVisFlag);\n      }\n      return true;\n    }\n  }\n  if (Consts.DEBUG) {\n    mth.addAttr(AType.COMMENTS,\"JADX DEBUG: can't inline method, not implemented redirect type: \" + insn);\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 112,
        "startColumnNumber" : 6,
        "endLineNumber" : 112,
        "endColumnNumber" : 34
      },
      "nodeContext" : "insnType == InsnType.ONE_ARG",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "jadx.core.dex.instructions.InsnType"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 112,
    "startColumnNumber" : 18,
    "endLineNumber" : 112,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}