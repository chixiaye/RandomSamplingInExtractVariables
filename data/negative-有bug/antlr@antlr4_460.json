{
  "id" : 460,
  "expression" : "\"'\" + formatted + \"'\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/codegen/target/CSharpTarget.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"'\" + formatted + \"'\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 51,
      "startColumnNumber" : 9,
      "endLineNumber" : 51,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return \"'\" + formatted + \"'\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 589,
        "startLineNumber" : 35,
        "startColumnNumber" : 44,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (v < Character.MIN_VALUE || v > Character.MAX_VALUE) {\n    throw new IllegalArgumentException(String.format(\"Cannot encode the specified value: %d\",v));\n  }\n  String formatted;\n  if (v >= 0 && v < targetCharValueEscape.length && targetCharValueEscape[v] != null) {\n    formatted=targetCharValueEscape[v];\n  }\n else   if (v >= 0x20 && v < 127 && (v < '0' || v > '9') && (v < 'a' || v > 'f') && (v < 'A' || v > 'F')) {\n    formatted=Character.toString((char)v);\n  }\n else {\n    formatted=String.format(\"\\\\x%X\",v & 0xFFFF);\n  }\n  return \"'\" + formatted + \"'\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public String encodeIntAsCharEscape(int v){\n  if (v < Character.MIN_VALUE || v > Character.MAX_VALUE) {\n    throw new IllegalArgumentException(String.format(\"Cannot encode the specified value: %d\",v));\n  }\n  String formatted;\n  if (v >= 0 && v < targetCharValueEscape.length && targetCharValueEscape[v] != null) {\n    formatted=targetCharValueEscape[v];\n  }\n else   if (v >= 0x20 && v < 127 && (v < '0' || v > '9') && (v < 'a' || v > 'f') && (v < 'A' || v > 'F')) {\n    formatted=Character.toString((char)v);\n  }\n else {\n    formatted=String.format(\"\\\\x%X\",v & 0xFFFF);\n  }\n  return \"'\" + formatted + \"'\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return \"'\" + formatted + \"'\";\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 51,
    "startColumnNumber" : 9,
    "endLineNumber" : 51,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}