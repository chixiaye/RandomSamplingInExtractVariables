{
  "id" : 226,
  "expression" : "(0x2400L & l) != 0L && kind > 6",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/filter/src/main/java/org/apache/rocketmq/filter/parser/SelectorParserTokenManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(0x2400L & l) != 0L && kind > 6",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 428,
      "startColumnNumber" : 32,
      "endLineNumber" : 428,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 428,
        "startColumnNumber" : 28,
        "endLineNumber" : 429,
        "endColumnNumber" : 41
      },
      "nodeContext" : "if ((0x2400L & l) != 0L && kind > 6) kind=6;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 8749,
        "startLineNumber" : 394,
        "startColumnNumber" : 20,
        "endLineNumber" : 588,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (jjstateSet[--i]) {\ncase 5:  if ((0x3ff000000000000L & l) != 0L)   jjCheckNAddStates(0,3);\n else   if (curChar == 36) {\n    if (kind > 21)     kind=21;\n    jjCheckNAdd(28);\n  }\n else   if (curChar == 39)   jjCheckNAddStates(4,6);\n else   if (curChar == 46)   jjCheckNAdd(18);\n else   if (curChar == 47)   jjstateSet[jjnewStateCnt++]=6;\n else   if (curChar == 45)   jjstateSet[jjnewStateCnt++]=0;\nif ((0x3fe000000000000L & l) != 0L) {\n  if (kind > 17)   kind=17;\n  jjCheckNAddTwoStates(15,16);\n}\n else if (curChar == 48) {\n  if (kind > 17)   kind=17;\n}\nbreak;\ncase 0:if (curChar == 45) jjCheckNAddStates(7,9);\nbreak;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 684,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 8789,
        "startLineNumber" : 393,
        "startColumnNumber" : 19,
        "endLineNumber" : 589,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\nswitch (jjstateSet[--i]) {\ncase 5:    if ((0x3ff000000000000L & l) != 0L)     jjCheckNAddStates(0,3);\n else     if (curChar == 36) {\n      if (kind > 21)       kind=21;\n      jjCheckNAdd(28);\n    }\n else     if (curChar == 39)     jjCheckNAddStates(4,6);\n else     if (curChar == 46)     jjCheckNAdd(18);\n else     if (curChar == 47)     jjstateSet[jjnewStateCnt++]=6;\n else     if (curChar == 45)     jjstateSet[jjnewStateCnt++]=0;\n  if ((0x3fe000000000000L & l) != 0L) {\n    if (kind > 17)     kind=17;\n    jjCheckNAddTwoStates(15,16);\n  }\n else   if (curChar == 48) {\n    if (kind > 17)     kind=17;\n  }\nbreak;\ncase 0:if (curChar == 45) jjCheckNAddStates(7,9);\nbreak;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 685,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 8831,
        "startLineNumber" : 393,
        "startColumnNumber" : 16,
        "endLineNumber" : 590,
        "endColumnNumber" : 38
      },
      "nodeContext" : "do {\nswitch (jjstateSet[--i]) {\ncase 5:    if ((0x3ff000000000000L & l) != 0L)     jjCheckNAddStates(0,3);\n else     if (curChar == 36) {\n      if (kind > 21)       kind=21;\n      jjCheckNAdd(28);\n    }\n else     if (curChar == 39)     jjCheckNAddStates(4,6);\n else     if (curChar == 46)     jjCheckNAdd(18);\n else     if (curChar == 47)     jjstateSet[jjnewStateCnt++]=6;\n else     if (curChar == 45)     jjstateSet[jjnewStateCnt++]=0;\n  if ((0x3fe000000000000L & l) != 0L) {\n    if (kind > 17)     kind=17;\n    jjCheckNAddTwoStates(15,16);\n  }\n else   if (curChar == 48) {\n    if (kind > 17)     kind=17;\n  }\nbreak;\ncase 0:if (curChar == 45) jjCheckNAddStates(7,9);\nbreak;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 689,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 8903,
        "startLineNumber" : 391,
        "startColumnNumber" : 30,
        "endLineNumber" : 591,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  long l=1L << curChar;\n  do {\nswitch (jjstateSet[--i]) {\ncase 5:      if ((0x3ff000000000000L & l) != 0L)       jjCheckNAddStates(0,3);\n else       if (curChar == 36) {\n        if (kind > 21)         kind=21;\n        jjCheckNAdd(28);\n      }\n else       if (curChar == 39)       jjCheckNAddStates(4,6);\n else       if (curChar == 46)       jjCheckNAdd(18);\n else       if (curChar == 47)       jjstateSet[jjnewStateCnt++]=6;\n else       if (curChar == 45)       jjstateSet[jjnewStateCnt++]=0;\n    if ((0x3fe000000000000L & l) != 0L) {\n      if (kind > 17)       kind=17;\n      jjCheckNAddTwoStates(15,16);\n    }\n else     if (curChar == 48) {\n      if (kind > 17)       kind=17;\n    }\n  break;\ncase 0:if (curChar == 45) jjCheckNAddStates(7,9);\nbreak;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 697,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12063,
        "startLineNumber" : 391,
        "startColumnNumber" : 12,
        "endLineNumber" : 667,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (curChar < 64) {\n  long l=1L << curChar;\n  do {\nswitch (jjstateSet[--i]) {\ncase 5:      if ((0x3ff000000000000L & l) != 0L)       jjCheckNAddStates(0,3);\n else       if (curChar == 36) {\n        if (kind > 21)         kind=21;\n        jjCheckNAdd(28);\n      }\n else       if (curChar == 39)       jjCheckNAddStates(4,6);\n else       if (curChar == 46)       jjCheckNAdd(18);\n else       if (curChar == 47)       jjstateSet[jjnewStateCnt++]=6;\n else       if (curChar == 45)       jjstateSet[jjnewStateCnt++]=0;\n    if ((0x3fe000000000000L & l) != 0L) {\n      if (kind > 17)       kind=17;\n      jjCheckNAddTwoStates(15,16);\n    }\n else     if (curChar == 48) {\n      if (kind > 17)       kind=17;\n    }\n  break;\ncase 0:if (curChar == 45) jjCheckNAddStates(7,9);\nbreak;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else if (curChar < 128) {\nlong l=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 5:case 28:if ((0x7fffffe87fffffeL & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 1:jjAddStates(7,9);\nbreak;\ncase 7:jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:jjCheckNAddTwoStates(10,8);\nbreak;\ncase 16:if ((0x100000001000L & l) != 0L && kind > 17) kind=17;\nbreak;\ncase 19:if ((0x2000000020L & l) != 0L) jjAddStates(13,14);\nbreak;\ncase 25:jjAddStates(4,6);\nbreak;\ncase 33:if ((0x2000000020L & l) != 0L) jjAddStates(15,16);\nbreak;\ncase 37:if ((0x2000000020L & l) != 0L) jjAddStates(17,18);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else {\nint hiByte=(int)(curChar >> 8);\nint i1=hiByte >> 6;\nlong l1=1L << (hiByte & 077);\nint i2=(curChar & 0xff) >> 6;\nlong l2=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 1:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(7,9);\nbreak;\ncase 7:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 25:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(4,6);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 976,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 12605,
        "startLineNumber" : 388,
        "startColumnNumber" : 19,
        "endLineNumber" : 681,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (++jjround == 0x7fffffff)   ReInitRounds();\n  if (curChar < 64) {\n    long l=1L << curChar;\n    do {\nswitch (jjstateSet[--i]) {\ncase 5:        if ((0x3ff000000000000L & l) != 0L)         jjCheckNAddStates(0,3);\n else         if (curChar == 36) {\n          if (kind > 21)           kind=21;\n          jjCheckNAdd(28);\n        }\n else         if (curChar == 39)         jjCheckNAddStates(4,6);\n else         if (curChar == 46)         jjCheckNAdd(18);\n else         if (curChar == 47)         jjstateSet[jjnewStateCnt++]=6;\n else         if (curChar == 45)         jjstateSet[jjnewStateCnt++]=0;\n      if ((0x3fe000000000000L & l) != 0L) {\n        if (kind > 17)         kind=17;\n        jjCheckNAddTwoStates(15,16);\n      }\n else       if (curChar == 48) {\n        if (kind > 17)         kind=17;\n      }\n    break;\ncase 0:  if (curChar == 45)   jjCheckNAddStates(7,9);\nbreak;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else if (curChar < 128) {\nlong l=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 5:case 28:if ((0x7fffffe87fffffeL & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 1:jjAddStates(7,9);\nbreak;\ncase 7:jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:jjCheckNAddTwoStates(10,8);\nbreak;\ncase 16:if ((0x100000001000L & l) != 0L && kind > 17) kind=17;\nbreak;\ncase 19:if ((0x2000000020L & l) != 0L) jjAddStates(13,14);\nbreak;\ncase 25:jjAddStates(4,6);\nbreak;\ncase 33:if ((0x2000000020L & l) != 0L) jjAddStates(15,16);\nbreak;\ncase 37:if ((0x2000000020L & l) != 0L) jjAddStates(17,18);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else {\nint hiByte=(int)(curChar >> 8);\nint i1=hiByte >> 6;\nlong l1=1L << (hiByte & 077);\nint i2=(curChar & 0xff) >> 6;\nlong l2=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 1:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(7,9);\nbreak;\ncase 7:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 25:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(4,6);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\nif (kind != 0x7fffffff) {\njjmatchedKind=kind;\njjmatchedPos=curPos;\nkind=0x7fffffff;\n}\n++curPos;\nif ((i=jjnewStateCnt) == (startsAt=40 - (jjnewStateCnt=startsAt))) break;\ntry {\ncurChar=inputStream.readChar();\n}\n catch (java.io.IOException e) {\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1040,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12616,
        "startLineNumber" : 388,
        "startColumnNumber" : 8,
        "endLineNumber" : 681,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (; ; ) {\n  if (++jjround == 0x7fffffff)   ReInitRounds();\n  if (curChar < 64) {\n    long l=1L << curChar;\n    do {\nswitch (jjstateSet[--i]) {\ncase 5:        if ((0x3ff000000000000L & l) != 0L)         jjCheckNAddStates(0,3);\n else         if (curChar == 36) {\n          if (kind > 21)           kind=21;\n          jjCheckNAdd(28);\n        }\n else         if (curChar == 39)         jjCheckNAddStates(4,6);\n else         if (curChar == 46)         jjCheckNAdd(18);\n else         if (curChar == 47)         jjstateSet[jjnewStateCnt++]=6;\n else         if (curChar == 45)         jjstateSet[jjnewStateCnt++]=0;\n      if ((0x3fe000000000000L & l) != 0L) {\n        if (kind > 17)         kind=17;\n        jjCheckNAddTwoStates(15,16);\n      }\n else       if (curChar == 48) {\n        if (kind > 17)         kind=17;\n      }\n    break;\ncase 0:  if (curChar == 45)   jjCheckNAddStates(7,9);\nbreak;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else if (curChar < 128) {\nlong l=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 5:case 28:if ((0x7fffffe87fffffeL & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 1:jjAddStates(7,9);\nbreak;\ncase 7:jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:jjCheckNAddTwoStates(10,8);\nbreak;\ncase 16:if ((0x100000001000L & l) != 0L && kind > 17) kind=17;\nbreak;\ncase 19:if ((0x2000000020L & l) != 0L) jjAddStates(13,14);\nbreak;\ncase 25:jjAddStates(4,6);\nbreak;\ncase 33:if ((0x2000000020L & l) != 0L) jjAddStates(15,16);\nbreak;\ncase 37:if ((0x2000000020L & l) != 0L) jjAddStates(17,18);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else {\nint hiByte=(int)(curChar >> 8);\nint i1=hiByte >> 6;\nlong l1=1L << (hiByte & 077);\nint i2=(curChar & 0xff) >> 6;\nlong l2=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 1:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(7,9);\nbreak;\ncase 7:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 25:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(4,6);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\nif (kind != 0x7fffffff) {\njjmatchedKind=kind;\njjmatchedPos=curPos;\nkind=0x7fffffff;\n}\n++curPos;\nif ((i=jjnewStateCnt) == (startsAt=40 - (jjnewStateCnt=startsAt))) break;\ntry {\ncurChar=inputStream.readChar();\n}\n catch (java.io.IOException e) {\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 1041,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 13771,
        "startLineNumber" : 372,
        "startColumnNumber" : 56,
        "endLineNumber" : 702,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int strKind=jjmatchedKind;\n  int strPos=jjmatchedPos;\n  int seenUpto;\n  inputStream.backup(seenUpto=curPos + 1);\n  try {\n    curChar=inputStream.readChar();\n  }\n catch (  java.io.IOException e) {\n    throw new Error(\"Internal Error\");\n  }\n  curPos=0;\n  int startsAt=0;\n  jjnewStateCnt=40;\n  int i=1;\n  jjstateSet[0]=startState;\n  int kind=0x7fffffff;\n  for (; ; ) {\n    if (++jjround == 0x7fffffff)     ReInitRounds();\n    if (curChar < 64) {\n      long l=1L << curChar;\n      do {\nswitch (jjstateSet[--i]) {\ncase 5:          if ((0x3ff000000000000L & l) != 0L)           jjCheckNAddStates(0,3);\n else           if (curChar == 36) {\n            if (kind > 21)             kind=21;\n            jjCheckNAdd(28);\n          }\n else           if (curChar == 39)           jjCheckNAddStates(4,6);\n else           if (curChar == 46)           jjCheckNAdd(18);\n else           if (curChar == 47)           jjstateSet[jjnewStateCnt++]=6;\n else           if (curChar == 45)           jjstateSet[jjnewStateCnt++]=0;\n        if ((0x3fe000000000000L & l) != 0L) {\n          if (kind > 17)           kind=17;\n          jjCheckNAddTwoStates(15,16);\n        }\n else         if (curChar == 48) {\n          if (kind > 17)           kind=17;\n        }\n      break;\ncase 0:    if (curChar == 45)     jjCheckNAddStates(7,9);\n  break;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else if (curChar < 128) {\nlong l=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 5:case 28:if ((0x7fffffe87fffffeL & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 1:jjAddStates(7,9);\nbreak;\ncase 7:jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:jjCheckNAddTwoStates(10,8);\nbreak;\ncase 16:if ((0x100000001000L & l) != 0L && kind > 17) kind=17;\nbreak;\ncase 19:if ((0x2000000020L & l) != 0L) jjAddStates(13,14);\nbreak;\ncase 25:jjAddStates(4,6);\nbreak;\ncase 33:if ((0x2000000020L & l) != 0L) jjAddStates(15,16);\nbreak;\ncase 37:if ((0x2000000020L & l) != 0L) jjAddStates(17,18);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else {\nint hiByte=(int)(curChar >> 8);\nint i1=hiByte >> 6;\nlong l1=1L << (hiByte & 077);\nint i2=(curChar & 0xff) >> 6;\nlong l2=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 1:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(7,9);\nbreak;\ncase 7:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 25:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(4,6);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\nif (kind != 0x7fffffff) {\njjmatchedKind=kind;\njjmatchedPos=curPos;\nkind=0x7fffffff;\n}\n++curPos;\nif ((i=jjnewStateCnt) == (startsAt=40 - (jjnewStateCnt=startsAt))) break;\ntry {\ncurChar=inputStream.readChar();\n}\n catch (java.io.IOException e) {\nbreak;\n}\n}\nif (jjmatchedPos > strPos) return curPos;\nint toRet=Math.max(curPos,seenUpto);\nif (curPos < toRet) for (i=toRet - Math.min(curPos,seenUpto); i-- > 0; ) try {\ncurChar=inputStream.readChar();\n}\n catch (java.io.IOException e) {\nthrow new Error(\"Internal Error : Please send a bug report.\");\n}\nif (jjmatchedPos < strPos) {\njjmatchedKind=strKind;\njjmatchedPos=strPos;\n}\n else if (jjmatchedPos == strPos && jjmatchedKind > strKind) jjmatchedKind=strKind;\nreturn toRet;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1200,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 13823,
        "startLineNumber" : 372,
        "startColumnNumber" : 4,
        "endLineNumber" : 702,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private int jjMoveNfa_0(int startState,int curPos){\n  int strKind=jjmatchedKind;\n  int strPos=jjmatchedPos;\n  int seenUpto;\n  inputStream.backup(seenUpto=curPos + 1);\n  try {\n    curChar=inputStream.readChar();\n  }\n catch (  java.io.IOException e) {\n    throw new Error(\"Internal Error\");\n  }\n  curPos=0;\n  int startsAt=0;\n  jjnewStateCnt=40;\n  int i=1;\n  jjstateSet[0]=startState;\n  int kind=0x7fffffff;\n  for (; ; ) {\n    if (++jjround == 0x7fffffff)     ReInitRounds();\n    if (curChar < 64) {\n      long l=1L << curChar;\n      do {\nswitch (jjstateSet[--i]) {\ncase 5:          if ((0x3ff000000000000L & l) != 0L)           jjCheckNAddStates(0,3);\n else           if (curChar == 36) {\n            if (kind > 21)             kind=21;\n            jjCheckNAdd(28);\n          }\n else           if (curChar == 39)           jjCheckNAddStates(4,6);\n else           if (curChar == 46)           jjCheckNAdd(18);\n else           if (curChar == 47)           jjstateSet[jjnewStateCnt++]=6;\n else           if (curChar == 45)           jjstateSet[jjnewStateCnt++]=0;\n        if ((0x3fe000000000000L & l) != 0L) {\n          if (kind > 17)           kind=17;\n          jjCheckNAddTwoStates(15,16);\n        }\n else         if (curChar == 48) {\n          if (kind > 17)           kind=17;\n        }\n      break;\ncase 0:    if (curChar == 45)     jjCheckNAddStates(7,9);\n  break;\ncase 1:if ((0xffffffffffffdbffL & l) != 0L) jjCheckNAddStates(7,9);\nbreak;\ncase 2:if ((0x2400L & l) != 0L && kind > 6) kind=6;\nbreak;\ncase 3:if (curChar == 10 && kind > 6) kind=6;\nbreak;\ncase 4:if (curChar == 13) jjstateSet[jjnewStateCnt++]=3;\nbreak;\ncase 6:if (curChar == 42) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 7:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 8:if (curChar == 42) jjCheckNAddStates(10,12);\nbreak;\ncase 9:if ((0xffff7bffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 10:if ((0xfffffbffffffffffL & l) != 0L) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 11:if (curChar == 47 && kind > 7) kind=7;\nbreak;\ncase 12:if (curChar == 47) jjstateSet[jjnewStateCnt++]=6;\nbreak;\ncase 13:if (curChar == 48 && kind > 17) kind=17;\nbreak;\ncase 14:if ((0x3fe000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 15:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 17) kind=17;\njjCheckNAddTwoStates(15,16);\nbreak;\ncase 17:if (curChar == 46) jjCheckNAdd(18);\nbreak;\ncase 18:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(18,19);\nbreak;\ncase 20:if ((0x280000000000L & l) != 0L) jjCheckNAdd(21);\nbreak;\ncase 21:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(21);\nbreak;\ncase 22:case 23:if (curChar == 39) jjCheckNAddStates(4,6);\nbreak;\ncase 24:if (curChar == 39) jjstateSet[jjnewStateCnt++]=23;\nbreak;\ncase 25:if ((0xffffff7fffffffffL & l) != 0L) jjCheckNAddStates(4,6);\nbreak;\ncase 26:if (curChar == 39 && kind > 20) kind=20;\nbreak;\ncase 27:if (curChar != 36) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 28:if ((0x3ff001000000000L & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 29:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(0,3);\nbreak;\ncase 30:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(30,31);\nbreak;\ncase 31:if (curChar != 46) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 32:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAddTwoStates(32,33);\nbreak;\ncase 34:if ((0x280000000000L & l) != 0L) jjCheckNAdd(35);\nbreak;\ncase 35:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(35);\nbreak;\ncase 36:if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(36,37);\nbreak;\ncase 38:if ((0x280000000000L & l) != 0L) jjCheckNAdd(39);\nbreak;\ncase 39:if ((0x3ff000000000000L & l) == 0L) break;\nif (kind > 18) kind=18;\njjCheckNAdd(39);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else if (curChar < 128) {\nlong l=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 5:case 28:if ((0x7fffffe87fffffeL & l) == 0L) break;\nif (kind > 21) kind=21;\njjCheckNAdd(28);\nbreak;\ncase 1:jjAddStates(7,9);\nbreak;\ncase 7:jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:jjCheckNAddTwoStates(10,8);\nbreak;\ncase 16:if ((0x100000001000L & l) != 0L && kind > 17) kind=17;\nbreak;\ncase 19:if ((0x2000000020L & l) != 0L) jjAddStates(13,14);\nbreak;\ncase 25:jjAddStates(4,6);\nbreak;\ncase 33:if ((0x2000000020L & l) != 0L) jjAddStates(15,16);\nbreak;\ncase 37:if ((0x2000000020L & l) != 0L) jjAddStates(17,18);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\n else {\nint hiByte=(int)(curChar >> 8);\nint i1=hiByte >> 6;\nlong l1=1L << (hiByte & 077);\nint i2=(curChar & 0xff) >> 6;\nlong l2=1L << (curChar & 077);\ndo {\nswitch (jjstateSet[--i]) {\ncase 1:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(7,9);\nbreak;\ncase 7:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(7,8);\nbreak;\ncase 9:case 10:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(10,8);\nbreak;\ncase 25:if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(4,6);\nbreak;\ndefault:break;\n}\n}\n while (i != startsAt);\n}\nif (kind != 0x7fffffff) {\njjmatchedKind=kind;\njjmatchedPos=curPos;\nkind=0x7fffffff;\n}\n++curPos;\nif ((i=jjnewStateCnt) == (startsAt=40 - (jjnewStateCnt=startsAt))) break;\ntry {\ncurChar=inputStream.readChar();\n}\n catch (java.io.IOException e) {\nbreak;\n}\n}\nif (jjmatchedPos > strPos) return curPos;\nint toRet=Math.max(curPos,seenUpto);\nif (curPos < toRet) for (i=toRet - Math.min(curPos,seenUpto); i-- > 0; ) try {\ncurChar=inputStream.readChar();\n}\n catch (java.io.IOException e) {\nthrow new Error(\"Internal Error : Please send a bug report.\");\n}\nif (jjmatchedPos < strPos) {\njjmatchedKind=strKind;\njjmatchedPos=strPos;\n}\n else if (jjmatchedPos == strPos && jjmatchedKind > strKind) jjmatchedKind=strKind;\nreturn toRet;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1210,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 428,
        "startColumnNumber" : 28,
        "endLineNumber" : 429,
        "endColumnNumber" : 41
      },
      "nodeContext" : "if ((0x2400L & l) != 0L && kind > 6) kind=6;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 428,
    "startColumnNumber" : 32,
    "endLineNumber" : 428,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}