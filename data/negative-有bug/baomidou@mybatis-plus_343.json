{
  "id" : 343,
  "expression" : "\"\\n one.id-------:\"",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/test/java/com/baomidou/mybatisplus/test/oracle/TestSequserMapperTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\n one.id-------:\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 68,
      "startColumnNumber" : 27,
      "endLineNumber" : 68,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 68,
        "startColumnNumber" : 27,
        "endLineNumber" : 68,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"\\n one.id-------:\" + one.getId()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 61
      },
      "nodeContext" : "System.err.println(\"\\n one.id-------:\" + one.getId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 62
      },
      "nodeContext" : "System.err.println(\"\\n one.id-------:\" + one.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1876,
        "startLineNumber" : 47,
        "startColumnNumber" : 43,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InputStream in=TestSequserMapperTest.class.getClassLoader().getResourceAsStream(\"oracle-config.xml\");\n  MybatisSessionFactoryBuilder mf=new MybatisSessionFactoryBuilder();\n  GlobalConfiguration gc=new GlobalConfiguration();\n  gc.setDbType(\"oracle\");\n  gc.setDbColumnUnderline(true);\n  gc.setKeyGenerator(new OracleKeyGenerator());\n  mf.setGlobalConfig(gc);\n  SqlSessionFactory sessionFactory=mf.build(in);\n  SqlSession session=sessionFactory.openSession();\n  TestSequserMapper testSequserMapper=session.getMapper(TestSequserMapper.class);\n  TestSequser one=new TestSequser(\"abc\",18,1);\n  int rlt=testSequserMapper.insert(one);\n  System.err.println(\"\\n one.id-------:\" + one.getId());\n  List<TestSequser> ul=new ArrayList<>();\n  ul.add(new TestSequser(\"abc2\",18,2));\n  ul.add(new TestSequser(\"abc3\",18,3));\n  ul.add(new TestSequser(\"abc4\",18,4));\n  ul.add(new TestSequser(\"abc5\",18,5));\n  ul.add(new TestSequser(\"abc6\",18,6));\n  for (  TestSequser u : ul) {\n    rlt=testSequserMapper.insert(u);\n  }\n  System.out.println(\"********************\");\n  List<TestSequser> testList=testSequserMapper.getList();\n  for (  TestSequser u : testList) {\n    System.out.println(u);\n  }\n  testList=testSequserMapper.selectList(new EntityWrapper<TestSequser>());\n  for (  TestSequser u : testList) {\n    System.out.println(u);\n  }\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1959,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test Oracle Sequence\n */\npublic static void main(String[] args){\n  InputStream in=TestSequserMapperTest.class.getClassLoader().getResourceAsStream(\"oracle-config.xml\");\n  MybatisSessionFactoryBuilder mf=new MybatisSessionFactoryBuilder();\n  GlobalConfiguration gc=new GlobalConfiguration();\n  gc.setDbType(\"oracle\");\n  gc.setDbColumnUnderline(true);\n  gc.setKeyGenerator(new OracleKeyGenerator());\n  mf.setGlobalConfig(gc);\n  SqlSessionFactory sessionFactory=mf.build(in);\n  SqlSession session=sessionFactory.openSession();\n  TestSequserMapper testSequserMapper=session.getMapper(TestSequserMapper.class);\n  TestSequser one=new TestSequser(\"abc\",18,1);\n  int rlt=testSequserMapper.insert(one);\n  System.err.println(\"\\n one.id-------:\" + one.getId());\n  List<TestSequser> ul=new ArrayList<>();\n  ul.add(new TestSequser(\"abc2\",18,2));\n  ul.add(new TestSequser(\"abc3\",18,3));\n  ul.add(new TestSequser(\"abc4\",18,4));\n  ul.add(new TestSequser(\"abc5\",18,5));\n  ul.add(new TestSequser(\"abc6\",18,6));\n  for (  TestSequser u : ul) {\n    rlt=testSequserMapper.insert(u);\n  }\n  System.out.println(\"********************\");\n  List<TestSequser> testList=testSequserMapper.getList();\n  for (  TestSequser u : testList) {\n    System.out.println(u);\n  }\n  testList=testSequserMapper.selectList(new EntityWrapper<TestSequser>());\n  for (  TestSequser u : testList) {\n    System.out.println(u);\n  }\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 260,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 62
      },
      "nodeContext" : "System.err.println(\"\\n one.id-------:\" + one.getId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 68,
    "startColumnNumber" : 27,
    "endLineNumber" : 68,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}