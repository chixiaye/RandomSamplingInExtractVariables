{
  "id" : 298,
  "expression" : "1",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/semantics/SymbolChecks.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 93,
      "startColumnNumber" : 33,
      "endLineNumber" : 93,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 93,
        "startColumnNumber" : 11,
        "endLineNumber" : 93,
        "endColumnNumber" : 35
      },
      "nodeContext" : "ampersandAST.getChild(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 93,
        "startColumnNumber" : 11,
        "endLineNumber" : 93,
        "endColumnNumber" : 45
      },
      "nodeContext" : "ampersandAST.getChild(1).getText()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 45
      },
      "nodeContext" : "name=ampersandAST.getChild(1).getText()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 46
      },
      "nodeContext" : "name=ampersandAST.getChild(1).getText();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  scope=nameNode.getText();\n  name=ampersandAST.getChild(1).getText();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 88,
        "startColumnNumber" : 3,
        "endLineNumber" : 94,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (ampersandAST.getChildCount() == 2) {\n  name=nameNode.getText();\n}\n else {\n  scope=nameNode.getText();\n  name=ampersandAST.getChild(1).getText();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 86,
        "startColumnNumber" : 42,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  nameNode=(GrammarAST)ampersandAST.getChild(0);\n  if (ampersandAST.getChildCount() == 2) {\n    name=nameNode.getText();\n  }\n else {\n    scope=nameNode.getText();\n    name=ampersandAST.getChild(1).getText();\n  }\n  Set<String> scopeActions=actionScopeToActionNames.get(scope);\n  if (scopeActions == null) {\n    scopeActions=new HashSet<String>();\n    actionScopeToActionNames.put(scope,scopeActions);\n  }\n  if (!scopeActions.contains(name)) {\n    scopeActions.add(name);\n  }\n else {\n    errMgr.grammarError(ErrorType.ACTION_REDEFINITION,g.fileName,nameNode.token,name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (GrammarAST ampersandAST : actions) {\n  nameNode=(GrammarAST)ampersandAST.getChild(0);\n  if (ampersandAST.getChildCount() == 2) {\n    name=nameNode.getText();\n  }\n else {\n    scope=nameNode.getText();\n    name=ampersandAST.getChild(1).getText();\n  }\n  Set<String> scopeActions=actionScopeToActionNames.get(scope);\n  if (scopeActions == null) {\n    scopeActions=new HashSet<String>();\n    actionScopeToActionNames.put(scope,scopeActions);\n  }\n  if (!scopeActions.contains(name)) {\n    scopeActions.add(name);\n  }\n else {\n    errMgr.grammarError(ErrorType.ACTION_REDEFINITION,g.fileName,nameNode.token,name);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 81,
        "startColumnNumber" : 64,
        "endLineNumber" : 108,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (actions == null)   return;\n  String scope=g.getDefaultActionScope();\n  String name;\n  GrammarAST nameNode;\n  for (  GrammarAST ampersandAST : actions) {\n    nameNode=(GrammarAST)ampersandAST.getChild(0);\n    if (ampersandAST.getChildCount() == 2) {\n      name=nameNode.getText();\n    }\n else {\n      scope=nameNode.getText();\n      name=ampersandAST.getChild(1).getText();\n    }\n    Set<String> scopeActions=actionScopeToActionNames.get(scope);\n    if (scopeActions == null) {\n      scopeActions=new HashSet<String>();\n      actionScopeToActionNames.put(scope,scopeActions);\n    }\n    if (!scopeActions.contains(name)) {\n      scopeActions.add(name);\n    }\n else {\n      errMgr.grammarError(ErrorType.ACTION_REDEFINITION,g.fileName,nameNode.token,name);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 879,
        "startLineNumber" : 81,
        "startColumnNumber" : 1,
        "endLineNumber" : 108,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void checkActionRedefinitions(List<GrammarAST> actions){\n  if (actions == null)   return;\n  String scope=g.getDefaultActionScope();\n  String name;\n  GrammarAST nameNode;\n  for (  GrammarAST ampersandAST : actions) {\n    nameNode=(GrammarAST)ampersandAST.getChild(0);\n    if (ampersandAST.getChildCount() == 2) {\n      name=nameNode.getText();\n    }\n else {\n      scope=nameNode.getText();\n      name=ampersandAST.getChild(1).getText();\n    }\n    Set<String> scopeActions=actionScopeToActionNames.get(scope);\n    if (scopeActions == null) {\n      scopeActions=new HashSet<String>();\n      actionScopeToActionNames.put(scope,scopeActions);\n    }\n    if (!scopeActions.contains(name)) {\n      scopeActions.add(name);\n    }\n else {\n      errMgr.grammarError(ErrorType.ACTION_REDEFINITION,g.fileName,nameNode.token,name);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 46
      },
      "nodeContext" : "name=ampersandAST.getChild(1).getText();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 93,
    "startColumnNumber" : 33,
    "endLineNumber" : 93,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}