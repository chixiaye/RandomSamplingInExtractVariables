{
  "id" : 160,
  "expression" : "nextInstr != null && nextInstr.isInDelaySlot()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/util/SimpleDiffUtility.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nextInstr != null && nextInstr.isInDelaySlot()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 139,
      "startColumnNumber" : 10,
      "endLineNumber" : 139,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 139,
        "startColumnNumber" : 3,
        "endLineNumber" : 142,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (nextInstr != null && nextInstr.isInDelaySlot()) {\n  maxAddr=nextInstr.getMaxAddress();\n  nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Instruction nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n  while (nextInstr != null && nextInstr.isInDelaySlot()) {\n    maxAddr=nextInstr.getMaxAddress();\n    nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  Instruction nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n  while (nextInstr != null && nextInstr.isInDelaySlot()) {\n    maxAddr=nextInstr.getMaxAddress();\n    nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n  }\n}\n catch (AddressOverflowException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 134,
        "startColumnNumber" : 61,
        "endLineNumber" : 148,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Listing listing=instr.getProgram().getListing();\n  Address maxAddr=instr.getMaxAddress();\n  try {\n    Instruction nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n    while (nextInstr != null && nextInstr.isInDelaySlot()) {\n      maxAddr=nextInstr.getMaxAddress();\n      nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n    }\n  }\n catch (  AddressOverflowException e) {\n  }\n  return maxAddr;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 127,
        "startColumnNumber" : 1,
        "endLineNumber" : 148,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * If the specified instruction is contained within a delay slot, or has delay slots, the maximum address of the last delay slot instruction will be returned. If a normal instruction is specified the instructions maximum address is returned.\n * @param instr\n * @return maximum address of instruction or its last delay slot\n */\npublic static Address getEndOfDelaySlots(Instruction instr){\n  Listing listing=instr.getProgram().getListing();\n  Address maxAddr=instr.getMaxAddress();\n  try {\n    Instruction nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n    while (nextInstr != null && nextInstr.isInDelaySlot()) {\n      maxAddr=nextInstr.getMaxAddress();\n      nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n    }\n  }\n catch (  AddressOverflowException e) {\n  }\n  return maxAddr;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 139,
        "startColumnNumber" : 3,
        "endLineNumber" : 142,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (nextInstr != null && nextInstr.isInDelaySlot()) {\n  maxAddr=nextInstr.getMaxAddress();\n  nextInstr=listing.getInstructionAt(maxAddr.addNoWrap(1));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 139,
    "startColumnNumber" : 10,
    "endLineNumber" : 139,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}