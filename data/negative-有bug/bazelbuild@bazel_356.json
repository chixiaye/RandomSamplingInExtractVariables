{
  "id" : 356,
  "expression" : "inIx",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/protobuf/3.4.0/java/core/src/main/java/com/google/protobuf/Utf8.java",
  "occurrences" : 12,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 694,
      "startColumnNumber" : 21,
      "endLineNumber" : 694,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 694,
        "startColumnNumber" : 21,
        "endLineNumber" : 694,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inIx < inLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 694,
        "startColumnNumber" : 21,
        "endLineNumber" : 694,
        "endColumnNumber" : 68
      },
      "nodeContext" : "inIx < inLength && (c=in.charAt(inIx)) < 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 694,
        "startColumnNumber" : 8,
        "endLineNumber" : 696,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n  out.put(outIx + inIx,(byte)c);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 694,
        "startColumnNumber" : 21,
        "endLineNumber" : 694,
        "endColumnNumber" : 68
      },
      "nodeContext" : "inIx < inLength && (c=in.charAt(inIx)) < 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 694,
      "startColumnNumber" : 55,
      "endLineNumber" : 694,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 694,
        "startColumnNumber" : 45,
        "endLineNumber" : 694,
        "endColumnNumber" : 60
      },
      "nodeContext" : "in.charAt(inIx)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 694,
        "startColumnNumber" : 41,
        "endLineNumber" : 694,
        "endColumnNumber" : 60
      },
      "nodeContext" : "c=in.charAt(inIx)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 694,
        "startColumnNumber" : 40,
        "endLineNumber" : 694,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(c=in.charAt(inIx))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 694,
        "startColumnNumber" : 40,
        "endLineNumber" : 694,
        "endColumnNumber" : 68
      },
      "nodeContext" : "(c=in.charAt(inIx)) < 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 694,
        "startColumnNumber" : 21,
        "endLineNumber" : 694,
        "endColumnNumber" : 68
      },
      "nodeContext" : "inIx < inLength && (c=in.charAt(inIx)) < 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 694,
        "startColumnNumber" : 8,
        "endLineNumber" : 696,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n  out.put(outIx + inIx,(byte)c);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 694,
        "startColumnNumber" : 21,
        "endLineNumber" : 694,
        "endColumnNumber" : 68
      },
      "nodeContext" : "inIx < inLength && (c=in.charAt(inIx)) < 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 695,
      "startColumnNumber" : 26,
      "endLineNumber" : 695,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 695,
        "startColumnNumber" : 18,
        "endLineNumber" : 695,
        "endColumnNumber" : 30
      },
      "nodeContext" : "outIx + inIx",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 695,
        "startColumnNumber" : 10,
        "endLineNumber" : 695,
        "endColumnNumber" : 41
      },
      "nodeContext" : "out.put(outIx + inIx,(byte)c)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 695,
        "startColumnNumber" : 10,
        "endLineNumber" : 695,
        "endColumnNumber" : 42
      },
      "nodeContext" : "out.put(outIx + inIx,(byte)c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 694,
        "startColumnNumber" : 78,
        "endLineNumber" : 696,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  out.put(outIx + inIx,(byte)c);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 694,
        "startColumnNumber" : 8,
        "endLineNumber" : 696,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n  out.put(outIx + inIx,(byte)c);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 695,
        "startColumnNumber" : 10,
        "endLineNumber" : 695,
        "endColumnNumber" : 42
      },
      "nodeContext" : "out.put(outIx + inIx,(byte)c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 697,
      "startColumnNumber" : 12,
      "endLineNumber" : 697,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 697,
        "startColumnNumber" : 12,
        "endLineNumber" : 697,
        "endColumnNumber" : 28
      },
      "nodeContext" : "inIx == inLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 697,
        "startColumnNumber" : 8,
        "endLineNumber" : 701,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (inIx == inLength) {\n  out.position(outIx + inIx);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 697,
        "startColumnNumber" : 12,
        "endLineNumber" : 697,
        "endColumnNumber" : 28
      },
      "nodeContext" : "inIx == inLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 699,
      "startColumnNumber" : 31,
      "endLineNumber" : 699,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 699,
        "startColumnNumber" : 23,
        "endLineNumber" : 699,
        "endColumnNumber" : 35
      },
      "nodeContext" : "outIx + inIx",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 699,
        "startColumnNumber" : 10,
        "endLineNumber" : 699,
        "endColumnNumber" : 36
      },
      "nodeContext" : "out.position(outIx + inIx)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 699,
        "startColumnNumber" : 10,
        "endLineNumber" : 699,
        "endColumnNumber" : 37
      },
      "nodeContext" : "out.position(outIx + inIx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 697,
        "startColumnNumber" : 30,
        "endLineNumber" : 701,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  out.position(outIx + inIx);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 697,
        "startColumnNumber" : 8,
        "endLineNumber" : 701,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (inIx == inLength) {\n  out.position(outIx + inIx);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 699,
        "startColumnNumber" : 10,
        "endLineNumber" : 699,
        "endColumnNumber" : 37
      },
      "nodeContext" : "out.position(outIx + inIx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 703,
      "startColumnNumber" : 17,
      "endLineNumber" : 703,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 703,
        "startColumnNumber" : 8,
        "endLineNumber" : 703,
        "endColumnNumber" : 21
      },
      "nodeContext" : "outIx+=inIx",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 703,
        "startColumnNumber" : 8,
        "endLineNumber" : 703,
        "endColumnNumber" : 22
      },
      "nodeContext" : "outIx+=inIx;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 703,
        "startColumnNumber" : 8,
        "endLineNumber" : 703,
        "endColumnNumber" : 22
      },
      "nodeContext" : "outIx+=inIx;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 704,
      "startColumnNumber" : 21,
      "endLineNumber" : 704,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 704,
        "startColumnNumber" : 21,
        "endLineNumber" : 704,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inIx < inLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1795,
        "startLineNumber" : 704,
        "startColumnNumber" : 8,
        "endLineNumber" : 739,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (char c; inIx < inLength; ++inIx, ++outIx) {\n  c=in.charAt(inIx);\n  if (c < 0x80) {\n    out.put(outIx,(byte)c);\n  }\n else   if (c < 0x800) {\n    out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else   if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n    out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else {\n    final char low;\n    if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n      throw new UnpairedSurrogateException(inIx,inLength);\n    }\n    int codePoint=toCodePoint(c,low);\n    out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 231,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 704,
        "startColumnNumber" : 21,
        "endLineNumber" : 704,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inIx < inLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 705,
      "startColumnNumber" : 24,
      "endLineNumber" : 705,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 705,
        "startColumnNumber" : 14,
        "endLineNumber" : 705,
        "endColumnNumber" : 29
      },
      "nodeContext" : "in.charAt(inIx)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 705,
        "startColumnNumber" : 10,
        "endLineNumber" : 705,
        "endColumnNumber" : 29
      },
      "nodeContext" : "c=in.charAt(inIx)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 705,
        "startColumnNumber" : 10,
        "endLineNumber" : 705,
        "endColumnNumber" : 30
      },
      "nodeContext" : "c=in.charAt(inIx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1748,
        "startLineNumber" : 704,
        "startColumnNumber" : 55,
        "endLineNumber" : 739,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  c=in.charAt(inIx);\n  if (c < 0x80) {\n    out.put(outIx,(byte)c);\n  }\n else   if (c < 0x800) {\n    out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else   if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n    out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else {\n    final char low;\n    if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n      throw new UnpairedSurrogateException(inIx,inLength);\n    }\n    int codePoint=toCodePoint(c,low);\n    out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1795,
        "startLineNumber" : 704,
        "startColumnNumber" : 8,
        "endLineNumber" : 739,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (char c; inIx < inLength; ++inIx, ++outIx) {\n  c=in.charAt(inIx);\n  if (c < 0x80) {\n    out.put(outIx,(byte)c);\n  }\n else   if (c < 0x800) {\n    out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else   if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n    out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else {\n    final char low;\n    if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n      throw new UnpairedSurrogateException(inIx,inLength);\n    }\n    int codePoint=toCodePoint(c,low);\n    out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 231,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 705,
        "startColumnNumber" : 10,
        "endLineNumber" : 705,
        "endColumnNumber" : 30
      },
      "nodeContext" : "c=in.charAt(inIx);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 729,
      "startColumnNumber" : 16,
      "endLineNumber" : 729,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 729,
        "startColumnNumber" : 16,
        "endLineNumber" : 729,
        "endColumnNumber" : 24
      },
      "nodeContext" : "inIx + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 729,
        "startColumnNumber" : 16,
        "endLineNumber" : 729,
        "endColumnNumber" : 36
      },
      "nodeContext" : "inIx + 1 == inLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 729,
        "startColumnNumber" : 16,
        "endLineNumber" : 729,
        "endColumnNumber" : 86
      },
      "nodeContext" : "inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 729,
        "startColumnNumber" : 12,
        "endLineNumber" : 731,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n  throw new UnpairedSurrogateException(inIx,inLength);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 723,
        "startColumnNumber" : 17,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 715,
        "startColumnNumber" : 17,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n  out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else {\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 709,
        "startColumnNumber" : 17,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (c < 0x800) {\n  out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n  out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else {\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 706,
        "startColumnNumber" : 10,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (c < 0x80) {\n  out.put(outIx,(byte)c);\n}\n else if (c < 0x800) {\n  out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n  out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else {\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1748,
        "startLineNumber" : 704,
        "startColumnNumber" : 55,
        "endLineNumber" : 739,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  c=in.charAt(inIx);\n  if (c < 0x80) {\n    out.put(outIx,(byte)c);\n  }\n else   if (c < 0x800) {\n    out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else   if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n    out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else {\n    final char low;\n    if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n      throw new UnpairedSurrogateException(inIx,inLength);\n    }\n    int codePoint=toCodePoint(c,low);\n    out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1795,
        "startLineNumber" : 704,
        "startColumnNumber" : 8,
        "endLineNumber" : 739,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (char c; inIx < inLength; ++inIx, ++outIx) {\n  c=in.charAt(inIx);\n  if (c < 0x80) {\n    out.put(outIx,(byte)c);\n  }\n else   if (c < 0x800) {\n    out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else   if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n    out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else {\n    final char low;\n    if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n      throw new UnpairedSurrogateException(inIx,inLength);\n    }\n    int codePoint=toCodePoint(c,low);\n    out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 231,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 729,
        "startColumnNumber" : 16,
        "endLineNumber" : 729,
        "endColumnNumber" : 86
      },
      "nodeContext" : "inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 730,
      "startColumnNumber" : 51,
      "endLineNumber" : 730,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 730,
        "startColumnNumber" : 20,
        "endLineNumber" : 730,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new UnpairedSurrogateException(inIx,inLength)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 730,
        "startColumnNumber" : 14,
        "endLineNumber" : 730,
        "endColumnNumber" : 67
      },
      "nodeContext" : "throw new UnpairedSurrogateException(inIx,inLength);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 729,
        "startColumnNumber" : 88,
        "endLineNumber" : 731,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new UnpairedSurrogateException(inIx,inLength);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 729,
        "startColumnNumber" : 12,
        "endLineNumber" : 731,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n  throw new UnpairedSurrogateException(inIx,inLength);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 723,
        "startColumnNumber" : 17,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 715,
        "startColumnNumber" : 17,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n  out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else {\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 164,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 709,
        "startColumnNumber" : 17,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (c < 0x800) {\n  out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n  out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else {\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 706,
        "startColumnNumber" : 10,
        "endLineNumber" : 738,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (c < 0x80) {\n  out.put(outIx,(byte)c);\n}\n else if (c < 0x800) {\n  out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n  out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & c)));\n}\n else {\n  final char low;\n  if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n    throw new UnpairedSurrogateException(inIx,inLength);\n  }\n  int codePoint=toCodePoint(c,low);\n  out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n  out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n  out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1748,
        "startLineNumber" : 704,
        "startColumnNumber" : 55,
        "endLineNumber" : 739,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  c=in.charAt(inIx);\n  if (c < 0x80) {\n    out.put(outIx,(byte)c);\n  }\n else   if (c < 0x800) {\n    out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else   if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n    out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else {\n    final char low;\n    if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n      throw new UnpairedSurrogateException(inIx,inLength);\n    }\n    int codePoint=toCodePoint(c,low);\n    out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1795,
        "startLineNumber" : 704,
        "startColumnNumber" : 8,
        "endLineNumber" : 739,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (char c; inIx < inLength; ++inIx, ++outIx) {\n  c=in.charAt(inIx);\n  if (c < 0x80) {\n    out.put(outIx,(byte)c);\n  }\n else   if (c < 0x800) {\n    out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else   if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n    out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & c)));\n  }\n else {\n    final char low;\n    if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n      throw new UnpairedSurrogateException(inIx,inLength);\n    }\n    int codePoint=toCodePoint(c,low);\n    out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n    out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n    out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 231,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2343,
        "startLineNumber" : 691,
        "startColumnNumber" : 10,
        "endLineNumber" : 743,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 730,
        "startColumnNumber" : 14,
        "endLineNumber" : 730,
        "endColumnNumber" : 67
      },
      "nodeContext" : "throw new UnpairedSurrogateException(inIx,inLength);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 748,
      "startColumnNumber" : 54,
      "endLineNumber" : 748,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 748,
        "startColumnNumber" : 45,
        "endLineNumber" : 748,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Math.max(inIx,outIx - out.position() + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 748,
        "startColumnNumber" : 28,
        "endLineNumber" : 748,
        "endColumnNumber" : 87
      },
      "nodeContext" : "out.position() + Math.max(inIx,outIx - out.position() + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 748,
        "startColumnNumber" : 12,
        "endLineNumber" : 748,
        "endColumnNumber" : 87
      },
      "nodeContext" : "badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 748,
        "startColumnNumber" : 8,
        "endLineNumber" : 748,
        "endColumnNumber" : 88
      },
      "nodeContext" : "int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 743,
        "startColumnNumber" : 44,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 743,
        "startColumnNumber" : 8,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 748,
        "startColumnNumber" : 8,
        "endLineNumber" : 748,
        "endColumnNumber" : 88
      },
      "nodeContext" : "int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "inIx",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 750,
      "startColumnNumber" : 42,
      "endLineNumber" : 750,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 750,
        "startColumnNumber" : 32,
        "endLineNumber" : 750,
        "endColumnNumber" : 47
      },
      "nodeContext" : "in.charAt(inIx)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 750,
        "startColumnNumber" : 12,
        "endLineNumber" : 750,
        "endColumnNumber" : 78
      },
      "nodeContext" : "\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 749,
        "startColumnNumber" : 14,
        "endLineNumber" : 750,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 749,
        "startColumnNumber" : 8,
        "endLineNumber" : 750,
        "endColumnNumber" : 80
      },
      "nodeContext" : "throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 743,
        "startColumnNumber" : 44,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 743,
        "startColumnNumber" : 8,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2870,
        "startLineNumber" : 691,
        "startColumnNumber" : 6,
        "endLineNumber" : 751,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n    out.put(outIx + inIx,(byte)c);\n  }\n  if (inIx == inLength) {\n    out.position(outIx + inIx);\n    return;\n  }\n  outIx+=inIx;\n  for (char c; inIx < inLength; ++inIx, ++outIx) {\n    c=in.charAt(inIx);\n    if (c < 0x80) {\n      out.put(outIx,(byte)c);\n    }\n else     if (c < 0x800) {\n      out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else     if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n      out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & c)));\n    }\n else {\n      final char low;\n      if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n        throw new UnpairedSurrogateException(inIx,inLength);\n      }\n      int codePoint=toCodePoint(c,low);\n      out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n      out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n      out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n    }\n  }\n  out.position(outIx);\n}\n catch (IndexOutOfBoundsException e) {\n  int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n  throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 323,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3203,
        "startLineNumber" : 683,
        "startColumnNumber" : 66,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3446,
        "startLineNumber" : 679,
        "startColumnNumber" : 4,
        "endLineNumber" : 752,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encodes the input character sequence to a  {@link ByteBuffer} instance using the {@link ByteBuffer} API, rather than potentially faster approaches.\n */\nfinal void encodeUtf8Default(CharSequence in,ByteBuffer out){\n  final int inLength=in.length();\n  int outIx=out.position();\n  int inIx=0;\n  try {\n    for (char c; inIx < inLength && (c=in.charAt(inIx)) < 0x80; ++inIx) {\n      out.put(outIx + inIx,(byte)c);\n    }\n    if (inIx == inLength) {\n      out.position(outIx + inIx);\n      return;\n    }\n    outIx+=inIx;\n    for (char c; inIx < inLength; ++inIx, ++outIx) {\n      c=in.charAt(inIx);\n      if (c < 0x80) {\n        out.put(outIx,(byte)c);\n      }\n else       if (c < 0x800) {\n        out.put(outIx++,(byte)(0xC0 | (c >>> 6)));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else       if (c < MIN_SURROGATE || MAX_SURROGATE < c) {\n        out.put(outIx++,(byte)(0xE0 | (c >>> 12)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (c >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & c)));\n      }\n else {\n        final char low;\n        if (inIx + 1 == inLength || !isSurrogatePair(c,(low=in.charAt(++inIx)))) {\n          throw new UnpairedSurrogateException(inIx,inLength);\n        }\n        int codePoint=toCodePoint(c,low);\n        out.put(outIx++,(byte)((0xF << 4) | (codePoint >>> 18)));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 12))));\n        out.put(outIx++,(byte)(0x80 | (0x3F & (codePoint >>> 6))));\n        out.put(outIx,(byte)(0x80 | (0x3F & codePoint)));\n      }\n    }\n    out.position(outIx);\n  }\n catch (  IndexOutOfBoundsException e) {\n    int badWriteIndex=out.position() + Math.max(inIx,outIx - out.position() + 1);\n    throw new ArrayIndexOutOfBoundsException(\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 750,
        "startColumnNumber" : 12,
        "endLineNumber" : 750,
        "endColumnNumber" : 78
      },
      "nodeContext" : "\"Failed writing \" + in.charAt(inIx) + \" at index \"+ badWriteIndex",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 694,
    "startColumnNumber" : 21,
    "endLineNumber" : 694,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 694,
    "startColumnNumber" : 55,
    "endLineNumber" : 694,
    "endColumnNumber" : 59
  }, {
    "charLength" : 4,
    "startLineNumber" : 695,
    "startColumnNumber" : 26,
    "endLineNumber" : 695,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 697,
    "startColumnNumber" : 12,
    "endLineNumber" : 697,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 699,
    "startColumnNumber" : 31,
    "endLineNumber" : 699,
    "endColumnNumber" : 35
  }, {
    "charLength" : 4,
    "startLineNumber" : 703,
    "startColumnNumber" : 17,
    "endLineNumber" : 703,
    "endColumnNumber" : 21
  }, {
    "charLength" : 4,
    "startLineNumber" : 704,
    "startColumnNumber" : 21,
    "endLineNumber" : 704,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 705,
    "startColumnNumber" : 24,
    "endLineNumber" : 705,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 729,
    "startColumnNumber" : 16,
    "endLineNumber" : 729,
    "endColumnNumber" : 20
  }, {
    "charLength" : 4,
    "startLineNumber" : 730,
    "startColumnNumber" : 51,
    "endLineNumber" : 730,
    "endColumnNumber" : 55
  }, {
    "charLength" : 4,
    "startLineNumber" : 748,
    "startColumnNumber" : 54,
    "endLineNumber" : 748,
    "endColumnNumber" : 58
  }, {
    "charLength" : 4,
    "startLineNumber" : 750,
    "startColumnNumber" : 42,
    "endLineNumber" : 750,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 11
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 11
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 11
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 4
  } ]
}