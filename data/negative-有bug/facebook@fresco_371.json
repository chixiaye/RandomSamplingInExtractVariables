{
  "id" : 371,
  "expression" : "files != null",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/file/FileTree.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "files != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 30,
      "startColumnNumber" : 8,
      "endLineNumber" : 30,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (files != null) {\n  for (  File file : files) {\n    if (file.isDirectory()) {\n      walkFileTree(file,visitor);\n    }\n else {\n      visitor.visitFile(file);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 27,
        "startColumnNumber" : 75,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  visitor.preVisitDirectory(directory);\n  File[] files=directory.listFiles();\n  if (files != null) {\n    for (    File file : files) {\n      if (file.isDirectory()) {\n        walkFileTree(file,visitor);\n      }\n else {\n        visitor.visitFile(file);\n      }\n    }\n  }\n  visitor.postVisitDirectory(directory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 827,
        "startLineNumber" : 19,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Iterates over the file tree of a directory. It receives a visitor and will call its methods for each file in the directory. preVisitDirectory (directory) visitFile (file) - recursively the same for every subdirectory postVisitDirectory (directory)\n * @param directory the directory to iterate\n * @param visitor the visitor that will be invoked for each directory/file in the tree\n */\npublic static void walkFileTree(File directory,FileTreeVisitor visitor){\n  visitor.preVisitDirectory(directory);\n  File[] files=directory.listFiles();\n  if (files != null) {\n    for (    File file : files) {\n      if (file.isDirectory()) {\n        walkFileTree(file,visitor);\n      }\n else {\n        visitor.visitFile(file);\n      }\n    }\n  }\n  visitor.postVisitDirectory(directory);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (files != null) {\n  for (  File file : files) {\n    if (file.isDirectory()) {\n      walkFileTree(file,visitor);\n    }\n else {\n      visitor.visitFile(file);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 30,
    "startColumnNumber" : 8,
    "endLineNumber" : 30,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}