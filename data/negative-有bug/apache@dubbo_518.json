{
  "id" : 518,
  "expression" : "parameterTypes",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/common/compiler/support/ClassUtils.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parameterTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 382,
      "startColumnNumber" : 48,
      "endLineNumber" : 382,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 382,
        "startColumnNumber" : 19,
        "endLineNumber" : 382,
        "endColumnNumber" : 63
      },
      "nodeContext" : "currentClass.getMethod(name,parameterTypes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 382,
        "startColumnNumber" : 12,
        "endLineNumber" : 382,
        "endColumnNumber" : 64
      },
      "nodeContext" : "return currentClass.getMethod(name,parameterTypes);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 381,
        "startColumnNumber" : 12,
        "endLineNumber" : 383,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return currentClass.getMethod(name,parameterTypes);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 381,
        "startColumnNumber" : 8,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return currentClass.getMethod(name,parameterTypes);\n}\n catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 377,
        "startColumnNumber" : 130,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 377,
        "startColumnNumber" : 4,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Method searchMethod(Class<?> currentClass,String name,Class<?>[] parameterTypes) throws NoSuchMethodException {\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 382,
        "startColumnNumber" : 12,
        "endLineNumber" : 382,
        "endColumnNumber" : 64
      },
      "nodeContext" : "return currentClass.getMethod(name,parameterTypes);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<?>[]"
  }, {
    "nodeContext" : "parameterTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 386,
      "startColumnNumber" : 27,
      "endLineNumber" : 386,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 386,
        "startColumnNumber" : 27,
        "endLineNumber" : 386,
        "endColumnNumber" : 48
      },
      "nodeContext" : "parameterTypes.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 386,
        "startColumnNumber" : 27,
        "endLineNumber" : 386,
        "endColumnNumber" : 85
      },
      "nodeContext" : "parameterTypes.length == method.getParameterTypes().length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 385,
        "startColumnNumber" : 20,
        "endLineNumber" : 386,
        "endColumnNumber" : 85
      },
      "nodeContext" : "method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 385,
        "startColumnNumber" : 20,
        "endLineNumber" : 387,
        "endColumnNumber" : 67
      },
      "nodeContext" : "method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 385,
        "startColumnNumber" : 16,
        "endLineNumber" : 402,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n  if (parameterTypes.length > 0) {\n    Class<?>[] types=method.getParameterTypes();\n    boolean match=true;\n    for (int i=0; i < parameterTypes.length; i++) {\n      if (!types[i].isAssignableFrom(parameterTypes[i])) {\n        match=false;\n        break;\n      }\n    }\n    if (!match) {\n      continue;\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 384,
        "startColumnNumber" : 60,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Method method : currentClass.getMethods()) {\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 383,
        "startColumnNumber" : 42,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 383,
        "startColumnNumber" : 10,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 103,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 381,
        "startColumnNumber" : 8,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return currentClass.getMethod(name,parameterTypes);\n}\n catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 377,
        "startColumnNumber" : 130,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 377,
        "startColumnNumber" : 4,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Method searchMethod(Class<?> currentClass,String name,Class<?>[] parameterTypes) throws NoSuchMethodException {\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 386,
        "startColumnNumber" : 27,
        "endLineNumber" : 386,
        "endColumnNumber" : 85
      },
      "nodeContext" : "parameterTypes.length == method.getParameterTypes().length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<?>[]"
  }, {
    "nodeContext" : "parameterTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 388,
      "startColumnNumber" : 24,
      "endLineNumber" : 388,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 388,
        "startColumnNumber" : 24,
        "endLineNumber" : 388,
        "endColumnNumber" : 45
      },
      "nodeContext" : "parameterTypes.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 388,
        "startColumnNumber" : 24,
        "endLineNumber" : 388,
        "endColumnNumber" : 49
      },
      "nodeContext" : "parameterTypes.length > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 388,
        "startColumnNumber" : 20,
        "endLineNumber" : 400,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (parameterTypes.length > 0) {\n  Class<?>[] types=method.getParameterTypes();\n  boolean match=true;\n  for (int i=0; i < parameterTypes.length; i++) {\n    if (!types[i].isAssignableFrom(parameterTypes[i])) {\n      match=false;\n      break;\n    }\n  }\n  if (!match) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 387,
        "startColumnNumber" : 69,
        "endLineNumber" : 402,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (parameterTypes.length > 0) {\n    Class<?>[] types=method.getParameterTypes();\n    boolean match=true;\n    for (int i=0; i < parameterTypes.length; i++) {\n      if (!types[i].isAssignableFrom(parameterTypes[i])) {\n        match=false;\n        break;\n      }\n    }\n    if (!match) {\n      continue;\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 385,
        "startColumnNumber" : 16,
        "endLineNumber" : 402,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n  if (parameterTypes.length > 0) {\n    Class<?>[] types=method.getParameterTypes();\n    boolean match=true;\n    for (int i=0; i < parameterTypes.length; i++) {\n      if (!types[i].isAssignableFrom(parameterTypes[i])) {\n        match=false;\n        break;\n      }\n    }\n    if (!match) {\n      continue;\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 384,
        "startColumnNumber" : 60,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Method method : currentClass.getMethods()) {\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 383,
        "startColumnNumber" : 42,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 383,
        "startColumnNumber" : 10,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 103,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 381,
        "startColumnNumber" : 8,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return currentClass.getMethod(name,parameterTypes);\n}\n catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 377,
        "startColumnNumber" : 130,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 377,
        "startColumnNumber" : 4,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Method searchMethod(Class<?> currentClass,String name,Class<?>[] parameterTypes) throws NoSuchMethodException {\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 388,
        "startColumnNumber" : 24,
        "endLineNumber" : 388,
        "endColumnNumber" : 49
      },
      "nodeContext" : "parameterTypes.length > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<?>[]"
  }, {
    "nodeContext" : "parameterTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 391,
      "startColumnNumber" : 44,
      "endLineNumber" : 391,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 391,
        "startColumnNumber" : 44,
        "endLineNumber" : 391,
        "endColumnNumber" : 65
      },
      "nodeContext" : "parameterTypes.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 391,
        "startColumnNumber" : 40,
        "endLineNumber" : 391,
        "endColumnNumber" : 65
      },
      "nodeContext" : "i < parameterTypes.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 391,
        "startColumnNumber" : 24,
        "endLineNumber" : 396,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=0; i < parameterTypes.length; i++) {\n  if (!types[i].isAssignableFrom(parameterTypes[i])) {\n    match=false;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 388,
        "startColumnNumber" : 51,
        "endLineNumber" : 400,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Class<?>[] types=method.getParameterTypes();\n  boolean match=true;\n  for (int i=0; i < parameterTypes.length; i++) {\n    if (!types[i].isAssignableFrom(parameterTypes[i])) {\n      match=false;\n      break;\n    }\n  }\n  if (!match) {\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 388,
        "startColumnNumber" : 20,
        "endLineNumber" : 400,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (parameterTypes.length > 0) {\n  Class<?>[] types=method.getParameterTypes();\n  boolean match=true;\n  for (int i=0; i < parameterTypes.length; i++) {\n    if (!types[i].isAssignableFrom(parameterTypes[i])) {\n      match=false;\n      break;\n    }\n  }\n  if (!match) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 387,
        "startColumnNumber" : 69,
        "endLineNumber" : 402,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (parameterTypes.length > 0) {\n    Class<?>[] types=method.getParameterTypes();\n    boolean match=true;\n    for (int i=0; i < parameterTypes.length; i++) {\n      if (!types[i].isAssignableFrom(parameterTypes[i])) {\n        match=false;\n        break;\n      }\n    }\n    if (!match) {\n      continue;\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 385,
        "startColumnNumber" : 16,
        "endLineNumber" : 402,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n  if (parameterTypes.length > 0) {\n    Class<?>[] types=method.getParameterTypes();\n    boolean match=true;\n    for (int i=0; i < parameterTypes.length; i++) {\n      if (!types[i].isAssignableFrom(parameterTypes[i])) {\n        match=false;\n        break;\n      }\n    }\n    if (!match) {\n      continue;\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 384,
        "startColumnNumber" : 60,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Method method : currentClass.getMethods()) {\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 383,
        "startColumnNumber" : 42,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 383,
        "startColumnNumber" : 10,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 103,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 381,
        "startColumnNumber" : 8,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return currentClass.getMethod(name,parameterTypes);\n}\n catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 377,
        "startColumnNumber" : 130,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 377,
        "startColumnNumber" : 4,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Method searchMethod(Class<?> currentClass,String name,Class<?>[] parameterTypes) throws NoSuchMethodException {\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 391,
        "startColumnNumber" : 40,
        "endLineNumber" : 391,
        "endColumnNumber" : 65
      },
      "nodeContext" : "i < parameterTypes.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<?>[]"
  }, {
    "nodeContext" : "parameterTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 392,
      "startColumnNumber" : 59,
      "endLineNumber" : 392,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 392,
        "startColumnNumber" : 59,
        "endLineNumber" : 392,
        "endColumnNumber" : 76
      },
      "nodeContext" : "parameterTypes[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 392,
        "startColumnNumber" : 33,
        "endLineNumber" : 392,
        "endColumnNumber" : 77
      },
      "nodeContext" : "types[i].isAssignableFrom(parameterTypes[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 392,
        "startColumnNumber" : 32,
        "endLineNumber" : 392,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!types[i].isAssignableFrom(parameterTypes[i])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 392,
        "startColumnNumber" : 28,
        "endLineNumber" : 395,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (!types[i].isAssignableFrom(parameterTypes[i])) {\n  match=false;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 391,
        "startColumnNumber" : 72,
        "endLineNumber" : 396,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (!types[i].isAssignableFrom(parameterTypes[i])) {\n    match=false;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 391,
        "startColumnNumber" : 24,
        "endLineNumber" : 396,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=0; i < parameterTypes.length; i++) {\n  if (!types[i].isAssignableFrom(parameterTypes[i])) {\n    match=false;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 388,
        "startColumnNumber" : 51,
        "endLineNumber" : 400,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Class<?>[] types=method.getParameterTypes();\n  boolean match=true;\n  for (int i=0; i < parameterTypes.length; i++) {\n    if (!types[i].isAssignableFrom(parameterTypes[i])) {\n      match=false;\n      break;\n    }\n  }\n  if (!match) {\n    continue;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 388,
        "startColumnNumber" : 20,
        "endLineNumber" : 400,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (parameterTypes.length > 0) {\n  Class<?>[] types=method.getParameterTypes();\n  boolean match=true;\n  for (int i=0; i < parameterTypes.length; i++) {\n    if (!types[i].isAssignableFrom(parameterTypes[i])) {\n      match=false;\n      break;\n    }\n  }\n  if (!match) {\n    continue;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 387,
        "startColumnNumber" : 69,
        "endLineNumber" : 402,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (parameterTypes.length > 0) {\n    Class<?>[] types=method.getParameterTypes();\n    boolean match=true;\n    for (int i=0; i < parameterTypes.length; i++) {\n      if (!types[i].isAssignableFrom(parameterTypes[i])) {\n        match=false;\n        break;\n      }\n    }\n    if (!match) {\n      continue;\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 385,
        "startColumnNumber" : 16,
        "endLineNumber" : 402,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n  if (parameterTypes.length > 0) {\n    Class<?>[] types=method.getParameterTypes();\n    boolean match=true;\n    for (int i=0; i < parameterTypes.length; i++) {\n      if (!types[i].isAssignableFrom(parameterTypes[i])) {\n        match=false;\n        break;\n      }\n    }\n    if (!match) {\n      continue;\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 885,
        "startLineNumber" : 384,
        "startColumnNumber" : 60,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 384,
        "startColumnNumber" : 12,
        "endLineNumber" : 403,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Method method : currentClass.getMethods()) {\n  if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n    if (parameterTypes.length > 0) {\n      Class<?>[] types=method.getParameterTypes();\n      boolean match=true;\n      for (int i=0; i < parameterTypes.length; i++) {\n        if (!types[i].isAssignableFrom(parameterTypes[i])) {\n          match=false;\n          break;\n        }\n      }\n      if (!match) {\n        continue;\n      }\n    }\n    return method;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 383,
        "startColumnNumber" : 42,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 383,
        "startColumnNumber" : 10,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 103,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 381,
        "startColumnNumber" : 8,
        "endLineNumber" : 405,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return currentClass.getMethod(name,parameterTypes);\n}\n catch (NoSuchMethodException e) {\n  for (  Method method : currentClass.getMethods()) {\n    if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n      if (parameterTypes.length > 0) {\n        Class<?>[] types=method.getParameterTypes();\n        boolean match=true;\n        for (int i=0; i < parameterTypes.length; i++) {\n          if (!types[i].isAssignableFrom(parameterTypes[i])) {\n            match=false;\n            break;\n          }\n        }\n        if (!match) {\n          continue;\n        }\n      }\n      return method;\n    }\n  }\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 111,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 377,
        "startColumnNumber" : 130,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 377,
        "startColumnNumber" : 4,
        "endLineNumber" : 406,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Method searchMethod(Class<?> currentClass,String name,Class<?>[] parameterTypes) throws NoSuchMethodException {\n  if (currentClass == null) {\n    throw new NoSuchMethodException(\"class == null\");\n  }\n  try {\n    return currentClass.getMethod(name,parameterTypes);\n  }\n catch (  NoSuchMethodException e) {\n    for (    Method method : currentClass.getMethods()) {\n      if (method.getName().equals(name) && parameterTypes.length == method.getParameterTypes().length && Modifier.isPublic(method.getModifiers())) {\n        if (parameterTypes.length > 0) {\n          Class<?>[] types=method.getParameterTypes();\n          boolean match=true;\n          for (int i=0; i < parameterTypes.length; i++) {\n            if (!types[i].isAssignableFrom(parameterTypes[i])) {\n              match=false;\n              break;\n            }\n          }\n          if (!match) {\n            continue;\n          }\n        }\n        return method;\n      }\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 392,
        "startColumnNumber" : 32,
        "endLineNumber" : 392,
        "endColumnNumber" : 77
      },
      "nodeContext" : "!types[i].isAssignableFrom(parameterTypes[i])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<?>[]"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 382,
    "startColumnNumber" : 48,
    "endLineNumber" : 382,
    "endColumnNumber" : 62
  }, {
    "charLength" : 14,
    "startLineNumber" : 386,
    "startColumnNumber" : 27,
    "endLineNumber" : 386,
    "endColumnNumber" : 41
  }, {
    "charLength" : 14,
    "startLineNumber" : 388,
    "startColumnNumber" : 24,
    "endLineNumber" : 388,
    "endColumnNumber" : 38
  }, {
    "charLength" : 14,
    "startLineNumber" : 391,
    "startColumnNumber" : 44,
    "endLineNumber" : 391,
    "endColumnNumber" : 58
  }, {
    "charLength" : 14,
    "startLineNumber" : 392,
    "startColumnNumber" : 59,
    "endLineNumber" : 392,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 14
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  } ]
}