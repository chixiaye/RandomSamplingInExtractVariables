{
  "id" : 414,
  "expression" : "new PruneLimitColumns()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/sql/planner/iterative/rule/TestPruneLimitColumns.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new PruneLimitColumns()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 40,
      "startColumnNumber" : 28,
      "endLineNumber" : 40,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 52
      },
      "nodeContext" : "tester().assertThat(new PruneLimitColumns())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 92
      },
      "nodeContext" : "tester().assertThat(new PruneLimitColumns()).on(p -> buildProjectedLimit(p,variable -> variable.getName().equals(\"b\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 68
      },
      "nodeContext" : "tester().assertThat(new PruneLimitColumns()).on(p -> buildProjectedLimit(p,variable -> variable.getName().equals(\"b\"))).matches(strictProject(ImmutableMap.of(\"b\",expression(\"b\")),limit(1,strictProject(ImmutableMap.of(\"b\",expression(\"b\")),values(\"a\",\"b\")))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 69
      },
      "nodeContext" : "tester().assertThat(new PruneLimitColumns()).on(p -> buildProjectedLimit(p,variable -> variable.getName().equals(\"b\"))).matches(strictProject(ImmutableMap.of(\"b\",expression(\"b\")),limit(1,strictProject(ImmutableMap.of(\"b\",expression(\"b\")),values(\"a\",\"b\")))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  tester().assertThat(new PruneLimitColumns()).on(p -> buildProjectedLimit(p,variable -> variable.getName().equals(\"b\"))).matches(strictProject(ImmutableMap.of(\"b\",expression(\"b\")),limit(1,strictProject(ImmutableMap.of(\"b\",expression(\"b\")),values(\"a\",\"b\")))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNotAllInputsReferenced(){\n  tester().assertThat(new PruneLimitColumns()).on(p -> buildProjectedLimit(p,variable -> variable.getName().equals(\"b\"))).matches(strictProject(ImmutableMap.of(\"b\",expression(\"b\")),limit(1,strictProject(ImmutableMap.of(\"b\",expression(\"b\")),values(\"a\",\"b\")))));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 52
      },
      "nodeContext" : "tester().assertThat(new PruneLimitColumns())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.sql.planner.iterative.rule.PruneLimitColumns"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 40,
    "startColumnNumber" : 28,
    "endLineNumber" : 40,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}