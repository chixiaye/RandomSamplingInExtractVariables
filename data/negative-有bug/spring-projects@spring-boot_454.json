{
  "id" : 454,
  "expression" : "this.thrown",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-devtools/src/test/java/org/springframework/boot/devtools/restart/classloader/ClassLoaderFilesTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.thrown",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 49,
      "startColumnNumber" : 2,
      "endLineNumber" : 49,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "this.thrown.expect(IllegalArgumentException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.thrown.expect(IllegalArgumentException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 48,
        "startColumnNumber" : 57,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.thrown.expect(IllegalArgumentException.class);\n  this.thrown.expectMessage(\"Name must not be null\");\n  this.files.addFile(null,mock(ClassLoaderFile.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void addFileNameMustNotBeNull() throws Exception {\n  this.thrown.expect(IllegalArgumentException.class);\n  this.thrown.expectMessage(\"Name must not be null\");\n  this.files.addFile(null,mock(ClassLoaderFile.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.thrown.expect(IllegalArgumentException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.devtools.restart.classloader.ExpectedException"
  }, {
    "nodeContext" : "this.thrown",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 50,
      "startColumnNumber" : 2,
      "endLineNumber" : 50,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 52
      },
      "nodeContext" : "this.thrown.expectMessage(\"Name must not be null\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.thrown.expectMessage(\"Name must not be null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 48,
        "startColumnNumber" : 57,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.thrown.expect(IllegalArgumentException.class);\n  this.thrown.expectMessage(\"Name must not be null\");\n  this.files.addFile(null,mock(ClassLoaderFile.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void addFileNameMustNotBeNull() throws Exception {\n  this.thrown.expect(IllegalArgumentException.class);\n  this.thrown.expectMessage(\"Name must not be null\");\n  this.files.addFile(null,mock(ClassLoaderFile.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.thrown.expectMessage(\"Name must not be null\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.devtools.restart.classloader.ExpectedException"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 49,
    "startColumnNumber" : 2,
    "endLineNumber" : 49,
    "endColumnNumber" : 13
  }, {
    "charLength" : 11,
    "startLineNumber" : 50,
    "startColumnNumber" : 2,
    "endLineNumber" : 50,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}