{
  "id" : 445,
  "expression" : "root.getLeft().getLeft()",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-lang/src/test/java/com/baeldung/recursion/RecursionExampleUnitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "root.getLeft().getLeft()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 50,
      "startColumnNumber" : 8,
      "endLineNumber" : 50,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "root.getLeft().getLeft().setRight(new BinaryNode(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "root.getLeft().getLeft().setRight(new BinaryNode(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 44,
        "startColumnNumber" : 42,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BinaryNode root=new BinaryNode(1);\n  root.setLeft(new BinaryNode(1));\n  root.setRight(new BinaryNode(1));\n  root.getLeft().setLeft(new BinaryNode(1));\n  root.getLeft().getLeft().setRight(new BinaryNode(1));\n  root.getLeft().getLeft().getRight().setLeft(new BinaryNode(1));\n  root.getRight().setLeft(new BinaryNode(1));\n  root.getRight().getLeft().setRight(new BinaryNode(1));\n  int height=recursion.calculateTreeHeight(root);\n  Assert.assertEquals(4,height);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCalculateTreeHeight(){\n  BinaryNode root=new BinaryNode(1);\n  root.setLeft(new BinaryNode(1));\n  root.setRight(new BinaryNode(1));\n  root.getLeft().setLeft(new BinaryNode(1));\n  root.getLeft().getLeft().setRight(new BinaryNode(1));\n  root.getLeft().getLeft().getRight().setLeft(new BinaryNode(1));\n  root.getRight().setLeft(new BinaryNode(1));\n  root.getRight().getLeft().setRight(new BinaryNode(1));\n  int height=recursion.calculateTreeHeight(root);\n  Assert.assertEquals(4,height);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "root.getLeft().getLeft().setRight(new BinaryNode(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.baeldung.recursion.BinaryNode"
  }, {
    "nodeContext" : "root.getLeft().getLeft()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 51,
      "startColumnNumber" : 8,
      "endLineNumber" : 51,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 43
      },
      "nodeContext" : "root.getLeft().getLeft().getRight()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 70
      },
      "nodeContext" : "root.getLeft().getLeft().getRight().setLeft(new BinaryNode(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 71
      },
      "nodeContext" : "root.getLeft().getLeft().getRight().setLeft(new BinaryNode(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 44,
        "startColumnNumber" : 42,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BinaryNode root=new BinaryNode(1);\n  root.setLeft(new BinaryNode(1));\n  root.setRight(new BinaryNode(1));\n  root.getLeft().setLeft(new BinaryNode(1));\n  root.getLeft().getLeft().setRight(new BinaryNode(1));\n  root.getLeft().getLeft().getRight().setLeft(new BinaryNode(1));\n  root.getRight().setLeft(new BinaryNode(1));\n  root.getRight().getLeft().setRight(new BinaryNode(1));\n  int height=recursion.calculateTreeHeight(root);\n  Assert.assertEquals(4,height);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCalculateTreeHeight(){\n  BinaryNode root=new BinaryNode(1);\n  root.setLeft(new BinaryNode(1));\n  root.setRight(new BinaryNode(1));\n  root.getLeft().setLeft(new BinaryNode(1));\n  root.getLeft().getLeft().setRight(new BinaryNode(1));\n  root.getLeft().getLeft().getRight().setLeft(new BinaryNode(1));\n  root.getRight().setLeft(new BinaryNode(1));\n  root.getRight().getLeft().setRight(new BinaryNode(1));\n  int height=recursion.calculateTreeHeight(root);\n  Assert.assertEquals(4,height);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 71
      },
      "nodeContext" : "root.getLeft().getLeft().getRight().setLeft(new BinaryNode(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "com.baeldung.recursion.BinaryNode"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 50,
    "startColumnNumber" : 8,
    "endLineNumber" : 50,
    "endColumnNumber" : 32
  }, {
    "charLength" : 24,
    "startLineNumber" : 51,
    "startColumnNumber" : 8,
    "endLineNumber" : 51,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}