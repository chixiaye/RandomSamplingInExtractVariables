{
  "id" : 413,
  "expression" : "data",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/transformer/src/main/java/com/google/android/exoplayer2/transformer/TransformerMuxingVideoRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 123,
      "startColumnNumber" : 4,
      "endLineNumber" : 123,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 15
      },
      "nodeContext" : "data.flip()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 16
      },
      "nodeContext" : "data.flip();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 104,
        "startColumnNumber" : 43,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  buffer.clear();\n  @ReadDataResult int result=readSource(getFormatHolder(),buffer,0);\n  if (result == C.RESULT_FORMAT_READ) {\n    throw new IllegalStateException(\"Format changes are not supported.\");\n  }\n else   if (result == C.RESULT_NOTHING_READ) {\n    return false;\n  }\n  if (buffer.isEndOfStream()) {\n    isInputStreamEnded=true;\n    muxerWrapper.endTrack(getTrackType());\n    return false;\n  }\n  buffer.timeUs-=streamOffsetUs;\n  mediaClock.updateTimeForTrackType(getTrackType(),buffer.timeUs);\n  ByteBuffer data=checkNotNull(buffer.data);\n  data.flip();\n  if (sampleTransformer != null) {\n    sampleTransformer.transformSample(buffer);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1109,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Checks whether a sample can be read and, if so, reads it, transforms it and writes the resulting sample to the  {@link #buffer}. <p>The buffer data can be set to null if the transformation applied discards the sample.\n * @return Whether a sample has been read and transformed.\n */\nprivate boolean readAndTransformBuffer(){\n  buffer.clear();\n  @ReadDataResult int result=readSource(getFormatHolder(),buffer,0);\n  if (result == C.RESULT_FORMAT_READ) {\n    throw new IllegalStateException(\"Format changes are not supported.\");\n  }\n else   if (result == C.RESULT_NOTHING_READ) {\n    return false;\n  }\n  if (buffer.isEndOfStream()) {\n    isInputStreamEnded=true;\n    muxerWrapper.endTrack(getTrackType());\n    return false;\n  }\n  buffer.timeUs-=streamOffsetUs;\n  mediaClock.updateTimeForTrackType(getTrackType(),buffer.timeUs);\n  ByteBuffer data=checkNotNull(buffer.data);\n  data.flip();\n  if (sampleTransformer != null) {\n    sampleTransformer.transformSample(buffer);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 16
      },
      "nodeContext" : "data.flip();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.nio.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 123,
    "startColumnNumber" : 4,
    "endLineNumber" : 123,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ ]
}