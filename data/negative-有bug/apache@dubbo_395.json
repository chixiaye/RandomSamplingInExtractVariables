{
  "id" : 395,
  "expression" : "new AtomicInteger(0)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-zookeeper/src/test/java/org/apache/dubbo/remoting/zookeeper/curator/CuratorZookeeperClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AtomicInteger(0)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 174,
      "startColumnNumber" : 44,
      "endLineNumber" : 174,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 174,
        "startColumnNumber" : 28,
        "endLineNumber" : 174,
        "endColumnNumber" : 64
      },
      "nodeContext" : "atomicInteger=new AtomicInteger(0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final AtomicInteger atomicInteger=new AtomicInteger(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 166,
        "startColumnNumber" : 61,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String listenerPath=\"/dubbo/service.name/configuration\";\n  String path=listenerPath + \"/dat/data\";\n  String value=\"vav\";\n  curatorClient.create(path + \"/d.json\",value,true);\n  String valueFromCache=curatorClient.getContent(path + \"/d.json\");\n  Assertions.assertEquals(value,valueFromCache);\n  final AtomicInteger atomicInteger=new AtomicInteger(0);\n  curatorClient.addTargetDataListener(listenerPath,new CuratorZookeeperClient.CuratorWatcherImpl(){\n    @Override public void childEvent(    CuratorFramework client,    TreeCacheEvent event) throws Exception {\n      System.out.println(\"===\" + event);\n      atomicInteger.incrementAndGet();\n    }\n  }\n);\n  valueFromCache=curatorClient.getContent(path + \"/d.json\");\n  Assertions.assertNotNull(valueFromCache);\n  curatorClient.getClient().setData().forPath(path + \"/d.json\",\"sdsdf\".getBytes());\n  curatorClient.getClient().setData().forPath(path + \"/d.json\",\"dfsasf\".getBytes());\n  curatorClient.delete(path + \"/d.json\");\n  curatorClient.delete(path);\n  valueFromCache=curatorClient.getContent(path + \"/d.json\");\n  Assertions.assertNull(valueFromCache);\n  Thread.sleep(2000L);\n  Assertions.assertTrue(9L >= atomicInteger.get());\n  Assertions.assertTrue(2L <= atomicInteger.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1486,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAddTargetDataListener() throws Exception {\n  String listenerPath=\"/dubbo/service.name/configuration\";\n  String path=listenerPath + \"/dat/data\";\n  String value=\"vav\";\n  curatorClient.create(path + \"/d.json\",value,true);\n  String valueFromCache=curatorClient.getContent(path + \"/d.json\");\n  Assertions.assertEquals(value,valueFromCache);\n  final AtomicInteger atomicInteger=new AtomicInteger(0);\n  curatorClient.addTargetDataListener(listenerPath,new CuratorZookeeperClient.CuratorWatcherImpl(){\n    @Override public void childEvent(    CuratorFramework client,    TreeCacheEvent event) throws Exception {\n      System.out.println(\"===\" + event);\n      atomicInteger.incrementAndGet();\n    }\n  }\n);\n  valueFromCache=curatorClient.getContent(path + \"/d.json\");\n  Assertions.assertNotNull(valueFromCache);\n  curatorClient.getClient().setData().forPath(path + \"/d.json\",\"sdsdf\".getBytes());\n  curatorClient.getClient().setData().forPath(path + \"/d.json\",\"dfsasf\".getBytes());\n  curatorClient.delete(path + \"/d.json\");\n  curatorClient.delete(path);\n  valueFromCache=curatorClient.getContent(path + \"/d.json\");\n  Assertions.assertNull(valueFromCache);\n  Thread.sleep(2000L);\n  Assertions.assertTrue(9L >= atomicInteger.get());\n  Assertions.assertTrue(2L <= atomicInteger.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 197,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final AtomicInteger atomicInteger=new AtomicInteger(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 174,
    "startColumnNumber" : 44,
    "endLineNumber" : 174,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}