{
  "id" : 318,
  "expression" : "hashMap.get(schema.getFastSlot().getSlotName())",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/web/src/test/java/com/navercorp/pinpoint/web/applicationmap/rawdata/HistogramTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hashMap.get(schema.getFastSlot().getSlotName())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 68,
      "startColumnNumber" : 28,
      "endLineNumber" : 68,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Assert.assertEquals(hashMap.get(schema.getFastSlot().getSlotName()),100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.assertEquals(hashMap.get(schema.getFastSlot().getSlotName()),100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 60,
        "startColumnNumber" : 44,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HistogramSchema schema=ServiceType.STAND_ALONE.getHistogramSchema();\n  Histogram original=new Histogram(ServiceType.STAND_ALONE);\n  original.addCallCount(schema.getFastSlot().getSlotTime(),100);\n  String json=objectMapper.writeValueAsString(original);\n  HashMap hashMap=objectMapper.readValue(json,HashMap.class);\n  Assert.assertEquals(hashMap.get(schema.getFastSlot().getSlotName()),100);\n  Assert.assertEquals(hashMap.get(schema.getErrorSlot().getSlotName()),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testJson() throws Exception {\n  HistogramSchema schema=ServiceType.STAND_ALONE.getHistogramSchema();\n  Histogram original=new Histogram(ServiceType.STAND_ALONE);\n  original.addCallCount(schema.getFastSlot().getSlotTime(),100);\n  String json=objectMapper.writeValueAsString(original);\n  HashMap hashMap=objectMapper.readValue(json,HashMap.class);\n  Assert.assertEquals(hashMap.get(schema.getFastSlot().getSlotName()),100);\n  Assert.assertEquals(hashMap.get(schema.getErrorSlot().getSlotName()),0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.assertEquals(hashMap.get(schema.getFastSlot().getSlotName()),100);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 68,
    "startColumnNumber" : 28,
    "endLineNumber" : 68,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}