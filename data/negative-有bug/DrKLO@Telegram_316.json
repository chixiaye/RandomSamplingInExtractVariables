{
  "id" : 316,
  "expression" : "icyTrackOutput",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/source/ProgressiveMediaPeriod.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "icyTrackOutput",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 972,
      "startColumnNumber" : 12,
      "endLineNumber" : 972,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 972,
        "startColumnNumber" : 12,
        "endLineNumber" : 972,
        "endColumnNumber" : 45
      },
      "nodeContext" : "icyTrackOutput.format(ICY_FORMAT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 972,
        "startColumnNumber" : 12,
        "endLineNumber" : 972,
        "endColumnNumber" : 46
      },
      "nodeContext" : "icyTrackOutput.format(ICY_FORMAT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 969,
        "startColumnNumber" : 83,
        "endLineNumber" : 973,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n  icyTrackOutput=icyTrack();\n  icyTrackOutput.format(ICY_FORMAT);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 969,
        "startColumnNumber" : 10,
        "endLineNumber" : 973,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (icyHeaders != null && icyHeaders.metadataInterval != C.LENGTH_UNSET) {\n  extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n  icyTrackOutput=icyTrack();\n  icyTrackOutput.format(ICY_FORMAT);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1700,
        "startLineNumber" : 959,
        "startColumnNumber" : 12,
        "endLineNumber" : 995,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  long position=positionHolder.position;\n  dataSpec=buildDataSpec(position);\n  length=dataSource.open(dataSpec);\n  if (length != C.LENGTH_UNSET) {\n    length+=position;\n  }\n  Uri uri=Assertions.checkNotNull(dataSource.getUri());\n  icyHeaders=IcyHeaders.parse(dataSource.getResponseHeaders());\n  DataSource extractorDataSource=dataSource;\n  if (icyHeaders != null && icyHeaders.metadataInterval != C.LENGTH_UNSET) {\n    extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n    icyTrackOutput=icyTrack();\n    icyTrackOutput.format(ICY_FORMAT);\n  }\n  input=new DefaultExtractorInput(extractorDataSource,position,length);\n  Extractor extractor=extractorHolder.selectExtractor(input,extractorOutput,uri);\n  if (icyHeaders != null && extractor instanceof Mp3Extractor) {\n    ((Mp3Extractor)extractor).disableSeeking();\n  }\n  if (pendingExtractorSeek) {\n    extractor.seek(position,seekTimeUs);\n    pendingExtractorSeek=false;\n  }\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    loadCondition.block();\n    result=extractor.read(input,positionHolder);\n    if (input.getPosition() > position + continueLoadingCheckIntervalBytes) {\n      position=input.getPosition();\n      loadCondition.close();\n      handler.post(onContinueLoadingRequestedRunnable);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1971,
        "startLineNumber" : 959,
        "startColumnNumber" : 8,
        "endLineNumber" : 1002,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  long position=positionHolder.position;\n  dataSpec=buildDataSpec(position);\n  length=dataSource.open(dataSpec);\n  if (length != C.LENGTH_UNSET) {\n    length+=position;\n  }\n  Uri uri=Assertions.checkNotNull(dataSource.getUri());\n  icyHeaders=IcyHeaders.parse(dataSource.getResponseHeaders());\n  DataSource extractorDataSource=dataSource;\n  if (icyHeaders != null && icyHeaders.metadataInterval != C.LENGTH_UNSET) {\n    extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n    icyTrackOutput=icyTrack();\n    icyTrackOutput.format(ICY_FORMAT);\n  }\n  input=new DefaultExtractorInput(extractorDataSource,position,length);\n  Extractor extractor=extractorHolder.selectExtractor(input,extractorOutput,uri);\n  if (icyHeaders != null && extractor instanceof Mp3Extractor) {\n    ((Mp3Extractor)extractor).disableSeeking();\n  }\n  if (pendingExtractorSeek) {\n    extractor.seek(position,seekTimeUs);\n    pendingExtractorSeek=false;\n  }\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    loadCondition.block();\n    result=extractor.read(input,positionHolder);\n    if (input.getPosition() > position + continueLoadingCheckIntervalBytes) {\n      position=input.getPosition();\n      loadCondition.close();\n      handler.post(onContinueLoadingRequestedRunnable);\n    }\n  }\n}\n  finally {\n  if (result == Extractor.RESULT_SEEK) {\n    result=Extractor.RESULT_CONTINUE;\n  }\n else   if (input != null) {\n    positionHolder.position=input.getPosition();\n  }\n  Util.closeQuietly(dataSource);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 222,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2026,
        "startLineNumber" : 957,
        "startColumnNumber" : 67,
        "endLineNumber" : 1003,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  ExtractorInput input=null;\n  try {\n    long position=positionHolder.position;\n    dataSpec=buildDataSpec(position);\n    length=dataSource.open(dataSpec);\n    if (length != C.LENGTH_UNSET) {\n      length+=position;\n    }\n    Uri uri=Assertions.checkNotNull(dataSource.getUri());\n    icyHeaders=IcyHeaders.parse(dataSource.getResponseHeaders());\n    DataSource extractorDataSource=dataSource;\n    if (icyHeaders != null && icyHeaders.metadataInterval != C.LENGTH_UNSET) {\n      extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n      icyTrackOutput=icyTrack();\n      icyTrackOutput.format(ICY_FORMAT);\n    }\n    input=new DefaultExtractorInput(extractorDataSource,position,length);\n    Extractor extractor=extractorHolder.selectExtractor(input,extractorOutput,uri);\n    if (icyHeaders != null && extractor instanceof Mp3Extractor) {\n      ((Mp3Extractor)extractor).disableSeeking();\n    }\n    if (pendingExtractorSeek) {\n      extractor.seek(position,seekTimeUs);\n      pendingExtractorSeek=false;\n    }\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      loadCondition.block();\n      result=extractor.read(input,positionHolder);\n      if (input.getPosition() > position + continueLoadingCheckIntervalBytes) {\n        position=input.getPosition();\n        loadCondition.close();\n        handler.post(onContinueLoadingRequestedRunnable);\n      }\n    }\n  }\n  finally {\n    if (result == Extractor.RESULT_SEEK) {\n      result=Extractor.RESULT_CONTINUE;\n    }\n else     if (input != null) {\n      positionHolder.position=input.getPosition();\n    }\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2087,
        "startLineNumber" : 957,
        "startColumnNumber" : 6,
        "endLineNumber" : 1003,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n  ExtractorInput input=null;\n  try {\n    long position=positionHolder.position;\n    dataSpec=buildDataSpec(position);\n    length=dataSource.open(dataSpec);\n    if (length != C.LENGTH_UNSET) {\n      length+=position;\n    }\n    Uri uri=Assertions.checkNotNull(dataSource.getUri());\n    icyHeaders=IcyHeaders.parse(dataSource.getResponseHeaders());\n    DataSource extractorDataSource=dataSource;\n    if (icyHeaders != null && icyHeaders.metadataInterval != C.LENGTH_UNSET) {\n      extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n      icyTrackOutput=icyTrack();\n      icyTrackOutput.format(ICY_FORMAT);\n    }\n    input=new DefaultExtractorInput(extractorDataSource,position,length);\n    Extractor extractor=extractorHolder.selectExtractor(input,extractorOutput,uri);\n    if (icyHeaders != null && extractor instanceof Mp3Extractor) {\n      ((Mp3Extractor)extractor).disableSeeking();\n    }\n    if (pendingExtractorSeek) {\n      extractor.seek(position,seekTimeUs);\n      pendingExtractorSeek=false;\n    }\n    while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n      loadCondition.block();\n      result=extractor.read(input,positionHolder);\n      if (input.getPosition() > position + continueLoadingCheckIntervalBytes) {\n        position=input.getPosition();\n        loadCondition.close();\n        handler.post(onContinueLoadingRequestedRunnable);\n      }\n    }\n  }\n  finally {\n    if (result == Extractor.RESULT_SEEK) {\n      result=Extractor.RESULT_CONTINUE;\n    }\n else     if (input != null) {\n      positionHolder.position=input.getPosition();\n    }\n    Util.closeQuietly(dataSource);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2147,
        "startLineNumber" : 955,
        "startColumnNumber" : 64,
        "endLineNumber" : 1004,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    ExtractorInput input=null;\n    try {\n      long position=positionHolder.position;\n      dataSpec=buildDataSpec(position);\n      length=dataSource.open(dataSpec);\n      if (length != C.LENGTH_UNSET) {\n        length+=position;\n      }\n      Uri uri=Assertions.checkNotNull(dataSource.getUri());\n      icyHeaders=IcyHeaders.parse(dataSource.getResponseHeaders());\n      DataSource extractorDataSource=dataSource;\n      if (icyHeaders != null && icyHeaders.metadataInterval != C.LENGTH_UNSET) {\n        extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n        icyTrackOutput=icyTrack();\n        icyTrackOutput.format(ICY_FORMAT);\n      }\n      input=new DefaultExtractorInput(extractorDataSource,position,length);\n      Extractor extractor=extractorHolder.selectExtractor(input,extractorOutput,uri);\n      if (icyHeaders != null && extractor instanceof Mp3Extractor) {\n        ((Mp3Extractor)extractor).disableSeeking();\n      }\n      if (pendingExtractorSeek) {\n        extractor.seek(position,seekTimeUs);\n        pendingExtractorSeek=false;\n      }\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        loadCondition.block();\n        result=extractor.read(input,positionHolder);\n        if (input.getPosition() > position + continueLoadingCheckIntervalBytes) {\n          position=input.getPosition();\n          loadCondition.close();\n          handler.post(onContinueLoadingRequestedRunnable);\n        }\n      }\n    }\n  finally {\n      if (result == Extractor.RESULT_SEEK) {\n        result=Extractor.RESULT_CONTINUE;\n      }\n else       if (input != null) {\n        positionHolder.position=input.getPosition();\n      }\n      Util.closeQuietly(dataSource);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2221,
        "startLineNumber" : 954,
        "startColumnNumber" : 4,
        "endLineNumber" : 1004,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void load() throws IOException, InterruptedException {\n  int result=Extractor.RESULT_CONTINUE;\n  while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n    ExtractorInput input=null;\n    try {\n      long position=positionHolder.position;\n      dataSpec=buildDataSpec(position);\n      length=dataSource.open(dataSpec);\n      if (length != C.LENGTH_UNSET) {\n        length+=position;\n      }\n      Uri uri=Assertions.checkNotNull(dataSource.getUri());\n      icyHeaders=IcyHeaders.parse(dataSource.getResponseHeaders());\n      DataSource extractorDataSource=dataSource;\n      if (icyHeaders != null && icyHeaders.metadataInterval != C.LENGTH_UNSET) {\n        extractorDataSource=new IcyDataSource(dataSource,icyHeaders.metadataInterval,this);\n        icyTrackOutput=icyTrack();\n        icyTrackOutput.format(ICY_FORMAT);\n      }\n      input=new DefaultExtractorInput(extractorDataSource,position,length);\n      Extractor extractor=extractorHolder.selectExtractor(input,extractorOutput,uri);\n      if (icyHeaders != null && extractor instanceof Mp3Extractor) {\n        ((Mp3Extractor)extractor).disableSeeking();\n      }\n      if (pendingExtractorSeek) {\n        extractor.seek(position,seekTimeUs);\n        pendingExtractorSeek=false;\n      }\n      while (result == Extractor.RESULT_CONTINUE && !loadCanceled) {\n        loadCondition.block();\n        result=extractor.read(input,positionHolder);\n        if (input.getPosition() > position + continueLoadingCheckIntervalBytes) {\n          position=input.getPosition();\n          loadCondition.close();\n          handler.post(onContinueLoadingRequestedRunnable);\n        }\n      }\n    }\n  finally {\n      if (result == Extractor.RESULT_SEEK) {\n        result=Extractor.RESULT_CONTINUE;\n      }\n else       if (input != null) {\n        positionHolder.position=input.getPosition();\n      }\n      Util.closeQuietly(dataSource);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 256,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 972,
        "startColumnNumber" : 12,
        "endLineNumber" : 972,
        "endColumnNumber" : 46
      },
      "nodeContext" : "icyTrackOutput.format(ICY_FORMAT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.extractor.TrackOutput"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 972,
    "startColumnNumber" : 12,
    "endLineNumber" : 972,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}