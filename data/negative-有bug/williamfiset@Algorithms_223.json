{
  "id" : 223,
  "expression" : "i < n",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingIterative.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < n",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 150,
      "startColumnNumber" : 23,
      "endLineNumber" : 150,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 150,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=at; i < n; i++) {\n  set^=(1 << i);\n  combinations(set,i + 1,r - 1,n,subsets);\n  set^=(1 << i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 149,
        "startColumnNumber" : 11,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=at; i < n; i++) {\n    set^=(1 << i);\n    combinations(set,i + 1,r - 1,n,subsets);\n    set^=(1 << i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 147,
        "startColumnNumber" : 4,
        "endLineNumber" : 159,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (r == 0) {\n  subsets.add(set);\n}\n else {\n  for (int i=at; i < n; i++) {\n    set^=(1 << i);\n    combinations(set,i + 1,r - 1,n,subsets);\n    set^=(1 << i);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 140,
        "startColumnNumber" : 89,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int elementsLeftToPick=n - at;\n  if (elementsLeftToPick < r)   return;\n  if (r == 0) {\n    subsets.add(set);\n  }\n else {\n    for (int i=at; i < n; i++) {\n      set^=(1 << i);\n      combinations(set,i + 1,r - 1,n,subsets);\n      set^=(1 << i);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void combinations(int set,int at,int r,int n,List<Integer> subsets){\n  int elementsLeftToPick=n - at;\n  if (elementsLeftToPick < r)   return;\n  if (r == 0) {\n    subsets.add(set);\n  }\n else {\n    for (int i=at; i < n; i++) {\n      set^=(1 << i);\n      combinations(set,i + 1,r - 1,n,subsets);\n      set^=(1 << i);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 150,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=at; i < n; i++) {\n  set^=(1 << i);\n  combinations(set,i + 1,r - 1,n,subsets);\n  set^=(1 << i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 150,
    "startColumnNumber" : 23,
    "endLineNumber" : 150,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}