{
  "id" : 236,
  "expression" : "Flowable.just(1,2,3)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/flowable/FlowableReduceTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flowable.just(1,2,3)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 28,
      "startColumnNumber" : 30,
      "endLineNumber" : 28,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 28,
        "startColumnNumber" : 26,
        "endLineNumber" : 28,
        "endColumnNumber" : 52
      },
      "nodeContext" : "o=Flowable.just(1,2,3)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Flowable<Integer> o=Flowable.just(1,2,3);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 27,
        "startColumnNumber" : 29,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Integer> o=Flowable.just(1,2,3);\n  int value=o.reduce(new BiFunction<Integer,Integer,Integer>(){\n    @Override public Integer apply(    Integer t1,    Integer t2){\n      return t1 + t2;\n    }\n  }\n).toBlocking().single();\n  assertEquals(6,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void reduceInts(){\n  Flowable<Integer> o=Flowable.just(1,2,3);\n  int value=o.reduce(new BiFunction<Integer,Integer,Integer>(){\n    @Override public Integer apply(    Integer t1,    Integer t2){\n      return t1 + t2;\n    }\n  }\n).toBlocking().single();\n  assertEquals(6,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Flowable<Integer> o=Flowable.just(1,2,3);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "io.reactivex.Flowable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 28,
    "startColumnNumber" : 30,
    "endLineNumber" : 28,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}