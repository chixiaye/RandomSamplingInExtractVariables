{
  "id" : 505,
  "expression" : "System.out",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvtVO/DataTransaction2.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 299,
      "startColumnNumber" : 8,
      "endLineNumber" : 299,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 299,
        "startColumnNumber" : 8,
        "endLineNumber" : 299,
        "endColumnNumber" : 39
      },
      "nodeContext" : "System.out.println(dt.toJSON())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 299,
        "startColumnNumber" : 8,
        "endLineNumber" : 299,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(dt.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 295,
        "startColumnNumber" : 43,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 295,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 299,
        "startColumnNumber" : 8,
        "endLineNumber" : 299,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(dt.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 301,
      "startColumnNumber" : 8,
      "endLineNumber" : 301,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(dt1.toJSON())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(dt1.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 295,
        "startColumnNumber" : 43,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 295,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(dt1.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 305,
      "startColumnNumber" : 8,
      "endLineNumber" : 305,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 305,
        "startColumnNumber" : 8,
        "endLineNumber" : 305,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.out.println(\"=================\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 305,
        "startColumnNumber" : 8,
        "endLineNumber" : 305,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.out.println(\"=================\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 295,
        "startColumnNumber" : 43,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 295,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 305,
        "startColumnNumber" : 8,
        "endLineNumber" : 305,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.out.println(\"=================\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 306,
      "startColumnNumber" : 8,
      "endLineNumber" : 306,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 306,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 39
      },
      "nodeContext" : "System.out.println(dt.toJSON())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 306,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(dt.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 295,
        "startColumnNumber" : 43,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 295,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 306,
        "startColumnNumber" : 8,
        "endLineNumber" : 306,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(dt.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 309,
      "startColumnNumber" : 8,
      "endLineNumber" : 309,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 309,
        "startColumnNumber" : 8,
        "endLineNumber" : 309,
        "endColumnNumber" : 39
      },
      "nodeContext" : "System.out.println(dt.toJSON())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 309,
        "startColumnNumber" : 8,
        "endLineNumber" : 309,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(dt.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 295,
        "startColumnNumber" : 43,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 295,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 309,
        "startColumnNumber" : 8,
        "endLineNumber" : 309,
        "endColumnNumber" : 40
      },
      "nodeContext" : "System.out.println(dt.toJSON());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 312,
      "startColumnNumber" : 8,
      "endLineNumber" : 312,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 312,
        "startColumnNumber" : 8,
        "endLineNumber" : 312,
        "endColumnNumber" : 32
      },
      "nodeContext" : "System.out.println(text)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 312,
        "startColumnNumber" : 8,
        "endLineNumber" : 312,
        "endColumnNumber" : 33
      },
      "nodeContext" : "System.out.println(text);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 295,
        "startColumnNumber" : 43,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 295,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 312,
        "startColumnNumber" : 8,
        "endLineNumber" : 312,
        "endColumnNumber" : 33
      },
      "nodeContext" : "System.out.println(text);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  }, {
    "nodeContext" : "System.out",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 315,
      "startColumnNumber" : 8,
      "endLineNumber" : 315,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 315,
        "startColumnNumber" : 8,
        "endLineNumber" : 315,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.out.println(JSON.toJSONString(dt2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 315,
        "startColumnNumber" : 8,
        "endLineNumber" : 315,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(JSON.toJSONString(dt2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 295,
        "startColumnNumber" : 43,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 295,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String jsonString=\"{'head' : {'appid':'epas','transcode' : '000000','seqno' : '111111111',        'user' : {          'id' : '00000'},        'ret' : {           'code' : '1',           'msg' : 'txt'}  },  'body' : {      param : {           form:{              name : '111',               sex : '1',              address : 'street1',                array : [ {                 id : '1',                   name : 'tom1'               }, {                    id : '2',                   name : 'tom2'               } ]},           limit : {               start : 1,              size : 25,              total : 100}        },      dataset : {         total : 1000,           rows : [ {              id : 'id',              name : 'name'           }, {                id : 'id',              name : 'name'           } ]     }   }}\";\n  DataTransaction2 dt=DataTransaction2.fromJSON(jsonString);\n  System.out.println(dt.toJSON());\n  DataTransaction2 dt1=JSON.parseObject(dt.toJSON(),DataTransaction2.class);\n  System.out.println(dt1.toJSON());\n  Assert.assertEquals(dt.toJSON(),dt1.toJSON());\n  System.out.println(\"=================\");\n  System.out.println(dt.toJSON());\n  dt.setRetMsgCode(\"-1\",\"错误\");\n  dt.setDataSet(\"1000\",new ArrayList<Map<String,Object>>());\n  System.out.println(dt.toJSON());\n  String text=dt.toJSON();\n  System.out.println(text);\n  DataTransaction2 dt2=JSON.parseObject(text,DataTransaction2.class);\n  System.out.println(JSON.toJSONString(dt2));\n  Assert.assertEquals(dt.toJSON(),dt2.toJSON());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 315,
        "startColumnNumber" : 8,
        "endLineNumber" : 315,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(JSON.toJSONString(dt2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.PrintStream"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 299,
    "startColumnNumber" : 8,
    "endLineNumber" : 299,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 301,
    "startColumnNumber" : 8,
    "endLineNumber" : 301,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 305,
    "startColumnNumber" : 8,
    "endLineNumber" : 305,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 306,
    "startColumnNumber" : 8,
    "endLineNumber" : 306,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 309,
    "startColumnNumber" : 8,
    "endLineNumber" : 309,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 312,
    "startColumnNumber" : 8,
    "endLineNumber" : 312,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 315,
    "startColumnNumber" : 8,
    "endLineNumber" : 315,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  } ]
}