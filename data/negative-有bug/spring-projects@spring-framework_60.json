{
  "id" : 60,
  "expression" : "headersWritten",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/http/server/ServletServerHttpResponse.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "headersWritten",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 156,
      "startColumnNumber" : 7,
      "endLineNumber" : 156,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 156,
        "startColumnNumber" : 3,
        "endLineNumber" : 158,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (headersWritten) {\n  return new ArrayList<>(values1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 610,
        "startLineNumber" : 152,
        "startColumnNumber" : 38,
        "endLineNumber" : 176,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assert.isInstanceOf(String.class,key,\"Key must be a String-based header name\");\n  Collection<String> values1=servletResponse.getHeaders((String)key);\n  if (headersWritten) {\n    return new ArrayList<>(values1);\n  }\n  boolean isEmpty1=CollectionUtils.isEmpty(values1);\n  List<String> values2=super.get(key);\n  boolean isEmpty2=CollectionUtils.isEmpty(values2);\n  if (isEmpty1 && isEmpty2) {\n    return null;\n  }\n  List<String> values=new ArrayList<>();\n  if (!isEmpty1) {\n    values.addAll(values1);\n  }\n  if (!isEmpty2) {\n    values.addAll(values2);\n  }\n  return values;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 151,
        "startColumnNumber" : 2,
        "endLineNumber" : 176,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public List<String> get(Object key){\n  Assert.isInstanceOf(String.class,key,\"Key must be a String-based header name\");\n  Collection<String> values1=servletResponse.getHeaders((String)key);\n  if (headersWritten) {\n    return new ArrayList<>(values1);\n  }\n  boolean isEmpty1=CollectionUtils.isEmpty(values1);\n  List<String> values2=super.get(key);\n  boolean isEmpty2=CollectionUtils.isEmpty(values2);\n  if (isEmpty1 && isEmpty2) {\n    return null;\n  }\n  List<String> values=new ArrayList<>();\n  if (!isEmpty1) {\n    values.addAll(values1);\n  }\n  if (!isEmpty2) {\n    values.addAll(values2);\n  }\n  return values;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 156,
        "startColumnNumber" : 3,
        "endLineNumber" : 158,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (headersWritten) {\n  return new ArrayList<>(values1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 156,
    "startColumnNumber" : 7,
    "endLineNumber" : 156,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}