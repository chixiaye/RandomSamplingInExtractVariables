{
  "id" : 250,
  "expression" : "\"Actual statement should exist.\"",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/ral/impl/query/CheckScalingStatementAssert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Actual statement should exist.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 50,
      "startColumnNumber" : 48,
      "endLineNumber" : 50,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 50,
        "startColumnNumber" : 26,
        "endLineNumber" : 50,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertContext.getText(\"Actual statement should exist.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertNotNull(assertContext.getText(\"Actual statement should exist.\"),actual)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertNotNull(assertContext.getText(\"Actual statement should exist.\"),actual);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Actual statement should exist.\"),actual);\n  assertJobIds(assertContext,actual.getJobId(),expected.getJobIds());\n  assertTypeStrategy(assertContext,actual.getTypeStrategy(),expected.getTableStrategies());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null == expected) {\n  assertNull(assertContext.getText(\"Actual statement should not exist.\"),actual);\n}\n else {\n  assertNotNull(assertContext.getText(\"Actual statement should exist.\"),actual);\n  assertJobIds(assertContext,actual.getJobId(),expected.getJobIds());\n  assertTypeStrategy(assertContext,actual.getTypeStrategy(),expected.getTableStrategies());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 46,
        "startColumnNumber" : 156,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == expected) {\n    assertNull(assertContext.getText(\"Actual statement should not exist.\"),actual);\n  }\n else {\n    assertNotNull(assertContext.getText(\"Actual statement should exist.\"),actual);\n    assertJobIds(assertContext,actual.getJobId(),expected.getJobIds());\n    assertTypeStrategy(assertContext,actual.getTypeStrategy(),expected.getTableStrategies());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert check scaling statement is correct with expected parser result.\n * @param assertContext assert context\n * @param actual actual check scaling statement\n * @param expected expected check scaling statement test case\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final CheckScalingStatement actual,final CheckScalingStatementTestCase expected){\n  if (null == expected) {\n    assertNull(assertContext.getText(\"Actual statement should not exist.\"),actual);\n  }\n else {\n    assertNotNull(assertContext.getText(\"Actual statement should exist.\"),actual);\n    assertJobIds(assertContext,actual.getJobId(),expected.getJobIds());\n    assertTypeStrategy(assertContext,actual.getTypeStrategy(),expected.getTableStrategies());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertNotNull(assertContext.getText(\"Actual statement should exist.\"),actual);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 50,
    "startColumnNumber" : 48,
    "endLineNumber" : 50,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}