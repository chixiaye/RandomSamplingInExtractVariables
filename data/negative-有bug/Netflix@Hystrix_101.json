{
  "id" : 101,
  "expression" : "cmd1",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/RollingCommandLatencyDistributionStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cmd1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 127,
      "startColumnNumber" : 8,
      "endLineNumber" : 127,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 22
      },
      "nodeContext" : "cmd1.observe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 23
      },
      "nodeContext" : "cmd1.observe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1820,
        "startLineNumber" : 97,
        "startColumnNumber" : 45,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-Latency-B\");\n  stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(new Subscriber<CachedValuesHistogram>(){\n    @Override public void onCompleted(){\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      fail(e.getMessage());\n    }\n    @Override public void onNext(    CachedValuesHistogram distribution){\n      System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean());\n      if (distribution.getTotalCount() == 1) {\n        assertBetween(10,50,(int)distribution.getMean());\n      }\n else       if (distribution.getTotalCount() == 2) {\n        assertBetween(300,400,(int)distribution.getMean());\n      }\n    }\n  }\n);\n  Command cmd1=Command.from(groupKey,key,HystrixEventType.SUCCESS,10);\n  Command cmd2=Command.from(groupKey,key,HystrixEventType.TIMEOUT);\n  cmd1.observe();\n  cmd2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertBetween(150,400,stream.getLatestMean());\n  assertBetween(10,50,stream.getLatestPercentile(0.0));\n  assertBetween(300,800,stream.getLatestPercentile(100.0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1871,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSingleBucketGetsStored(){\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-Latency-B\");\n  stream=RollingCommandLatencyDistributionStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(new Subscriber<CachedValuesHistogram>(){\n    @Override public void onCompleted(){\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      fail(e.getMessage());\n    }\n    @Override public void onNext(    CachedValuesHistogram distribution){\n      System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" Received distribution with count : \"+ distribution.getTotalCount()+ \" and mean : \"+ distribution.getMean());\n      if (distribution.getTotalCount() == 1) {\n        assertBetween(10,50,(int)distribution.getMean());\n      }\n else       if (distribution.getTotalCount() == 2) {\n        assertBetween(300,400,(int)distribution.getMean());\n      }\n    }\n  }\n);\n  Command cmd1=Command.from(groupKey,key,HystrixEventType.SUCCESS,10);\n  Command cmd2=Command.from(groupKey,key,HystrixEventType.TIMEOUT);\n  cmd1.observe();\n  cmd2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertBetween(150,400,stream.getLatestMean());\n  assertBetween(10,50,stream.getLatestPercentile(0.0));\n  assertBetween(300,800,stream.getLatestPercentile(100.0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 237,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 23
      },
      "nodeContext" : "cmd1.observe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.metric.CommandStreamTest.Command"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 127,
    "startColumnNumber" : 8,
    "endLineNumber" : 127,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ ]
}