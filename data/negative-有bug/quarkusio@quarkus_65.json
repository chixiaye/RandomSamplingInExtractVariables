{
  "id" : 65,
  "expression" : "list.stream()",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/project/extensions/Extensions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "list.stream()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 28,
      "startColumnNumber" : 15,
      "endLineNumber" : 28,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 28,
        "startColumnNumber" : 15,
        "endLineNumber" : 28,
        "endColumnNumber" : 87
      },
      "nodeContext" : "list.stream().filter(e -> Objects.equals(e.getArtifact().getKey(),key))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 28,
        "startColumnNumber" : 15,
        "endLineNumber" : 28,
        "endColumnNumber" : 99
      },
      "nodeContext" : "list.stream().filter(e -> Objects.equals(e.getArtifact().getKey(),key)).findFirst()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 100
      },
      "nodeContext" : "return list.stream().filter(e -> Objects.equals(e.getArtifact().getKey(),key)).findFirst();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 27,
        "startColumnNumber" : 100,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return list.stream().filter(e -> Objects.equals(e.getArtifact().getKey(),key)).findFirst();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Optional<Extension> findInList(Collection<Extension> list,final ArtifactKey key){\n  return list.stream().filter(e -> Objects.equals(e.getArtifact().getKey(),key)).findFirst();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 100
      },
      "nodeContext" : "return list.stream().filter(e -> Objects.equals(e.getArtifact().getKey(),key)).findFirst();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "java.util.stream.Stream<io.quarkus.registry.catalog.Extension>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 28,
    "startColumnNumber" : 15,
    "endLineNumber" : 28,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}