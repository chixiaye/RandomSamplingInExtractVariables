{
  "id" : 369,
  "expression" : "res.getClass().getClassLoader() != getClass().getClassLoader()",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/test-framework/arquillian/src/main/java/io/quarkus/arquillian/ClassLoaderExceptionTransformer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "res.getClass().getClassLoader() != getClass().getClassLoader()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 62,
      "startLineNumber" : 31,
      "startColumnNumber" : 31,
      "endLineNumber" : 31,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 30,
        "startColumnNumber" : 24,
        "endLineNumber" : 31,
        "endColumnNumber" : 93
      },
      "nodeContext" : "res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 30,
        "startColumnNumber" : 20,
        "endLineNumber" : 39,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n  if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n    ByteArrayOutputStream out=new ByteArrayOutputStream();\n    ObjectOutputStream oo=new ObjectOutputStream(out);\n    oo.writeObject(res);\n    res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n    testResult.setThrowable(res);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 80,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 40,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n    if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n      ByteArrayOutputStream out=new ByteArrayOutputStream();\n      ObjectOutputStream oo=new ObjectOutputStream(out);\n      oo.writeObject(res);\n      res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n      testResult.setThrowable(res);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 29,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n    if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n      ByteArrayOutputStream out=new ByteArrayOutputStream();\n      ObjectOutputStream oo=new ObjectOutputStream(out);\n      oo.writeObject(res);\n      res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n      testResult.setThrowable(res);\n    }\n  }\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 28,
        "startColumnNumber" : 29,
        "endLineNumber" : 43,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n      if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n        ByteArrayOutputStream out=new ByteArrayOutputStream();\n        ObjectOutputStream oo=new ObjectOutputStream(out);\n        oo.writeObject(res);\n        res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n        testResult.setThrowable(res);\n      }\n    }\n  }\n catch (  Exception ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (res != null) {\n  try {\n    if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n      if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n        ByteArrayOutputStream out=new ByteArrayOutputStream();\n        ObjectOutputStream oo=new ObjectOutputStream(out);\n        oo.writeObject(res);\n        res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n        testResult.setThrowable(res);\n      }\n    }\n  }\n catch (  Exception ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 93,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 918,
        "startLineNumber" : 26,
        "startColumnNumber" : 32,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Throwable res=testResult.getThrowable();\n  if (res != null) {\n    try {\n      if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n        if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n          ByteArrayOutputStream out=new ByteArrayOutputStream();\n          ObjectOutputStream oo=new ObjectOutputStream(out);\n          oo.writeObject(res);\n          res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n          testResult.setThrowable(res);\n        }\n      }\n    }\n catch (    Exception ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (testResult != null) {\n  Throwable res=testResult.getThrowable();\n  if (res != null) {\n    try {\n      if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n        if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n          ByteArrayOutputStream out=new ByteArrayOutputStream();\n          ObjectOutputStream oo=new ObjectOutputStream(out);\n          oo.writeObject(res);\n          res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n          testResult.setThrowable(res);\n        }\n      }\n    }\n catch (    Exception ignored) {\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 106,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 24,
        "startColumnNumber" : 68,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestResult testResult=testResultInstance.get();\n  if (testResult != null) {\n    Throwable res=testResult.getThrowable();\n    if (res != null) {\n      try {\n        if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n          if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n            ByteArrayOutputStream out=new ByteArrayOutputStream();\n            ObjectOutputStream oo=new ObjectOutputStream(out);\n            oo.writeObject(res);\n            res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n            testResult.setThrowable(res);\n          }\n        }\n      }\n catch (      Exception ignored) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void transform(@Observes(precedence=-1000) Test event){\n  TestResult testResult=testResultInstance.get();\n  if (testResult != null) {\n    Throwable res=testResult.getThrowable();\n    if (res != null) {\n      try {\n        if (res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()) {\n          if (res.getClass() == classLoaderInstance.get().loadClass(res.getClass().getName())) {\n            ByteArrayOutputStream out=new ByteArrayOutputStream();\n            ObjectOutputStream oo=new ObjectOutputStream(out);\n            oo.writeObject(res);\n            res=(Throwable)new ObjectInputStream(new ByteArrayInputStream(out.toByteArray())).readObject();\n            testResult.setThrowable(res);\n          }\n        }\n      }\n catch (      Exception ignored) {\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 30,
        "startColumnNumber" : 24,
        "endLineNumber" : 31,
        "endColumnNumber" : 93
      },
      "nodeContext" : "res.getClass().getClassLoader() != null && res.getClass().getClassLoader() != getClass().getClassLoader()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 62,
    "startLineNumber" : 31,
    "startColumnNumber" : 31,
    "endLineNumber" : 31,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}