{
  "id" : 86,
  "expression" : "TODAY + 1000",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin/src/test/java/zipkin/DependenciesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TODAY + 1000",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 356,
      "startColumnNumber" : 39,
      "endLineNumber" : 356,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 356,
        "startColumnNumber" : 15,
        "endLineNumber" : 356,
        "endColumnNumber" : 58
      },
      "nodeContext" : "store().getDependencies(TODAY + 1000,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 356,
        "startColumnNumber" : 4,
        "endLineNumber" : 356,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(store().getDependencies(TODAY + 1000,null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 356,
        "startColumnNumber" : 4,
        "endLineNumber" : 360,
        "endColumnNumber" : 5
      },
      "nodeContext" : "assertThat(store().getDependencies(TODAY + 1000,null)).containsOnly(new DependencyLink(\"some-client\",\"web\",1),new DependencyLink(\"web\",\"app\",1),new DependencyLink(\"app\",\"db\",1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 356,
        "startColumnNumber" : 4,
        "endLineNumber" : 360,
        "endColumnNumber" : 6
      },
      "nodeContext" : "assertThat(store().getDependencies(TODAY + 1000,null)).containsOnly(new DependencyLink(\"some-client\",\"web\",1),new DependencyLink(\"web\",\"app\",1),new DependencyLink(\"app\",\"db\",1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1313,
        "startLineNumber" : 337,
        "startColumnNumber" : 34,
        "endLineNumber" : 361,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Endpoint someClient=Endpoint.create(\"some-client\",172 << 24 | 17 << 16 | 4,80);\n  List<Span> trace=asList(Span.builder().traceId(20L).id(20L).name(\"get\").timestamp(TODAY * 1000).duration(350L * 1000).addBinaryAnnotation(BinaryAnnotation.address(CLIENT_ADDR,someClient)).addBinaryAnnotation(BinaryAnnotation.address(SERVER_ADDR,WEB_ENDPOINT)).build(),Span.builder().traceId(20L).parentId(20L).id(21L).name(\"get\").timestamp((TODAY + 50) * 1000).duration(250L * 1000).addBinaryAnnotation(BinaryAnnotation.address(CLIENT_ADDR,WEB_ENDPOINT)).addBinaryAnnotation(BinaryAnnotation.address(SERVER_ADDR,APP_ENDPOINT)).build(),Span.builder().traceId(20L).parentId(21L).id(22L).name(\"get\").timestamp((TODAY + 150) * 1000).duration(50L * 1000).addBinaryAnnotation(BinaryAnnotation.address(CLIENT_ADDR,APP_ENDPOINT)).addBinaryAnnotation(BinaryAnnotation.address(SERVER_ADDR,DB_ENDPOINT)).build());\n  processDependencies(trace);\n  assertThat(store().getDependencies(TODAY + 1000,null)).containsOnly(new DependencyLink(\"some-client\",\"web\",1),new DependencyLink(\"web\",\"app\",1),new DependencyLink(\"app\",\"db\",1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1446,
        "startLineNumber" : 335,
        "startColumnNumber" : 2,
        "endLineNumber" : 361,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This test confirms that core (\"sr\", \"cs\", \"cr\", \"ss\") annotations are not required. \n */\n@Test public void noCoreAnnotations(){\n  Endpoint someClient=Endpoint.create(\"some-client\",172 << 24 | 17 << 16 | 4,80);\n  List<Span> trace=asList(Span.builder().traceId(20L).id(20L).name(\"get\").timestamp(TODAY * 1000).duration(350L * 1000).addBinaryAnnotation(BinaryAnnotation.address(CLIENT_ADDR,someClient)).addBinaryAnnotation(BinaryAnnotation.address(SERVER_ADDR,WEB_ENDPOINT)).build(),Span.builder().traceId(20L).parentId(20L).id(21L).name(\"get\").timestamp((TODAY + 50) * 1000).duration(250L * 1000).addBinaryAnnotation(BinaryAnnotation.address(CLIENT_ADDR,WEB_ENDPOINT)).addBinaryAnnotation(BinaryAnnotation.address(SERVER_ADDR,APP_ENDPOINT)).build(),Span.builder().traceId(20L).parentId(21L).id(22L).name(\"get\").timestamp((TODAY + 150) * 1000).duration(50L * 1000).addBinaryAnnotation(BinaryAnnotation.address(CLIENT_ADDR,APP_ENDPOINT)).addBinaryAnnotation(BinaryAnnotation.address(SERVER_ADDR,DB_ENDPOINT)).build());\n  processDependencies(trace);\n  assertThat(store().getDependencies(TODAY + 1000,null)).containsOnly(new DependencyLink(\"some-client\",\"web\",1),new DependencyLink(\"web\",\"app\",1),new DependencyLink(\"app\",\"db\",1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 356,
        "startColumnNumber" : 4,
        "endLineNumber" : 356,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(store().getDependencies(TODAY + 1000,null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 356,
    "startColumnNumber" : 39,
    "endLineNumber" : 356,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}