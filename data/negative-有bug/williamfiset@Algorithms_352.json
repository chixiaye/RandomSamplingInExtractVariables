{
  "id" : 352,
  "expression" : "4",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/ModularLinearAlgebra.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 125,
      "startColumnNumber" : 13,
      "endLineNumber" : 125,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 125,
        "startColumnNumber" : 6,
        "endLineNumber" : 125,
        "endColumnNumber" : 18
      },
      "nodeContext" : "{3,0,4,1}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 123,
        "startColumnNumber" : 30,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{{5,1,6,0},{3,0,4,1},{1,5,2,4}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 16,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 6
      },
      "nodeContext" : "int[][] augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 113,
        "startColumnNumber" : 41,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int p=7;\n  int[][] augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}};\n  int[] inv=new int[p];\n  for (int i=1; i < p; i++) {\n    inv[i]=modInv(i,p);\n  }\n  rref(augmentedMatrix,p,inv);\n  if (!isInconsistent(augmentedMatrix) && !hasMultipleSolutions(augmentedMatrix)) {\n    int x=augmentedMatrix[0][3];\n    int y=augmentedMatrix[1][3];\n    int z=augmentedMatrix[2][3];\n    System.out.printf(\"x = %d, y = %d, z = %d\\n\",x,y,z);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1039,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int p=7;\n  int[][] augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}};\n  int[] inv=new int[p];\n  for (int i=1; i < p; i++) {\n    inv[i]=modInv(i,p);\n  }\n  rref(augmentedMatrix,p,inv);\n  if (!isInconsistent(augmentedMatrix) && !hasMultipleSolutions(augmentedMatrix)) {\n    int x=augmentedMatrix[0][3];\n    int y=augmentedMatrix[1][3];\n    int z=augmentedMatrix[2][3];\n    System.out.printf(\"x = %d, y = %d, z = %d\\n\",x,y,z);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 125,
        "startColumnNumber" : 6,
        "endLineNumber" : 125,
        "endColumnNumber" : 18
      },
      "nodeContext" : "{3,0,4,1}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 126,
      "startColumnNumber" : 16,
      "endLineNumber" : 126,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 18
      },
      "nodeContext" : "{1,5,2,4}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 123,
        "startColumnNumber" : 30,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{{5,1,6,0},{3,0,4,1},{1,5,2,4}}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 16,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 6
      },
      "nodeContext" : "int[][] augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 113,
        "startColumnNumber" : 41,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int p=7;\n  int[][] augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}};\n  int[] inv=new int[p];\n  for (int i=1; i < p; i++) {\n    inv[i]=modInv(i,p);\n  }\n  rref(augmentedMatrix,p,inv);\n  if (!isInconsistent(augmentedMatrix) && !hasMultipleSolutions(augmentedMatrix)) {\n    int x=augmentedMatrix[0][3];\n    int y=augmentedMatrix[1][3];\n    int z=augmentedMatrix[2][3];\n    System.out.printf(\"x = %d, y = %d, z = %d\\n\",x,y,z);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1039,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int p=7;\n  int[][] augmentedMatrix={{5,1,6,0},{3,0,4,1},{1,5,2,4}};\n  int[] inv=new int[p];\n  for (int i=1; i < p; i++) {\n    inv[i]=modInv(i,p);\n  }\n  rref(augmentedMatrix,p,inv);\n  if (!isInconsistent(augmentedMatrix) && !hasMultipleSolutions(augmentedMatrix)) {\n    int x=augmentedMatrix[0][3];\n    int y=augmentedMatrix[1][3];\n    int z=augmentedMatrix[2][3];\n    System.out.printf(\"x = %d, y = %d, z = %d\\n\",x,y,z);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 18
      },
      "nodeContext" : "{1,5,2,4}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 125,
    "startColumnNumber" : 13,
    "endLineNumber" : 125,
    "endColumnNumber" : 14
  }, {
    "charLength" : 1,
    "startLineNumber" : 126,
    "startColumnNumber" : 16,
    "endLineNumber" : 126,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}