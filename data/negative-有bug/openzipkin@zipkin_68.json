{
  "id" : 68,
  "expression" : "span2",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/main/java/zipkin2/storage/ITTraces.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "span2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 75,
      "startColumnNumber" : 18,
      "endLineNumber" : 75,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 24
      },
      "nodeContext" : "accept(span1,span2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 25
      },
      "nodeContext" : "accept(span1,span2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 68,
        "startColumnNumber" : 96,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String testSuffix=testSuffix(testInfo);\n  Span span1=spanBuilder(testSuffix).build(), span2=spanBuilder(testSuffix).build();\n  List<String> traceIds=asList(span1.traceId(),newTraceId());\n  assertGetTracesReturnsEmpty(traceIds);\n  accept(span1,span2);\n  assertGetTracesReturns(traceIds,asList(span1));\n  List<String> shortTraceIds=traceIds.stream().map(t -> t.substring(16)).collect(Collectors.toList());\n  assertGetTracesReturnsEmpty(shortTraceIds);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test protected void getTraces_onlyReturnsTracesThatMatch(TestInfo testInfo) throws Exception {\n  String testSuffix=testSuffix(testInfo);\n  Span span1=spanBuilder(testSuffix).build(), span2=spanBuilder(testSuffix).build();\n  List<String> traceIds=asList(span1.traceId(),newTraceId());\n  assertGetTracesReturnsEmpty(traceIds);\n  accept(span1,span2);\n  assertGetTracesReturns(traceIds,asList(span1));\n  List<String> shortTraceIds=traceIds.stream().map(t -> t.substring(16)).collect(Collectors.toList());\n  assertGetTracesReturnsEmpty(shortTraceIds);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 25
      },
      "nodeContext" : "accept(span1,span2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "zipkin2.Span"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 75,
    "startColumnNumber" : 18,
    "endLineNumber" : 75,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}