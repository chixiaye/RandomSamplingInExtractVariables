{
  "id" : 198,
  "expression" : "found",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/regions/loops/LoopRegion.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "found",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 109,
      "startColumnNumber" : 8,
      "endLineNumber" : 109,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 109,
        "startColumnNumber" : 7,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "!found",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 109,
        "startColumnNumber" : 7,
        "endLineNumber" : 109,
        "endColumnNumber" : 40
      },
      "nodeContext" : "!found && ifInsn.containsArg(res)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 109,
        "startColumnNumber" : 3,
        "endLineNumber" : 111,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!found && ifInsn.containsArg(res)) {\n  found=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 92,
        "startColumnNumber" : 33,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InsnNode insn=insns.get(i);\n  if (insn.getResult() == null) {\n    return false;\n  }\n  RegisterArg res=insn.getResult();\n  if (res.getSVar().getUseCount() > 1) {\n    return false;\n  }\n  boolean found=false;\n  for (int j=i + 1; j < size; j++) {\n    if (insns.get(i).containsArg(res)) {\n      found=true;\n    }\n  }\n  if (!found && ifInsn.containsArg(res)) {\n    found=true;\n  }\n  if (!found) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  InsnNode insn=insns.get(i);\n  if (insn.getResult() == null) {\n    return false;\n  }\n  RegisterArg res=insn.getResult();\n  if (res.getSVar().getUseCount() > 1) {\n    return false;\n  }\n  boolean found=false;\n  for (int j=i + 1; j < size; j++) {\n    if (insns.get(i).containsArg(res)) {\n      found=true;\n    }\n  }\n  if (!found && ifInsn.containsArg(res)) {\n    found=true;\n  }\n  if (!found) {\n    return false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 85,
        "startColumnNumber" : 36,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<InsnNode> insns=preCondition.getInstructions();\n  if (insns.isEmpty()) {\n    return true;\n  }\n  IfNode ifInsn=getIfInsn();\n  int size=insns.size();\n  for (int i=0; i < size; i++) {\n    InsnNode insn=insns.get(i);\n    if (insn.getResult() == null) {\n      return false;\n    }\n    RegisterArg res=insn.getResult();\n    if (res.getSVar().getUseCount() > 1) {\n      return false;\n    }\n    boolean found=false;\n    for (int j=i + 1; j < size; j++) {\n      if (insns.get(i).containsArg(res)) {\n        found=true;\n      }\n    }\n    if (!found && ifInsn.containsArg(res)) {\n      found=true;\n    }\n    if (!found) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 82,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Check if pre-conditions can be inlined into loop condition\n */\npublic boolean checkPreCondition(){\n  List<InsnNode> insns=preCondition.getInstructions();\n  if (insns.isEmpty()) {\n    return true;\n  }\n  IfNode ifInsn=getIfInsn();\n  int size=insns.size();\n  for (int i=0; i < size; i++) {\n    InsnNode insn=insns.get(i);\n    if (insn.getResult() == null) {\n      return false;\n    }\n    RegisterArg res=insn.getResult();\n    if (res.getSVar().getUseCount() > 1) {\n      return false;\n    }\n    boolean found=false;\n    for (int j=i + 1; j < size; j++) {\n      if (insns.get(i).containsArg(res)) {\n        found=true;\n      }\n    }\n    if (!found && ifInsn.containsArg(res)) {\n      found=true;\n    }\n    if (!found) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 109,
        "startColumnNumber" : 7,
        "endLineNumber" : 109,
        "endColumnNumber" : 40
      },
      "nodeContext" : "!found && ifInsn.containsArg(res)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "found",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 112,
      "startColumnNumber" : 8,
      "endLineNumber" : 112,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 112,
        "startColumnNumber" : 7,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "!found",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 112,
        "startColumnNumber" : 3,
        "endLineNumber" : 114,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!found) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 92,
        "startColumnNumber" : 33,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InsnNode insn=insns.get(i);\n  if (insn.getResult() == null) {\n    return false;\n  }\n  RegisterArg res=insn.getResult();\n  if (res.getSVar().getUseCount() > 1) {\n    return false;\n  }\n  boolean found=false;\n  for (int j=i + 1; j < size; j++) {\n    if (insns.get(i).containsArg(res)) {\n      found=true;\n    }\n  }\n  if (!found && ifInsn.containsArg(res)) {\n    found=true;\n  }\n  if (!found) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 115,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  InsnNode insn=insns.get(i);\n  if (insn.getResult() == null) {\n    return false;\n  }\n  RegisterArg res=insn.getResult();\n  if (res.getSVar().getUseCount() > 1) {\n    return false;\n  }\n  boolean found=false;\n  for (int j=i + 1; j < size; j++) {\n    if (insns.get(i).containsArg(res)) {\n      found=true;\n    }\n  }\n  if (!found && ifInsn.containsArg(res)) {\n    found=true;\n  }\n  if (!found) {\n    return false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 85,
        "startColumnNumber" : 36,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<InsnNode> insns=preCondition.getInstructions();\n  if (insns.isEmpty()) {\n    return true;\n  }\n  IfNode ifInsn=getIfInsn();\n  int size=insns.size();\n  for (int i=0; i < size; i++) {\n    InsnNode insn=insns.get(i);\n    if (insn.getResult() == null) {\n      return false;\n    }\n    RegisterArg res=insn.getResult();\n    if (res.getSVar().getUseCount() > 1) {\n      return false;\n    }\n    boolean found=false;\n    for (int j=i + 1; j < size; j++) {\n      if (insns.get(i).containsArg(res)) {\n        found=true;\n      }\n    }\n    if (!found && ifInsn.containsArg(res)) {\n      found=true;\n    }\n    if (!found) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 82,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Check if pre-conditions can be inlined into loop condition\n */\npublic boolean checkPreCondition(){\n  List<InsnNode> insns=preCondition.getInstructions();\n  if (insns.isEmpty()) {\n    return true;\n  }\n  IfNode ifInsn=getIfInsn();\n  int size=insns.size();\n  for (int i=0; i < size; i++) {\n    InsnNode insn=insns.get(i);\n    if (insn.getResult() == null) {\n      return false;\n    }\n    RegisterArg res=insn.getResult();\n    if (res.getSVar().getUseCount() > 1) {\n      return false;\n    }\n    boolean found=false;\n    for (int j=i + 1; j < size; j++) {\n      if (insns.get(i).containsArg(res)) {\n        found=true;\n      }\n    }\n    if (!found && ifInsn.containsArg(res)) {\n      found=true;\n    }\n    if (!found) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 112,
        "startColumnNumber" : 7,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "!found",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 109,
    "startColumnNumber" : 8,
    "endLineNumber" : 109,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 112,
    "startColumnNumber" : 8,
    "endLineNumber" : 112,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}