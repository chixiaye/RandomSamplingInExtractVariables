{
  "id" : 274,
  "expression" : "mapper",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/src/org/openqa/selenium/bidi/Command.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mapper",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 46,
      "startColumnNumber" : 55,
      "endLineNumber" : 46,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 46,
        "startColumnNumber" : 18,
        "endLineNumber" : 46,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Require.nonNull(\"Mapper for result\",mapper)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.mapper=Require.nonNull(\"Mapper for result\",mapper)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.mapper=Require.nonNull(\"Mapper for result\",mapper);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 43,
        "startColumnNumber" : 92,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.method=Require.nonNull(\"Method name\",method);\n  this.params=ImmutableMap.copyOf(Require.nonNull(\"Command parameters\",params));\n  this.mapper=Require.nonNull(\"Mapper for result\",mapper);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private Command(String method,Map<String,Object> params,Function<JsonInput,X> mapper){\n  this.method=Require.nonNull(\"Method name\",method);\n  this.params=ImmutableMap.copyOf(Require.nonNull(\"Command parameters\",params));\n  this.mapper=Require.nonNull(\"Mapper for result\",mapper);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 63
      },
      "nodeContext" : "this.mapper=Require.nonNull(\"Mapper for result\",mapper);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.function.Function<org.openqa.selenium.json.JsonInput,X>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 46,
    "startColumnNumber" : 55,
    "endLineNumber" : 46,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}