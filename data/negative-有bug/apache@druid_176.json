{
  "id" : 176,
  "expression" : "new byte[]{}",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/extraction/RegexDimExtractionFn.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new byte[]{}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 81,
      "startColumnNumber" : 24,
      "endLineNumber" : 81,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 81,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 36
      },
      "nodeContext" : "replaceStrBytes=new byte[]{}",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 81,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 37
      },
      "nodeContext" : "replaceStrBytes=new byte[]{};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 80,
        "startColumnNumber" : 41,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  replaceStrBytes=new byte[]{};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (replaceMissingValueWith == null) {\n  replaceStrBytes=new byte[]{};\n}\n else {\n  replaceStrBytes=StringUtils.toUtf8(replaceMissingValueWith);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1001,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] exprBytes=StringUtils.toUtf8(expr);\n  byte[] indexBytes=Ints.toByteArray(index);\n  byte[] replaceBytes=replaceMissingValue ? new byte[]{1} : new byte[]{0};\n  byte[] replaceStrBytes;\n  if (replaceMissingValueWith == null) {\n    replaceStrBytes=new byte[]{};\n  }\n else {\n    replaceStrBytes=StringUtils.toUtf8(replaceMissingValueWith);\n  }\n  int totalLen=1 + exprBytes.length + indexBytes.length+ replaceBytes.length+ replaceStrBytes.length;\n  totalLen+=2;\n  return ByteBuffer.allocate(totalLen).put(ExtractionCacheHelper.CACHE_TYPE_ID_REGEX).put(exprBytes).put(CACHE_KEY_SEPARATOR).put(indexBytes).put(replaceStrBytes).put(CACHE_KEY_SEPARATOR).put(replaceBytes).array();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] getCacheKey(){\n  byte[] exprBytes=StringUtils.toUtf8(expr);\n  byte[] indexBytes=Ints.toByteArray(index);\n  byte[] replaceBytes=replaceMissingValue ? new byte[]{1} : new byte[]{0};\n  byte[] replaceStrBytes;\n  if (replaceMissingValueWith == null) {\n    replaceStrBytes=new byte[]{};\n  }\n else {\n    replaceStrBytes=StringUtils.toUtf8(replaceMissingValueWith);\n  }\n  int totalLen=1 + exprBytes.length + indexBytes.length+ replaceBytes.length+ replaceStrBytes.length;\n  totalLen+=2;\n  return ByteBuffer.allocate(totalLen).put(ExtractionCacheHelper.CACHE_TYPE_ID_REGEX).put(exprBytes).put(CACHE_KEY_SEPARATOR).put(indexBytes).put(replaceStrBytes).put(CACHE_KEY_SEPARATOR).put(replaceBytes).array();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 81,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 37
      },
      "nodeContext" : "replaceStrBytes=new byte[]{};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 81,
    "startColumnNumber" : 24,
    "endLineNumber" : 81,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}