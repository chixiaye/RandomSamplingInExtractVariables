{
  "id" : 14,
  "expression" : "ClassUtils",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/util/ResourceUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ClassUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 133,
      "startColumnNumber" : 20,
      "endLineNumber" : 133,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 133,
        "startColumnNumber" : 20,
        "endLineNumber" : 133,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ClassUtils.getDefaultClassLoader()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 133,
        "startColumnNumber" : 15,
        "endLineNumber" : 133,
        "endColumnNumber" : 54
      },
      "nodeContext" : "cl=ClassUtils.getDefaultClassLoader()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 133,
        "startColumnNumber" : 3,
        "endLineNumber" : 133,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ClassLoader cl=ClassUtils.getDefaultClassLoader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 131,
        "startColumnNumber" : 57,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String path=resourceLocation.substring(CLASSPATH_URL_PREFIX.length());\n  ClassLoader cl=ClassUtils.getDefaultClassLoader();\n  URL url=(cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path));\n  if (url == null) {\n    String description=\"class path resource [\" + path + \"]\";\n    throw new FileNotFoundException(description + \" cannot be resolved to URL because it does not exist\");\n  }\n  return url;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 131,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) {\n  String path=resourceLocation.substring(CLASSPATH_URL_PREFIX.length());\n  ClassLoader cl=ClassUtils.getDefaultClassLoader();\n  URL url=(cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path));\n  if (url == null) {\n    String description=\"class path resource [\" + path + \"]\";\n    throw new FileNotFoundException(description + \" cannot be resolved to URL because it does not exist\");\n  }\n  return url;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 129,
        "startColumnNumber" : 80,
        "endLineNumber" : 156,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.notNull(resourceLocation,\"Resource location must not be null\");\n  if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) {\n    String path=resourceLocation.substring(CLASSPATH_URL_PREFIX.length());\n    ClassLoader cl=ClassUtils.getDefaultClassLoader();\n    URL url=(cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path));\n    if (url == null) {\n      String description=\"class path resource [\" + path + \"]\";\n      throw new FileNotFoundException(description + \" cannot be resolved to URL because it does not exist\");\n    }\n    return url;\n  }\n  try {\n    return new URL(resourceLocation);\n  }\n catch (  MalformedURLException ex) {\n    try {\n      return new File(resourceLocation).toURI().toURL();\n    }\n catch (    MalformedURLException ex2) {\n      throw new FileNotFoundException(\"Resource location [\" + resourceLocation + \"] is neither a URL not a well-formed file path\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1503,
        "startLineNumber" : 120,
        "startColumnNumber" : 1,
        "endLineNumber" : 156,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Resolve the given resource location to a  {@code java.net.URL}. <p>Does not check whether the URL actually exists; simply returns the URL that the given location would correspond to.\n * @param resourceLocation the resource location to resolve: either a\"classpath:\" pseudo URL, a \"file:\" URL, or a plain file path\n * @return a corresponding URL object\n * @throws FileNotFoundException if the resource cannot be resolved to a URL\n */\npublic static URL getURL(String resourceLocation) throws FileNotFoundException {\n  Assert.notNull(resourceLocation,\"Resource location must not be null\");\n  if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) {\n    String path=resourceLocation.substring(CLASSPATH_URL_PREFIX.length());\n    ClassLoader cl=ClassUtils.getDefaultClassLoader();\n    URL url=(cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path));\n    if (url == null) {\n      String description=\"class path resource [\" + path + \"]\";\n      throw new FileNotFoundException(description + \" cannot be resolved to URL because it does not exist\");\n    }\n    return url;\n  }\n  try {\n    return new URL(resourceLocation);\n  }\n catch (  MalformedURLException ex) {\n    try {\n      return new File(resourceLocation).toURI().toURL();\n    }\n catch (    MalformedURLException ex2) {\n      throw new FileNotFoundException(\"Resource location [\" + resourceLocation + \"] is neither a URL not a well-formed file path\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 133,
        "startColumnNumber" : 3,
        "endLineNumber" : 133,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ClassLoader cl=ClassUtils.getDefaultClassLoader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.util.ClassUtils"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 133,
    "startColumnNumber" : 20,
    "endLineNumber" : 133,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}