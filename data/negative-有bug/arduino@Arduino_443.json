{
  "id" : 443,
  "expression" : "new Dimension(1024,(height * 4) + sizeFudge)",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/EditorConsole.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Dimension(1024,(height * 4) + sizeFudge)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 118,
      "startColumnNumber" : 19,
      "endLineNumber" : 118,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 65
      },
      "nodeContext" : "setMinimumSize(new Dimension(1024,(height * 4) + sizeFudge))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 66
      },
      "nodeContext" : "setMinimumSize(new Dimension(1024,(height * 4) + sizeFudge));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3197,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  editor=_editor;\n  int maxLineCount=Preferences.getInteger(\"console.length\");\n  consoleDoc=new BufferedStyledDocument(4000,maxLineCount);\n  consoleTextPane=new JTextPane(consoleDoc);\n  consoleTextPane.setEditable(false);\n  SimpleAttributeSet leftAlignAttr=new SimpleAttributeSet();\n  StyleConstants.setAlignment(leftAlignAttr,StyleConstants.ALIGN_LEFT);\n  consoleDoc.setParagraphAttributes(0,0,leftAlignAttr,true);\n  Color bgColor=Theme.getColor(\"console.color\");\n  Color fgColorOut=Theme.getColor(\"console.output.color\");\n  Color fgColorErr=Theme.getColor(\"console.error.color\");\n  Font consoleFont=Theme.getFont(\"console.font\");\n  Font editorFont=Preferences.getFont(\"editor.font\");\n  Font font=new Font(consoleFont.getName(),consoleFont.getStyle(),editorFont.getSize());\n  stdStyle=new SimpleAttributeSet();\n  StyleConstants.setForeground(stdStyle,fgColorOut);\n  StyleConstants.setBackground(stdStyle,bgColor);\n  StyleConstants.setFontSize(stdStyle,font.getSize());\n  StyleConstants.setFontFamily(stdStyle,font.getFamily());\n  StyleConstants.setBold(stdStyle,font.isBold());\n  StyleConstants.setItalic(stdStyle,font.isItalic());\n  errStyle=new SimpleAttributeSet();\n  StyleConstants.setForeground(errStyle,fgColorErr);\n  StyleConstants.setBackground(errStyle,bgColor);\n  StyleConstants.setFontSize(errStyle,font.getSize());\n  StyleConstants.setFontFamily(errStyle,font.getFamily());\n  StyleConstants.setBold(errStyle,font.isBold());\n  StyleConstants.setItalic(errStyle,font.isItalic());\n  consoleTextPane.setBackground(bgColor);\n  setViewportView(consoleTextPane);\n  FontMetrics metrics=getFontMetrics(font);\n  int height=metrics.getAscent() + metrics.getDescent();\n  int lines=Preferences.getInteger(\"console.lines\");\n  int sizeFudge=6;\n  setPreferredSize(new Dimension(1024,(height * lines) + sizeFudge));\n  setMinimumSize(new Dimension(1024,(height * 4) + sizeFudge));\n  EditorConsoleStream.init();\n  if (OSUtils.isMacOS()) {\n    setBorder(null);\n  }\n  new Timer(250,new ActionListener(){\n    public void actionPerformed(    ActionEvent evt){\n      SwingUtilities.invokeLater(new Runnable(){\n        @Override public void run(){\n          if (consoleDoc.isChanged()) {\n            consoleDoc.insertAll();\n            consoleTextPane.setCaretPosition(consoleDoc.getLength());\n          }\n        }\n      }\n);\n    }\n  }\n).start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3234,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public EditorConsole(Editor _editor){\n  editor=_editor;\n  int maxLineCount=Preferences.getInteger(\"console.length\");\n  consoleDoc=new BufferedStyledDocument(4000,maxLineCount);\n  consoleTextPane=new JTextPane(consoleDoc);\n  consoleTextPane.setEditable(false);\n  SimpleAttributeSet leftAlignAttr=new SimpleAttributeSet();\n  StyleConstants.setAlignment(leftAlignAttr,StyleConstants.ALIGN_LEFT);\n  consoleDoc.setParagraphAttributes(0,0,leftAlignAttr,true);\n  Color bgColor=Theme.getColor(\"console.color\");\n  Color fgColorOut=Theme.getColor(\"console.output.color\");\n  Color fgColorErr=Theme.getColor(\"console.error.color\");\n  Font consoleFont=Theme.getFont(\"console.font\");\n  Font editorFont=Preferences.getFont(\"editor.font\");\n  Font font=new Font(consoleFont.getName(),consoleFont.getStyle(),editorFont.getSize());\n  stdStyle=new SimpleAttributeSet();\n  StyleConstants.setForeground(stdStyle,fgColorOut);\n  StyleConstants.setBackground(stdStyle,bgColor);\n  StyleConstants.setFontSize(stdStyle,font.getSize());\n  StyleConstants.setFontFamily(stdStyle,font.getFamily());\n  StyleConstants.setBold(stdStyle,font.isBold());\n  StyleConstants.setItalic(stdStyle,font.isItalic());\n  errStyle=new SimpleAttributeSet();\n  StyleConstants.setForeground(errStyle,fgColorErr);\n  StyleConstants.setBackground(errStyle,bgColor);\n  StyleConstants.setFontSize(errStyle,font.getSize());\n  StyleConstants.setFontFamily(errStyle,font.getFamily());\n  StyleConstants.setBold(errStyle,font.isBold());\n  StyleConstants.setItalic(errStyle,font.isItalic());\n  consoleTextPane.setBackground(bgColor);\n  setViewportView(consoleTextPane);\n  FontMetrics metrics=getFontMetrics(font);\n  int height=metrics.getAscent() + metrics.getDescent();\n  int lines=Preferences.getInteger(\"console.lines\");\n  int sizeFudge=6;\n  setPreferredSize(new Dimension(1024,(height * lines) + sizeFudge));\n  setMinimumSize(new Dimension(1024,(height * 4) + sizeFudge));\n  EditorConsoleStream.init();\n  if (OSUtils.isMacOS()) {\n    setBorder(null);\n  }\n  new Timer(250,new ActionListener(){\n    public void actionPerformed(    ActionEvent evt){\n      SwingUtilities.invokeLater(new Runnable(){\n        @Override public void run(){\n          if (consoleDoc.isChanged()) {\n            consoleDoc.insertAll();\n            consoleTextPane.setCaretPosition(consoleDoc.getLength());\n          }\n        }\n      }\n);\n    }\n  }\n).start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 357,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 66
      },
      "nodeContext" : "setMinimumSize(new Dimension(1024,(height * 4) + sizeFudge));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "java.awt.Dimension"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 118,
    "startColumnNumber" : 19,
    "endLineNumber" : 118,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}