{
  "id" : 447,
  "expression" : "0",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/util/ThrowableTransformer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 36,
      "startColumnNumber" : 50,
      "endLineNumber" : 36,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 36,
        "startColumnNumber" : 41,
        "endLineNumber" : 36,
        "endColumnNumber" : 51
      },
      "nodeContext" : "depth != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 51
      },
      "nodeContext" : "causeException != null && depth != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (causeException != null && depth != 0) {\n  stackMessage.append(printExceptionInfo(causeException));\n  boolean isLookDeeper=printStackElement(causeException.getStackTrace(),new AppendListener(){\n    @Override public void append(    String value){\n      stackMessage.append(value);\n    }\n    @Override public boolean overMaxLength(){\n      return stackMessage.length() > maxLength;\n    }\n  }\n);\n  if (isLookDeeper) {\n    break;\n  }\n  causeException=causeException.getCause();\n  depth--;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 71,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 31,
        "startColumnNumber" : 75,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StringBuilder stackMessage=new StringBuilder();\n  Throwable causeException=throwable;\n  int depth=CAUSE_EXCEPTION_DEPTH;\n  while (causeException != null && depth != 0) {\n    stackMessage.append(printExceptionInfo(causeException));\n    boolean isLookDeeper=printStackElement(causeException.getStackTrace(),new AppendListener(){\n      @Override public void append(      String value){\n        stackMessage.append(value);\n      }\n      @Override public boolean overMaxLength(){\n        return stackMessage.length() > maxLength;\n      }\n    }\n);\n    if (isLookDeeper) {\n      break;\n    }\n    causeException=causeException.getCause();\n    depth--;\n  }\n  return stackMessage.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 979,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public String convert2String(Throwable throwable,final int maxLength){\n  final StringBuilder stackMessage=new StringBuilder();\n  Throwable causeException=throwable;\n  int depth=CAUSE_EXCEPTION_DEPTH;\n  while (causeException != null && depth != 0) {\n    stackMessage.append(printExceptionInfo(causeException));\n    boolean isLookDeeper=printStackElement(causeException.getStackTrace(),new AppendListener(){\n      @Override public void append(      String value){\n        stackMessage.append(value);\n      }\n      @Override public boolean overMaxLength(){\n        return stackMessage.length() > maxLength;\n      }\n    }\n);\n    if (isLookDeeper) {\n      break;\n    }\n    causeException=causeException.getCause();\n    depth--;\n  }\n  return stackMessage.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 51
      },
      "nodeContext" : "causeException != null && depth != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 36,
    "startColumnNumber" : 50,
    "endLineNumber" : 36,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}