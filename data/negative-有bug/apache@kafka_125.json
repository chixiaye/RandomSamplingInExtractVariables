{
  "id" : 125,
  "expression" : "statefulTask.id()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/processor/internals/TasksTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "statefulTask.id()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 61,
      "startColumnNumber" : 46,
      "endLineNumber" : 61,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 61,
        "startColumnNumber" : 35,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "tasks.task(statefulTask.id())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertEquals(statefulTask,tasks.task(statefulTask.id()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(statefulTask,tasks.task(statefulTask.id()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 39,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldKeepAddedTasks(){\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(statefulTask,tasks.task(statefulTask.id()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.streams.processor.TaskId"
  }, {
    "nodeContext" : "statefulTask.id()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 67,
      "startColumnNumber" : 73,
      "endLineNumber" : 67,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 67,
        "startColumnNumber" : 67,
        "endLineNumber" : 67,
        "endColumnNumber" : 109
      },
      "nodeContext" : "mkSet(statefulTask.id(),standbyTask.id())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 67,
        "startColumnNumber" : 55,
        "endLineNumber" : 67,
        "endColumnNumber" : 110
      },
      "nodeContext" : "tasks.tasks(mkSet(statefulTask.id(),standbyTask.id()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 39,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldKeepAddedTasks(){\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.streams.processor.TaskId"
  }, {
    "nodeContext" : "statefulTask.id()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 68,
      "startColumnNumber" : 27,
      "endLineNumber" : 68,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 68,
        "startColumnNumber" : 21,
        "endLineNumber" : 68,
        "endColumnNumber" : 83
      },
      "nodeContext" : "mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 104
      },
      "nodeContext" : "assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 39,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldKeepAddedTasks(){\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.streams.processor.TaskId"
  }, {
    "nodeContext" : "statefulTask.id()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 71,
      "startColumnNumber" : 24,
      "endLineNumber" : 71,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 56
      },
      "nodeContext" : "mkEntry(statefulTask.id(),statefulTask)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 39,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldKeepAddedTasks(){\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 56
      },
      "nodeContext" : "mkEntry(statefulTask.id(),statefulTask)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.streams.processor.TaskId"
  }, {
    "nodeContext" : "statefulTask.id()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 76,
      "startColumnNumber" : 34,
      "endLineNumber" : 76,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 76,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "tasks.contains(statefulTask.id())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertTrue(tasks.contains(statefulTask.id()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertTrue(tasks.contains(statefulTask.id()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 39,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldKeepAddedTasks(){\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertTrue(tasks.contains(statefulTask.id()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.streams.processor.TaskId"
  }, {
    "nodeContext" : "statefulTask.id()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 78,
      "startColumnNumber" : 34,
      "endLineNumber" : 78,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 78,
        "startColumnNumber" : 19,
        "endLineNumber" : 78,
        "endColumnNumber" : 52
      },
      "nodeContext" : "tasks.contains(statefulTask.id())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertTrue(tasks.contains(statefulTask.id()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertTrue(tasks.contains(statefulTask.id()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 53,
        "startColumnNumber" : 39,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldKeepAddedTasks(){\n  final StreamTask statefulTask=statefulTask(TASK_0_0,mkSet(TOPIC_PARTITION_A_0)).build();\n  final StandbyTask standbyTask=standbyTask(TASK_0_1,mkSet(TOPIC_PARTITION_A_1)).build();\n  final StreamTask statelessTask=statelessTask(TASK_1_0).build();\n  tasks.addActiveTasks(mkSet(statefulTask,statelessTask));\n  tasks.addStandbyTasks(Collections.singletonList(standbyTask));\n  assertEquals(statefulTask,tasks.task(statefulTask.id()));\n  assertEquals(statelessTask,tasks.task(statelessTask.id()));\n  assertEquals(standbyTask,tasks.task(standbyTask.id()));\n  assertEquals(mkSet(statefulTask,statelessTask),new HashSet<>(tasks.activeTasks()));\n  assertEquals(mkSet(statefulTask,statelessTask,standbyTask),tasks.allTasks());\n  assertEquals(mkSet(statefulTask,standbyTask),tasks.tasks(mkSet(statefulTask.id(),standbyTask.id())));\n  assertEquals(mkSet(statefulTask.id(),statelessTask.id(),standbyTask.id()),tasks.allTaskIds());\n  assertEquals(mkMap(mkEntry(statefulTask.id(),statefulTask),mkEntry(statelessTask.id(),statelessTask),mkEntry(standbyTask.id(),standbyTask)),tasks.allTasksPerId());\n  assertTrue(tasks.contains(statefulTask.id()));\n  assertTrue(tasks.contains(statelessTask.id()));\n  assertTrue(tasks.contains(statefulTask.id()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertTrue(tasks.contains(statefulTask.id()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.kafka.streams.processor.TaskId"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 61,
    "startColumnNumber" : 46,
    "endLineNumber" : 61,
    "endColumnNumber" : 63
  }, {
    "charLength" : 17,
    "startLineNumber" : 67,
    "startColumnNumber" : 73,
    "endLineNumber" : 67,
    "endColumnNumber" : 90
  }, {
    "charLength" : 17,
    "startLineNumber" : 68,
    "startColumnNumber" : 27,
    "endLineNumber" : 68,
    "endColumnNumber" : 44
  }, {
    "charLength" : 17,
    "startLineNumber" : 71,
    "startColumnNumber" : 24,
    "endLineNumber" : 71,
    "endColumnNumber" : 41
  }, {
    "charLength" : 17,
    "startLineNumber" : 76,
    "startColumnNumber" : 34,
    "endLineNumber" : 76,
    "endColumnNumber" : 51
  }, {
    "charLength" : 17,
    "startLineNumber" : 78,
    "startColumnNumber" : 34,
    "endLineNumber" : 78,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}