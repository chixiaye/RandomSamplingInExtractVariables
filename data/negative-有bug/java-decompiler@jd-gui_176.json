{
  "id" : 176,
  "expression" : "sb",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/actions/CopyQualifiedNameContextualActionsFactory.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 55,
      "startColumnNumber" : 24,
      "endLineNumber" : 55,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 55,
        "startColumnNumber" : 24,
        "endLineNumber" : 55,
        "endColumnNumber" : 35
      },
      "nodeContext" : "sb.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 55,
        "startColumnNumber" : 24,
        "endLineNumber" : 55,
        "endColumnNumber" : 39
      },
      "nodeContext" : "sb.length() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 57,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (sb.length() > 0) {\n  sb.append('.');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 52,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type != null) {\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2340,
        "startLineNumber" : 49,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeFactory != null) {\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3051,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void actionPerformed(ActionEvent e){\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 55,
        "startColumnNumber" : 24,
        "endLineNumber" : 55,
        "endColumnNumber" : 39
      },
      "nodeContext" : "sb.length() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "sb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 56,
      "startColumnNumber" : 24,
      "endLineNumber" : 56,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 56,
        "startColumnNumber" : 24,
        "endLineNumber" : 56,
        "endColumnNumber" : 38
      },
      "nodeContext" : "sb.append('.')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 56,
        "startColumnNumber" : 24,
        "endLineNumber" : 56,
        "endColumnNumber" : 39
      },
      "nodeContext" : "sb.append('.');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 55,
        "startColumnNumber" : 41,
        "endLineNumber" : 57,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  sb.append('.');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 57,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (sb.length() > 0) {\n  sb.append('.');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 52,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type != null) {\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2340,
        "startLineNumber" : 49,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeFactory != null) {\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3051,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void actionPerformed(ActionEvent e){\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 56,
        "startColumnNumber" : 24,
        "endLineNumber" : 56,
        "endColumnNumber" : 39
      },
      "nodeContext" : "sb.append('.');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "sb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 59,
      "startColumnNumber" : 20,
      "endLineNumber" : 59,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 56
      },
      "nodeContext" : "sb.append(type.getDisplayTypeName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 57
      },
      "nodeContext" : "sb.append(type.getDisplayTypeName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 52,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type != null) {\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2340,
        "startLineNumber" : 49,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeFactory != null) {\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3051,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void actionPerformed(ActionEvent e){\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 57
      },
      "nodeContext" : "sb.append(type.getDisplayTypeName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "sb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 77,
      "startColumnNumber" : 44,
      "endLineNumber" : 77,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 77,
        "startColumnNumber" : 44,
        "endLineNumber" : 77,
        "endColumnNumber" : 58
      },
      "nodeContext" : "sb.append('.')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 77,
        "startColumnNumber" : 44,
        "endLineNumber" : 77,
        "endColumnNumber" : 90
      },
      "nodeContext" : "sb.append('.').append(method.getDisplayName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 77,
        "startColumnNumber" : 44,
        "endLineNumber" : 77,
        "endColumnNumber" : 91
      },
      "nodeContext" : "sb.append('.').append(method.getDisplayName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 76,
        "startColumnNumber" : 120,
        "endLineNumber" : 79,
        "endColumnNumber" : 41
      },
      "nodeContext" : "{\n  sb.append('.').append(method.getDisplayName());\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 76,
        "startColumnNumber" : 40,
        "endLineNumber" : 79,
        "endColumnNumber" : 41
      },
      "nodeContext" : "if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n  sb.append('.').append(method.getDisplayName());\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 75,
        "startColumnNumber" : 81,
        "endLineNumber" : 80,
        "endColumnNumber" : 37
      },
      "nodeContext" : "{\n  if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n    sb.append('.').append(method.getDisplayName());\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 75,
        "startColumnNumber" : 36,
        "endLineNumber" : 80,
        "endColumnNumber" : 37
      },
      "nodeContext" : "for (Type.Method method : type.getMethods()) {\n  if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n    sb.append('.').append(method.getDisplayName());\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 74,
        "startColumnNumber" : 64,
        "endLineNumber" : 81,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  for (  Type.Method method : type.getMethods()) {\n    if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n      sb.append('.').append(method.getDisplayName());\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 74,
        "startColumnNumber" : 32,
        "endLineNumber" : 88,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (descriptor.startsWith(\"(\")) {\n  for (  Type.Method method : type.getMethods()) {\n    if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n      sb.append('.').append(method.getDisplayName());\n      break;\n    }\n  }\n}\n else {\n  for (  Type.Field field : type.getFields()) {\n    if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n      sb.append('.').append(field.getDisplayName());\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 70,
        "startColumnNumber" : 35,
        "endLineNumber" : 89,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  String name=fragment.substring(dashIndex + 1,lastDashIndex);\n  String descriptor=fragment.substring(lastDashIndex + 1);\n  if (descriptor.startsWith(\"(\")) {\n    for (    Type.Method method : type.getMethods()) {\n      if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(method.getDisplayName());\n        break;\n      }\n    }\n  }\n else {\n    for (    Type.Field field : type.getFields()) {\n      if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(field.getDisplayName());\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1462,
        "startLineNumber" : 67,
        "startColumnNumber" : 28,
        "endLineNumber" : 89,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (dashIndex == lastDashIndex) {\n  throw new InvalidFormatException(\"fragment: \" + fragment);\n}\n else {\n  String name=fragment.substring(dashIndex + 1,lastDashIndex);\n  String descriptor=fragment.substring(lastDashIndex + 1);\n  if (descriptor.startsWith(\"(\")) {\n    for (    Type.Method method : type.getMethods()) {\n      if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(method.getDisplayName());\n        break;\n      }\n    }\n  }\n else {\n    for (    Type.Field field : type.getFields()) {\n      if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(field.getDisplayName());\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 64,
        "startColumnNumber" : 45,
        "endLineNumber" : 90,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  int lastDashIndex=fragment.lastIndexOf('-');\n  if (dashIndex == lastDashIndex) {\n    throw new InvalidFormatException(\"fragment: \" + fragment);\n  }\n else {\n    String name=fragment.substring(dashIndex + 1,lastDashIndex);\n    String descriptor=fragment.substring(lastDashIndex + 1);\n    if (descriptor.startsWith(\"(\")) {\n      for (      Type.Method method : type.getMethods()) {\n        if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(method.getDisplayName());\n          break;\n        }\n      }\n    }\n else {\n      for (      Type.Field field : type.getFields()) {\n        if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(field.getDisplayName());\n          break;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1619,
        "startLineNumber" : 64,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (dashIndex != -1) {\n  int lastDashIndex=fragment.lastIndexOf('-');\n  if (dashIndex == lastDashIndex) {\n    throw new InvalidFormatException(\"fragment: \" + fragment);\n  }\n else {\n    String name=fragment.substring(dashIndex + 1,lastDashIndex);\n    String descriptor=fragment.substring(lastDashIndex + 1);\n    if (descriptor.startsWith(\"(\")) {\n      for (      Type.Method method : type.getMethods()) {\n        if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(method.getDisplayName());\n          break;\n        }\n      }\n    }\n else {\n      for (      Type.Field field : type.getFields()) {\n        if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(field.getDisplayName());\n          break;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1735,
        "startLineNumber" : 61,
        "startColumnNumber" : 42,
        "endLineNumber" : 91,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int dashIndex=fragment.indexOf('-');\n  if (dashIndex != -1) {\n    int lastDashIndex=fragment.lastIndexOf('-');\n    if (dashIndex == lastDashIndex) {\n      throw new InvalidFormatException(\"fragment: \" + fragment);\n    }\n else {\n      String name=fragment.substring(dashIndex + 1,lastDashIndex);\n      String descriptor=fragment.substring(lastDashIndex + 1);\n      if (descriptor.startsWith(\"(\")) {\n        for (        Type.Method method : type.getMethods()) {\n          if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(method.getDisplayName());\n            break;\n          }\n        }\n      }\n else {\n        for (        Type.Field field : type.getFields()) {\n          if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(field.getDisplayName());\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1757,
        "startLineNumber" : 61,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fragment != null) {\n  int dashIndex=fragment.indexOf('-');\n  if (dashIndex != -1) {\n    int lastDashIndex=fragment.lastIndexOf('-');\n    if (dashIndex == lastDashIndex) {\n      throw new InvalidFormatException(\"fragment: \" + fragment);\n    }\n else {\n      String name=fragment.substring(dashIndex + 1,lastDashIndex);\n      String descriptor=fragment.substring(lastDashIndex + 1);\n      if (descriptor.startsWith(\"(\")) {\n        for (        Type.Method method : type.getMethods()) {\n          if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(method.getDisplayName());\n            break;\n          }\n        }\n      }\n else {\n        for (        Type.Field field : type.getFields()) {\n          if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(field.getDisplayName());\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 144,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 52,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type != null) {\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2340,
        "startLineNumber" : 49,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeFactory != null) {\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3051,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void actionPerformed(ActionEvent e){\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 77,
        "startColumnNumber" : 44,
        "endLineNumber" : 77,
        "endColumnNumber" : 91
      },
      "nodeContext" : "sb.append('.').append(method.getDisplayName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "sb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 84,
      "startColumnNumber" : 44,
      "endLineNumber" : 84,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 84,
        "startColumnNumber" : 44,
        "endLineNumber" : 84,
        "endColumnNumber" : 58
      },
      "nodeContext" : "sb.append('.')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 84,
        "startColumnNumber" : 44,
        "endLineNumber" : 84,
        "endColumnNumber" : 89
      },
      "nodeContext" : "sb.append('.').append(field.getDisplayName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 84,
        "startColumnNumber" : 44,
        "endLineNumber" : 84,
        "endColumnNumber" : 90
      },
      "nodeContext" : "sb.append('.').append(field.getDisplayName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 83,
        "startColumnNumber" : 118,
        "endLineNumber" : 86,
        "endColumnNumber" : 41
      },
      "nodeContext" : "{\n  sb.append('.').append(field.getDisplayName());\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 83,
        "startColumnNumber" : 40,
        "endLineNumber" : 86,
        "endColumnNumber" : 41
      },
      "nodeContext" : "if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n  sb.append('.').append(field.getDisplayName());\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 82,
        "startColumnNumber" : 78,
        "endLineNumber" : 87,
        "endColumnNumber" : 37
      },
      "nodeContext" : "{\n  if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n    sb.append('.').append(field.getDisplayName());\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 82,
        "startColumnNumber" : 36,
        "endLineNumber" : 87,
        "endColumnNumber" : 37
      },
      "nodeContext" : "for (Type.Field field : type.getFields()) {\n  if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n    sb.append('.').append(field.getDisplayName());\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 81,
        "startColumnNumber" : 39,
        "endLineNumber" : 88,
        "endColumnNumber" : 33
      },
      "nodeContext" : "{\n  for (  Type.Field field : type.getFields()) {\n    if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n      sb.append('.').append(field.getDisplayName());\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 74,
        "startColumnNumber" : 32,
        "endLineNumber" : 88,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (descriptor.startsWith(\"(\")) {\n  for (  Type.Method method : type.getMethods()) {\n    if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n      sb.append('.').append(method.getDisplayName());\n      break;\n    }\n  }\n}\n else {\n  for (  Type.Field field : type.getFields()) {\n    if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n      sb.append('.').append(field.getDisplayName());\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 70,
        "startColumnNumber" : 35,
        "endLineNumber" : 89,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  String name=fragment.substring(dashIndex + 1,lastDashIndex);\n  String descriptor=fragment.substring(lastDashIndex + 1);\n  if (descriptor.startsWith(\"(\")) {\n    for (    Type.Method method : type.getMethods()) {\n      if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(method.getDisplayName());\n        break;\n      }\n    }\n  }\n else {\n    for (    Type.Field field : type.getFields()) {\n      if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(field.getDisplayName());\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1462,
        "startLineNumber" : 67,
        "startColumnNumber" : 28,
        "endLineNumber" : 89,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (dashIndex == lastDashIndex) {\n  throw new InvalidFormatException(\"fragment: \" + fragment);\n}\n else {\n  String name=fragment.substring(dashIndex + 1,lastDashIndex);\n  String descriptor=fragment.substring(lastDashIndex + 1);\n  if (descriptor.startsWith(\"(\")) {\n    for (    Type.Method method : type.getMethods()) {\n      if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(method.getDisplayName());\n        break;\n      }\n    }\n  }\n else {\n    for (    Type.Field field : type.getFields()) {\n      if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n        sb.append('.').append(field.getDisplayName());\n        break;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 64,
        "startColumnNumber" : 45,
        "endLineNumber" : 90,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  int lastDashIndex=fragment.lastIndexOf('-');\n  if (dashIndex == lastDashIndex) {\n    throw new InvalidFormatException(\"fragment: \" + fragment);\n  }\n else {\n    String name=fragment.substring(dashIndex + 1,lastDashIndex);\n    String descriptor=fragment.substring(lastDashIndex + 1);\n    if (descriptor.startsWith(\"(\")) {\n      for (      Type.Method method : type.getMethods()) {\n        if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(method.getDisplayName());\n          break;\n        }\n      }\n    }\n else {\n      for (      Type.Field field : type.getFields()) {\n        if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(field.getDisplayName());\n          break;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1619,
        "startLineNumber" : 64,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (dashIndex != -1) {\n  int lastDashIndex=fragment.lastIndexOf('-');\n  if (dashIndex == lastDashIndex) {\n    throw new InvalidFormatException(\"fragment: \" + fragment);\n  }\n else {\n    String name=fragment.substring(dashIndex + 1,lastDashIndex);\n    String descriptor=fragment.substring(lastDashIndex + 1);\n    if (descriptor.startsWith(\"(\")) {\n      for (      Type.Method method : type.getMethods()) {\n        if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(method.getDisplayName());\n          break;\n        }\n      }\n    }\n else {\n      for (      Type.Field field : type.getFields()) {\n        if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n          sb.append('.').append(field.getDisplayName());\n          break;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1735,
        "startLineNumber" : 61,
        "startColumnNumber" : 42,
        "endLineNumber" : 91,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int dashIndex=fragment.indexOf('-');\n  if (dashIndex != -1) {\n    int lastDashIndex=fragment.lastIndexOf('-');\n    if (dashIndex == lastDashIndex) {\n      throw new InvalidFormatException(\"fragment: \" + fragment);\n    }\n else {\n      String name=fragment.substring(dashIndex + 1,lastDashIndex);\n      String descriptor=fragment.substring(lastDashIndex + 1);\n      if (descriptor.startsWith(\"(\")) {\n        for (        Type.Method method : type.getMethods()) {\n          if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(method.getDisplayName());\n            break;\n          }\n        }\n      }\n else {\n        for (        Type.Field field : type.getFields()) {\n          if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(field.getDisplayName());\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1757,
        "startLineNumber" : 61,
        "startColumnNumber" : 20,
        "endLineNumber" : 91,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fragment != null) {\n  int dashIndex=fragment.indexOf('-');\n  if (dashIndex != -1) {\n    int lastDashIndex=fragment.lastIndexOf('-');\n    if (dashIndex == lastDashIndex) {\n      throw new InvalidFormatException(\"fragment: \" + fragment);\n    }\n else {\n      String name=fragment.substring(dashIndex + 1,lastDashIndex);\n      String descriptor=fragment.substring(lastDashIndex + 1);\n      if (descriptor.startsWith(\"(\")) {\n        for (        Type.Method method : type.getMethods()) {\n          if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(method.getDisplayName());\n            break;\n          }\n        }\n      }\n else {\n        for (        Type.Field field : type.getFields()) {\n          if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n            sb.append('.').append(field.getDisplayName());\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 144,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 52,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type != null) {\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2340,
        "startLineNumber" : 49,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeFactory != null) {\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3051,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void actionPerformed(ActionEvent e){\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 84,
        "startColumnNumber" : 44,
        "endLineNumber" : 84,
        "endColumnNumber" : 90
      },
      "nodeContext" : "sb.append('.').append(field.getDisplayName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  }, {
    "nodeContext" : "sb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 93,
      "startColumnNumber" : 101,
      "endLineNumber" : 93,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 93,
        "startColumnNumber" : 101,
        "endLineNumber" : 93,
        "endColumnNumber" : 114
      },
      "nodeContext" : "sb.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 93,
        "startColumnNumber" : 81,
        "endLineNumber" : 93,
        "endColumnNumber" : 115
      },
      "nodeContext" : "new StringSelection(sb.toString())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 93,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 93,
        "endColumnNumber" : 123
      },
      "nodeContext" : "Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 52,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 52,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type != null) {\n  StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n  if (sb.length() > 0) {\n    sb.append('.');\n  }\n  sb.append(type.getDisplayTypeName());\n  if (fragment != null) {\n    int dashIndex=fragment.indexOf('-');\n    if (dashIndex != -1) {\n      int lastDashIndex=fragment.lastIndexOf('-');\n      if (dashIndex == lastDashIndex) {\n        throw new InvalidFormatException(\"fragment: \" + fragment);\n      }\n else {\n        String name=fragment.substring(dashIndex + 1,lastDashIndex);\n        String descriptor=fragment.substring(lastDashIndex + 1);\n        if (descriptor.startsWith(\"(\")) {\n          for (          Type.Method method : type.getMethods()) {\n            if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(method.getDisplayName());\n              break;\n            }\n          }\n        }\n else {\n          for (          Type.Field field : type.getFields()) {\n            if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n              sb.append('.').append(field.getDisplayName());\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2340,
        "startLineNumber" : 49,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeFactory != null) {\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3051,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void actionPerformed(ActionEvent e){\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 93,
        "startColumnNumber" : 20,
        "endLineNumber" : 93,
        "endColumnNumber" : 123
      },
      "nodeContext" : "Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 55,
    "startColumnNumber" : 24,
    "endLineNumber" : 55,
    "endColumnNumber" : 26
  }, {
    "charLength" : 2,
    "startLineNumber" : 56,
    "startColumnNumber" : 24,
    "endLineNumber" : 56,
    "endColumnNumber" : 26
  }, {
    "charLength" : 2,
    "startLineNumber" : 59,
    "startColumnNumber" : 20,
    "endLineNumber" : 59,
    "endColumnNumber" : 22
  }, {
    "charLength" : 2,
    "startLineNumber" : 77,
    "startColumnNumber" : 44,
    "endLineNumber" : 77,
    "endColumnNumber" : 46
  }, {
    "charLength" : 2,
    "startLineNumber" : 84,
    "startColumnNumber" : 44,
    "endLineNumber" : 84,
    "endColumnNumber" : 46
  }, {
    "charLength" : 2,
    "startLineNumber" : 93,
    "startColumnNumber" : 101,
    "endLineNumber" : 93,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 15
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 15
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 15
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 15
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 15
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 15
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 15
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 15
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}