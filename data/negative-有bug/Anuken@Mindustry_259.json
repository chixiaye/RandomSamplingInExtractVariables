{
  "id" : 259,
  "expression" : "lightningSpacing",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/bullet/LaserBulletType.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lightningSpacing",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 68,
      "startColumnNumber" : 11,
      "endLineNumber" : 68,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 68,
        "startColumnNumber" : 11,
        "endLineNumber" : 68,
        "endColumnNumber" : 31
      },
      "nodeContext" : "lightningSpacing > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (lightningSpacing > 0) {\n  int idx=0;\n  for (float i=0; i <= resultLength; i+=lightningSpacing) {\n    float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n    int f=idx++;\n    for (    int s : Mathf.signs) {\n      Time.run(f * lightningDelay,() -> {\n        if (b.isAdded() && b.type == this) {\n          Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n        }\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 63,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float resultLength=Damage.collideLaser(b,length,largeHit), rot=b.rotation();\n  laserEffect.at(b.x,b.y,rot,resultLength * 0.75f);\n  if (lightningSpacing > 0) {\n    int idx=0;\n    for (float i=0; i <= resultLength; i+=lightningSpacing) {\n      float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n      int f=idx++;\n      for (      int s : Mathf.signs) {\n        Time.run(f * lightningDelay,() -> {\n          if (b.isAdded() && b.type == this) {\n            Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n          }\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void init(Bullet b){\n  float resultLength=Damage.collideLaser(b,length,largeHit), rot=b.rotation();\n  laserEffect.at(b.x,b.y,rot,resultLength * 0.75f);\n  if (lightningSpacing > 0) {\n    int idx=0;\n    for (float i=0; i <= resultLength; i+=lightningSpacing) {\n      float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n      int f=idx++;\n      for (      int s : Mathf.signs) {\n        Time.run(f * lightningDelay,() -> {\n          if (b.isAdded() && b.type == this) {\n            Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n          }\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 68,
        "startColumnNumber" : 11,
        "endLineNumber" : 68,
        "endColumnNumber" : 31
      },
      "nodeContext" : "lightningSpacing > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "lightningSpacing",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 70,
      "startColumnNumber" : 53,
      "endLineNumber" : 70,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,updaters]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 70,
        "startColumnNumber" : 48,
        "endLineNumber" : 70,
        "endColumnNumber" : 69
      },
      "nodeContext" : "i+=lightningSpacing",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (float i=0; i <= resultLength; i+=lightningSpacing) {\n  float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n  int f=idx++;\n  for (  int s : Mathf.signs) {\n    Time.run(f * lightningDelay,() -> {\n      if (b.isAdded() && b.type == this) {\n        Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 68,
        "startColumnNumber" : 32,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int idx=0;\n  for (float i=0; i <= resultLength; i+=lightningSpacing) {\n    float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n    int f=idx++;\n    for (    int s : Mathf.signs) {\n      Time.run(f * lightningDelay,() -> {\n        if (b.isAdded() && b.type == this) {\n          Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n        }\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (lightningSpacing > 0) {\n  int idx=0;\n  for (float i=0; i <= resultLength; i+=lightningSpacing) {\n    float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n    int f=idx++;\n    for (    int s : Mathf.signs) {\n      Time.run(f * lightningDelay,() -> {\n        if (b.isAdded() && b.type == this) {\n          Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n        }\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 63,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float resultLength=Damage.collideLaser(b,length,largeHit), rot=b.rotation();\n  laserEffect.at(b.x,b.y,rot,resultLength * 0.75f);\n  if (lightningSpacing > 0) {\n    int idx=0;\n    for (float i=0; i <= resultLength; i+=lightningSpacing) {\n      float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n      int f=idx++;\n      for (      int s : Mathf.signs) {\n        Time.run(f * lightningDelay,() -> {\n          if (b.isAdded() && b.type == this) {\n            Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n          }\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void init(Bullet b){\n  float resultLength=Damage.collideLaser(b,length,largeHit), rot=b.rotation();\n  laserEffect.at(b.x,b.y,rot,resultLength * 0.75f);\n  if (lightningSpacing > 0) {\n    int idx=0;\n    for (float i=0; i <= resultLength; i+=lightningSpacing) {\n      float cx=b.x + Angles.trnsx(rot,i), cy=b.y + Angles.trnsy(rot,i);\n      int f=idx++;\n      for (      int s : Mathf.signs) {\n        Time.run(f * lightningDelay,() -> {\n          if (b.isAdded() && b.type == this) {\n            Lightning.create(b,lightningColor,lightningDamage < 0 ? damage : lightningDamage,cx,cy,rot + 90 * s + Mathf.range(lightningAngleRand),lightningLength + Mathf.random(lightningLengthRand));\n          }\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,updaters]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 70,
        "startColumnNumber" : 48,
        "endLineNumber" : 70,
        "endColumnNumber" : 69
      },
      "nodeContext" : "i+=lightningSpacing",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 68,
    "startColumnNumber" : 11,
    "endLineNumber" : 68,
    "endColumnNumber" : 27
  }, {
    "charLength" : 16,
    "startLineNumber" : 70,
    "startColumnNumber" : 53,
    "endLineNumber" : 70,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}