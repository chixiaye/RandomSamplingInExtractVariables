{
  "id" : 218,
  "expression" : "is_prefix",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/trie/Trie.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "is_prefix",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 63,
      "startColumnNumber" : 11,
      "endLineNumber" : 63,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 63,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 41
      },
      "nodeContext" : "is_prefix || !created_new_node",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return is_prefix || !created_new_node;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 28,
        "startColumnNumber" : 52,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (key == null)   throw new IllegalArgumentException(\"Null not permitted in trie\");\n  if (numInserts <= 0)   throw new IllegalArgumentException(\"numInserts has to be greater than zero\");\n  Node node=root;\n  boolean created_new_node=false;\n  boolean is_prefix=false;\n  for (int i=0; i < key.length(); ++i) {\n    char ch=key.charAt(i);\n    Node nextNode=node.children.get(ch);\n    if (nextNode == null) {\n      nextNode=new Node(ch);\n      node.addChild(nextNode,ch);\n      created_new_node=true;\n    }\n else {\n      if (nextNode.isWordEnding)       is_prefix=true;\n    }\n    node=nextNode;\n    node.count+=numInserts;\n  }\n  if (node != root)   node.isWordEnding=true;\n  return is_prefix || !created_new_node;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1063,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean insert(String key,int numInserts){\n  if (key == null)   throw new IllegalArgumentException(\"Null not permitted in trie\");\n  if (numInserts <= 0)   throw new IllegalArgumentException(\"numInserts has to be greater than zero\");\n  Node node=root;\n  boolean created_new_node=false;\n  boolean is_prefix=false;\n  for (int i=0; i < key.length(); ++i) {\n    char ch=key.charAt(i);\n    Node nextNode=node.children.get(ch);\n    if (nextNode == null) {\n      nextNode=new Node(ch);\n      node.addChild(nextNode,ch);\n      created_new_node=true;\n    }\n else {\n      if (nextNode.isWordEnding)       is_prefix=true;\n    }\n    node=nextNode;\n    node.count+=numInserts;\n  }\n  if (node != root)   node.isWordEnding=true;\n  return is_prefix || !created_new_node;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return is_prefix || !created_new_node;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 63,
    "startColumnNumber" : 11,
    "endLineNumber" : 63,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}