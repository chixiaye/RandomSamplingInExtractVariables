{
  "id" : 475,
  "expression" : "FeatureFlags.getDiskValues()",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/logsubmit/LogSectionFeatureFlags.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "FeatureFlags.getDiskValues()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 25,
      "startColumnNumber" : 40,
      "endLineNumber" : 25,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 25,
        "startColumnNumber" : 24,
        "endLineNumber" : 25,
        "endColumnNumber" : 68
      },
      "nodeContext" : "disk=FeatureFlags.getDiskValues()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Map<String,Object> disk=FeatureFlags.getDiskValues();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1882,
        "startLineNumber" : 22,
        "startColumnNumber" : 68,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder out=new StringBuilder();\n  Map<String,Object> memory=FeatureFlags.getMemoryValues();\n  Map<String,Object> disk=FeatureFlags.getDiskValues();\n  Map<String,Object> pending=FeatureFlags.getPendingDiskValues();\n  Map<String,Object> forced=FeatureFlags.getForcedValues();\n  int remoteLength=Stream.of(memory.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  int diskLength=Stream.of(disk.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  int pendingLength=Stream.of(pending.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  int forcedLength=Stream.of(forced.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  out.append(\"-- Memory\\n\");\n  for (  Map.Entry<String,Object> entry : memory.entrySet()) {\n    out.append(Util.rightPad(entry.getKey(),remoteLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n  }\n  out.append(\"\\n\");\n  out.append(\"-- Current Disk\\n\");\n  for (  Map.Entry<String,Object> entry : disk.entrySet()) {\n    out.append(Util.rightPad(entry.getKey(),diskLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n  }\n  out.append(\"\\n\");\n  out.append(\"-- Pending Disk\\n\");\n  for (  Map.Entry<String,Object> entry : pending.entrySet()) {\n    out.append(Util.rightPad(entry.getKey(),pendingLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n  }\n  out.append(\"\\n\");\n  out.append(\"-- Forced\\n\");\n  if (forced.isEmpty()) {\n    out.append(\"None\\n\");\n  }\n else {\n    for (    Map.Entry<String,Object> entry : forced.entrySet()) {\n      out.append(Util.rightPad(entry.getKey(),forcedLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n    }\n  }\n  return out;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 353,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 21,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public @NonNull CharSequence getContent(@NonNull Context context){\n  StringBuilder out=new StringBuilder();\n  Map<String,Object> memory=FeatureFlags.getMemoryValues();\n  Map<String,Object> disk=FeatureFlags.getDiskValues();\n  Map<String,Object> pending=FeatureFlags.getPendingDiskValues();\n  Map<String,Object> forced=FeatureFlags.getForcedValues();\n  int remoteLength=Stream.of(memory.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  int diskLength=Stream.of(disk.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  int pendingLength=Stream.of(pending.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  int forcedLength=Stream.of(forced.keySet()).map(String::length).max(Integer::compareTo).orElse(0);\n  out.append(\"-- Memory\\n\");\n  for (  Map.Entry<String,Object> entry : memory.entrySet()) {\n    out.append(Util.rightPad(entry.getKey(),remoteLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n  }\n  out.append(\"\\n\");\n  out.append(\"-- Current Disk\\n\");\n  for (  Map.Entry<String,Object> entry : disk.entrySet()) {\n    out.append(Util.rightPad(entry.getKey(),diskLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n  }\n  out.append(\"\\n\");\n  out.append(\"-- Pending Disk\\n\");\n  for (  Map.Entry<String,Object> entry : pending.entrySet()) {\n    out.append(Util.rightPad(entry.getKey(),pendingLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n  }\n  out.append(\"\\n\");\n  out.append(\"-- Forced\\n\");\n  if (forced.isEmpty()) {\n    out.append(\"None\\n\");\n  }\n else {\n    for (    Map.Entry<String,Object> entry : forced.entrySet()) {\n      out.append(Util.rightPad(entry.getKey(),forcedLength)).append(\": \").append(entry.getValue()).append(\"\\n\");\n    }\n  }\n  return out;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 368,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Map<String,Object> disk=FeatureFlags.getDiskValues();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 25,
    "startColumnNumber" : 40,
    "endLineNumber" : 25,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}