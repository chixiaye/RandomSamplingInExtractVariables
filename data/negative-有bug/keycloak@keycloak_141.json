{
  "id" : 141,
  "expression" : "OIDCLoginProtocol",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/authz/PolicyEvaluationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "OIDCLoginProtocol",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 86,
      "startColumnNumber" : 40,
      "endLineNumber" : 86,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 86,
        "startColumnNumber" : 40,
        "endLineNumber" : 86,
        "endColumnNumber" : 72
      },
      "nodeContext" : "OIDCLoginProtocol.LOGIN_PROTOCOL",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 73
      },
      "nodeContext" : "groupProtocolMapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 74
      },
      "nodeContext" : "groupProtocolMapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3389,
        "startLineNumber" : 81,
        "startColumnNumber" : 68,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProtocolMapperRepresentation groupProtocolMapper=new ProtocolMapperRepresentation();\n  groupProtocolMapper.setName(\"groups\");\n  groupProtocolMapper.setProtocolMapper(GroupMembershipMapper.PROVIDER_ID);\n  groupProtocolMapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);\n  Map<String,String> config=new HashMap<>();\n  config.put(OIDCAttributeMapperHelper.TOKEN_CLAIM_NAME,\"groups\");\n  config.put(OIDCAttributeMapperHelper.INCLUDE_IN_ACCESS_TOKEN,\"true\");\n  config.put(OIDCAttributeMapperHelper.INCLUDE_IN_ID_TOKEN,\"true\");\n  config.put(\"full.path\",\"true\");\n  groupProtocolMapper.setConfig(config);\n  testRealms.add(RealmBuilder.create().name(\"authz-test\").roles(RolesBuilder.create().realmRole(RoleBuilder.create().name(\"uma_authorization\").build()).realmRole(RoleBuilder.create().name(\"role-a\").build()).realmRole(RoleBuilder.create().name(\"role-b\").build())).group(GroupBuilder.create().name(\"Group A\").subGroups(Arrays.asList(\"Group B\",\"Group D\").stream().map(name -> {\n    if (\"Group B\".equals(name)) {\n      return GroupBuilder.create().name(name).subGroups(Arrays.asList(\"Group C\",\"Group E\").stream().map(new Function<String,GroupRepresentation>(){\n        @Override public GroupRepresentation apply(        String name){\n          return GroupBuilder.create().name(name).build();\n        }\n      }\n).collect(Collectors.toList())).build();\n    }\n    return GroupBuilder.create().name(name).realmRoles(Arrays.asList(\"role-a\")).build();\n  }\n).collect(Collectors.toList())).build()).group(GroupBuilder.create().name(\"Group E\").build()).user(UserBuilder.create().username(\"marta\").password(\"password\").addRoles(\"uma_authorization\",\"role-a\").addGroups(\"Group A\")).user(UserBuilder.create().username(\"alice\").password(\"password\").addRoles(\"uma_authorization\").addGroups(\"/Group A/Group B/Group E\")).user(UserBuilder.create().username(\"kolo\").password(\"password\").addRoles(\"uma_authorization\").addGroups(\"/Group A/Group D\")).user(UserBuilder.create().username(\"trinity\").password(\"password\").addRoles(\"uma_authorization\").role(\"role-mapping-client\",\"client-role-a\")).user(UserBuilder.create().username(\"jdoe\").password(\"password\").addGroups(\"/Group A/Group B\",\"/Group A/Group D\")).client(ClientBuilder.create().clientId(\"resource-server-test\").secret(\"secret\").authorizationServicesEnabled(true).redirectUris(\"http://localhost/resource-server-test\").defaultRoles(\"uma_protection\").directAccessGrants().protocolMapper(groupProtocolMapper)).client(ClientBuilder.create().clientId(\"role-mapping-client\").defaultRoles(\"client-role-a\",\"client-role-b\")).build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 362,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3467,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void addTestRealms(List<RealmRepresentation> testRealms){\n  ProtocolMapperRepresentation groupProtocolMapper=new ProtocolMapperRepresentation();\n  groupProtocolMapper.setName(\"groups\");\n  groupProtocolMapper.setProtocolMapper(GroupMembershipMapper.PROVIDER_ID);\n  groupProtocolMapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);\n  Map<String,String> config=new HashMap<>();\n  config.put(OIDCAttributeMapperHelper.TOKEN_CLAIM_NAME,\"groups\");\n  config.put(OIDCAttributeMapperHelper.INCLUDE_IN_ACCESS_TOKEN,\"true\");\n  config.put(OIDCAttributeMapperHelper.INCLUDE_IN_ID_TOKEN,\"true\");\n  config.put(\"full.path\",\"true\");\n  groupProtocolMapper.setConfig(config);\n  testRealms.add(RealmBuilder.create().name(\"authz-test\").roles(RolesBuilder.create().realmRole(RoleBuilder.create().name(\"uma_authorization\").build()).realmRole(RoleBuilder.create().name(\"role-a\").build()).realmRole(RoleBuilder.create().name(\"role-b\").build())).group(GroupBuilder.create().name(\"Group A\").subGroups(Arrays.asList(\"Group B\",\"Group D\").stream().map(name -> {\n    if (\"Group B\".equals(name)) {\n      return GroupBuilder.create().name(name).subGroups(Arrays.asList(\"Group C\",\"Group E\").stream().map(new Function<String,GroupRepresentation>(){\n        @Override public GroupRepresentation apply(        String name){\n          return GroupBuilder.create().name(name).build();\n        }\n      }\n).collect(Collectors.toList())).build();\n    }\n    return GroupBuilder.create().name(name).realmRoles(Arrays.asList(\"role-a\")).build();\n  }\n).collect(Collectors.toList())).build()).group(GroupBuilder.create().name(\"Group E\").build()).user(UserBuilder.create().username(\"marta\").password(\"password\").addRoles(\"uma_authorization\",\"role-a\").addGroups(\"Group A\")).user(UserBuilder.create().username(\"alice\").password(\"password\").addRoles(\"uma_authorization\").addGroups(\"/Group A/Group B/Group E\")).user(UserBuilder.create().username(\"kolo\").password(\"password\").addRoles(\"uma_authorization\").addGroups(\"/Group A/Group D\")).user(UserBuilder.create().username(\"trinity\").password(\"password\").addRoles(\"uma_authorization\").role(\"role-mapping-client\",\"client-role-a\")).user(UserBuilder.create().username(\"jdoe\").password(\"password\").addGroups(\"/Group A/Group B\",\"/Group A/Group D\")).client(ClientBuilder.create().clientId(\"resource-server-test\").secret(\"secret\").authorizationServicesEnabled(true).redirectUris(\"http://localhost/resource-server-test\").defaultRoles(\"uma_protection\").directAccessGrants().protocolMapper(groupProtocolMapper)).client(ClientBuilder.create().clientId(\"role-mapping-client\").defaultRoles(\"client-role-a\",\"client-role-b\")).build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 375,
      "astHeight" : 36
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 74
      },
      "nodeContext" : "groupProtocolMapper.setProtocol(OIDCLoginProtocol.LOGIN_PROTOCOL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.protocol.oidc.OIDCLoginProtocol"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 86,
    "startColumnNumber" : 40,
    "endLineNumber" : 86,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}