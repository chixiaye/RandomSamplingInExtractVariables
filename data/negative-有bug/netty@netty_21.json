{
  "id" : 21,
  "expression" : "Cache",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/resolver-dns/src/main/java/io/netty/resolver/dns/Cache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Cache",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 296,
      "startColumnNumber" : 33,
      "endLineNumber" : 296,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 296,
        "startColumnNumber" : 33,
        "endLineNumber" : 296,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Cache.this",
      "nodeType" : "ThisExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 296,
        "startColumnNumber" : 33,
        "endLineNumber" : 296,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Cache.this.equals(e,entry)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 296,
        "startColumnNumber" : 32,
        "endLineNumber" : 296,
        "endColumnNumber" : 60
      },
      "nodeContext" : "!Cache.this.equals(e,entry)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 296,
        "startColumnNumber" : 28,
        "endLineNumber" : 307,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (!Cache.this.equals(e,entry)) {\n  newEntries.add(entry);\n}\n else {\n  replacedEntry=entry;\n  newEntries.add(e);\n  ++i;\n  for (; i < entries.size(); ++i) {\n    newEntries.add(entries.get(i));\n  }\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 291,
        "startColumnNumber" : 27,
        "endLineNumber" : 308,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  E entry=entries.get(i);\n  if (!Cache.this.equals(e,entry)) {\n    newEntries.add(entry);\n  }\n else {\n    replacedEntry=entry;\n    newEntries.add(e);\n    ++i;\n    for (; i < entries.size(); ++i) {\n      newEntries.add(entries.get(i));\n    }\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 998,
        "startLineNumber" : 291,
        "startColumnNumber" : 24,
        "endLineNumber" : 308,
        "endColumnNumber" : 55
      },
      "nodeContext" : "do {\n  E entry=entries.get(i);\n  if (!Cache.this.equals(e,entry)) {\n    newEntries.add(entry);\n  }\n else {\n    replacedEntry=entry;\n    newEntries.add(e);\n    ++i;\n    for (; i < entries.size(); ++i) {\n      newEntries.add(entries.get(i));\n    }\n    break;\n  }\n}\n while (++i < entries.size());\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 273,
        "startColumnNumber" : 44,
        "endLineNumber" : 318,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  final E firstEntry=entries.get(0);\n  if (shouldReplaceAll(firstEntry)) {\n    assert entries.size() == 1;\n    if (compareAndSet(entries,singletonList(e))) {\n      scheduleCacheExpirationIfNeeded(ttl,loop);\n      return;\n    }\n else {\n      continue;\n    }\n  }\n  List<E> newEntries=new ArrayList<>(entries.size() + 1);\n  int i=0;\n  E replacedEntry=null;\n  do {\n    E entry=entries.get(i);\n    if (!Cache.this.equals(e,entry)) {\n      newEntries.add(entry);\n    }\n else {\n      replacedEntry=entry;\n      newEntries.add(e);\n      ++i;\n      for (; i < entries.size(); ++i) {\n        newEntries.add(entries.get(i));\n      }\n      break;\n    }\n  }\n while (++i < entries.size());\n  if (replacedEntry == null) {\n    newEntries.add(e);\n  }\n  sortEntries(hostname,newEntries);\n  if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n    scheduleCacheExpirationIfNeeded(ttl,loop);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2493,
        "startLineNumber" : 273,
        "startColumnNumber" : 20,
        "endLineNumber" : 321,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!entries.isEmpty()) {\n  final E firstEntry=entries.get(0);\n  if (shouldReplaceAll(firstEntry)) {\n    assert entries.size() == 1;\n    if (compareAndSet(entries,singletonList(e))) {\n      scheduleCacheExpirationIfNeeded(ttl,loop);\n      return;\n    }\n else {\n      continue;\n    }\n  }\n  List<E> newEntries=new ArrayList<>(entries.size() + 1);\n  int i=0;\n  E replacedEntry=null;\n  do {\n    E entry=entries.get(i);\n    if (!Cache.this.equals(e,entry)) {\n      newEntries.add(entry);\n    }\n else {\n      replacedEntry=entry;\n      newEntries.add(e);\n      ++i;\n      for (; i < entries.size(); ++i) {\n        newEntries.add(entries.get(i));\n      }\n      break;\n    }\n  }\n while (++i < entries.size());\n  if (replacedEntry == null) {\n    newEntries.add(e);\n  }\n  sortEntries(hostname,newEntries);\n  if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n    scheduleCacheExpirationIfNeeded(ttl,loop);\n    return;\n  }\n}\n else if (compareAndSet(entries,singletonList(e))) {\n  scheduleCacheExpirationIfNeeded(ttl,loop);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 271,
        "startColumnNumber" : 25,
        "endLineNumber" : 322,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  List<E> entries=get();\n  if (!entries.isEmpty()) {\n    final E firstEntry=entries.get(0);\n    if (shouldReplaceAll(firstEntry)) {\n      assert entries.size() == 1;\n      if (compareAndSet(entries,singletonList(e))) {\n        scheduleCacheExpirationIfNeeded(ttl,loop);\n        return;\n      }\n else {\n        continue;\n      }\n    }\n    List<E> newEntries=new ArrayList<>(entries.size() + 1);\n    int i=0;\n    E replacedEntry=null;\n    do {\n      E entry=entries.get(i);\n      if (!Cache.this.equals(e,entry)) {\n        newEntries.add(entry);\n      }\n else {\n        replacedEntry=entry;\n        newEntries.add(e);\n        ++i;\n        for (; i < entries.size(); ++i) {\n          newEntries.add(entries.get(i));\n        }\n        break;\n      }\n    }\n while (++i < entries.size());\n    if (replacedEntry == null) {\n      newEntries.add(e);\n    }\n    sortEntries(hostname,newEntries);\n    if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n      scheduleCacheExpirationIfNeeded(ttl,loop);\n      return;\n    }\n  }\n else   if (compareAndSet(entries,singletonList(e))) {\n    scheduleCacheExpirationIfNeeded(ttl,loop);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2590,
        "startLineNumber" : 271,
        "startColumnNumber" : 16,
        "endLineNumber" : 322,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (; ; ) {\n  List<E> entries=get();\n  if (!entries.isEmpty()) {\n    final E firstEntry=entries.get(0);\n    if (shouldReplaceAll(firstEntry)) {\n      assert entries.size() == 1;\n      if (compareAndSet(entries,singletonList(e))) {\n        scheduleCacheExpirationIfNeeded(ttl,loop);\n        return;\n      }\n else {\n        continue;\n      }\n    }\n    List<E> newEntries=new ArrayList<>(entries.size() + 1);\n    int i=0;\n    E replacedEntry=null;\n    do {\n      E entry=entries.get(i);\n      if (!Cache.this.equals(e,entry)) {\n        newEntries.add(entry);\n      }\n else {\n        replacedEntry=entry;\n        newEntries.add(e);\n        ++i;\n        for (; i < entries.size(); ++i) {\n          newEntries.add(entries.get(i));\n        }\n        break;\n      }\n    }\n while (++i < entries.size());\n    if (replacedEntry == null) {\n      newEntries.add(e);\n    }\n    sortEntries(hostname,newEntries);\n    if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n      scheduleCacheExpirationIfNeeded(ttl,loop);\n      return;\n    }\n  }\n else   if (compareAndSet(entries,singletonList(e))) {\n    scheduleCacheExpirationIfNeeded(ttl,loop);\n    return;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 189,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2624,
        "startLineNumber" : 270,
        "startColumnNumber" : 38,
        "endLineNumber" : 323,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (; ; ) {\n    List<E> entries=get();\n    if (!entries.isEmpty()) {\n      final E firstEntry=entries.get(0);\n      if (shouldReplaceAll(firstEntry)) {\n        assert entries.size() == 1;\n        if (compareAndSet(entries,singletonList(e))) {\n          scheduleCacheExpirationIfNeeded(ttl,loop);\n          return;\n        }\n else {\n          continue;\n        }\n      }\n      List<E> newEntries=new ArrayList<>(entries.size() + 1);\n      int i=0;\n      E replacedEntry=null;\n      do {\n        E entry=entries.get(i);\n        if (!Cache.this.equals(e,entry)) {\n          newEntries.add(entry);\n        }\n else {\n          replacedEntry=entry;\n          newEntries.add(e);\n          ++i;\n          for (; i < entries.size(); ++i) {\n            newEntries.add(entries.get(i));\n          }\n          break;\n        }\n      }\n while (++i < entries.size());\n      if (replacedEntry == null) {\n        newEntries.add(e);\n      }\n      sortEntries(hostname,newEntries);\n      if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n        scheduleCacheExpirationIfNeeded(ttl,loop);\n        return;\n      }\n    }\n else     if (compareAndSet(entries,singletonList(e))) {\n      scheduleCacheExpirationIfNeeded(ttl,loop);\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 270,
        "startColumnNumber" : 12,
        "endLineNumber" : 326,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!shouldReplaceAll(e)) {\n  for (; ; ) {\n    List<E> entries=get();\n    if (!entries.isEmpty()) {\n      final E firstEntry=entries.get(0);\n      if (shouldReplaceAll(firstEntry)) {\n        assert entries.size() == 1;\n        if (compareAndSet(entries,singletonList(e))) {\n          scheduleCacheExpirationIfNeeded(ttl,loop);\n          return;\n        }\n else {\n          continue;\n        }\n      }\n      List<E> newEntries=new ArrayList<>(entries.size() + 1);\n      int i=0;\n      E replacedEntry=null;\n      do {\n        E entry=entries.get(i);\n        if (!Cache.this.equals(e,entry)) {\n          newEntries.add(entry);\n        }\n else {\n          replacedEntry=entry;\n          newEntries.add(e);\n          ++i;\n          for (; i < entries.size(); ++i) {\n            newEntries.add(entries.get(i));\n          }\n          break;\n        }\n      }\n while (++i < entries.size());\n      if (replacedEntry == null) {\n        newEntries.add(e);\n      }\n      sortEntries(hostname,newEntries);\n      if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n        scheduleCacheExpirationIfNeeded(ttl,loop);\n        return;\n      }\n    }\n else     if (compareAndSet(entries,singletonList(e))) {\n      scheduleCacheExpirationIfNeeded(ttl,loop);\n      return;\n    }\n  }\n}\n else {\n  set(singletonList(e));\n  scheduleCacheExpirationIfNeeded(ttl,loop);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 207,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2799,
        "startLineNumber" : 269,
        "startColumnNumber" : 47,
        "endLineNumber" : 327,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!shouldReplaceAll(e)) {\n    for (; ; ) {\n      List<E> entries=get();\n      if (!entries.isEmpty()) {\n        final E firstEntry=entries.get(0);\n        if (shouldReplaceAll(firstEntry)) {\n          assert entries.size() == 1;\n          if (compareAndSet(entries,singletonList(e))) {\n            scheduleCacheExpirationIfNeeded(ttl,loop);\n            return;\n          }\n else {\n            continue;\n          }\n        }\n        List<E> newEntries=new ArrayList<>(entries.size() + 1);\n        int i=0;\n        E replacedEntry=null;\n        do {\n          E entry=entries.get(i);\n          if (!Cache.this.equals(e,entry)) {\n            newEntries.add(entry);\n          }\n else {\n            replacedEntry=entry;\n            newEntries.add(e);\n            ++i;\n            for (; i < entries.size(); ++i) {\n              newEntries.add(entries.get(i));\n            }\n            break;\n          }\n        }\n while (++i < entries.size());\n        if (replacedEntry == null) {\n          newEntries.add(e);\n        }\n        sortEntries(hostname,newEntries);\n        if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n          scheduleCacheExpirationIfNeeded(ttl,loop);\n          return;\n        }\n      }\n else       if (compareAndSet(entries,singletonList(e))) {\n        scheduleCacheExpirationIfNeeded(ttl,loop);\n        return;\n      }\n    }\n  }\n else {\n    set(singletonList(e));\n    scheduleCacheExpirationIfNeeded(ttl,loop);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2838,
        "startLineNumber" : 269,
        "startColumnNumber" : 8,
        "endLineNumber" : 327,
        "endColumnNumber" : 9
      },
      "nodeContext" : "void add(E e,int ttl,EventLoop loop){\n  if (!shouldReplaceAll(e)) {\n    for (; ; ) {\n      List<E> entries=get();\n      if (!entries.isEmpty()) {\n        final E firstEntry=entries.get(0);\n        if (shouldReplaceAll(firstEntry)) {\n          assert entries.size() == 1;\n          if (compareAndSet(entries,singletonList(e))) {\n            scheduleCacheExpirationIfNeeded(ttl,loop);\n            return;\n          }\n else {\n            continue;\n          }\n        }\n        List<E> newEntries=new ArrayList<>(entries.size() + 1);\n        int i=0;\n        E replacedEntry=null;\n        do {\n          E entry=entries.get(i);\n          if (!Cache.this.equals(e,entry)) {\n            newEntries.add(entry);\n          }\n else {\n            replacedEntry=entry;\n            newEntries.add(e);\n            ++i;\n            for (; i < entries.size(); ++i) {\n              newEntries.add(entries.get(i));\n            }\n            break;\n          }\n        }\n while (++i < entries.size());\n        if (replacedEntry == null) {\n          newEntries.add(e);\n        }\n        sortEntries(hostname,newEntries);\n        if (compareAndSet(entries,Collections.unmodifiableList(newEntries))) {\n          scheduleCacheExpirationIfNeeded(ttl,loop);\n          return;\n        }\n      }\n else       if (compareAndSet(entries,singletonList(e))) {\n        scheduleCacheExpirationIfNeeded(ttl,loop);\n        return;\n      }\n    }\n  }\n else {\n    set(singletonList(e));\n    scheduleCacheExpirationIfNeeded(ttl,loop);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 296,
        "startColumnNumber" : 32,
        "endLineNumber" : 296,
        "endColumnNumber" : 60
      },
      "nodeContext" : "!Cache.this.equals(e,entry)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.resolver.dns.Cache"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 296,
    "startColumnNumber" : 33,
    "endLineNumber" : 296,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}