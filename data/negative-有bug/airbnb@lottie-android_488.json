{
  "id" : 488,
  "expression" : "cp2",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/MiscUtils.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cp2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 23,
      "startColumnNumber" : 38,
      "endLineNumber" : 23,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 23,
        "startColumnNumber" : 38,
        "endLineNumber" : 23,
        "endColumnNumber" : 56
      },
      "nodeContext" : "cp2.equals(vertex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 23,
        "startColumnNumber" : 10,
        "endLineNumber" : 23,
        "endColumnNumber" : 56
      },
      "nodeContext" : "cp1.equals(currentPoint) && cp2.equals(vertex)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 23,
        "startColumnNumber" : 6,
        "endLineNumber" : 33,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n  outPath.lineTo(vertex.x,vertex.y);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 17,
        "startColumnNumber" : 59,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF vertex=curveData.getVertex();\n  if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n    outPath.lineTo(vertex.x,vertex.y);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n  }\n  currentPoint.set(vertex.x,vertex.y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF vertex=curveData.getVertex();\n  if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n    outPath.lineTo(vertex.x,vertex.y);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n  }\n  currentPoint.set(vertex.x,vertex.y);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  PointF currentPoint=new PointF(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF vertex=curveData.getVertex();\n    if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n      outPath.lineTo(vertex.x,vertex.y);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n    }\n    currentPoint.set(vertex.x,vertex.y);\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  PointF currentPoint=new PointF(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF vertex=curveData.getVertex();\n    if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n      outPath.lineTo(vertex.x,vertex.y);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n    }\n    currentPoint.set(vertex.x,vertex.y);\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 23,
        "startColumnNumber" : 10,
        "endLineNumber" : 23,
        "endColumnNumber" : 56
      },
      "nodeContext" : "cp1.equals(currentPoint) && cp2.equals(vertex)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.airbnb.lottie.PointF"
  }, {
    "nodeContext" : "cp2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 32,
      "startColumnNumber" : 38,
      "endLineNumber" : 32,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 32,
        "startColumnNumber" : 38,
        "endLineNumber" : 32,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cp2.x",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 71
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 72
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 31,
        "startColumnNumber" : 13,
        "endLineNumber" : 33,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 23,
        "startColumnNumber" : 6,
        "endLineNumber" : 33,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n  outPath.lineTo(vertex.x,vertex.y);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 17,
        "startColumnNumber" : 59,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF vertex=curveData.getVertex();\n  if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n    outPath.lineTo(vertex.x,vertex.y);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n  }\n  currentPoint.set(vertex.x,vertex.y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF vertex=curveData.getVertex();\n  if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n    outPath.lineTo(vertex.x,vertex.y);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n  }\n  currentPoint.set(vertex.x,vertex.y);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  PointF currentPoint=new PointF(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF vertex=curveData.getVertex();\n    if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n      outPath.lineTo(vertex.x,vertex.y);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n    }\n    currentPoint.set(vertex.x,vertex.y);\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  PointF currentPoint=new PointF(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF vertex=curveData.getVertex();\n    if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n      outPath.lineTo(vertex.x,vertex.y);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n    }\n    currentPoint.set(vertex.x,vertex.y);\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 72
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "cp2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 32,
      "startColumnNumber" : 45,
      "endLineNumber" : 32,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 32,
        "startColumnNumber" : 45,
        "endLineNumber" : 32,
        "endColumnNumber" : 50
      },
      "nodeContext" : "cp2.y",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 71
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 72
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 31,
        "startColumnNumber" : 13,
        "endLineNumber" : 33,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 23,
        "startColumnNumber" : 6,
        "endLineNumber" : 33,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n  outPath.lineTo(vertex.x,vertex.y);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 17,
        "startColumnNumber" : 59,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF vertex=curveData.getVertex();\n  if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n    outPath.lineTo(vertex.x,vertex.y);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n  }\n  currentPoint.set(vertex.x,vertex.y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF vertex=curveData.getVertex();\n  if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n    outPath.lineTo(vertex.x,vertex.y);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n  }\n  currentPoint.set(vertex.x,vertex.y);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  PointF currentPoint=new PointF(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF vertex=curveData.getVertex();\n    if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n      outPath.lineTo(vertex.x,vertex.y);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n    }\n    currentPoint.set(vertex.x,vertex.y);\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  PointF currentPoint=new PointF(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF vertex=curveData.getVertex();\n    if (cp1.equals(currentPoint) && cp2.equals(vertex)) {\n      outPath.lineTo(vertex.x,vertex.y);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n    }\n    currentPoint.set(vertex.x,vertex.y);\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 72
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,vertex.x,vertex.y);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 23,
    "startColumnNumber" : 38,
    "endLineNumber" : 23,
    "endColumnNumber" : 41
  }, {
    "charLength" : 3,
    "startLineNumber" : 32,
    "startColumnNumber" : 38,
    "endLineNumber" : 32,
    "endColumnNumber" : 41
  }, {
    "charLength" : 3,
    "startLineNumber" : 32,
    "startColumnNumber" : 45,
    "endLineNumber" : 32,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}