{
  "id" : 215,
  "expression" : "LAST_VERTEX",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/test/java/com/google/android/exoplayer2/video/spherical/ProjectionDecoderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "LAST_VERTEX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 80,
      "startColumnNumber" : 19,
      "endLineNumber" : 80,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 77
      },
      "nodeContext" : "testCoordinate(LAST_VERTEX,vertices,VERTEX_COUNT * 3 - 3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 78
      },
      "nodeContext" : "testCoordinate(LAST_VERTEX,vertices,VERTEX_COUNT * 3 - 3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 66,
        "startColumnNumber" : 60,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(leftMesh.getSubMeshCount()).isEqualTo(1);\n  Projection.SubMesh subMesh=leftMesh.getSubMesh(0);\n  assertThat(subMesh.mode).isEqualTo(Projection.DRAW_MODE_TRIANGLES);\n  float[] vertices=subMesh.vertices;\n  float[] uv=subMesh.textureCoords;\n  assertThat(vertices.length).isEqualTo(VERTEX_COUNT * 3);\n  assertThat(subMesh.textureCoords.length).isEqualTo(VERTEX_COUNT * 2);\n  testCoordinate(FIRST_VERTEX,vertices,0);\n  testCoordinate(LAST_VERTEX,vertices,VERTEX_COUNT * 3 - 3);\n  testCoordinate(FIRST_UV,uv,0);\n  testCoordinate(LAST_UV,uv,VERTEX_COUNT * 2 - 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 897,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Tests the that SubMesh (mesh with the video) contains expected data. \n */\nprivate static void testSubMesh(Projection.Mesh leftMesh){\n  assertThat(leftMesh.getSubMeshCount()).isEqualTo(1);\n  Projection.SubMesh subMesh=leftMesh.getSubMesh(0);\n  assertThat(subMesh.mode).isEqualTo(Projection.DRAW_MODE_TRIANGLES);\n  float[] vertices=subMesh.vertices;\n  float[] uv=subMesh.textureCoords;\n  assertThat(vertices.length).isEqualTo(VERTEX_COUNT * 3);\n  assertThat(subMesh.textureCoords.length).isEqualTo(VERTEX_COUNT * 2);\n  testCoordinate(FIRST_VERTEX,vertices,0);\n  testCoordinate(LAST_VERTEX,vertices,VERTEX_COUNT * 3 - 3);\n  testCoordinate(FIRST_UV,uv,0);\n  testCoordinate(LAST_UV,uv,VERTEX_COUNT * 2 - 2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 78
      },
      "nodeContext" : "testCoordinate(LAST_VERTEX,vertices,VERTEX_COUNT * 3 - 3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float[]"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 80,
    "startColumnNumber" : 19,
    "endLineNumber" : 80,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}