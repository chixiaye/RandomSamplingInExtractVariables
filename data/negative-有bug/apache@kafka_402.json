{
  "id" : 402,
  "expression" : "CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create())",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/record/CompressionTypeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 110,
      "startLineNumber" : 55,
      "startColumnNumber" : 65,
      "endLineNumber" : 56,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 12,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 55,
        "startColumnNumber" : 38,
        "endLineNumber" : 56,
        "endColumnNumber" : 76
      },
      "nodeContext" : "(KafkaLZ4BlockInputStream)CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create())",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 55,
        "startColumnNumber" : 33,
        "endLineNumber" : 56,
        "endColumnNumber" : 76
      },
      "nodeContext" : "in=(KafkaLZ4BlockInputStream)CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 77
      },
      "nodeContext" : "KafkaLZ4BlockInputStream in=(KafkaLZ4BlockInputStream)CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 47,
        "startColumnNumber" : 40,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ByteBuffer buffer=ByteBuffer.allocate(256);\n  KafkaLZ4BlockOutputStream out=(KafkaLZ4BlockOutputStream)CompressionType.LZ4.wrapForOutput(new ByteBufferOutputStream(buffer),RecordBatch.MAGIC_VALUE_V1);\n  assertFalse(out.useBrokenFlagDescriptorChecksum());\n  buffer.rewind();\n  KafkaLZ4BlockInputStream in=(KafkaLZ4BlockInputStream)CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create());\n  assertFalse(in.ignoreFlagDescriptorChecksum());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testLZ4FramingMagicV1(){\n  ByteBuffer buffer=ByteBuffer.allocate(256);\n  KafkaLZ4BlockOutputStream out=(KafkaLZ4BlockOutputStream)CompressionType.LZ4.wrapForOutput(new ByteBufferOutputStream(buffer),RecordBatch.MAGIC_VALUE_V1);\n  assertFalse(out.useBrokenFlagDescriptorChecksum());\n  buffer.rewind();\n  KafkaLZ4BlockInputStream in=(KafkaLZ4BlockInputStream)CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create());\n  assertFalse(in.ignoreFlagDescriptorChecksum());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 77
      },
      "nodeContext" : "KafkaLZ4BlockInputStream in=(KafkaLZ4BlockInputStream)CompressionType.LZ4.wrapForInput(buffer,RecordBatch.MAGIC_VALUE_V1,BufferSupplier.create());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 10,
    "type" : "java.io.InputStream"
  } ],
  "positionList" : [ {
    "charLength" : 110,
    "startLineNumber" : 55,
    "startColumnNumber" : 65,
    "endLineNumber" : 56,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}