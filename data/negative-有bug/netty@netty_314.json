{
  "id" : 314,
  "expression" : "haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor())",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/test/java/io/netty/buffer/search/SearchProcessorTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 74,
      "startLineNumber" : 128,
      "startColumnNumber" : 36,
      "endLineNumber" : 128,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 119,
        "startColumnNumber" : 52,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @EnumSource(Algorithm.class) public void testLongInputs(Algorithm algorithm){\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "int"
  }, {
    "nodeContext" : "haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 74,
      "startLineNumber" : 131,
      "startColumnNumber" : 38,
      "endLineNumber" : 131,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 113
      },
      "nodeContext" : "assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 119,
        "startColumnNumber" : 52,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @EnumSource(Algorithm.class) public void testLongInputs(Algorithm algorithm){\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "int"
  }, {
    "nodeContext" : "haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 74,
      "startLineNumber" : 134,
      "startColumnNumber" : 25,
      "endLineNumber" : 134,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 119,
        "startColumnNumber" : 52,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @EnumSource(Algorithm.class) public void testLongInputs(Algorithm algorithm){\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "int"
  }, {
    "nodeContext" : "haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 74,
      "startLineNumber" : 138,
      "startColumnNumber" : 25,
      "endLineNumber" : 138,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 119,
        "startColumnNumber" : 52,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest @EnumSource(Algorithm.class) public void testLongInputs(Algorithm algorithm){\n  final int haystackLen=1024;\n  final int needleLen=64;\n  final byte[] haystackBytes=new byte[haystackLen];\n  haystackBytes[haystackLen - 1]=1;\n  final ByteBuf haystack=Unpooled.copiedBuffer(haystackBytes);\n  final byte[] needleBytes=new byte[needleLen];\n  assertEquals(needleLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=1;\n  assertEquals(haystackLen - 1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=2;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n  needleBytes[needleLen - 1]=0;\n  needleBytes[0]=1;\n  assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertEquals(-1,haystack.forEachByte(factory(algorithm,needleBytes).newSearchProcessor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 74,
    "startLineNumber" : 128,
    "startColumnNumber" : 36,
    "endLineNumber" : 128,
    "endColumnNumber" : 110
  }, {
    "charLength" : 74,
    "startLineNumber" : 131,
    "startColumnNumber" : 38,
    "endLineNumber" : 131,
    "endColumnNumber" : 112
  }, {
    "charLength" : 74,
    "startLineNumber" : 134,
    "startColumnNumber" : 25,
    "endLineNumber" : 134,
    "endColumnNumber" : 99
  }, {
    "charLength" : 74,
    "startLineNumber" : 138,
    "startColumnNumber" : 25,
    "endLineNumber" : 138,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}