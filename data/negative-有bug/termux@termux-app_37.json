{
  "id" : 37,
  "expression" : "Assert",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/test/java/com/termux/app/api/file/FileReceiverActivityTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 24,
      "startColumnNumber" : 12,
      "endLineNumber" : 24,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 23,
        "startColumnNumber" : 37,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String url : validUrls) {\n  Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 17,
        "startColumnNumber" : 40,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> validUrls=new ArrayList<>();\n  validUrls.add(\"http://example.com\");\n  validUrls.add(\"https://example.com\");\n  validUrls.add(\"https://example.com/path/parameter=foo\");\n  validUrls.add(\"magnet:?xt=urn:btih:d540fc48eb12f2833163eed6421d449dd8f1ce1f&dn=Ubuntu+desktop+19.04+%2864bit%29&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80&tr=udp%3A%2F%2Ftracker.ccc.de%3A80\");\n  for (  String url : validUrls) {\n    Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n  List<String> invalidUrls=new ArrayList<>();\n  invalidUrls.add(\"a test with example.com\");\n  for (  String url : invalidUrls) {\n    Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testIsSharedTextAnUrl(){\n  List<String> validUrls=new ArrayList<>();\n  validUrls.add(\"http://example.com\");\n  validUrls.add(\"https://example.com\");\n  validUrls.add(\"https://example.com/path/parameter=foo\");\n  validUrls.add(\"magnet:?xt=urn:btih:d540fc48eb12f2833163eed6421d449dd8f1ce1f&dn=Ubuntu+desktop+19.04+%2864bit%29&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80&tr=udp%3A%2F%2Ftracker.ccc.de%3A80\");\n  for (  String url : validUrls) {\n    Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n  List<String> invalidUrls=new ArrayList<>();\n  invalidUrls.add(\"a test with example.com\");\n  for (  String url : invalidUrls) {\n    Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 30,
      "startColumnNumber" : 12,
      "endLineNumber" : 30,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 29,
        "startColumnNumber" : 39,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String url : invalidUrls) {\n  Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 17,
        "startColumnNumber" : 40,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> validUrls=new ArrayList<>();\n  validUrls.add(\"http://example.com\");\n  validUrls.add(\"https://example.com\");\n  validUrls.add(\"https://example.com/path/parameter=foo\");\n  validUrls.add(\"magnet:?xt=urn:btih:d540fc48eb12f2833163eed6421d449dd8f1ce1f&dn=Ubuntu+desktop+19.04+%2864bit%29&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80&tr=udp%3A%2F%2Ftracker.ccc.de%3A80\");\n  for (  String url : validUrls) {\n    Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n  List<String> invalidUrls=new ArrayList<>();\n  invalidUrls.add(\"a test with example.com\");\n  for (  String url : invalidUrls) {\n    Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testIsSharedTextAnUrl(){\n  List<String> validUrls=new ArrayList<>();\n  validUrls.add(\"http://example.com\");\n  validUrls.add(\"https://example.com\");\n  validUrls.add(\"https://example.com/path/parameter=foo\");\n  validUrls.add(\"magnet:?xt=urn:btih:d540fc48eb12f2833163eed6421d449dd8f1ce1f&dn=Ubuntu+desktop+19.04+%2864bit%29&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Ftracker.publicbt.com%3A80&tr=udp%3A%2F%2Ftracker.ccc.de%3A80\");\n  for (  String url : validUrls) {\n    Assert.assertTrue(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n  List<String> invalidUrls=new ArrayList<>();\n  invalidUrls.add(\"a test with example.com\");\n  for (  String url : invalidUrls) {\n    Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertFalse(FileReceiverActivity.isSharedTextAnUrl(url));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 24,
    "startColumnNumber" : 12,
    "endLineNumber" : 24,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 30,
    "startColumnNumber" : 12,
    "endLineNumber" : 30,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}