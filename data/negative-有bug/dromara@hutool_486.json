{
  "id" : 486,
  "expression" : "new ArrayList<>(0)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/text/StrSpliter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ArrayList<>(0)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 152,
      "startColumnNumber" : 10,
      "endLineNumber" : 152,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 152,
        "startColumnNumber" : 3,
        "endLineNumber" : 152,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return new ArrayList<>(0);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 151,
        "startColumnNumber" : 26,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return new ArrayList<>(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 151,
        "startColumnNumber" : 2,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (StrUtil.isEmpty(str)) {\n  return new ArrayList<>(0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 150,
        "startColumnNumber" : 129,
        "endLineNumber" : 173,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (StrUtil.isEmpty(str)) {\n    return new ArrayList<>(0);\n  }\n  if (limit == 1) {\n    return addToList(new ArrayList<>(1),str,isTrim,ignoreEmpty);\n  }\n  final ArrayList<String> list=new ArrayList<>(limit > 0 ? limit : 16);\n  int len=str.length();\n  int start=0;\n  for (int i=0; i < len; i++) {\n    if (NumberUtil.equals(separator,str.charAt(i),ignoreCase)) {\n      addToList(list,str.substring(start,i),isTrim,ignoreEmpty);\n      start=i + 1;\n      if (limit > 0 && list.size() > limit - 2) {\n        break;\n      }\n    }\n  }\n  return addToList(list,str.substring(start,len),isTrim,ignoreEmpty);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 138,
        "startColumnNumber" : 1,
        "endLineNumber" : 173,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 切分字符串\n * @param str 被切分的字符串\n * @param separator 分隔符字符\n * @param limit 限制分片数，-1不限制\n * @param isTrim 是否去除切分字符串后每个元素两边的空格\n * @param ignoreEmpty 是否忽略空串\n * @param ignoreCase 是否忽略大小写\n * @return 切分后的集合\n * @since 3.2.1\n */\npublic static List<String> split(String str,char separator,int limit,boolean isTrim,boolean ignoreEmpty,boolean ignoreCase){\n  if (StrUtil.isEmpty(str)) {\n    return new ArrayList<>(0);\n  }\n  if (limit == 1) {\n    return addToList(new ArrayList<>(1),str,isTrim,ignoreEmpty);\n  }\n  final ArrayList<String> list=new ArrayList<>(limit > 0 ? limit : 16);\n  int len=str.length();\n  int start=0;\n  for (int i=0; i < len; i++) {\n    if (NumberUtil.equals(separator,str.charAt(i),ignoreCase)) {\n      addToList(list,str.substring(start,i),isTrim,ignoreEmpty);\n      start=i + 1;\n      if (limit > 0 && list.size() > limit - 2) {\n        break;\n      }\n    }\n  }\n  return addToList(list,str.substring(start,len),isTrim,ignoreEmpty);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 152,
        "startColumnNumber" : 3,
        "endLineNumber" : 152,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return new ArrayList<>(0);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.ArrayList<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 152,
    "startColumnNumber" : 10,
    "endLineNumber" : 152,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}