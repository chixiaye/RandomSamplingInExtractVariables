{
  "id" : 131,
  "expression" : "5",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientConnectionsShutdown.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 145,
      "startColumnNumber" : 39,
      "endLineNumber" : 145,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 59
      },
      "nodeContext" : "combinedClosePromise.await(5,TimeUnit.SECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 60
      },
      "nodeContext" : "combinedClosePromise.await(5,TimeUnit.SECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1946,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.warn(\"Flagging CLOSE_AFTER_RESPONSE on \" + channels.size() + \" client channels.\");\n  PromiseCombiner closeAfterPromises=new PromiseCombiner();\n  for (  Channel channel : channels) {\n    ConnectionCloseType.setForChannel(channel,ConnectionCloseType.DELAYED_GRACEFUL);\n    ChannelPromise closePromise=channel.pipeline().newPromise();\n    channel.attr(ConnectionCloseChannelAttributes.CLOSE_AFTER_RESPONSE).set(closePromise);\n    closeAfterPromises.add(closePromise);\n  }\n  Promise combinedCloseAfterPromise=executor.newPromise();\n  closeAfterPromises.finish(combinedCloseAfterPromise);\n  combinedCloseAfterPromise.await(30,TimeUnit.SECONDS);\n  LOG.warn(\"Closing remaining active client channels.\");\n  List<ChannelFuture> forceCloseFutures=new ArrayList<>();\n  channels.forEach(channel -> {\n    if (channel.isActive()) {\n      ChannelFuture f=channel.pipeline().close();\n      forceCloseFutures.add(f);\n    }\n  }\n);\n  LOG.warn(\"Waiting for \" + forceCloseFutures.size() + \" client channels to be closed.\");\n  PromiseCombiner closePromisesCombiner=new PromiseCombiner();\n  closePromisesCombiner.addAll(forceCloseFutures.toArray(new ChannelFuture[0]));\n  Promise combinedClosePromise=executor.newPromise();\n  closePromisesCombiner.finish(combinedClosePromise);\n  combinedClosePromise.await(5,TimeUnit.SECONDS);\n  LOG.warn(forceCloseFutures.size() + \" client channels closed.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2075,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.warn(\"Flagging CLOSE_AFTER_RESPONSE on \" + channels.size() + \" client channels.\");\n  PromiseCombiner closeAfterPromises=new PromiseCombiner();\n  for (  Channel channel : channels) {\n    ConnectionCloseType.setForChannel(channel,ConnectionCloseType.DELAYED_GRACEFUL);\n    ChannelPromise closePromise=channel.pipeline().newPromise();\n    channel.attr(ConnectionCloseChannelAttributes.CLOSE_AFTER_RESPONSE).set(closePromise);\n    closeAfterPromises.add(closePromise);\n  }\n  Promise combinedCloseAfterPromise=executor.newPromise();\n  closeAfterPromises.finish(combinedCloseAfterPromise);\n  combinedCloseAfterPromise.await(30,TimeUnit.SECONDS);\n  LOG.warn(\"Closing remaining active client channels.\");\n  List<ChannelFuture> forceCloseFutures=new ArrayList<>();\n  channels.forEach(channel -> {\n    if (channel.isActive()) {\n      ChannelFuture f=channel.pipeline().close();\n      forceCloseFutures.add(f);\n    }\n  }\n);\n  LOG.warn(\"Waiting for \" + forceCloseFutures.size() + \" client channels to be closed.\");\n  PromiseCombiner closePromisesCombiner=new PromiseCombiner();\n  closePromisesCombiner.addAll(forceCloseFutures.toArray(new ChannelFuture[0]));\n  Promise combinedClosePromise=executor.newPromise();\n  closePromisesCombiner.finish(combinedClosePromise);\n  combinedClosePromise.await(5,TimeUnit.SECONDS);\n  LOG.warn(forceCloseFutures.size() + \" client channels closed.\");\n}\n catch (InterruptedException ie) {\n  LOG.warn(\"Interrupted while shutting down client channels\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 198,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2157,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.warn(\"Gracefully shutting down all client channels\");\n  try {\n    LOG.warn(\"Flagging CLOSE_AFTER_RESPONSE on \" + channels.size() + \" client channels.\");\n    PromiseCombiner closeAfterPromises=new PromiseCombiner();\n    for (    Channel channel : channels) {\n      ConnectionCloseType.setForChannel(channel,ConnectionCloseType.DELAYED_GRACEFUL);\n      ChannelPromise closePromise=channel.pipeline().newPromise();\n      channel.attr(ConnectionCloseChannelAttributes.CLOSE_AFTER_RESPONSE).set(closePromise);\n      closeAfterPromises.add(closePromise);\n    }\n    Promise combinedCloseAfterPromise=executor.newPromise();\n    closeAfterPromises.finish(combinedCloseAfterPromise);\n    combinedCloseAfterPromise.await(30,TimeUnit.SECONDS);\n    LOG.warn(\"Closing remaining active client channels.\");\n    List<ChannelFuture> forceCloseFutures=new ArrayList<>();\n    channels.forEach(channel -> {\n      if (channel.isActive()) {\n        ChannelFuture f=channel.pipeline().close();\n        forceCloseFutures.add(f);\n      }\n    }\n);\n    LOG.warn(\"Waiting for \" + forceCloseFutures.size() + \" client channels to be closed.\");\n    PromiseCombiner closePromisesCombiner=new PromiseCombiner();\n    closePromisesCombiner.addAll(forceCloseFutures.toArray(new ChannelFuture[0]));\n    Promise combinedClosePromise=executor.newPromise();\n    closePromisesCombiner.finish(combinedClosePromise);\n    combinedClosePromise.await(5,TimeUnit.SECONDS);\n    LOG.warn(forceCloseFutures.size() + \" client channels closed.\");\n  }\n catch (  InterruptedException ie) {\n    LOG.warn(\"Interrupted while shutting down client channels\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2294,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Note this blocks until all the channels have finished closing.\n */\npublic void gracefullyShutdownClientChannels(){\n  LOG.warn(\"Gracefully shutting down all client channels\");\n  try {\n    LOG.warn(\"Flagging CLOSE_AFTER_RESPONSE on \" + channels.size() + \" client channels.\");\n    PromiseCombiner closeAfterPromises=new PromiseCombiner();\n    for (    Channel channel : channels) {\n      ConnectionCloseType.setForChannel(channel,ConnectionCloseType.DELAYED_GRACEFUL);\n      ChannelPromise closePromise=channel.pipeline().newPromise();\n      channel.attr(ConnectionCloseChannelAttributes.CLOSE_AFTER_RESPONSE).set(closePromise);\n      closeAfterPromises.add(closePromise);\n    }\n    Promise combinedCloseAfterPromise=executor.newPromise();\n    closeAfterPromises.finish(combinedCloseAfterPromise);\n    combinedCloseAfterPromise.await(30,TimeUnit.SECONDS);\n    LOG.warn(\"Closing remaining active client channels.\");\n    List<ChannelFuture> forceCloseFutures=new ArrayList<>();\n    channels.forEach(channel -> {\n      if (channel.isActive()) {\n        ChannelFuture f=channel.pipeline().close();\n        forceCloseFutures.add(f);\n      }\n    }\n);\n    LOG.warn(\"Waiting for \" + forceCloseFutures.size() + \" client channels to be closed.\");\n    PromiseCombiner closePromisesCombiner=new PromiseCombiner();\n    closePromisesCombiner.addAll(forceCloseFutures.toArray(new ChannelFuture[0]));\n    Promise combinedClosePromise=executor.newPromise();\n    closePromisesCombiner.finish(combinedClosePromise);\n    combinedClosePromise.await(5,TimeUnit.SECONDS);\n    LOG.warn(forceCloseFutures.size() + \" client channels closed.\");\n  }\n catch (  InterruptedException ie) {\n    LOG.warn(\"Interrupted while shutting down client channels\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 60
      },
      "nodeContext" : "combinedClosePromise.await(5,TimeUnit.SECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 145,
    "startColumnNumber" : 39,
    "endLineNumber" : 145,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}