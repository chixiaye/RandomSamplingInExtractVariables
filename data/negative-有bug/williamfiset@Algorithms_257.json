{
  "id" : 257,
  "expression" : "Math.abs(res1 - res2)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/search/TernarySearchDiscrete.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.abs(res1 - res2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 38,
      "startColumnNumber" : 10,
      "endLineNumber" : 38,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 10,
        "endLineNumber" : 38,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Math.abs(res1 - res2) < 0.000000001",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 38,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (Math.abs(res1 - res2) < 0.000000001) {\n  lo=mid1;\n  hi=mid2;\n}\n else if (res1 > res2) lo=mid1;\n else hi=mid2;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 33,
        "startColumnNumber" : 21,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (hi - lo == 1)   return Math.min(f(lo),f(hi));\n  if (hi - lo == 2)   return Math.min(f(lo),Math.min(f(lo + 1),f(hi)));\n  int mid1=(2 * lo + hi) / 3, mid2=(lo + 2 * hi) / 3;\n  double res1=f(mid1), res2=f(mid2);\n  if (Math.abs(res1 - res2) < 0.000000001) {\n    lo=mid1;\n    hi=mid2;\n  }\n else   if (res1 > res2)   lo=mid1;\n else   hi=mid2;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (lo != hi) {\n  if (hi - lo == 1)   return Math.min(f(lo),f(hi));\n  if (hi - lo == 2)   return Math.min(f(lo),Math.min(f(lo + 1),f(hi)));\n  int mid1=(2 * lo + hi) / 3, mid2=(lo + 2 * hi) / 3;\n  double res1=f(mid1), res2=f(mid2);\n  if (Math.abs(res1 - res2) < 0.000000001) {\n    lo=mid1;\n    hi=mid2;\n  }\n else   if (res1 > res2)   lo=mid1;\n else   hi=mid2;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 32,
        "startColumnNumber" : 54,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  while (lo != hi) {\n    if (hi - lo == 1)     return Math.min(f(lo),f(hi));\n    if (hi - lo == 2)     return Math.min(f(lo),Math.min(f(lo + 1),f(hi)));\n    int mid1=(2 * lo + hi) / 3, mid2=(lo + 2 * hi) / 3;\n    double res1=f(mid1), res2=f(mid2);\n    if (Math.abs(res1 - res2) < 0.000000001) {\n      lo=mid1;\n      hi=mid2;\n    }\n else     if (res1 > res2)     lo=mid1;\n else     hi=mid2;\n  }\n  return lo;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static double discreteTernarySearch(int lo,int hi){\n  while (lo != hi) {\n    if (hi - lo == 1)     return Math.min(f(lo),f(hi));\n    if (hi - lo == 2)     return Math.min(f(lo),Math.min(f(lo + 1),f(hi)));\n    int mid1=(2 * lo + hi) / 3, mid2=(lo + 2 * hi) / 3;\n    double res1=f(mid1), res2=f(mid2);\n    if (Math.abs(res1 - res2) < 0.000000001) {\n      lo=mid1;\n      hi=mid2;\n    }\n else     if (res1 > res2)     lo=mid1;\n else     hi=mid2;\n  }\n  return lo;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 10,
        "endLineNumber" : 38,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Math.abs(res1 - res2) < 0.000000001",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 38,
    "startColumnNumber" : 10,
    "endLineNumber" : 38,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}