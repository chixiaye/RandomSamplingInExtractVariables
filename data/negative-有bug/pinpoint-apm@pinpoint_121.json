{
  "id" : 121,
  "expression" : "MathUtils.roundToNearestMultipleOf(16,5)",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/commons/src/test/java/com/navercorp/pinpoint/common/util/MathUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MathUtils.roundToNearestMultipleOf(16,5)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 75,
      "startColumnNumber" : 32,
      "endLineNumber" : 75,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(16,5))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(16,5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1676,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(1,MathUtils.roundToNearestMultipleOf(1,1));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(1,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(2,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(3,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(4,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(5,4));\n  Assert.assertEquals(8,MathUtils.roundToNearestMultipleOf(6,4));\n  Assert.assertEquals(8,MathUtils.roundToNearestMultipleOf(7,4));\n  Assert.assertEquals(8,MathUtils.roundToNearestMultipleOf(8,4));\n  Assert.assertEquals(10,MathUtils.roundToNearestMultipleOf(10,5));\n  Assert.assertEquals(10,MathUtils.roundToNearestMultipleOf(11,5));\n  Assert.assertEquals(10,MathUtils.roundToNearestMultipleOf(12,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(13,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(14,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(15,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(16,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(17,5));\n  Assert.assertEquals(20,MathUtils.roundToNearestMultipleOf(18,5));\n  Assert.assertEquals(20,MathUtils.roundToNearestMultipleOf(19,5));\n  Assert.assertEquals(20,MathUtils.roundToNearestMultipleOf(20,5));\n  Assert.assertEquals(5000,MathUtils.roundToNearestMultipleOf(6000,5000));\n  Assert.assertEquals(10000,MathUtils.roundToNearestMultipleOf(9000,5000));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1725,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void roundToNearestMultipleOf(){\n  Assert.assertEquals(1,MathUtils.roundToNearestMultipleOf(1,1));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(1,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(2,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(3,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(4,4));\n  Assert.assertEquals(4,MathUtils.roundToNearestMultipleOf(5,4));\n  Assert.assertEquals(8,MathUtils.roundToNearestMultipleOf(6,4));\n  Assert.assertEquals(8,MathUtils.roundToNearestMultipleOf(7,4));\n  Assert.assertEquals(8,MathUtils.roundToNearestMultipleOf(8,4));\n  Assert.assertEquals(10,MathUtils.roundToNearestMultipleOf(10,5));\n  Assert.assertEquals(10,MathUtils.roundToNearestMultipleOf(11,5));\n  Assert.assertEquals(10,MathUtils.roundToNearestMultipleOf(12,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(13,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(14,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(15,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(16,5));\n  Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(17,5));\n  Assert.assertEquals(20,MathUtils.roundToNearestMultipleOf(18,5));\n  Assert.assertEquals(20,MathUtils.roundToNearestMultipleOf(19,5));\n  Assert.assertEquals(20,MathUtils.roundToNearestMultipleOf(20,5));\n  Assert.assertEquals(5000,MathUtils.roundToNearestMultipleOf(6000,5000));\n  Assert.assertEquals(10000,MathUtils.roundToNearestMultipleOf(9000,5000));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(15,MathUtils.roundToNearestMultipleOf(16,5));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 75,
    "startColumnNumber" : 32,
    "endLineNumber" : 75,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}