{
  "id" : 289,
  "expression" : "pathGroup.trimPath.getOffset().getValue()",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/BaseStrokeContent.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pathGroup.trimPath.getOffset().getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 162,
      "startColumnNumber" : 39,
      "endLineNumber" : 162,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 162,
        "startColumnNumber" : 25,
        "endLineNumber" : 162,
        "endColumnNumber" : 80
      },
      "nodeContext" : "totalLength * pathGroup.trimPath.getOffset().getValue()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 162,
        "startColumnNumber" : 25,
        "endLineNumber" : 162,
        "endColumnNumber" : 87
      },
      "nodeContext" : "totalLength * pathGroup.trimPath.getOffset().getValue() / 360f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 162,
        "startColumnNumber" : 10,
        "endLineNumber" : 162,
        "endColumnNumber" : 87
      },
      "nodeContext" : "offsetLength=totalLength * pathGroup.trimPath.getOffset().getValue() / 360f",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 162,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 88
      },
      "nodeContext" : "float offsetLength=totalLength * pathGroup.trimPath.getOffset().getValue() / 360f;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2602,
        "startLineNumber" : 147,
        "startColumnNumber" : 86,
        "endLineNumber" : 212,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"StrokeContent#applyTrimPath\");\n  if (pathGroup.trimPath == null) {\n    L.endSection(\"StrokeContent#applyTrimPath\");\n    return;\n  }\n  path.reset();\n  for (int j=pathGroup.paths.size() - 1; j >= 0; j--) {\n    path.addPath(pathGroup.paths.get(j).getPath(),parentMatrix);\n  }\n  pm.setPath(path,false);\n  float totalLength=pm.getLength();\n  while (pm.nextContour()) {\n    totalLength+=pm.getLength();\n  }\n  float offsetLength=totalLength * pathGroup.trimPath.getOffset().getValue() / 360f;\n  float startLength=totalLength * pathGroup.trimPath.getStart().getValue() / 100f + offsetLength;\n  float endLength=totalLength * pathGroup.trimPath.getEnd().getValue() / 100f + offsetLength;\n  float currentLength=0;\n  for (int j=pathGroup.paths.size() - 1; j >= 0; j--) {\n    trimPathPath.set(pathGroup.paths.get(j).getPath());\n    trimPathPath.transform(parentMatrix);\n    pm.setPath(trimPathPath,false);\n    float length=pm.getLength();\n    if (endLength > totalLength && endLength - totalLength < currentLength + length && currentLength < endLength - totalLength) {\n      float startValue;\n      if (startLength > totalLength) {\n        startValue=(startLength - totalLength) / length;\n      }\n else {\n        startValue=0;\n      }\n      float endValue=Math.min((endLength - totalLength) / length,1);\n      Utils.applyTrimPathIfNeeded(trimPathPath,startValue,endValue,0);\n      canvas.drawPath(trimPathPath,paint);\n    }\n else     if (currentLength + length < startLength || currentLength > endLength) {\n    }\n else     if (currentLength + length <= endLength && startLength < currentLength) {\n      canvas.drawPath(trimPathPath,paint);\n    }\n else {\n      float startValue;\n      if (startLength < currentLength) {\n        startValue=0;\n      }\n else {\n        startValue=(startLength - currentLength) / length;\n      }\n      float endValue;\n      if (endLength > currentLength + length) {\n        endValue=1f;\n      }\n else {\n        endValue=(endLength - currentLength) / length;\n      }\n      Utils.applyTrimPathIfNeeded(trimPathPath,startValue,endValue,0);\n      canvas.drawPath(trimPathPath,paint);\n    }\n    currentLength+=length;\n  }\n  L.endSection(\"StrokeContent#applyTrimPath\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2686,
        "startLineNumber" : 147,
        "startColumnNumber" : 2,
        "endLineNumber" : 212,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void applyTrimPath(Canvas canvas,PathGroup pathGroup,Matrix parentMatrix){\n  L.beginSection(\"StrokeContent#applyTrimPath\");\n  if (pathGroup.trimPath == null) {\n    L.endSection(\"StrokeContent#applyTrimPath\");\n    return;\n  }\n  path.reset();\n  for (int j=pathGroup.paths.size() - 1; j >= 0; j--) {\n    path.addPath(pathGroup.paths.get(j).getPath(),parentMatrix);\n  }\n  pm.setPath(path,false);\n  float totalLength=pm.getLength();\n  while (pm.nextContour()) {\n    totalLength+=pm.getLength();\n  }\n  float offsetLength=totalLength * pathGroup.trimPath.getOffset().getValue() / 360f;\n  float startLength=totalLength * pathGroup.trimPath.getStart().getValue() / 100f + offsetLength;\n  float endLength=totalLength * pathGroup.trimPath.getEnd().getValue() / 100f + offsetLength;\n  float currentLength=0;\n  for (int j=pathGroup.paths.size() - 1; j >= 0; j--) {\n    trimPathPath.set(pathGroup.paths.get(j).getPath());\n    trimPathPath.transform(parentMatrix);\n    pm.setPath(trimPathPath,false);\n    float length=pm.getLength();\n    if (endLength > totalLength && endLength - totalLength < currentLength + length && currentLength < endLength - totalLength) {\n      float startValue;\n      if (startLength > totalLength) {\n        startValue=(startLength - totalLength) / length;\n      }\n else {\n        startValue=0;\n      }\n      float endValue=Math.min((endLength - totalLength) / length,1);\n      Utils.applyTrimPathIfNeeded(trimPathPath,startValue,endValue,0);\n      canvas.drawPath(trimPathPath,paint);\n    }\n else     if (currentLength + length < startLength || currentLength > endLength) {\n    }\n else     if (currentLength + length <= endLength && startLength < currentLength) {\n      canvas.drawPath(trimPathPath,paint);\n    }\n else {\n      float startValue;\n      if (startLength < currentLength) {\n        startValue=0;\n      }\n else {\n        startValue=(startLength - currentLength) / length;\n      }\n      float endValue;\n      if (endLength > currentLength + length) {\n        endValue=1f;\n      }\n else {\n        endValue=(endLength - currentLength) / length;\n      }\n      Utils.applyTrimPathIfNeeded(trimPathPath,startValue,endValue,0);\n      canvas.drawPath(trimPathPath,paint);\n    }\n    currentLength+=length;\n  }\n  L.endSection(\"StrokeContent#applyTrimPath\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 366,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 162,
        "startColumnNumber" : 4,
        "endLineNumber" : 162,
        "endColumnNumber" : 88
      },
      "nodeContext" : "float offsetLength=totalLength * pathGroup.trimPath.getOffset().getValue() / 360f;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "java.lang.Float"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 162,
    "startColumnNumber" : 39,
    "endLineNumber" : 162,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}