{
  "id" : 295,
  "expression" : "number2 == 0",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/java-numbers-2/src/main/java/com/baeldung/lcm/EuclideanAlgorithm.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "number2 == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 8,
      "startColumnNumber" : 28,
      "endLineNumber" : 8,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 8,
        "startColumnNumber" : 12,
        "endLineNumber" : 8,
        "endColumnNumber" : 40
      },
      "nodeContext" : "number1 == 0 || number2 == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 8,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (number1 == 0 || number2 == 0) {\n  return number1 + number2;\n}\n else {\n  int absNumber1=Math.abs(number1);\n  int absNumber2=Math.abs(number2);\n  int biggerValue=Math.max(absNumber1,absNumber2);\n  int smallerValue=Math.min(absNumber1,absNumber2);\n  return gcd(biggerValue % smallerValue,smallerValue);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 7,
        "startColumnNumber" : 52,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (number1 == 0 || number2 == 0) {\n    return number1 + number2;\n  }\n else {\n    int absNumber1=Math.abs(number1);\n    int absNumber2=Math.abs(number2);\n    int biggerValue=Math.max(absNumber1,absNumber2);\n    int smallerValue=Math.min(absNumber1,absNumber2);\n    return gcd(biggerValue % smallerValue,smallerValue);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static int gcd(int number1,int number2){\n  if (number1 == 0 || number2 == 0) {\n    return number1 + number2;\n  }\n else {\n    int absNumber1=Math.abs(number1);\n    int absNumber2=Math.abs(number2);\n    int biggerValue=Math.max(absNumber1,absNumber2);\n    int smallerValue=Math.min(absNumber1,absNumber2);\n    return gcd(biggerValue % smallerValue,smallerValue);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 8,
        "startColumnNumber" : 12,
        "endLineNumber" : 8,
        "endColumnNumber" : 40
      },
      "nodeContext" : "number1 == 0 || number2 == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 8,
    "startColumnNumber" : 28,
    "endLineNumber" : 8,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}