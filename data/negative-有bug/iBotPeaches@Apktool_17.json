{
  "id" : 17,
  "expression" : "attributes",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/brut.apktool/apktool-lib/src/main/java/brut/androlib/res/decoder/StyledString.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "attributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 141,
      "startColumnNumber" : 16,
      "endLineNumber" : 141,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 141,
        "startColumnNumber" : 16,
        "endLineNumber" : 141,
        "endColumnNumber" : 34
      },
      "nodeContext" : "attributes != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (attributes != null) {\n  for (  Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n    xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 126,
        "startColumnNumber" : 61,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Span span=it.next();\n  String name=span.getName();\n  Map<String,String> attributes=span.getAttributes();\n  int spanStart=span.getFirstChar();\n  int spanEnd=span.getLastChar() + 1;\n  if (spanStart > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanStart)));\n  }\n  lastOffset=spanStart;\n  xmlValue.append('<').append(name);\n  if (attributes != null) {\n    for (    Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n      xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n    }\n  }\n  if (spanStart == spanEnd) {\n    xmlValue.append(\"/>\");\n    return;\n  }\n  xmlValue.append('>');\n  while (it.hasNext() && it.peek().getFirstChar() < spanEnd) {\n    decodeIterate(it);\n  }\n  if (spanEnd > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanEnd)));\n  }\n  lastOffset=spanEnd;\n  xmlValue.append(\"</\").append(name).append('>');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1745,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private void decodeIterate(PeekingIterator<Span> it){\n  Span span=it.next();\n  String name=span.getName();\n  Map<String,String> attributes=span.getAttributes();\n  int spanStart=span.getFirstChar();\n  int spanEnd=span.getLastChar() + 1;\n  if (spanStart > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanStart)));\n  }\n  lastOffset=spanStart;\n  xmlValue.append('<').append(name);\n  if (attributes != null) {\n    for (    Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n      xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n    }\n  }\n  if (spanStart == spanEnd) {\n    xmlValue.append(\"/>\");\n    return;\n  }\n  xmlValue.append('>');\n  while (it.hasNext() && it.peek().getFirstChar() < spanEnd) {\n    decodeIterate(it);\n  }\n  if (spanEnd > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanEnd)));\n  }\n  lastOffset=spanEnd;\n  xmlValue.append(\"</\").append(name).append('>');\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 141,
        "startColumnNumber" : 16,
        "endLineNumber" : 141,
        "endColumnNumber" : 34
      },
      "nodeContext" : "attributes != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "attributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 142,
      "startColumnNumber" : 59,
      "endLineNumber" : 142,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 142,
        "startColumnNumber" : 59,
        "endLineNumber" : 142,
        "endColumnNumber" : 80
      },
      "nodeContext" : "attributes.entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 142,
        "startColumnNumber" : 16,
        "endLineNumber" : 145,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n  xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 141,
        "startColumnNumber" : 36,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n    xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (attributes != null) {\n  for (  Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n    xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 126,
        "startColumnNumber" : 61,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Span span=it.next();\n  String name=span.getName();\n  Map<String,String> attributes=span.getAttributes();\n  int spanStart=span.getFirstChar();\n  int spanEnd=span.getLastChar() + 1;\n  if (spanStart > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanStart)));\n  }\n  lastOffset=spanStart;\n  xmlValue.append('<').append(name);\n  if (attributes != null) {\n    for (    Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n      xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n    }\n  }\n  if (spanStart == spanEnd) {\n    xmlValue.append(\"/>\");\n    return;\n  }\n  xmlValue.append('>');\n  while (it.hasNext() && it.peek().getFirstChar() < spanEnd) {\n    decodeIterate(it);\n  }\n  if (spanEnd > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanEnd)));\n  }\n  lastOffset=spanEnd;\n  xmlValue.append(\"</\").append(name).append('>');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1745,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private void decodeIterate(PeekingIterator<Span> it){\n  Span span=it.next();\n  String name=span.getName();\n  Map<String,String> attributes=span.getAttributes();\n  int spanStart=span.getFirstChar();\n  int spanEnd=span.getLastChar() + 1;\n  if (spanStart > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanStart)));\n  }\n  lastOffset=spanStart;\n  xmlValue.append('<').append(name);\n  if (attributes != null) {\n    for (    Map.Entry<String,String> attrEntry : attributes.entrySet()) {\n      xmlValue.append(' ').append(attrEntry.getKey()).append(\"=\\\"\").append(ResXmlEncoders.escapeXmlChars(attrEntry.getValue())).append('\"');\n    }\n  }\n  if (spanStart == spanEnd) {\n    xmlValue.append(\"/>\");\n    return;\n  }\n  xmlValue.append('>');\n  while (it.hasNext() && it.peek().getFirstChar() < spanEnd) {\n    decodeIterate(it);\n  }\n  if (spanEnd > lastOffset) {\n    xmlValue.append(ResXmlEncoders.escapeXmlChars(text.substring(lastOffset,spanEnd)));\n  }\n  lastOffset=spanEnd;\n  xmlValue.append(\"</\").append(name).append('>');\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 142,
        "startColumnNumber" : 59,
        "endLineNumber" : 142,
        "endColumnNumber" : 80
      },
      "nodeContext" : "attributes.entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 141,
    "startColumnNumber" : 16,
    "endLineNumber" : 141,
    "endColumnNumber" : 26
  }, {
    "charLength" : 10,
    "startLineNumber" : 142,
    "startColumnNumber" : 59,
    "endLineNumber" : 142,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}