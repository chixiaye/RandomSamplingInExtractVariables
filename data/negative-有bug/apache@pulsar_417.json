{
  "id" : 417,
  "expression" : "authenticationToken.getAuthData()",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/runtime/src/test/java/org/apache/pulsar/functions/auth/ClearTextFunctionTokenAuthProviderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "authenticationToken.getAuthData()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 62,
      "startColumnNumber" : 28,
      "endLineNumber" : 62,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 62,
        "startColumnNumber" : 28,
        "endLineNumber" : 62,
        "endColumnNumber" : 78
      },
      "nodeContext" : "authenticationToken.getAuthData().getCommandData()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertEquals(authenticationToken.getAuthData().getCommandData(),\"test-token\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertEquals(authenticationToken.getAuthData().getCommandData(),\"test-token\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 33,
        "startColumnNumber" : 53,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClearTextFunctionTokenAuthProvider clearTextFunctionTokenAuthProvider=new ClearTextFunctionTokenAuthProvider();\n  Function.FunctionDetails funcDetails=Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-ns\").setName(\"test-func\").build();\n  Optional<FunctionAuthData> functionAuthData=clearTextFunctionTokenAuthProvider.cacheAuthData(funcDetails,new AuthenticationDataSource(){\n    @Override public boolean hasDataFromCommand(){\n      return true;\n    }\n    @Override public String getCommandData(){\n      return \"test-token\";\n    }\n  }\n);\n  Assert.assertTrue(functionAuthData.isPresent());\n  Assert.assertEquals(functionAuthData.get().getData(),\"test-token\".getBytes());\n  AuthenticationConfig authenticationConfig=AuthenticationConfig.builder().build();\n  clearTextFunctionTokenAuthProvider.configureAuthenticationConfig(authenticationConfig,functionAuthData);\n  Assert.assertEquals(authenticationConfig.getClientAuthenticationPlugin(),AuthenticationToken.class.getName());\n  Assert.assertEquals(authenticationConfig.getClientAuthenticationParameters(),\"token:test-token\");\n  AuthenticationToken authenticationToken=new AuthenticationToken();\n  authenticationToken.configure(authenticationConfig.getClientAuthenticationParameters());\n  Assert.assertEquals(authenticationToken.getAuthData().getCommandData(),\"test-token\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1665,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testClearTextAuth() throws Exception {\n  ClearTextFunctionTokenAuthProvider clearTextFunctionTokenAuthProvider=new ClearTextFunctionTokenAuthProvider();\n  Function.FunctionDetails funcDetails=Function.FunctionDetails.newBuilder().setTenant(\"test-tenant\").setNamespace(\"test-ns\").setName(\"test-func\").build();\n  Optional<FunctionAuthData> functionAuthData=clearTextFunctionTokenAuthProvider.cacheAuthData(funcDetails,new AuthenticationDataSource(){\n    @Override public boolean hasDataFromCommand(){\n      return true;\n    }\n    @Override public String getCommandData(){\n      return \"test-token\";\n    }\n  }\n);\n  Assert.assertTrue(functionAuthData.isPresent());\n  Assert.assertEquals(functionAuthData.get().getData(),\"test-token\".getBytes());\n  AuthenticationConfig authenticationConfig=AuthenticationConfig.builder().build();\n  clearTextFunctionTokenAuthProvider.configureAuthenticationConfig(authenticationConfig,functionAuthData);\n  Assert.assertEquals(authenticationConfig.getClientAuthenticationPlugin(),AuthenticationToken.class.getName());\n  Assert.assertEquals(authenticationConfig.getClientAuthenticationParameters(),\"token:test-token\");\n  AuthenticationToken authenticationToken=new AuthenticationToken();\n  authenticationToken.configure(authenticationConfig.getClientAuthenticationParameters());\n  Assert.assertEquals(authenticationToken.getAuthData().getCommandData(),\"test-token\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertEquals(authenticationToken.getAuthData().getCommandData(),\"test-token\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.pulsar.client.api.AuthenticationDataProvider"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 62,
    "startColumnNumber" : 28,
    "endLineNumber" : 62,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}