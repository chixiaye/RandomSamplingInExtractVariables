{
  "id" : 309,
  "expression" : "\"file_overlay\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/plugins/fsbrowser/FileIconService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"file_overlay\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 205,
      "startColumnNumber" : 64,
      "endLineNumber" : 205,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 205,
        "startColumnNumber" : 47,
        "endLineNumber" : 205,
        "endColumnNumber" : 79
      },
      "nodeContext" : "root.getChildren(\"file_overlay\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 205,
        "startColumnNumber" : 24,
        "endLineNumber" : 206,
        "endColumnNumber" : 18
      },
      "nodeContext" : "CollectionUtils.asList(root.getChildren(\"file_overlay\"),Element.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 205,
        "startColumnNumber" : 3,
        "endLineNumber" : 214,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (Element child : CollectionUtils.asList(root.getChildren(\"file_overlay\"),Element.class)) {\n  String name=child.getAttributeValue(\"name\");\n  String iconPath=child.getAttributeValue(\"icon\");\n  QUADRANT quadrant=QUADRANT.valueOf(child.getAttributeValue(\"quadrant\"),QUADRANT.LR);\n  overlayNameToIconName.put(name,iconPath);\n  overlayNameToQuad.put(name,quadrant);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 187,
        "startColumnNumber" : 62,
        "endLineNumber" : 215,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SAXBuilder sax=XmlUtilities.createSecureSAXBuilder(false,false);\n  Document doc=sax.build(xmlInputStream);\n  Element root=doc.getRootElement();\n  for (  Element child : CollectionUtils.asList(root.getChildren(\"file_extension\"),Element.class)) {\n    String extension=child.getAttributeValue(\"extension\");\n    String iconPath=child.getAttributeValue(\"icon\");\n    if (extension.endsWith(\".\")) {\n      addSubstrMapping(extension,iconPath);\n    }\n else     if (!extension.isEmpty()) {\n      addExtMapping(extension,iconPath);\n    }\n else {\n      defaultIconPath=iconPath;\n    }\n  }\n  for (  Element child : CollectionUtils.asList(root.getChildren(\"file_overlay\"),Element.class)) {\n    String name=child.getAttributeValue(\"name\");\n    String iconPath=child.getAttributeValue(\"icon\");\n    QUADRANT quadrant=QUADRANT.valueOf(child.getAttributeValue(\"quadrant\"),QUADRANT.LR);\n    overlayNameToIconName.put(name,iconPath);\n    overlayNameToQuad.put(name,quadrant);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 187,
        "startColumnNumber" : 2,
        "endLineNumber" : 218,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try (InputStream xmlInputStream=xmlFile.getInputStream()){\n  SAXBuilder sax=XmlUtilities.createSecureSAXBuilder(false,false);\n  Document doc=sax.build(xmlInputStream);\n  Element root=doc.getRootElement();\n  for (  Element child : CollectionUtils.asList(root.getChildren(\"file_extension\"),Element.class)) {\n    String extension=child.getAttributeValue(\"extension\");\n    String iconPath=child.getAttributeValue(\"icon\");\n    if (extension.endsWith(\".\")) {\n      addSubstrMapping(extension,iconPath);\n    }\n else     if (!extension.isEmpty()) {\n      addExtMapping(extension,iconPath);\n    }\n else {\n      defaultIconPath=iconPath;\n    }\n  }\n  for (  Element child : CollectionUtils.asList(root.getChildren(\"file_overlay\"),Element.class)) {\n    String name=child.getAttributeValue(\"name\");\n    String iconPath=child.getAttributeValue(\"icon\");\n    QUADRANT quadrant=QUADRANT.valueOf(child.getAttributeValue(\"quadrant\"),QUADRANT.LR);\n    overlayNameToIconName.put(name,iconPath);\n    overlayNameToQuad.put(name,quadrant);\n  }\n}\n catch (JDOMException|IOException e) {\n  Msg.error(this,\"Error reading file icon data: \" + e.getMessage(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 179,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 178,
        "startColumnNumber" : 21,
        "endLineNumber" : 219,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  fileExtToIconName.clear();\n  fileSubstrToIconName.clear();\n  overlayNameToIconName.clear();\n  overlayNameToQuad.clear();\n  iconKeyToIcon.clear();\n  defaultIconPath=null;\n  maxExtLevel=1;\n  try (InputStream xmlInputStream=xmlFile.getInputStream()){\n    SAXBuilder sax=XmlUtilities.createSecureSAXBuilder(false,false);\n    Document doc=sax.build(xmlInputStream);\n    Element root=doc.getRootElement();\n    for (    Element child : CollectionUtils.asList(root.getChildren(\"file_extension\"),Element.class)) {\n      String extension=child.getAttributeValue(\"extension\");\n      String iconPath=child.getAttributeValue(\"icon\");\n      if (extension.endsWith(\".\")) {\n        addSubstrMapping(extension,iconPath);\n      }\n else       if (!extension.isEmpty()) {\n        addExtMapping(extension,iconPath);\n      }\n else {\n        defaultIconPath=iconPath;\n      }\n    }\n    for (    Element child : CollectionUtils.asList(root.getChildren(\"file_overlay\"),Element.class)) {\n      String name=child.getAttributeValue(\"name\");\n      String iconPath=child.getAttributeValue(\"icon\");\n      QUADRANT quadrant=QUADRANT.valueOf(child.getAttributeValue(\"quadrant\"),QUADRANT.LR);\n      overlayNameToIconName.put(name,iconPath);\n      overlayNameToQuad.put(name,quadrant);\n    }\n  }\n catch (  JDOMException|IOException e) {\n    Msg.error(this,\"Error reading file icon data: \" + e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1450,
        "startLineNumber" : 178,
        "startColumnNumber" : 1,
        "endLineNumber" : 219,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void load(){\n  fileExtToIconName.clear();\n  fileSubstrToIconName.clear();\n  overlayNameToIconName.clear();\n  overlayNameToQuad.clear();\n  iconKeyToIcon.clear();\n  defaultIconPath=null;\n  maxExtLevel=1;\n  try (InputStream xmlInputStream=xmlFile.getInputStream()){\n    SAXBuilder sax=XmlUtilities.createSecureSAXBuilder(false,false);\n    Document doc=sax.build(xmlInputStream);\n    Element root=doc.getRootElement();\n    for (    Element child : CollectionUtils.asList(root.getChildren(\"file_extension\"),Element.class)) {\n      String extension=child.getAttributeValue(\"extension\");\n      String iconPath=child.getAttributeValue(\"icon\");\n      if (extension.endsWith(\".\")) {\n        addSubstrMapping(extension,iconPath);\n      }\n else       if (!extension.isEmpty()) {\n        addExtMapping(extension,iconPath);\n      }\n else {\n        defaultIconPath=iconPath;\n      }\n    }\n    for (    Element child : CollectionUtils.asList(root.getChildren(\"file_overlay\"),Element.class)) {\n      String name=child.getAttributeValue(\"name\");\n      String iconPath=child.getAttributeValue(\"icon\");\n      QUADRANT quadrant=QUADRANT.valueOf(child.getAttributeValue(\"quadrant\"),QUADRANT.LR);\n      overlayNameToIconName.put(name,iconPath);\n      overlayNameToQuad.put(name,quadrant);\n    }\n  }\n catch (  JDOMException|IOException e) {\n    Msg.error(this,\"Error reading file icon data: \" + e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 205,
        "startColumnNumber" : 47,
        "endLineNumber" : 205,
        "endColumnNumber" : 79
      },
      "nodeContext" : "root.getChildren(\"file_overlay\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 205,
    "startColumnNumber" : 64,
    "endLineNumber" : 205,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}