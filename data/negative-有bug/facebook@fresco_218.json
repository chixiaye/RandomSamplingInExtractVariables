{
  "id" : 218,
  "expression" : "Preconditions",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/cache/BufferedDiskCache.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Preconditions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 247,
      "startColumnNumber" : 6,
      "endLineNumber" : 247,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 247,
        "startColumnNumber" : 6,
        "endLineNumber" : 247,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Preconditions.checkNotNull(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 247,
        "startColumnNumber" : 6,
        "endLineNumber" : 247,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Preconditions.checkNotNull(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1632,
        "startLineNumber" : 243,
        "startColumnNumber" : 8,
        "endLineNumber" : 280,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (FrescoSystrace.isTracing()) {\n    FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n  }\n  Preconditions.checkNotNull(key);\n  Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n  mStagingArea.put(key,encodedImage);\n  final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n  try {\n    final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n    mWriteExecutor.execute(new Runnable(){\n      @Override public void run(){\n        final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n        try {\n          writeToDiskCache(key,finalEncodedImage);\n        }\n  finally {\n          mStagingArea.remove(key,finalEncodedImage);\n          EncodedImage.closeSafely(finalEncodedImage);\n          FrescoInstrumenter.onEndWork(currentToken);\n        }\n      }\n    }\n);\n  }\n catch (  Exception exception) {\n    FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n    mStagingArea.remove(key,encodedImage);\n    EncodedImage.closeSafely(finalEncodedImage);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1737,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 284,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (FrescoSystrace.isTracing()) {\n    FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n  }\n  Preconditions.checkNotNull(key);\n  Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n  mStagingArea.put(key,encodedImage);\n  final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n  try {\n    final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n    mWriteExecutor.execute(new Runnable(){\n      @Override public void run(){\n        final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n        try {\n          writeToDiskCache(key,finalEncodedImage);\n        }\n  finally {\n          mStagingArea.remove(key,finalEncodedImage);\n          EncodedImage.closeSafely(finalEncodedImage);\n          FrescoInstrumenter.onEndWork(currentToken);\n        }\n      }\n    }\n);\n  }\n catch (  Exception exception) {\n    FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n    mStagingArea.remove(key,encodedImage);\n    EncodedImage.closeSafely(finalEncodedImage);\n  }\n}\n  finally {\n  if (FrescoSystrace.isTracing()) {\n    FrescoSystrace.endSection();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 140,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 242,
        "startColumnNumber" : 65,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n    }\n    Preconditions.checkNotNull(key);\n    Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n    mStagingArea.put(key,encodedImage);\n    final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n    try {\n      final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n      mWriteExecutor.execute(new Runnable(){\n        @Override public void run(){\n          final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n          try {\n            writeToDiskCache(key,finalEncodedImage);\n          }\n  finally {\n            mStagingArea.remove(key,finalEncodedImage);\n            EncodedImage.closeSafely(finalEncodedImage);\n            FrescoInstrumenter.onEndWork(currentToken);\n          }\n        }\n      }\n);\n    }\n catch (    Exception exception) {\n      FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n      mStagingArea.remove(key,encodedImage);\n      EncodedImage.closeSafely(finalEncodedImage);\n    }\n  }\n  finally {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.endSection();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1976,
        "startLineNumber" : 238,
        "startColumnNumber" : 2,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Associates encodedImage with given key in disk cache. Disk write is performed on background thread, so the caller of this method is not blocked\n */\npublic void put(final CacheKey key,EncodedImage encodedImage){\n  try {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n    }\n    Preconditions.checkNotNull(key);\n    Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n    mStagingArea.put(key,encodedImage);\n    final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n    try {\n      final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n      mWriteExecutor.execute(new Runnable(){\n        @Override public void run(){\n          final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n          try {\n            writeToDiskCache(key,finalEncodedImage);\n          }\n  finally {\n            mStagingArea.remove(key,finalEncodedImage);\n            EncodedImage.closeSafely(finalEncodedImage);\n            FrescoInstrumenter.onEndWork(currentToken);\n          }\n        }\n      }\n);\n    }\n catch (    Exception exception) {\n      FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n      mStagingArea.remove(key,encodedImage);\n      EncodedImage.closeSafely(finalEncodedImage);\n    }\n  }\n  finally {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.endSection();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 247,
        "startColumnNumber" : 6,
        "endLineNumber" : 247,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Preconditions.checkNotNull(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.common.internal.Preconditions"
  }, {
    "nodeContext" : "Preconditions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 248,
      "startColumnNumber" : 6,
      "endLineNumber" : 248,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 248,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Preconditions.checkArgument(EncodedImage.isValid(encodedImage))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 248,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1632,
        "startLineNumber" : 243,
        "startColumnNumber" : 8,
        "endLineNumber" : 280,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (FrescoSystrace.isTracing()) {\n    FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n  }\n  Preconditions.checkNotNull(key);\n  Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n  mStagingArea.put(key,encodedImage);\n  final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n  try {\n    final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n    mWriteExecutor.execute(new Runnable(){\n      @Override public void run(){\n        final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n        try {\n          writeToDiskCache(key,finalEncodedImage);\n        }\n  finally {\n          mStagingArea.remove(key,finalEncodedImage);\n          EncodedImage.closeSafely(finalEncodedImage);\n          FrescoInstrumenter.onEndWork(currentToken);\n        }\n      }\n    }\n);\n  }\n catch (  Exception exception) {\n    FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n    mStagingArea.remove(key,encodedImage);\n    EncodedImage.closeSafely(finalEncodedImage);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1737,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 284,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (FrescoSystrace.isTracing()) {\n    FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n  }\n  Preconditions.checkNotNull(key);\n  Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n  mStagingArea.put(key,encodedImage);\n  final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n  try {\n    final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n    mWriteExecutor.execute(new Runnable(){\n      @Override public void run(){\n        final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n        try {\n          writeToDiskCache(key,finalEncodedImage);\n        }\n  finally {\n          mStagingArea.remove(key,finalEncodedImage);\n          EncodedImage.closeSafely(finalEncodedImage);\n          FrescoInstrumenter.onEndWork(currentToken);\n        }\n      }\n    }\n);\n  }\n catch (  Exception exception) {\n    FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n    mStagingArea.remove(key,encodedImage);\n    EncodedImage.closeSafely(finalEncodedImage);\n  }\n}\n  finally {\n  if (FrescoSystrace.isTracing()) {\n    FrescoSystrace.endSection();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 140,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 242,
        "startColumnNumber" : 65,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n    }\n    Preconditions.checkNotNull(key);\n    Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n    mStagingArea.put(key,encodedImage);\n    final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n    try {\n      final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n      mWriteExecutor.execute(new Runnable(){\n        @Override public void run(){\n          final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n          try {\n            writeToDiskCache(key,finalEncodedImage);\n          }\n  finally {\n            mStagingArea.remove(key,finalEncodedImage);\n            EncodedImage.closeSafely(finalEncodedImage);\n            FrescoInstrumenter.onEndWork(currentToken);\n          }\n        }\n      }\n);\n    }\n catch (    Exception exception) {\n      FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n      mStagingArea.remove(key,encodedImage);\n      EncodedImage.closeSafely(finalEncodedImage);\n    }\n  }\n  finally {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.endSection();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1976,
        "startLineNumber" : 238,
        "startColumnNumber" : 2,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Associates encodedImage with given key in disk cache. Disk write is performed on background thread, so the caller of this method is not blocked\n */\npublic void put(final CacheKey key,EncodedImage encodedImage){\n  try {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.beginSection(\"BufferedDiskCache#put\");\n    }\n    Preconditions.checkNotNull(key);\n    Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n    mStagingArea.put(key,encodedImage);\n    final EncodedImage finalEncodedImage=EncodedImage.cloneOrNull(encodedImage);\n    try {\n      final Object token=FrescoInstrumenter.onBeforeSubmitWork(\"BufferedDiskCache_putAsync\");\n      mWriteExecutor.execute(new Runnable(){\n        @Override public void run(){\n          final Object currentToken=FrescoInstrumenter.onBeginWork(token,null);\n          try {\n            writeToDiskCache(key,finalEncodedImage);\n          }\n  finally {\n            mStagingArea.remove(key,finalEncodedImage);\n            EncodedImage.closeSafely(finalEncodedImage);\n            FrescoInstrumenter.onEndWork(currentToken);\n          }\n        }\n      }\n);\n    }\n catch (    Exception exception) {\n      FLog.w(TAG,exception,\"Failed to schedule disk-cache write for %s\",key.getUriString());\n      mStagingArea.remove(key,encodedImage);\n      EncodedImage.closeSafely(finalEncodedImage);\n    }\n  }\n  finally {\n    if (FrescoSystrace.isTracing()) {\n      FrescoSystrace.endSection();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 248,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Preconditions.checkArgument(EncodedImage.isValid(encodedImage));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.facebook.common.internal.Preconditions"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 247,
    "startColumnNumber" : 6,
    "endLineNumber" : 247,
    "endColumnNumber" : 19
  }, {
    "charLength" : 13,
    "startLineNumber" : 248,
    "startColumnNumber" : 6,
    "endLineNumber" : 248,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}