{
  "id" : 456,
  "expression" : "new OrderedMap<>()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/tools/src/mindustry/tools/BundleLauncher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new OrderedMap<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 12,
      "startColumnNumber" : 42,
      "endLineNumber" : 12,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 12,
        "startColumnNumber" : 35,
        "endLineNumber" : 12,
        "endColumnNumber" : 60
      },
      "nodeContext" : "base=new OrderedMap<>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 61
      },
      "nodeContext" : "OrderedMap<String,String> base=new OrderedMap<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2240,
        "startLineNumber" : 11,
        "startColumnNumber" : 42,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  OrderedMap<String,String> base=new OrderedMap<>();\n  PropertiesUtils.load(base,Fi.get(\"bundle.properties\").reader());\n  Seq<String> removals=new Seq<>();\n  String str=Fi.get(\"bundle.properties\").readString();\n  ObjectSet<String> newlines=Seq.with(str.split(\"\\n\")).select(l -> l.contains(\" = \") && str.indexOf(l) + l.length() < str.length() - 2 && str.charAt(str.indexOf(l) + l.length() + 1) == '\\n').map(l -> l.split(\" = \")[0]).asSet();\n  Fi.get(\".\").walk(child -> {\n    if (child.name().equals(\"bundle.properties\") || child.toString().contains(\"output\"))     return;\n    Log.info(\"Parsing bundle: @\",child);\n    OrderedMap<String,String> other=new OrderedMap<>();\n    PropertiesUtils.load(other,child.reader(2048,\"UTF-8\"));\n    removals.clear();\n    for (    String key : other.orderedKeys()) {\n      if (!base.containsKey(key)) {\n        removals.add(key);\n        Log.info(\"&lr- Removing unused key '@'...\",key);\n      }\n    }\n    Log.info(\"&lr@ keys removed.\",removals.size);\n    for (    String s : removals) {\n      other.remove(s);\n    }\n    int added=0;\n    for (    String key : base.orderedKeys()) {\n      if (!other.containsKey(key) || other.get(key).trim().isEmpty()) {\n        other.put(key,base.get(key));\n        added++;\n        Log.info(\"&lc- Adding missing key '@'...\",key);\n      }\n    }\n    Func2<String,String,String> processor=(key,value) -> (key + \" = \" + value).replace(\"\\\\\",\"\\\\\\\\\").replace(\"\\n\",\"\\\\n\") + \"\\n\" + (newlines.contains(key) ? \"\\n\" : \"\");\n    Fi output=child.sibling(\"output/\" + child.name());\n    Log.info(\"&lc@ keys added.\",added);\n    Log.info(\"Writing bundle to @\",output);\n    StringBuilder result=new StringBuilder();\n    for (    String key : base.orderedKeys()) {\n      result.append(processor.get(key,other.get(key)));\n      other.remove(key);\n    }\n    child.writeString(result.toString());\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 377,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2278,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  OrderedMap<String,String> base=new OrderedMap<>();\n  PropertiesUtils.load(base,Fi.get(\"bundle.properties\").reader());\n  Seq<String> removals=new Seq<>();\n  String str=Fi.get(\"bundle.properties\").readString();\n  ObjectSet<String> newlines=Seq.with(str.split(\"\\n\")).select(l -> l.contains(\" = \") && str.indexOf(l) + l.length() < str.length() - 2 && str.charAt(str.indexOf(l) + l.length() + 1) == '\\n').map(l -> l.split(\" = \")[0]).asSet();\n  Fi.get(\".\").walk(child -> {\n    if (child.name().equals(\"bundle.properties\") || child.toString().contains(\"output\"))     return;\n    Log.info(\"Parsing bundle: @\",child);\n    OrderedMap<String,String> other=new OrderedMap<>();\n    PropertiesUtils.load(other,child.reader(2048,\"UTF-8\"));\n    removals.clear();\n    for (    String key : other.orderedKeys()) {\n      if (!base.containsKey(key)) {\n        removals.add(key);\n        Log.info(\"&lr- Removing unused key '@'...\",key);\n      }\n    }\n    Log.info(\"&lr@ keys removed.\",removals.size);\n    for (    String s : removals) {\n      other.remove(s);\n    }\n    int added=0;\n    for (    String key : base.orderedKeys()) {\n      if (!other.containsKey(key) || other.get(key).trim().isEmpty()) {\n        other.put(key,base.get(key));\n        added++;\n        Log.info(\"&lc- Adding missing key '@'...\",key);\n      }\n    }\n    Func2<String,String,String> processor=(key,value) -> (key + \" = \" + value).replace(\"\\\\\",\"\\\\\\\\\").replace(\"\\n\",\"\\\\n\") + \"\\n\" + (newlines.contains(key) ? \"\\n\" : \"\");\n    Fi output=child.sibling(\"output/\" + child.name());\n    Log.info(\"&lc@ keys added.\",added);\n    Log.info(\"Writing bundle to @\",output);\n    StringBuilder result=new StringBuilder();\n    for (    String key : base.orderedKeys()) {\n      result.append(processor.get(key,other.get(key)));\n      other.remove(key);\n    }\n    child.writeString(result.toString());\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 388,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 61
      },
      "nodeContext" : "OrderedMap<String,String> base=new OrderedMap<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "mindustry.tools.OrderedMap"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 12,
    "startColumnNumber" : 42,
    "endLineNumber" : 12,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}