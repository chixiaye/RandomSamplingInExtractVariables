{
  "id" : 159,
  "expression" : "ComponentsDefine.VERTX",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-sdk-plugin/vertx-plugins/vertx-core-3.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/vertx3/ClusteredEventBusSendRemoteInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ComponentsDefine.VERTX",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 51,
      "startColumnNumber" : 30,
      "endLineNumber" : 51,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 53
      },
      "nodeContext" : "span.setComponent(ComponentsDefine.VERTX)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 54
      },
      "nodeContext" : "span.setComponent(ComponentsDefine.VERTX);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 893,
        "startLineNumber" : 47,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ServerID sender=(ServerID)allArguments[0];\n  ContextCarrier contextCarrier=new ContextCarrier();\n  AbstractSpan span=ContextManager.createExitSpan(message.address(),contextCarrier,sender.toString());\n  span.setComponent(ComponentsDefine.VERTX);\n  SpanLayer.asRPCFramework(span);\n  CarrierItem next=contextCarrier.items();\n  while (next.hasNext()) {\n    next=next.next();\n    message.headers().add(next.getHeadKey(),next.getHeadValue());\n  }\n  if (message.replyAddress() != null) {\n    VertxContext.pushContext(message.replyAddress(),new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n  }\n  ContextManager.getRuntimeContext().put(VertxContext.STOP_SPAN_NECESSARY + \".\" + getClass().getName(),true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (VertxContext.hasContext(message.address())) {\n  VertxContext context=VertxContext.popContext(message.address());\n  context.getSpan().asyncFinish();\n}\n else {\n  ServerID sender=(ServerID)allArguments[0];\n  ContextCarrier contextCarrier=new ContextCarrier();\n  AbstractSpan span=ContextManager.createExitSpan(message.address(),contextCarrier,sender.toString());\n  span.setComponent(ComponentsDefine.VERTX);\n  SpanLayer.asRPCFramework(span);\n  CarrierItem next=contextCarrier.items();\n  while (next.hasNext()) {\n    next=next.next();\n    message.headers().add(next.getHeadKey(),next.getHeadValue());\n  }\n  if (message.replyAddress() != null) {\n    VertxContext.pushContext(message.replyAddress(),new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n  }\n  ContextManager.getRuntimeContext().put(VertxContext.STOP_SPAN_NECESSARY + \".\" + getClass().getName(),true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1284,
        "startLineNumber" : 40,
        "startColumnNumber" : 55,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ContextManager.getRuntimeContext().remove(VertxContext.STOP_SPAN_NECESSARY + \".\" + getClass().getName());\n  ClusteredMessage message=(ClusteredMessage)allArguments[1];\n  if (VertxContext.hasContext(message.address())) {\n    VertxContext context=VertxContext.popContext(message.address());\n    context.getSpan().asyncFinish();\n  }\n else {\n    ServerID sender=(ServerID)allArguments[0];\n    ContextCarrier contextCarrier=new ContextCarrier();\n    AbstractSpan span=ContextManager.createExitSpan(message.address(),contextCarrier,sender.toString());\n    span.setComponent(ComponentsDefine.VERTX);\n    SpanLayer.asRPCFramework(span);\n    CarrierItem next=contextCarrier.items();\n    while (next.hasNext()) {\n      next=next.next();\n      message.headers().add(next.getHeadKey(),next.getHeadValue());\n    }\n    if (message.replyAddress() != null) {\n      VertxContext.pushContext(message.replyAddress(),new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n    }\n    ContextManager.getRuntimeContext().put(VertxContext.STOP_SPAN_NECESSARY + \".\" + getClass().getName(),true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1503,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"rawtypes\") public void beforeMethod(EnhancedInstance objInst,Method method,Object[] allArguments,Class<?>[] argumentsTypes,MethodInterceptResult result) throws Throwable {\n  ContextManager.getRuntimeContext().remove(VertxContext.STOP_SPAN_NECESSARY + \".\" + getClass().getName());\n  ClusteredMessage message=(ClusteredMessage)allArguments[1];\n  if (VertxContext.hasContext(message.address())) {\n    VertxContext context=VertxContext.popContext(message.address());\n    context.getSpan().asyncFinish();\n  }\n else {\n    ServerID sender=(ServerID)allArguments[0];\n    ContextCarrier contextCarrier=new ContextCarrier();\n    AbstractSpan span=ContextManager.createExitSpan(message.address(),contextCarrier,sender.toString());\n    span.setComponent(ComponentsDefine.VERTX);\n    SpanLayer.asRPCFramework(span);\n    CarrierItem next=contextCarrier.items();\n    while (next.hasNext()) {\n      next=next.next();\n      message.headers().add(next.getHeadKey(),next.getHeadValue());\n    }\n    if (message.replyAddress() != null) {\n      VertxContext.pushContext(message.replyAddress(),new VertxContext(ContextManager.capture(),span.prepareForAsync()));\n    }\n    ContextManager.getRuntimeContext().put(VertxContext.STOP_SPAN_NECESSARY + \".\" + getClass().getName(),true);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 54
      },
      "nodeContext" : "span.setComponent(ComponentsDefine.VERTX);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.skywalking.apm.network.trace.component.OfficialComponent"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 51,
    "startColumnNumber" : 30,
    "endLineNumber" : 51,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}