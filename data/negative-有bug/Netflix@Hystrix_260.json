{
  "id" : 260,
  "expression" : "HystrixEventType.BAD_REQUEST",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/RollingCommandEventCounterStreamTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HystrixEventType.BAD_REQUEST",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 183,
      "startColumnNumber" : 86,
      "endLineNumber" : 183,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 183,
        "startColumnNumber" : 40,
        "endLineNumber" : 183,
        "endColumnNumber" : 115
      },
      "nodeContext" : "CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 183,
        "startColumnNumber" : 34,
        "endLineNumber" : 183,
        "endColumnNumber" : 115
      },
      "nodeContext" : "cmd=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 116
      },
      "nodeContext" : "CommandStreamTest.Command cmd=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 175,
        "startColumnNumber" : 39,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-RollingCounter-E\");\n  stream=RollingCommandEventCounterStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  CommandStreamTest.Command cmd=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST);\n  cmd.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.BAD_REQUEST.ordinal()]=1;\n  expected[HystrixEventType.EXCEPTION_THROWN.ordinal()]=1;\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 174,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSingleBadRequest(){\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-RollingCounter-E\");\n  stream=RollingCommandEventCounterStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  CommandStreamTest.Command cmd=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST);\n  cmd.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.BAD_REQUEST.ordinal()]=1;\n  expected[HystrixEventType.EXCEPTION_THROWN.ordinal()]=1;\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 116
      },
      "nodeContext" : "CommandStreamTest.Command cmd=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.netflix.hystrix.HystrixEventType"
  }, {
    "nodeContext" : "HystrixEventType.BAD_REQUEST",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 194,
      "startColumnNumber" : 17,
      "endLineNumber" : 194,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 194,
        "startColumnNumber" : 17,
        "endLineNumber" : 194,
        "endColumnNumber" : 55
      },
      "nodeContext" : "HystrixEventType.BAD_REQUEST.ordinal()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 56
      },
      "nodeContext" : "expected[HystrixEventType.BAD_REQUEST.ordinal()]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 60
      },
      "nodeContext" : "expected[HystrixEventType.BAD_REQUEST.ordinal()]=1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 61
      },
      "nodeContext" : "expected[HystrixEventType.BAD_REQUEST.ordinal()]=1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 175,
        "startColumnNumber" : 39,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-RollingCounter-E\");\n  stream=RollingCommandEventCounterStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  CommandStreamTest.Command cmd=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST);\n  cmd.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.BAD_REQUEST.ordinal()]=1;\n  expected[HystrixEventType.EXCEPTION_THROWN.ordinal()]=1;\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 174,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSingleBadRequest(){\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-RollingCounter-E\");\n  stream=RollingCommandEventCounterStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  CommandStreamTest.Command cmd=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.BAD_REQUEST);\n  cmd.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.BAD_REQUEST.ordinal()]=1;\n  expected[HystrixEventType.EXCEPTION_THROWN.ordinal()]=1;\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 61
      },
      "nodeContext" : "expected[HystrixEventType.BAD_REQUEST.ordinal()]=1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "com.netflix.hystrix.HystrixEventType"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 183,
    "startColumnNumber" : 86,
    "endLineNumber" : 183,
    "endColumnNumber" : 114
  }, {
    "charLength" : 28,
    "startLineNumber" : 194,
    "startColumnNumber" : 17,
    "endLineNumber" : 194,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}