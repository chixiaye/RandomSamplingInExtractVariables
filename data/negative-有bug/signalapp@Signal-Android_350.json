{
  "id" : 350,
  "expression" : "recipient.getId().toQueueKey()",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/jobmanager/migrations/PushProcessMessageQueueJobMigration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "recipient.getId().toQueueKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 63,
      "startColumnNumber" : 19,
      "endLineNumber" : 63,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 49
      },
      "nodeContext" : "suffix=recipient.getId().toQueueKey()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 50
      },
      "nodeContext" : "suffix=recipient.getId().toQueueKey();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n  Recipient recipient=Recipient.externalGroupExact(context,groupId);\n  suffix=recipient.getId().toQueueKey();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n  Recipient recipient=Recipient.externalGroupExact(context,groupId);\n  suffix=recipient.getId().toQueueKey();\n}\n catch (BadGroupIdException e) {\n  Log.w(TAG,\"Bad groupId! Using default queue.\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 49,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 57,
        "startColumnNumber" : 131,
        "endLineNumber" : 67,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Log.i(TAG,\"Migrating a group message.\");\n  try {\n    GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n    Recipient recipient=Recipient.externalGroupExact(context,groupId);\n    suffix=recipient.getId().toQueueKey();\n  }\n catch (  BadGroupIdException e) {\n    Log.w(TAG,\"Bad groupId! Using default queue.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (content != null && content.getDataMessage().isPresent() && content.getDataMessage().get().getGroupContext().isPresent()) {\n  Log.i(TAG,\"Migrating a group message.\");\n  try {\n    GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n    Recipient recipient=Recipient.externalGroupExact(context,groupId);\n    suffix=recipient.getId().toQueueKey();\n  }\n catch (  BadGroupIdException e) {\n    Log.w(TAG,\"Bad groupId! Using default queue.\");\n  }\n}\n else if (content != null) {\n  Log.i(TAG,\"Migrating an individual message.\");\n  suffix=RecipientId.from(content.getSender()).toQueueKey();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 54,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SignalServiceContent content=SignalServiceContent.deserialize(Base64.decode(data.getString(\"message_content\")));\n  if (content != null && content.getDataMessage().isPresent() && content.getDataMessage().get().getGroupContext().isPresent()) {\n    Log.i(TAG,\"Migrating a group message.\");\n    try {\n      GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n      Recipient recipient=Recipient.externalGroupExact(context,groupId);\n      suffix=recipient.getId().toQueueKey();\n    }\n catch (    BadGroupIdException e) {\n      Log.w(TAG,\"Bad groupId! Using default queue.\");\n    }\n  }\n else   if (content != null) {\n    Log.i(TAG,\"Migrating an individual message.\");\n    suffix=RecipientId.from(content.getSender()).toQueueKey();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (data.getInt(\"message_state\") == 0) {\n  SignalServiceContent content=SignalServiceContent.deserialize(Base64.decode(data.getString(\"message_content\")));\n  if (content != null && content.getDataMessage().isPresent() && content.getDataMessage().get().getGroupContext().isPresent()) {\n    Log.i(TAG,\"Migrating a group message.\");\n    try {\n      GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n      Recipient recipient=Recipient.externalGroupExact(context,groupId);\n      suffix=recipient.getId().toQueueKey();\n    }\n catch (    BadGroupIdException e) {\n      Log.w(TAG,\"Bad groupId! Using default queue.\");\n    }\n  }\n else   if (content != null) {\n    Log.i(TAG,\"Migrating an individual message.\");\n    suffix=RecipientId.from(content.getSender()).toQueueKey();\n  }\n}\n else {\n  Log.i(TAG,\"Migrating an exception message.\");\n  String exceptionSender=data.getString(\"exception_sender\");\n  GroupId exceptionGroup=GroupId.parseNullableOrThrow(data.getStringOrDefault(\"exception_groupId\",null));\n  if (exceptionGroup != null) {\n    suffix=Recipient.externalGroupExact(context,exceptionGroup).getId().toQueueKey();\n  }\n else   if (exceptionSender != null) {\n    suffix=Recipient.external(context,exceptionSender).getId().toQueueKey();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 184,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1549,
        "startLineNumber" : 49,
        "startColumnNumber" : 134,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Data data=jobData.getData();\n  String suffix=\"\";\n  if (data.getInt(\"message_state\") == 0) {\n    SignalServiceContent content=SignalServiceContent.deserialize(Base64.decode(data.getString(\"message_content\")));\n    if (content != null && content.getDataMessage().isPresent() && content.getDataMessage().get().getGroupContext().isPresent()) {\n      Log.i(TAG,\"Migrating a group message.\");\n      try {\n        GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n        Recipient recipient=Recipient.externalGroupExact(context,groupId);\n        suffix=recipient.getId().toQueueKey();\n      }\n catch (      BadGroupIdException e) {\n        Log.w(TAG,\"Bad groupId! Using default queue.\");\n      }\n    }\n else     if (content != null) {\n      Log.i(TAG,\"Migrating an individual message.\");\n      suffix=RecipientId.from(content.getSender()).toQueueKey();\n    }\n  }\n else {\n    Log.i(TAG,\"Migrating an exception message.\");\n    String exceptionSender=data.getString(\"exception_sender\");\n    GroupId exceptionGroup=GroupId.parseNullableOrThrow(data.getStringOrDefault(\"exception_groupId\",null));\n    if (exceptionGroup != null) {\n      suffix=Recipient.externalGroupExact(context,exceptionGroup).getId().toQueueKey();\n    }\n else     if (exceptionSender != null) {\n      suffix=Recipient.external(context,exceptionSender).getId().toQueueKey();\n    }\n  }\n  return jobData.withQueueKey(\"__PUSH_PROCESS_JOB__\" + suffix);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1681,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static @NonNull JobData migratePushProcessMessageJob(@NonNull Context context,@NonNull JobData jobData) throws IOException {\n  Data data=jobData.getData();\n  String suffix=\"\";\n  if (data.getInt(\"message_state\") == 0) {\n    SignalServiceContent content=SignalServiceContent.deserialize(Base64.decode(data.getString(\"message_content\")));\n    if (content != null && content.getDataMessage().isPresent() && content.getDataMessage().get().getGroupContext().isPresent()) {\n      Log.i(TAG,\"Migrating a group message.\");\n      try {\n        GroupId groupId=GroupUtil.idFromGroupContext(content.getDataMessage().get().getGroupContext().get());\n        Recipient recipient=Recipient.externalGroupExact(context,groupId);\n        suffix=recipient.getId().toQueueKey();\n      }\n catch (      BadGroupIdException e) {\n        Log.w(TAG,\"Bad groupId! Using default queue.\");\n      }\n    }\n else     if (content != null) {\n      Log.i(TAG,\"Migrating an individual message.\");\n      suffix=RecipientId.from(content.getSender()).toQueueKey();\n    }\n  }\n else {\n    Log.i(TAG,\"Migrating an exception message.\");\n    String exceptionSender=data.getString(\"exception_sender\");\n    GroupId exceptionGroup=GroupId.parseNullableOrThrow(data.getStringOrDefault(\"exception_groupId\",null));\n    if (exceptionGroup != null) {\n      suffix=Recipient.externalGroupExact(context,exceptionGroup).getId().toQueueKey();\n    }\n else     if (exceptionSender != null) {\n      suffix=Recipient.external(context,exceptionSender).getId().toQueueKey();\n    }\n  }\n  return jobData.withQueueKey(\"__PUSH_PROCESS_JOB__\" + suffix);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 10,
        "endLineNumber" : 63,
        "endColumnNumber" : 50
      },
      "nodeContext" : "suffix=recipient.getId().toQueueKey();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 63,
    "startColumnNumber" : 19,
    "endLineNumber" : 63,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}