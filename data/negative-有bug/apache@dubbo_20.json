{
  "id" : 20,
  "expression" : "Invoker.class",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/ExceptionFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Invoker.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 55,
      "startColumnNumber" : 44,
      "endLineNumber" : 55,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 55,
        "startColumnNumber" : 39,
        "endLineNumber" : 55,
        "endColumnNumber" : 58
      },
      "nodeContext" : "mock(Invoker.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 55,
        "startColumnNumber" : 29,
        "endLineNumber" : 55,
        "endColumnNumber" : 58
      },
      "nodeContext" : "invoker=mock(Invoker.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Invoker<DemoService> invoker=mock(Invoker.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 48,
        "startColumnNumber" : 35,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Logger logger=mock(Logger.class);\n  RpcContext.getServiceContext().setRemoteAddress(\"127.0.0.1\",1234);\n  RpcException exception=new RpcException(\"TestRpcException\");\n  ExceptionFilter exceptionFilter=new ExceptionFilter();\n  RpcInvocation invocation=new RpcInvocation(\"sayHello\",DemoService.class.getName(),\"\",new Class<?>[]{String.class},new Object[]{\"world\"});\n  Invoker<DemoService> invoker=mock(Invoker.class);\n  given(invoker.getInterface()).willReturn(DemoService.class);\n  given(invoker.invoke(eq(invocation))).willThrow(exception);\n  try {\n    exceptionFilter.invoke(invoker,invocation);\n  }\n catch (  RpcException e) {\n    assertEquals(\"TestRpcException\",e.getMessage());\n    exceptionFilter.setLogger(logger);\n    exceptionFilter.onError(e,invoker,invocation);\n  }\n  Mockito.verify(logger).error(eq(\"Got unchecked and undeclared exception which called by 127.0.0.1. service: \" + DemoService.class.getName() + \", method: sayHello, exception: \"+ RpcException.class.getName()+ \": TestRpcException\"),eq(exception));\n  RpcContext.removeContext();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1301,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void testRpcException(){\n  Logger logger=mock(Logger.class);\n  RpcContext.getServiceContext().setRemoteAddress(\"127.0.0.1\",1234);\n  RpcException exception=new RpcException(\"TestRpcException\");\n  ExceptionFilter exceptionFilter=new ExceptionFilter();\n  RpcInvocation invocation=new RpcInvocation(\"sayHello\",DemoService.class.getName(),\"\",new Class<?>[]{String.class},new Object[]{\"world\"});\n  Invoker<DemoService> invoker=mock(Invoker.class);\n  given(invoker.getInterface()).willReturn(DemoService.class);\n  given(invoker.invoke(eq(invocation))).willThrow(exception);\n  try {\n    exceptionFilter.invoke(invoker,invocation);\n  }\n catch (  RpcException e) {\n    assertEquals(\"TestRpcException\",e.getMessage());\n    exceptionFilter.setLogger(logger);\n    exceptionFilter.onError(e,invoker,invocation);\n  }\n  Mockito.verify(logger).error(eq(\"Got unchecked and undeclared exception which called by 127.0.0.1. service: \" + DemoService.class.getName() + \", method: sayHello, exception: \"+ RpcException.class.getName()+ \": TestRpcException\"),eq(exception));\n  RpcContext.removeContext();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Invoker<DemoService> invoker=mock(Invoker.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.dubbo.rpc.Invoker>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 55,
    "startColumnNumber" : 44,
    "endLineNumber" : 55,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}