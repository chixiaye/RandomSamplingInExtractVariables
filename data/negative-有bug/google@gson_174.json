{
  "id" : 174,
  "expression" : "list",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 8,
      "endLineNumber" : 61,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 26
      },
      "nodeContext" : "list.add(read(in))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 27
      },
      "nodeContext" : "list.add(read(in));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 60,
        "startColumnNumber" : 27,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  list.add(read(in));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (in.hasNext()) {\n  list.add(read(in));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (token) {\ncase BEGIN_ARRAY:  List<Object> list=new ArrayList<Object>();\nin.beginArray();\nwhile (in.hasNext()) {\nlist.add(read(in));\n}\nin.endArray();\nreturn list;\ncase BEGIN_OBJECT:Map<String,Object> map=new LinkedTreeMap<String,Object>();\nin.beginObject();\nwhile (in.hasNext()) {\nmap.put(in.nextName(),read(in));\n}\nin.endObject();\nreturn map;\ncase STRING:return in.nextString();\ncase NUMBER:return in.nextDouble();\ncase BOOLEAN:return in.nextBoolean();\ncase NULL:in.nextNull();\nreturn null;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 116,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 54,
        "startColumnNumber" : 65,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JsonToken token=in.peek();\nswitch (token) {\ncase BEGIN_ARRAY:    List<Object> list=new ArrayList<Object>();\n  in.beginArray();\nwhile (in.hasNext()) {\n  list.add(read(in));\n}\nin.endArray();\nreturn list;\ncase BEGIN_OBJECT:Map<String,Object> map=new LinkedTreeMap<String,Object>();\nin.beginObject();\nwhile (in.hasNext()) {\nmap.put(in.nextName(),read(in));\n}\nin.endObject();\nreturn map;\ncase STRING:return in.nextString();\ncase NUMBER:return in.nextDouble();\ncase BOOLEAN:return in.nextBoolean();\ncase NULL:in.nextNull();\nreturn null;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Object read(JsonReader in) throws IOException {\n  JsonToken token=in.peek();\nswitch (token) {\ncase BEGIN_ARRAY:    List<Object> list=new ArrayList<Object>();\n  in.beginArray();\nwhile (in.hasNext()) {\n  list.add(read(in));\n}\nin.endArray();\nreturn list;\ncase BEGIN_OBJECT:Map<String,Object> map=new LinkedTreeMap<String,Object>();\nin.beginObject();\nwhile (in.hasNext()) {\nmap.put(in.nextName(),read(in));\n}\nin.endObject();\nreturn map;\ncase STRING:return in.nextString();\ncase NUMBER:return in.nextDouble();\ncase BOOLEAN:return in.nextBoolean();\ncase NULL:in.nextNull();\nreturn null;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 27
      },
      "nodeContext" : "list.add(read(in));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Object>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 64,
      "startColumnNumber" : 13,
      "endLineNumber" : 64,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return list;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (token) {\ncase BEGIN_ARRAY:  List<Object> list=new ArrayList<Object>();\nin.beginArray();\nwhile (in.hasNext()) {\nlist.add(read(in));\n}\nin.endArray();\nreturn list;\ncase BEGIN_OBJECT:Map<String,Object> map=new LinkedTreeMap<String,Object>();\nin.beginObject();\nwhile (in.hasNext()) {\nmap.put(in.nextName(),read(in));\n}\nin.endObject();\nreturn map;\ncase STRING:return in.nextString();\ncase NUMBER:return in.nextDouble();\ncase BOOLEAN:return in.nextBoolean();\ncase NULL:in.nextNull();\nreturn null;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 116,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 54,
        "startColumnNumber" : 65,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JsonToken token=in.peek();\nswitch (token) {\ncase BEGIN_ARRAY:    List<Object> list=new ArrayList<Object>();\n  in.beginArray();\nwhile (in.hasNext()) {\n  list.add(read(in));\n}\nin.endArray();\nreturn list;\ncase BEGIN_OBJECT:Map<String,Object> map=new LinkedTreeMap<String,Object>();\nin.beginObject();\nwhile (in.hasNext()) {\nmap.put(in.nextName(),read(in));\n}\nin.endObject();\nreturn map;\ncase STRING:return in.nextString();\ncase NUMBER:return in.nextDouble();\ncase BOOLEAN:return in.nextBoolean();\ncase NULL:in.nextNull();\nreturn null;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 822,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Object read(JsonReader in) throws IOException {\n  JsonToken token=in.peek();\nswitch (token) {\ncase BEGIN_ARRAY:    List<Object> list=new ArrayList<Object>();\n  in.beginArray();\nwhile (in.hasNext()) {\n  list.add(read(in));\n}\nin.endArray();\nreturn list;\ncase BEGIN_OBJECT:Map<String,Object> map=new LinkedTreeMap<String,Object>();\nin.beginObject();\nwhile (in.hasNext()) {\nmap.put(in.nextName(),read(in));\n}\nin.endObject();\nreturn map;\ncase STRING:return in.nextString();\ncase NUMBER:return in.nextDouble();\ncase BOOLEAN:return in.nextBoolean();\ncase NULL:in.nextNull();\nreturn null;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 18
      },
      "nodeContext" : "return list;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 8,
    "endLineNumber" : 61,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 64,
    "startColumnNumber" : 13,
    "endLineNumber" : 64,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}