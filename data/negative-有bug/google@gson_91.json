{
  "id" : 91,
  "expression" : "name",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/metrics/src/main/java/com/google/gson/metrics/CollectionsDeserializationBenchmark.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 82,
      "startColumnNumber" : 14,
      "endLineNumber" : 82,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 82,
        "startColumnNumber" : 14,
        "endLineNumber" : 82,
        "endColumnNumber" : 38
      },
      "nodeContext" : "name.equals(\"longValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 82,
        "startColumnNumber" : 14,
        "endLineNumber" : 82,
        "endColumnNumber" : 38
      },
      "nodeContext" : "name.equals(\"longValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 84,
      "startColumnNumber" : 21,
      "endLineNumber" : 84,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 84,
        "startColumnNumber" : 21,
        "endLineNumber" : 84,
        "endColumnNumber" : 44
      },
      "nodeContext" : "name.equals(\"intValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 84,
        "startColumnNumber" : 21,
        "endLineNumber" : 84,
        "endColumnNumber" : 44
      },
      "nodeContext" : "name.equals(\"intValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 86,
      "startColumnNumber" : 21,
      "endLineNumber" : 86,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 21,
        "endLineNumber" : 86,
        "endColumnNumber" : 48
      },
      "nodeContext" : "name.equals(\"booleanValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 86,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 86,
        "startColumnNumber" : 21,
        "endLineNumber" : 86,
        "endColumnNumber" : 48
      },
      "nodeContext" : "name.equals(\"booleanValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 88,
      "startColumnNumber" : 21,
      "endLineNumber" : 88,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 88,
        "startColumnNumber" : 21,
        "endLineNumber" : 88,
        "endColumnNumber" : 47
      },
      "nodeContext" : "name.equals(\"stringValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 88,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 86,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 88,
        "startColumnNumber" : 21,
        "endLineNumber" : 88,
        "endColumnNumber" : 47
      },
      "nodeContext" : "name.equals(\"stringValue\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "name",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 91,
      "startColumnNumber" : 56,
      "endLineNumber" : 91,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 91,
        "startColumnNumber" : 34,
        "endLineNumber" : 91,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"Unexpected name: \" + name",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 91,
        "startColumnNumber" : 18,
        "endLineNumber" : 91,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new IOException(\"Unexpected name: \" + name)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 62
      },
      "nodeContext" : "throw new IOException(\"Unexpected name: \" + name);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 90,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 88,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 86,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 62
      },
      "nodeContext" : "throw new IOException(\"Unexpected name: \" + name);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 82,
    "startColumnNumber" : 14,
    "endLineNumber" : 82,
    "endColumnNumber" : 18
  }, {
    "charLength" : 4,
    "startLineNumber" : 84,
    "startColumnNumber" : 21,
    "endLineNumber" : 84,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 86,
    "startColumnNumber" : 21,
    "endLineNumber" : 86,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 88,
    "startColumnNumber" : 21,
    "endLineNumber" : 88,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 91,
    "startColumnNumber" : 56,
    "endLineNumber" : 91,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}