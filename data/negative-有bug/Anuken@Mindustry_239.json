{
  "id" : 239,
  "expression" : "world",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/graphics/FogRenderer.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 50,
      "startColumnNumber" : 52,
      "endLineNumber" : 50,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 50,
        "startColumnNumber" : 52,
        "endLineNumber" : 50,
        "endColumnNumber" : 65
      },
      "nodeContext" : "world.width()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 50,
        "startColumnNumber" : 30,
        "endLineNumber" : 50,
        "endColumnNumber" : 82
      },
      "nodeContext" : "staticFog.resizeCheck(world.width(),world.height())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 82
      },
      "nodeContext" : "clearStatic=staticFog.resizeCheck(world.width(),world.height())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 83
      },
      "nodeContext" : "boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 83
      },
      "nodeContext" : "boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  }, {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 50,
      "startColumnNumber" : 67,
      "endLineNumber" : 50,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 50,
        "startColumnNumber" : 67,
        "endLineNumber" : 50,
        "endColumnNumber" : 81
      },
      "nodeContext" : "world.height()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 50,
        "startColumnNumber" : 30,
        "endLineNumber" : 50,
        "endColumnNumber" : 82
      },
      "nodeContext" : "staticFog.resizeCheck(world.width(),world.height())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 82
      },
      "nodeContext" : "clearStatic=staticFog.resizeCheck(world.width(),world.height())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 83
      },
      "nodeContext" : "boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 83
      },
      "nodeContext" : "boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  }, {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 52,
      "startColumnNumber" : 26,
      "endLineNumber" : 52,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 52,
        "startColumnNumber" : 26,
        "endLineNumber" : 52,
        "endColumnNumber" : 39
      },
      "nodeContext" : "world.width()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 56
      },
      "nodeContext" : "dynamicFog.resize(world.width(),world.height())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 57
      },
      "nodeContext" : "dynamicFog.resize(world.width(),world.height());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 57
      },
      "nodeContext" : "dynamicFog.resize(world.width(),world.height());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  }, {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 52,
      "startColumnNumber" : 41,
      "endLineNumber" : 52,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 52,
        "startColumnNumber" : 41,
        "endLineNumber" : 52,
        "endColumnNumber" : 55
      },
      "nodeContext" : "world.height()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 56
      },
      "nodeContext" : "dynamicFog.resize(world.width(),world.height())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 57
      },
      "nodeContext" : "dynamicFog.resize(world.width(),world.height());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 57
      },
      "nodeContext" : "dynamicFog.resize(world.width(),world.height());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  }, {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 115,
      "startColumnNumber" : 42,
      "endLineNumber" : 115,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 115,
        "startColumnNumber" : 42,
        "endLineNumber" : 115,
        "endColumnNumber" : 55
      },
      "nodeContext" : "world.width()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  }, {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 115,
      "startColumnNumber" : 57,
      "endLineNumber" : 115,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 115,
        "startColumnNumber" : 57,
        "endLineNumber" : 115,
        "endColumnNumber" : 71
      },
      "nodeContext" : "world.height()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  }, {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 120,
      "startColumnNumber" : 45,
      "endLineNumber" : 120,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 120,
        "startColumnNumber" : 45,
        "endLineNumber" : 120,
        "endColumnNumber" : 58
      },
      "nodeContext" : "world.width()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 117,
        "startColumnNumber" : 33,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Draw.color(state.rules.staticColor);\n  Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (state.rules.staticFog) {\n  Draw.color(state.rules.staticColor);\n  Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  }, {
    "nodeContext" : "world",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 120,
      "startColumnNumber" : 60,
      "endLineNumber" : 120,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 120,
        "startColumnNumber" : 60,
        "endLineNumber" : 120,
        "endColumnNumber" : 74
      },
      "nodeContext" : "world.height()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 117,
        "startColumnNumber" : 33,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Draw.color(state.rules.staticColor);\n  Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (state.rules.staticFog) {\n  Draw.color(state.rules.staticColor);\n  Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2829,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void drawFog(){\n  if (fogControl.getDiscovered(player.team()) == null)   return;\n  boolean clearStatic=staticFog.resizeCheck(world.width(),world.height());\n  dynamicFog.resize(world.width(),world.height());\n  if (state.rules.staticFog && player.team() != lastTeam) {\n    copyFromCpu();\n    lastTeam=player.team();\n    clearStatic=false;\n  }\n{\n    Draw.proj(0,0,staticFog.getWidth() * tilesize,staticFog.getHeight() * tilesize);\n    dynamicFog.begin(Color.black);\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Team team=player.team();\n    for (    var build : indexer.getFlagged(team,BlockFlag.hasFogRadius)) {\n      poly(build.x,build.y,build.fogRadius() * tilesize);\n    }\n    for (    var unit : team.data().units) {\n      poly(unit.x,unit.y,unit.type.fogRadius * tilesize);\n    }\n    dynamicFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog && (clearStatic || events.size > 0)) {\n    Draw.proj(0,0,staticFog.getWidth(),staticFog.getHeight());\n    if (clearStatic) {\n      staticFog.begin(Color.black);\n    }\n else {\n      staticFog.begin();\n    }\n    ScissorStack.push(rect.set(1,1,staticFog.getWidth() - 2,staticFog.getHeight() - 2));\n    Draw.color(Color.white);\n    for (int i=0; i < events.size; i++) {\n      renderEvent(events.items[i]);\n    }\n    events.clear();\n    staticFog.end();\n    ScissorStack.pop();\n    Draw.proj(Core.camera);\n  }\n  if (state.rules.staticFog) {\n    staticFog.getTexture().setFilter(TextureFilter.linear);\n  }\n  dynamicFog.getTexture().setFilter(TextureFilter.linear);\n  Draw.shader(Shaders.fog);\n  Draw.color(state.rules.dynamicColor);\n  Draw.fbo(dynamicFog.getTexture(),world.width(),world.height(),tilesize);\n  if (state.rules.staticFog) {\n    Draw.color(state.rules.staticColor);\n    Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n  }\n  Draw.shader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Draw.fbo(staticFog.getTexture(),world.width(),world.height(),tilesize,tilesize / 2f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.core.World"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 50,
    "startColumnNumber" : 52,
    "endLineNumber" : 50,
    "endColumnNumber" : 57
  }, {
    "charLength" : 5,
    "startLineNumber" : 50,
    "startColumnNumber" : 67,
    "endLineNumber" : 50,
    "endColumnNumber" : 72
  }, {
    "charLength" : 5,
    "startLineNumber" : 52,
    "startColumnNumber" : 26,
    "endLineNumber" : 52,
    "endColumnNumber" : 31
  }, {
    "charLength" : 5,
    "startLineNumber" : 52,
    "startColumnNumber" : 41,
    "endLineNumber" : 52,
    "endColumnNumber" : 46
  }, {
    "charLength" : 5,
    "startLineNumber" : 115,
    "startColumnNumber" : 42,
    "endLineNumber" : 115,
    "endColumnNumber" : 47
  }, {
    "charLength" : 5,
    "startLineNumber" : 115,
    "startColumnNumber" : 57,
    "endLineNumber" : 115,
    "endColumnNumber" : 62
  }, {
    "charLength" : 5,
    "startLineNumber" : 120,
    "startColumnNumber" : 45,
    "endLineNumber" : 120,
    "endColumnNumber" : 50
  }, {
    "charLength" : 5,
    "startLineNumber" : 120,
    "startColumnNumber" : 60,
    "endLineNumber" : 120,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  } ]
}