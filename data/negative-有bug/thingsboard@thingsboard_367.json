{
  "id" : 367,
  "expression" : "relatedEdgeIds",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/controller/CustomerController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "relatedEdgeIds",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 194,
      "startColumnNumber" : 65,
      "endLineNumber" : 194,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 194,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 80
      },
      "nodeContext" : "sendDeleteNotificationMsg(getTenantId(),customerId,relatedEdgeIds)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 194,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 81
      },
      "nodeContext" : "sendDeleteNotificationMsg(getTenantId(),customerId,relatedEdgeIds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 182,
        "startColumnNumber" : 12,
        "endLineNumber" : 196,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CustomerId customerId=new CustomerId(toUUID(strCustomerId));\n  Customer customer=checkCustomerId(customerId,Operation.DELETE);\n  List<EdgeId> relatedEdgeIds=findRelatedEdgeIds(getTenantId(),customerId);\n  customerService.deleteCustomer(getTenantId(),customerId);\n  logEntityAction(customerId,customer,customer.getId(),ActionType.DELETED,null,strCustomerId);\n  sendDeleteNotificationMsg(getTenantId(),customerId,relatedEdgeIds);\n  tbClusterService.broadcastEntityStateChangeEvent(getTenantId(),customerId,ComponentLifecycleEvent.DELETED);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  CustomerId customerId=new CustomerId(toUUID(strCustomerId));\n  Customer customer=checkCustomerId(customerId,Operation.DELETE);\n  List<EdgeId> relatedEdgeIds=findRelatedEdgeIds(getTenantId(),customerId);\n  customerService.deleteCustomer(getTenantId(),customerId);\n  logEntityAction(customerId,customer,customer.getId(),ActionType.DELETED,null,strCustomerId);\n  sendDeleteNotificationMsg(getTenantId(),customerId,relatedEdgeIds);\n  tbClusterService.broadcastEntityStateChangeEvent(getTenantId(),customerId,ComponentLifecycleEvent.DELETED);\n}\n catch (Exception e) {\n  logEntityAction(emptyId(EntityType.CUSTOMER),null,null,ActionType.DELETED,e,strCustomerId);\n  throw handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 180,
        "startColumnNumber" : 108,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkParameter(CUSTOMER_ID,strCustomerId);\n  try {\n    CustomerId customerId=new CustomerId(toUUID(strCustomerId));\n    Customer customer=checkCustomerId(customerId,Operation.DELETE);\n    List<EdgeId> relatedEdgeIds=findRelatedEdgeIds(getTenantId(),customerId);\n    customerService.deleteCustomer(getTenantId(),customerId);\n    logEntityAction(customerId,customer,customer.getId(),ActionType.DELETED,null,strCustomerId);\n    sendDeleteNotificationMsg(getTenantId(),customerId,relatedEdgeIds);\n    tbClusterService.broadcastEntityStateChangeEvent(getTenantId(),customerId,ComponentLifecycleEvent.DELETED);\n  }\n catch (  Exception e) {\n    logEntityAction(emptyId(EntityType.CUSTOMER),null,null,ActionType.DELETED,e,strCustomerId);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1708,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiOperation(value=\"Delete Customer (deleteCustomer)\",notes=\"Deletes the Customer and all customer Users. \" + \"All assigned Dashboards, Assets, Devices, etc. will be unassigned but not deleted. \" + \"Referencing non-existing Customer Id will cause an error.\"+ TENANT_AUTHORITY_PARAGRAPH) @PreAuthorize(\"hasAuthority('TENANT_ADMIN')\") @RequestMapping(value=\"/customer/{customerId}\",method=RequestMethod.DELETE) @ResponseStatus(value=HttpStatus.OK) public void deleteCustomer(@ApiParam(value=CUSTOMER_ID_PARAM_DESCRIPTION) @PathVariable(CUSTOMER_ID) String strCustomerId) throws ThingsboardException {\n  checkParameter(CUSTOMER_ID,strCustomerId);\n  try {\n    CustomerId customerId=new CustomerId(toUUID(strCustomerId));\n    Customer customer=checkCustomerId(customerId,Operation.DELETE);\n    List<EdgeId> relatedEdgeIds=findRelatedEdgeIds(getTenantId(),customerId);\n    customerService.deleteCustomer(getTenantId(),customerId);\n    logEntityAction(customerId,customer,customer.getId(),ActionType.DELETED,null,strCustomerId);\n    sendDeleteNotificationMsg(getTenantId(),customerId,relatedEdgeIds);\n    tbClusterService.broadcastEntityStateChangeEvent(getTenantId(),customerId,ComponentLifecycleEvent.DELETED);\n  }\n catch (  Exception e) {\n    logEntityAction(emptyId(EntityType.CUSTOMER),null,null,ActionType.DELETED,e,strCustomerId);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 194,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 81
      },
      "nodeContext" : "sendDeleteNotificationMsg(getTenantId(),customerId,relatedEdgeIds);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.thingsboard.server.common.data.id.EdgeId>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 194,
    "startColumnNumber" : 65,
    "endLineNumber" : 194,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}