{
  "id" : 97,
  "expression" : "((MockAwareVerificationMode)verificationMode).getMock()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/handler/MockHandlerImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((MockAwareVerificationMode)verificationMode).getMock()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 70,
      "startColumnNumber" : 20,
      "endLineNumber" : 70,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 7,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 41
      },
      "nodeContext" : "MockUtil.areSameMocks(((MockAwareVerificationMode)verificationMode).getMock(),invocation.getMock())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (MockUtil.areSameMocks(((MockAwareVerificationMode)verificationMode).getMock(),invocation.getMock())) {\n  VerificationDataImpl data=new VerificationDataImpl(invocationContainer,invocationMatcher);\n  verificationMode.verify(data);\n  return null;\n}\n else {\n  mockingProgress().verificationStarted(verificationMode);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 66,
        "startColumnNumber" : 38,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (MockUtil.areSameMocks(((MockAwareVerificationMode)verificationMode).getMock(),invocation.getMock())) {\n    VerificationDataImpl data=new VerificationDataImpl(invocationContainer,invocationMatcher);\n    verificationMode.verify(data);\n    return null;\n  }\n else {\n    mockingProgress().verificationStarted(verificationMode);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (verificationMode != null) {\n  if (MockUtil.areSameMocks(((MockAwareVerificationMode)verificationMode).getMock(),invocation.getMock())) {\n    VerificationDataImpl data=new VerificationDataImpl(invocationContainer,invocationMatcher);\n    verificationMode.verify(data);\n    return null;\n  }\n else {\n    mockingProgress().verificationStarted(verificationMode);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3716,
        "startLineNumber" : 48,
        "startColumnNumber" : 65,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (invocationContainer.hasAnswersForStubbing()) {\n    InvocationMatcher invocationMatcher=matchersBinder.bindMatchers(mockingProgress().getArgumentMatcherStorage(),invocation);\n    invocationContainer.setMethodForStubbing(invocationMatcher);\n    return null;\n  }\n  VerificationMode verificationMode=mockingProgress().pullVerificationMode();\n  InvocationMatcher invocationMatcher=matchersBinder.bindMatchers(mockingProgress().getArgumentMatcherStorage(),invocation);\n  mockingProgress().validateState();\n  if (verificationMode != null) {\n    if (MockUtil.areSameMocks(((MockAwareVerificationMode)verificationMode).getMock(),invocation.getMock())) {\n      VerificationDataImpl data=new VerificationDataImpl(invocationContainer,invocationMatcher);\n      verificationMode.verify(data);\n      return null;\n    }\n else {\n      mockingProgress().verificationStarted(verificationMode);\n    }\n  }\n  invocationContainer.setInvocationForPotentialStubbing(invocationMatcher);\n  OngoingStubbingImpl<T> ongoingStubbing=new OngoingStubbingImpl<T>(invocationContainer);\n  mockingProgress().reportOngoingStubbing(ongoingStubbing);\n  StubbedInvocationMatcher stubbing=invocationContainer.findAnswerFor(invocation);\n  notifyStubbedAnswerLookup(invocation,stubbing,invocationContainer.getStubbingsAscending(),(CreationSettings)mockSettings);\n  if (stubbing != null) {\n    stubbing.captureArgumentsFrom(invocation);\n    try {\n      return stubbing.answer(invocation);\n    }\n  finally {\n      mockingProgress().reportOngoingStubbing(ongoingStubbing);\n    }\n  }\n else {\n    Object ret=mockSettings.getDefaultAnswer().answer(invocation);\n    DefaultAnswerValidator.validateReturnValueFor(invocation,ret);\n    invocationContainer.resetInvocationForPotentialStubbing(invocationMatcher);\n    return ret;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3777,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Object handle(Invocation invocation) throws Throwable {\n  if (invocationContainer.hasAnswersForStubbing()) {\n    InvocationMatcher invocationMatcher=matchersBinder.bindMatchers(mockingProgress().getArgumentMatcherStorage(),invocation);\n    invocationContainer.setMethodForStubbing(invocationMatcher);\n    return null;\n  }\n  VerificationMode verificationMode=mockingProgress().pullVerificationMode();\n  InvocationMatcher invocationMatcher=matchersBinder.bindMatchers(mockingProgress().getArgumentMatcherStorage(),invocation);\n  mockingProgress().validateState();\n  if (verificationMode != null) {\n    if (MockUtil.areSameMocks(((MockAwareVerificationMode)verificationMode).getMock(),invocation.getMock())) {\n      VerificationDataImpl data=new VerificationDataImpl(invocationContainer,invocationMatcher);\n      verificationMode.verify(data);\n      return null;\n    }\n else {\n      mockingProgress().verificationStarted(verificationMode);\n    }\n  }\n  invocationContainer.setInvocationForPotentialStubbing(invocationMatcher);\n  OngoingStubbingImpl<T> ongoingStubbing=new OngoingStubbingImpl<T>(invocationContainer);\n  mockingProgress().reportOngoingStubbing(ongoingStubbing);\n  StubbedInvocationMatcher stubbing=invocationContainer.findAnswerFor(invocation);\n  notifyStubbedAnswerLookup(invocation,stubbing,invocationContainer.getStubbingsAscending(),(CreationSettings)mockSettings);\n  if (stubbing != null) {\n    stubbing.captureArgumentsFrom(invocation);\n    try {\n      return stubbing.answer(invocation);\n    }\n  finally {\n      mockingProgress().reportOngoingStubbing(ongoingStubbing);\n    }\n  }\n else {\n    Object ret=mockSettings.getDefaultAnswer().answer(invocation);\n    DefaultAnswerValidator.validateReturnValueFor(invocation,ret);\n    invocationContainer.resetInvocationForPotentialStubbing(invocationMatcher);\n    return ret;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 41
      },
      "nodeContext" : "MockUtil.areSameMocks(((MockAwareVerificationMode)verificationMode).getMock(),invocation.getMock())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 70,
    "startColumnNumber" : 20,
    "endLineNumber" : 70,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}