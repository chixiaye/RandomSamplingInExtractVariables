{
  "id" : 411,
  "expression" : "(byte)5",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/test/java/io/netty/handler/codec/ByteToMessageDecoderForBufferTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(byte)5",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 571,
      "startColumnNumber" : 21,
      "endLineNumber" : 571,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 571,
        "startColumnNumber" : 8,
        "endLineNumber" : 571,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals((byte)5,buffer5.readByte())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 571,
        "startColumnNumber" : 8,
        "endLineNumber" : 571,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals((byte)5,buffer5.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 549,
        "startColumnNumber" : 77,
        "endLineNumber" : 575,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.allocator=allocator;\n  ByteToMessageDecoderForBuffer decoder=new ByteToMessageDecoderForBuffer(cumulator){\n    int count;\n    @Override protected void decode(    ChannelHandlerContext ctx,    Buffer in){\n      ctx.fireChannelRead(in.readByte());\n      if (++count >= 4) {\n        ctx.pipeline().remove(this);\n      }\n    }\n  }\n;\n  EmbeddedChannel channel=new EmbeddedChannel(decoder);\n  assertTrue(channel.writeInbound(newBufferWithData(allocator,new byte[]{1,2,3,4,5})));\n  assertEquals((byte)1,(Byte)channel.readInbound());\n  assertEquals((byte)2,(Byte)channel.readInbound());\n  assertEquals((byte)3,(Byte)channel.readInbound());\n  assertEquals((byte)4,(Byte)channel.readInbound());\n  Buffer buffer5=channel.readInbound();\n  assertNotNull(buffer5);\n  assertEquals((byte)5,buffer5.readByte());\n  assertFalse(buffer5.readableBytes() > 0);\n  assertTrue(buffer5.isAccessible());\n  assertFalse(channel.finish());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1348,
        "startLineNumber" : 547,
        "startColumnNumber" : 4,
        "endLineNumber" : 575,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ParameterizedTest(name=PARAMETERIZED_NAME) @MethodSource(\"allocators\") public void testDisorder(BufferAllocator allocator,Cumulator cumulator){\n  this.allocator=allocator;\n  ByteToMessageDecoderForBuffer decoder=new ByteToMessageDecoderForBuffer(cumulator){\n    int count;\n    @Override protected void decode(    ChannelHandlerContext ctx,    Buffer in){\n      ctx.fireChannelRead(in.readByte());\n      if (++count >= 4) {\n        ctx.pipeline().remove(this);\n      }\n    }\n  }\n;\n  EmbeddedChannel channel=new EmbeddedChannel(decoder);\n  assertTrue(channel.writeInbound(newBufferWithData(allocator,new byte[]{1,2,3,4,5})));\n  assertEquals((byte)1,(Byte)channel.readInbound());\n  assertEquals((byte)2,(Byte)channel.readInbound());\n  assertEquals((byte)3,(Byte)channel.readInbound());\n  assertEquals((byte)4,(Byte)channel.readInbound());\n  Buffer buffer5=channel.readInbound();\n  assertNotNull(buffer5);\n  assertEquals((byte)5,buffer5.readByte());\n  assertFalse(buffer5.readableBytes() > 0);\n  assertTrue(buffer5.isAccessible());\n  assertFalse(channel.finish());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 571,
        "startColumnNumber" : 8,
        "endLineNumber" : 571,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals((byte)5,buffer5.readByte());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 571,
    "startColumnNumber" : 21,
    "endLineNumber" : 571,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}