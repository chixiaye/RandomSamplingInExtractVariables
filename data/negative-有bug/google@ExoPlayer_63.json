{
  "id" : 63,
  "expression" : "versionStringsLeft[i].equals(versionStringsRight[i])",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/extensions/cronet/src/main/java/com/google/android/exoplayer2/ext/cronet/CronetUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "versionStringsLeft[i].equals(versionStringsRight[i])",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 171,
      "startColumnNumber" : 13,
      "endLineNumber" : 171,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 171,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 65
      },
      "nodeContext" : "!versionStringsLeft[i].equals(versionStringsRight[i])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!versionStringsLeft[i].equals(versionStringsRight[i])) {\n  try {\n    int versionIntLeft=Integer.parseInt(versionStringsLeft[i]);\n    int versionIntRight=Integer.parseInt(versionStringsRight[i]);\n    return versionIntLeft - versionIntRight;\n  }\n catch (  NumberFormatException e) {\n    return 0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 170,
        "startColumnNumber" : 42,
        "endLineNumber" : 180,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (!versionStringsLeft[i].equals(versionStringsRight[i])) {\n    try {\n      int versionIntLeft=Integer.parseInt(versionStringsLeft[i]);\n      int versionIntRight=Integer.parseInt(versionStringsRight[i]);\n      return versionIntLeft - versionIntRight;\n    }\n catch (    NumberFormatException e) {\n      return 0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 170,
        "startColumnNumber" : 6,
        "endLineNumber" : 180,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < minLength; i++) {\n  if (!versionStringsLeft[i].equals(versionStringsRight[i])) {\n    try {\n      int versionIntLeft=Integer.parseInt(versionStringsLeft[i]);\n      int versionIntRight=Integer.parseInt(versionStringsRight[i]);\n      return versionIntLeft - versionIntRight;\n    }\n catch (    NumberFormatException e) {\n      return 0;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 756,
        "startLineNumber" : 163,
        "startColumnNumber" : 69,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (versionLeft == null || versionRight == null) {\n    return 0;\n  }\n  String[] versionStringsLeft=Util.split(versionLeft,\"\\\\.\");\n  String[] versionStringsRight=Util.split(versionRight,\"\\\\.\");\n  int minLength=min(versionStringsLeft.length,versionStringsRight.length);\n  for (int i=0; i < minLength; i++) {\n    if (!versionStringsLeft[i].equals(versionStringsRight[i])) {\n      try {\n        int versionIntLeft=Integer.parseInt(versionStringsLeft[i]);\n        int versionIntRight=Integer.parseInt(versionStringsRight[i]);\n        return versionIntLeft - versionIntRight;\n      }\n catch (      NumberFormatException e) {\n        return 0;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 161,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Compares version strings of format \"12.123.35.23\". \n */\nprivate static int compareVersionStrings(@Nullable String versionLeft,@Nullable String versionRight){\n  if (versionLeft == null || versionRight == null) {\n    return 0;\n  }\n  String[] versionStringsLeft=Util.split(versionLeft,\"\\\\.\");\n  String[] versionStringsRight=Util.split(versionRight,\"\\\\.\");\n  int minLength=min(versionStringsLeft.length,versionStringsRight.length);\n  for (int i=0; i < minLength; i++) {\n    if (!versionStringsLeft[i].equals(versionStringsRight[i])) {\n      try {\n        int versionIntLeft=Integer.parseInt(versionStringsLeft[i]);\n        int versionIntRight=Integer.parseInt(versionStringsRight[i]);\n        return versionIntLeft - versionIntRight;\n      }\n catch (      NumberFormatException e) {\n        return 0;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 171,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 65
      },
      "nodeContext" : "!versionStringsLeft[i].equals(versionStringsRight[i])",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 171,
    "startColumnNumber" : 13,
    "endLineNumber" : 171,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}