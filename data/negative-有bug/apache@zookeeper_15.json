{
  "id" : 15,
  "expression" : "response",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/zookeeper-server/src/main/java/org/apache/zookeeper/compat/ProtocolManager.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 96,
      "startColumnNumber" : 12,
      "endLineNumber" : 96,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 67
      },
      "nodeContext" : "response.setReadOnly(inputArchive.readBool(\"readOnly\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 68
      },
      "nodeContext" : "response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n  this.isReadonlyAvailable=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n  this.isReadonlyAvailable=true;\n}\n catch (Exception e) {\n  response.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 735,
        "startLineNumber" : 85,
        "startColumnNumber" : 100,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectResponseWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectResponseWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectResponse response=deserializeConnectResponseWithoutReadonly(inputArchive);\n  try {\n    response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    response.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Deserializing  {@link ConnectResponse} should be specially handled for response from serverversion before and including ZooKeeper 3.3 which doesn't understand readOnly field.\n */\npublic ConnectResponse deserializeConnectResponse(InputArchive inputArchive) throws IOException {\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectResponseWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectResponseWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectResponse response=deserializeConnectResponseWithoutReadonly(inputArchive);\n  try {\n    response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    response.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 68
      },
      "nodeContext" : "response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.compat.ConnectResponse"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 99,
      "startColumnNumber" : 12,
      "endLineNumber" : 99,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 39
      },
      "nodeContext" : "response.setReadOnly(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 40
      },
      "nodeContext" : "response.setReadOnly(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 98,
        "startColumnNumber" : 30,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  response.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  response.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n  this.isReadonlyAvailable=true;\n}\n catch (Exception e) {\n  response.setReadOnly(false);\n  this.isReadonlyAvailable=false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 735,
        "startLineNumber" : 85,
        "startColumnNumber" : 100,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectResponseWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectResponseWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectResponse response=deserializeConnectResponseWithoutReadonly(inputArchive);\n  try {\n    response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    response.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Deserializing  {@link ConnectResponse} should be specially handled for response from serverversion before and including ZooKeeper 3.3 which doesn't understand readOnly field.\n */\npublic ConnectResponse deserializeConnectResponse(InputArchive inputArchive) throws IOException {\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectResponseWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectResponseWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectResponse response=deserializeConnectResponseWithoutReadonly(inputArchive);\n  try {\n    response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    response.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 99,
        "startColumnNumber" : 12,
        "endLineNumber" : 99,
        "endColumnNumber" : 40
      },
      "nodeContext" : "response.setReadOnly(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.compat.ConnectResponse"
  }, {
    "nodeContext" : "response",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 102,
      "startColumnNumber" : 15,
      "endLineNumber" : 102,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return response;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 735,
        "startLineNumber" : 85,
        "startColumnNumber" : 100,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectResponseWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectResponseWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectResponse response=deserializeConnectResponseWithoutReadonly(inputArchive);\n  try {\n    response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    response.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Deserializing  {@link ConnectResponse} should be specially handled for response from serverversion before and including ZooKeeper 3.3 which doesn't understand readOnly field.\n */\npublic ConnectResponse deserializeConnectResponse(InputArchive inputArchive) throws IOException {\n  if (isReadonlyAvailable != null) {\n    if (isReadonlyAvailable) {\n      return deserializeConnectResponseWithReadonly(inputArchive);\n    }\n else {\n      return deserializeConnectResponseWithoutReadonly(inputArchive);\n    }\n  }\n  final ConnectResponse response=deserializeConnectResponseWithoutReadonly(inputArchive);\n  try {\n    response.setReadOnly(inputArchive.readBool(\"readOnly\"));\n    this.isReadonlyAvailable=true;\n  }\n catch (  Exception e) {\n    response.setReadOnly(false);\n    this.isReadonlyAvailable=false;\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return response;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.compat.ConnectResponse"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 96,
    "startColumnNumber" : 12,
    "endLineNumber" : 96,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 99,
    "startColumnNumber" : 12,
    "endLineNumber" : 99,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 102,
    "startColumnNumber" : 15,
    "endLineNumber" : 102,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}