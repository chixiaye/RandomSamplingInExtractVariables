{
  "id" : 220,
  "expression" : "one.setScale(another.scale(),RoundingMode.UNNECESSARY)",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/check/consistency/DataConsistencyCheckUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "one.setScale(another.scale(),RoundingMode.UNNECESSARY)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 55,
      "startLineNumber" : 49,
      "startColumnNumber" : 29,
      "endLineNumber" : 49,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 84
      },
      "nodeContext" : "decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 85
      },
      "nodeContext" : "decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 48,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n  decimalTwo=another;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (one.scale() > another.scale()) {\n  decimalOne=one;\n  decimalTwo=another.setScale(one.scale(),RoundingMode.UNNECESSARY);\n}\n else {\n  decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n  decimalTwo=another;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 44,
        "startColumnNumber" : 44,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (one.scale() > another.scale()) {\n    decimalOne=one;\n    decimalTwo=another.setScale(one.scale(),RoundingMode.UNNECESSARY);\n  }\n else {\n    decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n    decimalTwo=another;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (one.scale() != another.scale()) {\n  if (one.scale() > another.scale()) {\n    decimalOne=one;\n    decimalTwo=another.setScale(one.scale(),RoundingMode.UNNECESSARY);\n  }\n else {\n    decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n    decimalTwo=another;\n  }\n}\n else {\n  decimalOne=one;\n  decimalTwo=another;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 41,
        "startColumnNumber" : 93,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BigDecimal decimalOne;\n  BigDecimal decimalTwo;\n  if (one.scale() != another.scale()) {\n    if (one.scale() > another.scale()) {\n      decimalOne=one;\n      decimalTwo=another.setScale(one.scale(),RoundingMode.UNNECESSARY);\n    }\n else {\n      decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n      decimalTwo=another;\n    }\n  }\n else {\n    decimalOne=one;\n    decimalTwo=another;\n  }\n  return decimalOne.equals(decimalTwo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Check two BigDecimal whether equals or not. <p>Scale will be ignored, so <code>332.2</code> is equals to <code>332.20</code>.</p>\n * @param one first BigDecimal\n * @param another second BigDecimal\n * @return equals or not\n */\npublic static boolean isBigDecimalEquals(final BigDecimal one,final BigDecimal another){\n  BigDecimal decimalOne;\n  BigDecimal decimalTwo;\n  if (one.scale() != another.scale()) {\n    if (one.scale() > another.scale()) {\n      decimalOne=one;\n      decimalTwo=another.setScale(one.scale(),RoundingMode.UNNECESSARY);\n    }\n else {\n      decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n      decimalTwo=another;\n    }\n  }\n else {\n    decimalOne=one;\n    decimalTwo=another;\n  }\n  return decimalOne.equals(decimalTwo);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 49,
        "endColumnNumber" : 85
      },
      "nodeContext" : "decimalOne=one.setScale(another.scale(),RoundingMode.UNNECESSARY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.math.BigDecimal"
  } ],
  "positionList" : [ {
    "charLength" : 55,
    "startLineNumber" : 49,
    "startColumnNumber" : 29,
    "endLineNumber" : 49,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}