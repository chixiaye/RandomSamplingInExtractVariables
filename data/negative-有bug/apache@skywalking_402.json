{
  "id" : 402,
  "expression" : "ruleRegex",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/config/group/EndpointGroupingRule.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ruleRegex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 40,
      "startColumnNumber" : 47,
      "endLineNumber" : 40,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 57
      },
      "nodeContext" : "formatGroup.addRule(endpointGroupName,ruleRegex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 58
      },
      "nodeContext" : "formatGroup.addRule(endpointGroupName,ruleRegex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 38,
        "startColumnNumber" : 81,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StringFormatGroup formatGroup=rules.computeIfAbsent(serviceName,name -> new StringFormatGroup());\n  formatGroup.addRule(endpointGroupName,ruleRegex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Add a new rule to the context.\n * @param serviceName       of the new rule\n * @param endpointGroupName represents the logic endpoint name.\n * @param ruleRegex         match the endpoints which should be in the group name.\n */\nvoid addRule(String serviceName,String endpointGroupName,String ruleRegex){\n  final StringFormatGroup formatGroup=rules.computeIfAbsent(serviceName,name -> new StringFormatGroup());\n  formatGroup.addRule(endpointGroupName,ruleRegex);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 58
      },
      "nodeContext" : "formatGroup.addRule(endpointGroupName,ruleRegex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 40,
    "startColumnNumber" : 47,
    "endLineNumber" : 40,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}