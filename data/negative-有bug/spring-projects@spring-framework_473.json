{
  "id" : 473,
  "expression" : "\"ClassPathResource.class\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/test/java/org/springframework/web/context/support/ResourceTests.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ClassPathResource.class\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 38,
      "startColumnNumber" : 47,
      "endLineNumber" : 38,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 38,
        "startColumnNumber" : 23,
        "endLineNumber" : 38,
        "endColumnNumber" : 73
      },
      "nodeContext" : "resource.createRelative(\"ClassPathResource.class\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 38,
        "startColumnNumber" : 11,
        "endLineNumber" : 38,
        "endColumnNumber" : 73
      },
      "nodeContext" : "relative1=resource.createRelative(\"ClassPathResource.class\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 34,
        "startColumnNumber" : 67,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertEquals(\"Resource.class\",resource.getFilename());\n  assertTrue(resource.getURL().getFile().endsWith(\"Resource.class\"));\n  Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n  assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n  assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n  assertTrue(relative1.exists());\n  Resource relative2=resource.createRelative(\"support/ResourcePatternResolver.class\");\n  assertEquals(\"ResourcePatternResolver.class\",relative2.getFilename());\n  assertTrue(relative2.getURL().getFile().endsWith(\"ResourcePatternResolver.class\"));\n  assertTrue(relative2.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void doTestResource(Resource resource) throws IOException {\n  assertEquals(\"Resource.class\",resource.getFilename());\n  assertTrue(resource.getURL().getFile().endsWith(\"Resource.class\"));\n  Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n  assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n  assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n  assertTrue(relative1.exists());\n  Resource relative2=resource.createRelative(\"support/ResourcePatternResolver.class\");\n  assertEquals(\"ResourcePatternResolver.class\",relative2.getFilename());\n  assertTrue(relative2.getURL().getFile().endsWith(\"ResourcePatternResolver.class\"));\n  assertTrue(relative2.exists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"ClassPathResource.class\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 39,
      "startColumnNumber" : 15,
      "endLineNumber" : 39,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(\"ClassPathResource.class\",relative1.getFilename())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 34,
        "startColumnNumber" : 67,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertEquals(\"Resource.class\",resource.getFilename());\n  assertTrue(resource.getURL().getFile().endsWith(\"Resource.class\"));\n  Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n  assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n  assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n  assertTrue(relative1.exists());\n  Resource relative2=resource.createRelative(\"support/ResourcePatternResolver.class\");\n  assertEquals(\"ResourcePatternResolver.class\",relative2.getFilename());\n  assertTrue(relative2.getURL().getFile().endsWith(\"ResourcePatternResolver.class\"));\n  assertTrue(relative2.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void doTestResource(Resource resource) throws IOException {\n  assertEquals(\"Resource.class\",resource.getFilename());\n  assertTrue(resource.getURL().getFile().endsWith(\"Resource.class\"));\n  Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n  assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n  assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n  assertTrue(relative1.exists());\n  Resource relative2=resource.createRelative(\"support/ResourcePatternResolver.class\");\n  assertEquals(\"ResourcePatternResolver.class\",relative2.getFilename());\n  assertTrue(relative2.getURL().getFile().endsWith(\"ResourcePatternResolver.class\"));\n  assertTrue(relative2.exists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"ClassPathResource.class\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 40,
      "startColumnNumber" : 51,
      "endLineNumber" : 40,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 40,
        "startColumnNumber" : 13,
        "endLineNumber" : 40,
        "endColumnNumber" : 77
      },
      "nodeContext" : "relative1.getURL().getFile().endsWith(\"ClassPathResource.class\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 34,
        "startColumnNumber" : 67,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertEquals(\"Resource.class\",resource.getFilename());\n  assertTrue(resource.getURL().getFile().endsWith(\"Resource.class\"));\n  Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n  assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n  assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n  assertTrue(relative1.exists());\n  Resource relative2=resource.createRelative(\"support/ResourcePatternResolver.class\");\n  assertEquals(\"ResourcePatternResolver.class\",relative2.getFilename());\n  assertTrue(relative2.getURL().getFile().endsWith(\"ResourcePatternResolver.class\"));\n  assertTrue(relative2.exists());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 34,
        "startColumnNumber" : 1,
        "endLineNumber" : 47,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void doTestResource(Resource resource) throws IOException {\n  assertEquals(\"Resource.class\",resource.getFilename());\n  assertTrue(resource.getURL().getFile().endsWith(\"Resource.class\"));\n  Resource relative1=resource.createRelative(\"ClassPathResource.class\");\n  assertEquals(\"ClassPathResource.class\",relative1.getFilename());\n  assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n  assertTrue(relative1.exists());\n  Resource relative2=resource.createRelative(\"support/ResourcePatternResolver.class\");\n  assertEquals(\"ResourcePatternResolver.class\",relative2.getFilename());\n  assertTrue(relative2.getURL().getFile().endsWith(\"ResourcePatternResolver.class\"));\n  assertTrue(relative2.exists());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertTrue(relative1.getURL().getFile().endsWith(\"ClassPathResource.class\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 38,
    "startColumnNumber" : 47,
    "endLineNumber" : 38,
    "endColumnNumber" : 72
  }, {
    "charLength" : 25,
    "startLineNumber" : 39,
    "startColumnNumber" : 15,
    "endLineNumber" : 39,
    "endColumnNumber" : 40
  }, {
    "charLength" : 25,
    "startLineNumber" : 40,
    "startColumnNumber" : 51,
    "endLineNumber" : 40,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}