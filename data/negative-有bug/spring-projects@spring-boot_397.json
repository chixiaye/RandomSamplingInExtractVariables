{
  "id" : 397,
  "expression" : "\",\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/batch/JobLauncherCommandLineRunner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\",\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 141,
      "startColumnNumber" : 44,
      "endLineNumber" : 141,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 141,
        "startColumnNumber" : 24,
        "endLineNumber" : 141,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.jobNames.split(\",\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 141,
        "endColumnNumber" : 48
      },
      "nodeContext" : "jobsToRun=this.jobNames.split(\",\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 141,
        "startColumnNumber" : 3,
        "endLineNumber" : 141,
        "endColumnNumber" : 49
      },
      "nodeContext" : "String[] jobsToRun=this.jobNames.split(\",\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 140,
        "startColumnNumber" : 70,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String[] jobsToRun=this.jobNames.split(\",\");\n  for (  String jobName : jobsToRun) {\n    try {\n      Job job=this.jobRegistry.getJob(jobName);\n      if (this.jobs.contains(job)) {\n        continue;\n      }\n      execute(job,jobParameters);\n    }\n catch (    NoSuchJobException ex) {\n      logger.debug(\"No job found in registry for job name: \" + jobName);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.jobRegistry != null && StringUtils.hasText(this.jobNames)) {\n  String[] jobsToRun=this.jobNames.split(\",\");\n  for (  String jobName : jobsToRun) {\n    try {\n      Job job=this.jobRegistry.getJob(jobName);\n      if (this.jobs.contains(job)) {\n        continue;\n      }\n      execute(job,jobParameters);\n    }\n catch (    NoSuchJobException ex) {\n      logger.debug(\"No job found in registry for job name: \" + jobName);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 139,
        "startColumnNumber" : 32,
        "endLineNumber" : 155,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (this.jobRegistry != null && StringUtils.hasText(this.jobNames)) {\n    String[] jobsToRun=this.jobNames.split(\",\");\n    for (    String jobName : jobsToRun) {\n      try {\n        Job job=this.jobRegistry.getJob(jobName);\n        if (this.jobs.contains(job)) {\n          continue;\n        }\n        execute(job,jobParameters);\n      }\n catch (      NoSuchJobException ex) {\n        logger.debug(\"No job found in registry for job name: \" + jobName);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 541,
        "startLineNumber" : 138,
        "startColumnNumber" : 1,
        "endLineNumber" : 155,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void executeRegisteredJobs(JobParameters jobParameters) throws JobExecutionException {\n  if (this.jobRegistry != null && StringUtils.hasText(this.jobNames)) {\n    String[] jobsToRun=this.jobNames.split(\",\");\n    for (    String jobName : jobsToRun) {\n      try {\n        Job job=this.jobRegistry.getJob(jobName);\n        if (this.jobs.contains(job)) {\n          continue;\n        }\n        execute(job,jobParameters);\n      }\n catch (      NoSuchJobException ex) {\n        logger.debug(\"No job found in registry for job name: \" + jobName);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 141,
        "startColumnNumber" : 3,
        "endLineNumber" : 141,
        "endColumnNumber" : 49
      },
      "nodeContext" : "String[] jobsToRun=this.jobNames.split(\",\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 141,
    "startColumnNumber" : 44,
    "endLineNumber" : 141,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}