{
  "id" : 259,
  "expression" : "\"content\"",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-memcache/src/test/java/io/netty/handler/codec/memcache/binary/FullMemcacheMessageResponseTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"content\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 50,
      "startColumnNumber" : 49,
      "endLineNumber" : 50,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 50,
        "startColumnNumber" : 49,
        "endLineNumber" : 50,
        "endColumnNumber" : 86
      },
      "nodeContext" : "\"content\".getBytes(CharsetUtil.UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 50,
        "startColumnNumber" : 26,
        "endLineNumber" : 50,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 87
      },
      "nodeContext" : "content=Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ByteBuf content=Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 48,
        "startColumnNumber" : 52,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ByteBuf key=Unpooled.wrappedBuffer(\"key\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf content=Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf extras=Unpooled.wrappedBuffer(\"extras\".getBytes(CharsetUtil.UTF_8));\n  FullBinaryMemcacheResponse resp=new DefaultFullBinaryMemcacheResponse(key,extras,content);\n  assertTrue(channel.writeOutbound(resp));\n  assertEquals(2,channel.outboundMessages().size());\n  assertTrue(channel.writeInbound(channel.readOutbound(),channel.readOutbound()));\n  FullBinaryMemcacheResponse read=channel.readInbound();\n  assertEquals(\"key\",read.key().toString(CharsetUtil.UTF_8));\n  assertEquals(\"content\",read.content().toString(CharsetUtil.UTF_8));\n  assertEquals(\"extras\",read.extras().toString(CharsetUtil.UTF_8));\n  read.release();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 979,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testEncodeDecode() throws Exception {\n  ByteBuf key=Unpooled.wrappedBuffer(\"key\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf content=Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf extras=Unpooled.wrappedBuffer(\"extras\".getBytes(CharsetUtil.UTF_8));\n  FullBinaryMemcacheResponse resp=new DefaultFullBinaryMemcacheResponse(key,extras,content);\n  assertTrue(channel.writeOutbound(resp));\n  assertEquals(2,channel.outboundMessages().size());\n  assertTrue(channel.writeInbound(channel.readOutbound(),channel.readOutbound()));\n  FullBinaryMemcacheResponse read=channel.readInbound();\n  assertEquals(\"key\",read.key().toString(CharsetUtil.UTF_8));\n  assertEquals(\"content\",read.content().toString(CharsetUtil.UTF_8));\n  assertEquals(\"extras\",read.extras().toString(CharsetUtil.UTF_8));\n  read.release();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ByteBuf content=Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"content\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 60,
      "startColumnNumber" : 21,
      "endLineNumber" : 60,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(\"content\",read.content().toString(CharsetUtil.UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(\"content\",read.content().toString(CharsetUtil.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 48,
        "startColumnNumber" : 52,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ByteBuf key=Unpooled.wrappedBuffer(\"key\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf content=Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf extras=Unpooled.wrappedBuffer(\"extras\".getBytes(CharsetUtil.UTF_8));\n  FullBinaryMemcacheResponse resp=new DefaultFullBinaryMemcacheResponse(key,extras,content);\n  assertTrue(channel.writeOutbound(resp));\n  assertEquals(2,channel.outboundMessages().size());\n  assertTrue(channel.writeInbound(channel.readOutbound(),channel.readOutbound()));\n  FullBinaryMemcacheResponse read=channel.readInbound();\n  assertEquals(\"key\",read.key().toString(CharsetUtil.UTF_8));\n  assertEquals(\"content\",read.content().toString(CharsetUtil.UTF_8));\n  assertEquals(\"extras\",read.extras().toString(CharsetUtil.UTF_8));\n  read.release();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 979,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testEncodeDecode() throws Exception {\n  ByteBuf key=Unpooled.wrappedBuffer(\"key\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf content=Unpooled.wrappedBuffer(\"content\".getBytes(CharsetUtil.UTF_8));\n  ByteBuf extras=Unpooled.wrappedBuffer(\"extras\".getBytes(CharsetUtil.UTF_8));\n  FullBinaryMemcacheResponse resp=new DefaultFullBinaryMemcacheResponse(key,extras,content);\n  assertTrue(channel.writeOutbound(resp));\n  assertEquals(2,channel.outboundMessages().size());\n  assertTrue(channel.writeInbound(channel.readOutbound(),channel.readOutbound()));\n  FullBinaryMemcacheResponse read=channel.readInbound();\n  assertEquals(\"key\",read.key().toString(CharsetUtil.UTF_8));\n  assertEquals(\"content\",read.content().toString(CharsetUtil.UTF_8));\n  assertEquals(\"extras\",read.extras().toString(CharsetUtil.UTF_8));\n  read.release();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(\"content\",read.content().toString(CharsetUtil.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 50,
    "startColumnNumber" : 49,
    "endLineNumber" : 50,
    "endColumnNumber" : 58
  }, {
    "charLength" : 9,
    "startLineNumber" : 60,
    "startColumnNumber" : 21,
    "endLineNumber" : 60,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}