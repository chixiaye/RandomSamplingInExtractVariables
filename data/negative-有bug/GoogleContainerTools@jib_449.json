{
  "id" : 449,
  "expression" : "JsonTemplateMapper",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/registry/ManifestPuller.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JsonTemplateMapper",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 118,
      "startColumnNumber" : 13,
      "endLineNumber" : 118,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 118,
        "startColumnNumber" : 13,
        "endLineNumber" : 118,
        "endColumnNumber" : 75
      },
      "nodeContext" : "JsonTemplateMapper.readJson(jsonString,manifestTemplateClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 118,
        "startColumnNumber" : 6,
        "endLineNumber" : 118,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 117,
        "startColumnNumber" : 63,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n  return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 111,
        "startColumnNumber" : 57,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Instantiates a  {@link ManifestTemplate} from a JSON string. This checks the {@code schemaVersion} field of the JSON to determine which manifest version to use.\n */\nprivate T getManifestTemplateFromJson(String jsonString) throws IOException, UnknownManifestFormatException {\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 118,
        "startColumnNumber" : 6,
        "endLineNumber" : 118,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.json.JsonTemplateMapper"
  }, {
    "nodeContext" : "JsonTemplateMapper",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 128,
      "startColumnNumber" : 10,
      "endLineNumber" : 128,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 128,
        "startColumnNumber" : 10,
        "endLineNumber" : 128,
        "endColumnNumber" : 76
      },
      "nodeContext" : "JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 127,
        "startColumnNumber" : 13,
        "endLineNumber" : 128,
        "endColumnNumber" : 77
      },
      "nodeContext" : "manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 127,
        "startColumnNumber" : 6,
        "endLineNumber" : 128,
        "endColumnNumber" : 78
      },
      "nodeContext" : "return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 126,
        "startColumnNumber" : 28,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 126,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (schemaVersion == 1) {\n  return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 111,
        "startColumnNumber" : 57,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Instantiates a  {@link ManifestTemplate} from a JSON string. This checks the {@code schemaVersion} field of the JSON to determine which manifest version to use.\n */\nprivate T getManifestTemplateFromJson(String jsonString) throws IOException, UnknownManifestFormatException {\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 128,
        "startColumnNumber" : 10,
        "endLineNumber" : 128,
        "endColumnNumber" : 76
      },
      "nodeContext" : "JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.json.JsonTemplateMapper"
  }, {
    "nodeContext" : "JsonTemplateMapper",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 135,
      "startColumnNumber" : 12,
      "endLineNumber" : 135,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 78
      },
      "nodeContext" : "JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 134,
        "startColumnNumber" : 15,
        "endLineNumber" : 135,
        "endColumnNumber" : 79
      },
      "nodeContext" : "manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 80
      },
      "nodeContext" : "return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 133,
        "startColumnNumber" : 69,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 133,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n  return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 130,
        "startColumnNumber" : 28,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String mediaType=node.get(\"mediaType\").asText();\n  if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n  }\n  if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n  }\n  throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (schemaVersion == 2) {\n  String mediaType=node.get(\"mediaType\").asText();\n  if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n  }\n  if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n  }\n  throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 111,
        "startColumnNumber" : 57,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Instantiates a  {@link ManifestTemplate} from a JSON string. This checks the {@code schemaVersion} field of the JSON to determine which manifest version to use.\n */\nprivate T getManifestTemplateFromJson(String jsonString) throws IOException, UnknownManifestFormatException {\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 135,
        "startColumnNumber" : 12,
        "endLineNumber" : 135,
        "endColumnNumber" : 78
      },
      "nodeContext" : "JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.json.JsonTemplateMapper"
  }, {
    "nodeContext" : "JsonTemplateMapper",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 139,
      "startColumnNumber" : 12,
      "endLineNumber" : 139,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 78
      },
      "nodeContext" : "JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 138,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 79
      },
      "nodeContext" : "manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 80
      },
      "nodeContext" : "return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 137,
        "startColumnNumber" : 69,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n  return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 130,
        "startColumnNumber" : 28,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String mediaType=node.get(\"mediaType\").asText();\n  if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n  }\n  if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n  }\n  throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (schemaVersion == 2) {\n  String mediaType=node.get(\"mediaType\").asText();\n  if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n  }\n  if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n  }\n  throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 111,
        "startColumnNumber" : 57,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Instantiates a  {@link ManifestTemplate} from a JSON string. This checks the {@code schemaVersion} field of the JSON to determine which manifest version to use.\n */\nprivate T getManifestTemplateFromJson(String jsonString) throws IOException, UnknownManifestFormatException {\n  ObjectNode node=new ObjectMapper().readValue(jsonString,ObjectNode.class);\n  if (!node.has(\"schemaVersion\")) {\n    throw new UnknownManifestFormatException(\"Cannot find field 'schemaVersion' in manifest\");\n  }\n  if (!manifestTemplateClass.equals(ManifestTemplate.class)) {\n    return JsonTemplateMapper.readJson(jsonString,manifestTemplateClass);\n  }\n  int schemaVersion=node.get(\"schemaVersion\").asInt(-1);\n  if (schemaVersion == -1) {\n    throw new UnknownManifestFormatException(\"`schemaVersion` field is not an integer\");\n  }\n  if (schemaVersion == 1) {\n    return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V21ManifestTemplate.class));\n  }\n  if (schemaVersion == 2) {\n    String mediaType=node.get(\"mediaType\").asText();\n    if (V22ManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,V22ManifestTemplate.class));\n    }\n    if (OCIManifestTemplate.MANIFEST_MEDIA_TYPE.equals(mediaType)) {\n      return manifestTemplateClass.cast(JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class));\n    }\n    throw new UnknownManifestFormatException(\"Unknown mediaType: \" + mediaType);\n  }\n  throw new UnknownManifestFormatException(\"Unknown schemaVersion: \" + schemaVersion + \" - only 1 and 2 are supported\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 78
      },
      "nodeContext" : "JsonTemplateMapper.readJson(jsonString,OCIManifestTemplate.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.json.JsonTemplateMapper"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 118,
    "startColumnNumber" : 13,
    "endLineNumber" : 118,
    "endColumnNumber" : 31
  }, {
    "charLength" : 18,
    "startLineNumber" : 128,
    "startColumnNumber" : 10,
    "endLineNumber" : 128,
    "endColumnNumber" : 28
  }, {
    "charLength" : 18,
    "startLineNumber" : 135,
    "startColumnNumber" : 12,
    "endLineNumber" : 135,
    "endColumnNumber" : 30
  }, {
    "charLength" : 18,
    "startLineNumber" : 139,
    "startColumnNumber" : 12,
    "endLineNumber" : 139,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}