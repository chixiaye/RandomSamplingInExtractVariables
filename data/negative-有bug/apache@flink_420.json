{
  "id" : 420,
  "expression" : "1",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/test/java/org/apache/flink/core/memory/DataInputDeserializerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 38,
      "startColumnNumber" : 28,
      "endLineNumber" : 38,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 38,
        "startColumnNumber" : 27,
        "endLineNumber" : 38,
        "endColumnNumber" : 36
      },
      "nodeContext" : "{1,2,3}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 36
      },
      "nodeContext" : "new byte[]{1,2,3}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 36
      },
      "nodeContext" : "bytes=new byte[]{1,2,3}",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 37
      },
      "nodeContext" : "bytes=new byte[]{1,2,3};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 30,
        "startColumnNumber" : 49,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] bytes;\n  DataInputDeserializer dis;\n  bytes=new byte[]{};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  bytes=new byte[]{1,2,3};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  dis.readByte();\n  Assert.assertEquals(2,dis.available());\n  dis.readByte();\n  Assert.assertEquals(1,dis.available());\n  dis.readByte();\n  Assert.assertEquals(0,dis.available());\n  try {\n    dis.readByte();\n    Assert.fail(\"Did not throw expected IOException\");\n  }\n catch (  IOException e) {\n  }\n  Assert.assertEquals(0,dis.available());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAvailable() throws Exception {\n  byte[] bytes;\n  DataInputDeserializer dis;\n  bytes=new byte[]{};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  bytes=new byte[]{1,2,3};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  dis.readByte();\n  Assert.assertEquals(2,dis.available());\n  dis.readByte();\n  Assert.assertEquals(1,dis.available());\n  dis.readByte();\n  Assert.assertEquals(0,dis.available());\n  try {\n    dis.readByte();\n    Assert.fail(\"Did not throw expected IOException\");\n  }\n catch (  IOException e) {\n  }\n  Assert.assertEquals(0,dis.available());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 37
      },
      "nodeContext" : "bytes=new byte[]{1,2,3};\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 45,
      "startColumnNumber" : 28,
      "endLineNumber" : 45,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertEquals(1,dis.available())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Assert.assertEquals(1,dis.available());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 30,
        "startColumnNumber" : 49,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] bytes;\n  DataInputDeserializer dis;\n  bytes=new byte[]{};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  bytes=new byte[]{1,2,3};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  dis.readByte();\n  Assert.assertEquals(2,dis.available());\n  dis.readByte();\n  Assert.assertEquals(1,dis.available());\n  dis.readByte();\n  Assert.assertEquals(0,dis.available());\n  try {\n    dis.readByte();\n    Assert.fail(\"Did not throw expected IOException\");\n  }\n catch (  IOException e) {\n  }\n  Assert.assertEquals(0,dis.available());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAvailable() throws Exception {\n  byte[] bytes;\n  DataInputDeserializer dis;\n  bytes=new byte[]{};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  bytes=new byte[]{1,2,3};\n  dis=new DataInputDeserializer(bytes,0,bytes.length);\n  Assert.assertEquals(bytes.length,dis.available());\n  dis.readByte();\n  Assert.assertEquals(2,dis.available());\n  dis.readByte();\n  Assert.assertEquals(1,dis.available());\n  dis.readByte();\n  Assert.assertEquals(0,dis.available());\n  try {\n    dis.readByte();\n    Assert.fail(\"Did not throw expected IOException\");\n  }\n catch (  IOException e) {\n  }\n  Assert.assertEquals(0,dis.available());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Assert.assertEquals(1,dis.available());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 38,
    "startColumnNumber" : 28,
    "endLineNumber" : 38,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 45,
    "startColumnNumber" : 28,
    "endLineNumber" : 45,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}