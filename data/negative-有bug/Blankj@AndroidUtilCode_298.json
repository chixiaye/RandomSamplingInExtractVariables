{
  "id" : 298,
  "expression" : "fontSize",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/SpanUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fontSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 929,
      "startColumnNumber" : 12,
      "endLineNumber" : 929,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 929,
        "startColumnNumber" : 12,
        "endLineNumber" : 929,
        "endColumnNumber" : 26
      },
      "nodeContext" : "fontSize != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 929,
        "startColumnNumber" : 8,
        "endLineNumber" : 931,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (fontSize != -1) {\n  mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4188,
        "startLineNumber" : 898,
        "startColumnNumber" : 42,
        "endLineNumber" : 991,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mText.length() == 0)   return;\n  int start=mBuilder.length();\n  mBuilder.append(mText);\n  int end=mBuilder.length();\n  if (foregroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new ForegroundColorSpan(foregroundColor),start,end,flag);\n  }\n  if (backgroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new BackgroundColorSpan(backgroundColor),start,end,flag);\n  }\n  if (first != -1) {\n    mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n  }\n  if (quoteColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomQuoteSpan(quoteColor,stripeWidth,quoteGapWidth),start,end,flag);\n  }\n  if (bulletColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomBulletSpan(bulletColor,bulletRadius,bulletGapWidth),start,end,flag);\n  }\n  if (iconMarginGapWidth != -1) {\n    if (iconMarginBitmap != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginBitmap,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginDrawable != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginDrawable,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginUri != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginUri,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginResourceId != -1) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginResourceId,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n  }\n  if (fontSize != -1) {\n    mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n  }\n  if (proportion != -1) {\n    mBuilder.setSpan(new RelativeSizeSpan(proportion),start,end,flag);\n  }\n  if (xProportion != -1) {\n    mBuilder.setSpan(new ScaleXSpan(xProportion),start,end,flag);\n  }\n  if (lineHeight != -1) {\n    mBuilder.setSpan(new CustomLineHeightSpan(lineHeight,alignLine),start,end,flag);\n  }\n  if (isStrikethrough) {\n    mBuilder.setSpan(new StrikethroughSpan(),start,end,flag);\n  }\n  if (isUnderline) {\n    mBuilder.setSpan(new UnderlineSpan(),start,end,flag);\n  }\n  if (isSuperscript) {\n    mBuilder.setSpan(new SuperscriptSpan(),start,end,flag);\n  }\n  if (isSubscript) {\n    mBuilder.setSpan(new SubscriptSpan(),start,end,flag);\n  }\n  if (isBold) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD),start,end,flag);\n  }\n  if (isItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.ITALIC),start,end,flag);\n  }\n  if (isBoldItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD_ITALIC),start,end,flag);\n  }\n  if (fontFamily != null) {\n    mBuilder.setSpan(new TypefaceSpan(fontFamily),start,end,flag);\n  }\n  if (typeface != null) {\n    mBuilder.setSpan(new CustomTypefaceSpan(typeface),start,end,flag);\n  }\n  if (alignment != null) {\n    mBuilder.setSpan(new AlignmentSpan.Standard(alignment),start,end,flag);\n  }\n  if (clickSpan != null) {\n    mBuilder.setSpan(clickSpan,start,end,flag);\n  }\n  if (url != null) {\n    mBuilder.setSpan(new URLSpan(url),start,end,flag);\n  }\n  if (blurRadius != -1) {\n    mBuilder.setSpan(new MaskFilterSpan(new BlurMaskFilter(blurRadius,style)),start,end,flag);\n  }\n  if (shader != null) {\n    mBuilder.setSpan(new ShaderSpan(shader),start,end,flag);\n  }\n  if (shadowRadius != -1) {\n    mBuilder.setSpan(new ShadowSpan(shadowRadius,shadowDx,shadowDy,shadowColor),start,end,flag);\n  }\n  if (spans != null) {\n    for (    Object span : spans) {\n      mBuilder.setSpan(span,start,end,flag);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 526,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4226,
        "startLineNumber" : 898,
        "startColumnNumber" : 4,
        "endLineNumber" : 991,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void updateCharCharSequence(){\n  if (mText.length() == 0)   return;\n  int start=mBuilder.length();\n  mBuilder.append(mText);\n  int end=mBuilder.length();\n  if (foregroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new ForegroundColorSpan(foregroundColor),start,end,flag);\n  }\n  if (backgroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new BackgroundColorSpan(backgroundColor),start,end,flag);\n  }\n  if (first != -1) {\n    mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n  }\n  if (quoteColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomQuoteSpan(quoteColor,stripeWidth,quoteGapWidth),start,end,flag);\n  }\n  if (bulletColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomBulletSpan(bulletColor,bulletRadius,bulletGapWidth),start,end,flag);\n  }\n  if (iconMarginGapWidth != -1) {\n    if (iconMarginBitmap != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginBitmap,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginDrawable != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginDrawable,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginUri != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginUri,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginResourceId != -1) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginResourceId,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n  }\n  if (fontSize != -1) {\n    mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n  }\n  if (proportion != -1) {\n    mBuilder.setSpan(new RelativeSizeSpan(proportion),start,end,flag);\n  }\n  if (xProportion != -1) {\n    mBuilder.setSpan(new ScaleXSpan(xProportion),start,end,flag);\n  }\n  if (lineHeight != -1) {\n    mBuilder.setSpan(new CustomLineHeightSpan(lineHeight,alignLine),start,end,flag);\n  }\n  if (isStrikethrough) {\n    mBuilder.setSpan(new StrikethroughSpan(),start,end,flag);\n  }\n  if (isUnderline) {\n    mBuilder.setSpan(new UnderlineSpan(),start,end,flag);\n  }\n  if (isSuperscript) {\n    mBuilder.setSpan(new SuperscriptSpan(),start,end,flag);\n  }\n  if (isSubscript) {\n    mBuilder.setSpan(new SubscriptSpan(),start,end,flag);\n  }\n  if (isBold) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD),start,end,flag);\n  }\n  if (isItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.ITALIC),start,end,flag);\n  }\n  if (isBoldItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD_ITALIC),start,end,flag);\n  }\n  if (fontFamily != null) {\n    mBuilder.setSpan(new TypefaceSpan(fontFamily),start,end,flag);\n  }\n  if (typeface != null) {\n    mBuilder.setSpan(new CustomTypefaceSpan(typeface),start,end,flag);\n  }\n  if (alignment != null) {\n    mBuilder.setSpan(new AlignmentSpan.Standard(alignment),start,end,flag);\n  }\n  if (clickSpan != null) {\n    mBuilder.setSpan(clickSpan,start,end,flag);\n  }\n  if (url != null) {\n    mBuilder.setSpan(new URLSpan(url),start,end,flag);\n  }\n  if (blurRadius != -1) {\n    mBuilder.setSpan(new MaskFilterSpan(new BlurMaskFilter(blurRadius,style)),start,end,flag);\n  }\n  if (shader != null) {\n    mBuilder.setSpan(new ShaderSpan(shader),start,end,flag);\n  }\n  if (shadowRadius != -1) {\n    mBuilder.setSpan(new ShadowSpan(shadowRadius,shadowDx,shadowDy,shadowColor),start,end,flag);\n  }\n  if (spans != null) {\n    for (    Object span : spans) {\n      mBuilder.setSpan(span,start,end,flag);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 929,
        "startColumnNumber" : 12,
        "endLineNumber" : 929,
        "endColumnNumber" : 26
      },
      "nodeContext" : "fontSize != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "fontSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 930,
      "startColumnNumber" : 50,
      "endLineNumber" : 930,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 930,
        "startColumnNumber" : 29,
        "endLineNumber" : 930,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new AbsoluteSizeSpan(fontSize,fontSizeIsDp)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 930,
        "startColumnNumber" : 12,
        "endLineNumber" : 930,
        "endColumnNumber" : 92
      },
      "nodeContext" : "mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 930,
        "startColumnNumber" : 12,
        "endLineNumber" : 930,
        "endColumnNumber" : 93
      },
      "nodeContext" : "mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 929,
        "startColumnNumber" : 28,
        "endLineNumber" : 931,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 929,
        "startColumnNumber" : 8,
        "endLineNumber" : 931,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (fontSize != -1) {\n  mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4188,
        "startLineNumber" : 898,
        "startColumnNumber" : 42,
        "endLineNumber" : 991,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mText.length() == 0)   return;\n  int start=mBuilder.length();\n  mBuilder.append(mText);\n  int end=mBuilder.length();\n  if (foregroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new ForegroundColorSpan(foregroundColor),start,end,flag);\n  }\n  if (backgroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new BackgroundColorSpan(backgroundColor),start,end,flag);\n  }\n  if (first != -1) {\n    mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n  }\n  if (quoteColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomQuoteSpan(quoteColor,stripeWidth,quoteGapWidth),start,end,flag);\n  }\n  if (bulletColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomBulletSpan(bulletColor,bulletRadius,bulletGapWidth),start,end,flag);\n  }\n  if (iconMarginGapWidth != -1) {\n    if (iconMarginBitmap != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginBitmap,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginDrawable != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginDrawable,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginUri != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginUri,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginResourceId != -1) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginResourceId,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n  }\n  if (fontSize != -1) {\n    mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n  }\n  if (proportion != -1) {\n    mBuilder.setSpan(new RelativeSizeSpan(proportion),start,end,flag);\n  }\n  if (xProportion != -1) {\n    mBuilder.setSpan(new ScaleXSpan(xProportion),start,end,flag);\n  }\n  if (lineHeight != -1) {\n    mBuilder.setSpan(new CustomLineHeightSpan(lineHeight,alignLine),start,end,flag);\n  }\n  if (isStrikethrough) {\n    mBuilder.setSpan(new StrikethroughSpan(),start,end,flag);\n  }\n  if (isUnderline) {\n    mBuilder.setSpan(new UnderlineSpan(),start,end,flag);\n  }\n  if (isSuperscript) {\n    mBuilder.setSpan(new SuperscriptSpan(),start,end,flag);\n  }\n  if (isSubscript) {\n    mBuilder.setSpan(new SubscriptSpan(),start,end,flag);\n  }\n  if (isBold) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD),start,end,flag);\n  }\n  if (isItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.ITALIC),start,end,flag);\n  }\n  if (isBoldItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD_ITALIC),start,end,flag);\n  }\n  if (fontFamily != null) {\n    mBuilder.setSpan(new TypefaceSpan(fontFamily),start,end,flag);\n  }\n  if (typeface != null) {\n    mBuilder.setSpan(new CustomTypefaceSpan(typeface),start,end,flag);\n  }\n  if (alignment != null) {\n    mBuilder.setSpan(new AlignmentSpan.Standard(alignment),start,end,flag);\n  }\n  if (clickSpan != null) {\n    mBuilder.setSpan(clickSpan,start,end,flag);\n  }\n  if (url != null) {\n    mBuilder.setSpan(new URLSpan(url),start,end,flag);\n  }\n  if (blurRadius != -1) {\n    mBuilder.setSpan(new MaskFilterSpan(new BlurMaskFilter(blurRadius,style)),start,end,flag);\n  }\n  if (shader != null) {\n    mBuilder.setSpan(new ShaderSpan(shader),start,end,flag);\n  }\n  if (shadowRadius != -1) {\n    mBuilder.setSpan(new ShadowSpan(shadowRadius,shadowDx,shadowDy,shadowColor),start,end,flag);\n  }\n  if (spans != null) {\n    for (    Object span : spans) {\n      mBuilder.setSpan(span,start,end,flag);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 526,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4226,
        "startLineNumber" : 898,
        "startColumnNumber" : 4,
        "endLineNumber" : 991,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void updateCharCharSequence(){\n  if (mText.length() == 0)   return;\n  int start=mBuilder.length();\n  mBuilder.append(mText);\n  int end=mBuilder.length();\n  if (foregroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new ForegroundColorSpan(foregroundColor),start,end,flag);\n  }\n  if (backgroundColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new BackgroundColorSpan(backgroundColor),start,end,flag);\n  }\n  if (first != -1) {\n    mBuilder.setSpan(new LeadingMarginSpan.Standard(first,rest),start,end,flag);\n  }\n  if (quoteColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomQuoteSpan(quoteColor,stripeWidth,quoteGapWidth),start,end,flag);\n  }\n  if (bulletColor != DEFAULT_COLOR) {\n    mBuilder.setSpan(new CustomBulletSpan(bulletColor,bulletRadius,bulletGapWidth),start,end,flag);\n  }\n  if (iconMarginGapWidth != -1) {\n    if (iconMarginBitmap != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginBitmap,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginDrawable != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(iconMarginDrawable,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginUri != null) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginUri,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n else     if (iconMarginResourceId != -1) {\n      mBuilder.setSpan(new CustomIconMarginSpan(Utils.getApp(),iconMarginResourceId,iconMarginGapWidth,alignIconMargin),start,end,flag);\n    }\n  }\n  if (fontSize != -1) {\n    mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n  }\n  if (proportion != -1) {\n    mBuilder.setSpan(new RelativeSizeSpan(proportion),start,end,flag);\n  }\n  if (xProportion != -1) {\n    mBuilder.setSpan(new ScaleXSpan(xProportion),start,end,flag);\n  }\n  if (lineHeight != -1) {\n    mBuilder.setSpan(new CustomLineHeightSpan(lineHeight,alignLine),start,end,flag);\n  }\n  if (isStrikethrough) {\n    mBuilder.setSpan(new StrikethroughSpan(),start,end,flag);\n  }\n  if (isUnderline) {\n    mBuilder.setSpan(new UnderlineSpan(),start,end,flag);\n  }\n  if (isSuperscript) {\n    mBuilder.setSpan(new SuperscriptSpan(),start,end,flag);\n  }\n  if (isSubscript) {\n    mBuilder.setSpan(new SubscriptSpan(),start,end,flag);\n  }\n  if (isBold) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD),start,end,flag);\n  }\n  if (isItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.ITALIC),start,end,flag);\n  }\n  if (isBoldItalic) {\n    mBuilder.setSpan(new StyleSpan(Typeface.BOLD_ITALIC),start,end,flag);\n  }\n  if (fontFamily != null) {\n    mBuilder.setSpan(new TypefaceSpan(fontFamily),start,end,flag);\n  }\n  if (typeface != null) {\n    mBuilder.setSpan(new CustomTypefaceSpan(typeface),start,end,flag);\n  }\n  if (alignment != null) {\n    mBuilder.setSpan(new AlignmentSpan.Standard(alignment),start,end,flag);\n  }\n  if (clickSpan != null) {\n    mBuilder.setSpan(clickSpan,start,end,flag);\n  }\n  if (url != null) {\n    mBuilder.setSpan(new URLSpan(url),start,end,flag);\n  }\n  if (blurRadius != -1) {\n    mBuilder.setSpan(new MaskFilterSpan(new BlurMaskFilter(blurRadius,style)),start,end,flag);\n  }\n  if (shader != null) {\n    mBuilder.setSpan(new ShaderSpan(shader),start,end,flag);\n  }\n  if (shadowRadius != -1) {\n    mBuilder.setSpan(new ShadowSpan(shadowRadius,shadowDx,shadowDy,shadowColor),start,end,flag);\n  }\n  if (spans != null) {\n    for (    Object span : spans) {\n      mBuilder.setSpan(span,start,end,flag);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 930,
        "startColumnNumber" : 12,
        "endLineNumber" : 930,
        "endColumnNumber" : 93
      },
      "nodeContext" : "mBuilder.setSpan(new AbsoluteSizeSpan(fontSize,fontSizeIsDp),start,end,flag);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 929,
    "startColumnNumber" : 12,
    "endLineNumber" : 929,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 930,
    "startColumnNumber" : 50,
    "endLineNumber" : 930,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}