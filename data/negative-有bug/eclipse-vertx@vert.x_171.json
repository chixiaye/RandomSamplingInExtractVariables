{
  "id" : 171,
  "expression" : "CharsetUtil",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/dns/impl/netty/decoder/AddressDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CharsetUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 71,
      "startColumnNumber" : 62,
      "endLineNumber" : 71,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 71,
        "startColumnNumber" : 62,
        "endLineNumber" : 71,
        "endColumnNumber" : 79
      },
      "nodeContext" : "CharsetUtil.UTF_8",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 71,
        "startColumnNumber" : 22,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "data.toString(data.readerIndex(),size,CharsetUtil.UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 70,
        "startColumnNumber" : 39,
        "endLineNumber" : 71,
        "endColumnNumber" : 101
      },
      "nodeContext" : "\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 70,
        "startColumnNumber" : 18,
        "endLineNumber" : 71,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new DecoderException(\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 103
      },
      "nodeContext" : "throw new DecoderException(\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 69,
        "startColumnNumber" : 41,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new DecoderException(\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 69,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (UnknownHostException e) {\n  throw new DecoderException(\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return InetAddress.getByAddress(address);\n}\n catch (UnknownHostException e) {\n  throw new DecoderException(\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 827,
        "startLineNumber" : 58,
        "startColumnNumber" : 74,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ByteBuf data=resource.content().copy().readerIndex(response.originalIndex());\n  int size=data.writerIndex() - data.readerIndex();\n  if (data.readerIndex() != 0 || size != octets) {\n    throw new DecoderException(\"Invalid content length, or reader index when decoding address [index: \" + data.readerIndex() + \", expected length: \"+ octets+ \", actual: \"+ size+ \"].\");\n  }\n  byte[] address=new byte[octets];\n  data.getBytes(data.readerIndex(),address);\n  try {\n    return InetAddress.getByAddress(address);\n  }\n catch (  UnknownHostException e) {\n    throw new DecoderException(\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an  {@link java.net.InetAddress} containing a decoded address from either an Aor AAAA resource record.\n * @param response the  {@link io.vertx.core.dns.impl.netty.DnsResponse} received that contained the resourcerecord being decoded\n * @param resource the  {@link DnsResource} being decoded\n */\n@Override public InetAddress decode(DnsResponse response,DnsResource resource){\n  ByteBuf data=resource.content().copy().readerIndex(response.originalIndex());\n  int size=data.writerIndex() - data.readerIndex();\n  if (data.readerIndex() != 0 || size != octets) {\n    throw new DecoderException(\"Invalid content length, or reader index when decoding address [index: \" + data.readerIndex() + \", expected length: \"+ octets+ \", actual: \"+ size+ \"].\");\n  }\n  byte[] address=new byte[octets];\n  data.getBytes(data.readerIndex(),address);\n  try {\n    return InetAddress.getByAddress(address);\n  }\n catch (  UnknownHostException e) {\n    throw new DecoderException(\"Could not convert address \" + data.toString(data.readerIndex(),size,CharsetUtil.UTF_8) + \" to InetAddress.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 71,
        "startColumnNumber" : 22,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "data.toString(data.readerIndex(),size,CharsetUtil.UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 71,
    "startColumnNumber" : 62,
    "endLineNumber" : 71,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}