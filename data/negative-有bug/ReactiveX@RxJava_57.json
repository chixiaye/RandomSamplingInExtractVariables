{
  "id" : 57,
  "expression" : "getAndIncrement() != 0",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/flowable/FlowableSkipLastTimed.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getAndIncrement() != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 130,
      "startColumnNumber" : 16,
      "endLineNumber" : 130,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (getAndIncrement() != 0) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2427,
        "startLineNumber" : 129,
        "startColumnNumber" : 21,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final Subscriber<? super T> a=actual;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final boolean delayError=this.delayError;\n  final TimeUnit unit=this.unit;\n  final Scheduler scheduler=this.scheduler;\n  final long time=this.time;\n  for (; ; ) {\n    if (checkTerminated(done,q.isEmpty(),a,delayError)) {\n      return;\n    }\n    long r=requested.get();\n    long e=0L;\n    while (e != r) {\n      boolean d=done;\n      Long ts=(Long)q.peek();\n      boolean empty=ts == null;\n      long now=scheduler.now(unit);\n      if (!empty && ts > now - time) {\n        empty=true;\n      }\n      if (checkTerminated(d,empty,a,delayError)) {\n        return;\n      }\n      if (empty) {\n        break;\n      }\n      if (ts > now - time) {\n        break;\n      }\n      if (q.size() == 1L) {\n        continue;\n      }\n      q.poll();\n      @SuppressWarnings(\"unchecked\") T v=(T)q.poll();\n      a.onNext(v);\n      e++;\n    }\n    if (e != 0L) {\n      if (r != Long.MAX_VALUE) {\n        requested.addAndGet(-e);\n      }\n    }\n    missed=addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2440,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "void drain(){\n  if (getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final Subscriber<? super T> a=actual;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final boolean delayError=this.delayError;\n  final TimeUnit unit=this.unit;\n  final Scheduler scheduler=this.scheduler;\n  final long time=this.time;\n  for (; ; ) {\n    if (checkTerminated(done,q.isEmpty(),a,delayError)) {\n      return;\n    }\n    long r=requested.get();\n    long e=0L;\n    while (e != r) {\n      boolean d=done;\n      Long ts=(Long)q.peek();\n      boolean empty=ts == null;\n      long now=scheduler.now(unit);\n      if (!empty && ts > now - time) {\n        empty=true;\n      }\n      if (checkTerminated(d,empty,a,delayError)) {\n        return;\n      }\n      if (empty) {\n        break;\n      }\n      if (ts > now - time) {\n        break;\n      }\n      if (q.size() == 1L) {\n        continue;\n      }\n      q.poll();\n      @SuppressWarnings(\"unchecked\") T v=(T)q.poll();\n      a.onNext(v);\n      e++;\n    }\n    if (e != 0L) {\n      if (r != Long.MAX_VALUE) {\n        requested.addAndGet(-e);\n      }\n    }\n    missed=addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (getAndIncrement() != 0) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 130,
    "startColumnNumber" : 16,
    "endLineNumber" : 130,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}