{
  "id" : 354,
  "expression" : "pendingStreams.remove(streamId)",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http2/src/main/java/io/netty/handler/codec/http2/StreamBufferingEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pendingStreams.remove(streamId)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 195,
      "startColumnNumber" : 31,
      "endLineNumber" : 195,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 195,
        "startColumnNumber" : 22,
        "endLineNumber" : 195,
        "endColumnNumber" : 62
      },
      "nodeContext" : "stream=pendingStreams.remove(streamId)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 63
      },
      "nodeContext" : "PendingStream stream=pendingStreams.remove(streamId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 189,
        "startColumnNumber" : 96,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isExistingStream(streamId)) {\n    return super.writeRstStream(ctx,streamId,errorCode);\n  }\n  PendingStream stream=pendingStreams.remove(streamId);\n  if (stream != null) {\n    stream.close(null);\n    return ctx.newSucceededFuture();\n  }\n else {\n    return ctx.newFailedFuture(connectionError(PROTOCOL_ERROR,\"Stream does not exist %d\",streamId));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1065,
        "startLineNumber" : 188,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Future<Void> writeRstStream(ChannelHandlerContext ctx,int streamId,long errorCode){\n  if (isExistingStream(streamId)) {\n    return super.writeRstStream(ctx,streamId,errorCode);\n  }\n  PendingStream stream=pendingStreams.remove(streamId);\n  if (stream != null) {\n    stream.close(null);\n    return ctx.newSucceededFuture();\n  }\n else {\n    return ctx.newFailedFuture(connectionError(PROTOCOL_ERROR,\"Stream does not exist %d\",streamId));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 63
      },
      "nodeContext" : "PendingStream stream=pendingStreams.remove(streamId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "io.netty.handler.codec.http2.StreamBufferingEncoder.PendingStream"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 195,
    "startColumnNumber" : 31,
    "endLineNumber" : 195,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}