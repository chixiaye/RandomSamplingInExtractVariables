{
  "id" : 63,
  "expression" : "perEventLoopMetricsHandler.new HttpRequests()",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/server/BaseZuulChannelInitializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "perEventLoopMetricsHandler.new HttpRequests()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 155,
      "startColumnNumber" : 50,
      "endLineNumber" : 155,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 95
      },
      "nodeContext" : "this.perEventLoopRequestsMetricsHandler=perEventLoopMetricsHandler.new HttpRequests()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.perEventLoopRequestsMetricsHandler=perEventLoopMetricsHandler.new HttpRequests();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3254,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.port=port;\n  this.channelConfig=channelConfig;\n  this.channelDependencies=channelDependencies;\n  this.channels=channels;\n  this.accessLogPublisher=channelDependencies.get(ZuulDependencyKeys.accessLogPublisher);\n  this.withProxyProtocol=channelConfig.get(CommonChannelConfigKeys.withProxyProtocol);\n  this.idleTimeout=channelConfig.get(CommonChannelConfigKeys.idleTimeout);\n  this.httpRequestReadTimeout=channelConfig.get(CommonChannelConfigKeys.httpRequestReadTimeout);\n  this.channelMetrics=new ServerChannelMetrics(\"http-\" + port);\n  this.registry=channelDependencies.get(ZuulDependencyKeys.registry);\n  this.httpMetricsHandler=new HttpMetricsChannelHandler(registry,\"server\",\"http-\" + port);\n  EventLoopGroupMetrics eventLoopGroupMetrics=channelDependencies.get(ZuulDependencyKeys.eventLoopGroupMetrics);\n  PerEventLoopMetricsChannelHandler perEventLoopMetricsHandler=new PerEventLoopMetricsChannelHandler(eventLoopGroupMetrics);\n  this.perEventLoopConnectionMetricsHandler=perEventLoopMetricsHandler.new Connections();\n  this.perEventLoopRequestsMetricsHandler=perEventLoopMetricsHandler.new HttpRequests();\n  this.maxConnections=channelConfig.get(CommonChannelConfigKeys.maxConnections);\n  this.maxConnectionsHandler=new MaxInboundConnectionsHandler(maxConnections);\n  this.maxRequestsPerConnection=channelConfig.get(CommonChannelConfigKeys.maxRequestsPerConnection);\n  this.maxRequestsPerConnectionInBrownout=channelConfig.get(CommonChannelConfigKeys.maxRequestsPerConnectionInBrownout);\n  this.connectionExpiry=channelConfig.get(CommonChannelConfigKeys.connectionExpiry);\n  this.connCloseDelay=channelConfig.get(CommonChannelConfigKeys.connCloseDelay);\n  StripUntrustedProxyHeadersHandler.AllowWhen allowProxyHeadersWhen=channelConfig.get(CommonChannelConfigKeys.allowProxyHeadersWhen);\n  this.stripInboundProxyHeadersHandler=new StripUntrustedProxyHeadersHandler(allowProxyHeadersWhen);\n  this.rateLimitingChannelHandler=channelDependencies.get(ZuulDependencyKeys.rateLimitingChannelHandlerProvider).get();\n  this.sslClientCertCheckChannelHandler=channelDependencies.get(ZuulDependencyKeys.sslClientCertCheckChannelHandlerProvider).get();\n  this.passportLoggingHandler=new PassportLoggingHandler(registry);\n  this.sessionContextDecorator=channelDependencies.get(ZuulDependencyKeys.sessionCtxDecorator);\n  this.requestCompleteHandler=channelDependencies.get(ZuulDependencyKeys.requestCompleteHandler);\n  this.httpRequestReadTimeoutCounter=channelDependencies.get(ZuulDependencyKeys.httpRequestReadTimeoutCounter);\n  this.filterLoader=channelDependencies.get(ZuulDependencyKeys.filterLoader);\n  this.filterUsageNotifier=channelDependencies.get(ZuulDependencyKeys.filterUsageNotifier);\n  ServerStatusManager serverStatusManager=channelDependencies.get(ZuulDependencyKeys.serverStatusManager);\n  this.serverStatusHeaderHandler=new ServerStatusHeaderHandler(serverStatusManager);\n  this.sourceAddressChannelHandler=new SourceAddressChannelHandler();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3441,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected BaseZuulChannelInitializer(int port,ChannelConfig channelConfig,ChannelConfig channelDependencies,ChannelGroup channels){\n  this.port=port;\n  this.channelConfig=channelConfig;\n  this.channelDependencies=channelDependencies;\n  this.channels=channels;\n  this.accessLogPublisher=channelDependencies.get(ZuulDependencyKeys.accessLogPublisher);\n  this.withProxyProtocol=channelConfig.get(CommonChannelConfigKeys.withProxyProtocol);\n  this.idleTimeout=channelConfig.get(CommonChannelConfigKeys.idleTimeout);\n  this.httpRequestReadTimeout=channelConfig.get(CommonChannelConfigKeys.httpRequestReadTimeout);\n  this.channelMetrics=new ServerChannelMetrics(\"http-\" + port);\n  this.registry=channelDependencies.get(ZuulDependencyKeys.registry);\n  this.httpMetricsHandler=new HttpMetricsChannelHandler(registry,\"server\",\"http-\" + port);\n  EventLoopGroupMetrics eventLoopGroupMetrics=channelDependencies.get(ZuulDependencyKeys.eventLoopGroupMetrics);\n  PerEventLoopMetricsChannelHandler perEventLoopMetricsHandler=new PerEventLoopMetricsChannelHandler(eventLoopGroupMetrics);\n  this.perEventLoopConnectionMetricsHandler=perEventLoopMetricsHandler.new Connections();\n  this.perEventLoopRequestsMetricsHandler=perEventLoopMetricsHandler.new HttpRequests();\n  this.maxConnections=channelConfig.get(CommonChannelConfigKeys.maxConnections);\n  this.maxConnectionsHandler=new MaxInboundConnectionsHandler(maxConnections);\n  this.maxRequestsPerConnection=channelConfig.get(CommonChannelConfigKeys.maxRequestsPerConnection);\n  this.maxRequestsPerConnectionInBrownout=channelConfig.get(CommonChannelConfigKeys.maxRequestsPerConnectionInBrownout);\n  this.connectionExpiry=channelConfig.get(CommonChannelConfigKeys.connectionExpiry);\n  this.connCloseDelay=channelConfig.get(CommonChannelConfigKeys.connCloseDelay);\n  StripUntrustedProxyHeadersHandler.AllowWhen allowProxyHeadersWhen=channelConfig.get(CommonChannelConfigKeys.allowProxyHeadersWhen);\n  this.stripInboundProxyHeadersHandler=new StripUntrustedProxyHeadersHandler(allowProxyHeadersWhen);\n  this.rateLimitingChannelHandler=channelDependencies.get(ZuulDependencyKeys.rateLimitingChannelHandlerProvider).get();\n  this.sslClientCertCheckChannelHandler=channelDependencies.get(ZuulDependencyKeys.sslClientCertCheckChannelHandlerProvider).get();\n  this.passportLoggingHandler=new PassportLoggingHandler(registry);\n  this.sessionContextDecorator=channelDependencies.get(ZuulDependencyKeys.sessionCtxDecorator);\n  this.requestCompleteHandler=channelDependencies.get(ZuulDependencyKeys.requestCompleteHandler);\n  this.httpRequestReadTimeoutCounter=channelDependencies.get(ZuulDependencyKeys.httpRequestReadTimeoutCounter);\n  this.filterLoader=channelDependencies.get(ZuulDependencyKeys.filterLoader);\n  this.filterUsageNotifier=channelDependencies.get(ZuulDependencyKeys.filterUsageNotifier);\n  ServerStatusManager serverStatusManager=channelDependencies.get(ZuulDependencyKeys.serverStatusManager);\n  this.serverStatusHeaderHandler=new ServerStatusHeaderHandler(serverStatusManager);\n  this.sourceAddressChannelHandler=new SourceAddressChannelHandler();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 364,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 96
      },
      "nodeContext" : "this.perEventLoopRequestsMetricsHandler=perEventLoopMetricsHandler.new HttpRequests();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.netflix.netty.common.metrics.PerEventLoopMetricsChannelHandler.HttpRequests"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 155,
    "startColumnNumber" : 50,
    "endLineNumber" : 155,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ ]
}