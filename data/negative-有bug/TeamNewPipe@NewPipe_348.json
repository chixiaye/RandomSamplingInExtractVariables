{
  "id" : 348,
  "expression" : "itemList.get(0)",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/player/playqueue/PlayQueue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "itemList.get(0)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 291,
      "startColumnNumber" : 20,
      "endLineNumber" : 291,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 291,
        "startColumnNumber" : 20,
        "endLineNumber" : 291,
        "endColumnNumber" : 50
      },
      "nodeContext" : "itemList.get(0).isAutoQueued()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 291,
        "startColumnNumber" : 19,
        "endLineNumber" : 291,
        "endColumnNumber" : 50
      },
      "nodeContext" : "!itemList.get(0).isAutoQueued()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 290,
        "startColumnNumber" : 12,
        "endLineNumber" : 291,
        "endColumnNumber" : 50
      },
      "nodeContext" : "!streams.isEmpty() && streams.get(streams.size() - 1).isAutoQueued() && !itemList.get(0).isAutoQueued()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 293,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!streams.isEmpty() && streams.get(streams.size() - 1).isAutoQueued() && !itemList.get(0).isAutoQueued()) {\n  streams.remove(streams.size() - 1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 283,
        "startColumnNumber" : 78,
        "endLineNumber" : 297,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<PlayQueueItem> itemList=new ArrayList<>(items);\n  if (isShuffled()) {\n    backup.addAll(itemList);\n    Collections.shuffle(itemList);\n  }\n  if (!streams.isEmpty() && streams.get(streams.size() - 1).isAutoQueued() && !itemList.get(0).isAutoQueued()) {\n    streams.remove(streams.size() - 1);\n  }\n  streams.addAll(itemList);\n  broadcast(new AppendEvent(itemList.size()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 949,
        "startLineNumber" : 271,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Appends the given  {@link PlayQueueItem}s to the current play queue. <p> If the play queue is shuffled, then append the items to the backup queue as is and append the shuffle items to the play queue. </p> <p> Will emit a  {@link AppendEvent} on any given context.</p>\n * @param items {@link PlayQueueItem}s to append\n */\npublic synchronized void append(@NonNull final List<PlayQueueItem> items){\n  final List<PlayQueueItem> itemList=new ArrayList<>(items);\n  if (isShuffled()) {\n    backup.addAll(itemList);\n    Collections.shuffle(itemList);\n  }\n  if (!streams.isEmpty() && streams.get(streams.size() - 1).isAutoQueued() && !itemList.get(0).isAutoQueued()) {\n    streams.remove(streams.size() - 1);\n  }\n  streams.addAll(itemList);\n  broadcast(new AppendEvent(itemList.size()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 291,
        "startColumnNumber" : 19,
        "endLineNumber" : 291,
        "endColumnNumber" : 50
      },
      "nodeContext" : "!itemList.get(0).isAutoQueued()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "org.schabi.newpipe.player.playqueue.PlayQueueItem"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 291,
    "startColumnNumber" : 20,
    "endLineNumber" : 291,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}