{
  "id" : 93,
  "expression" : "\"java.util.Collection\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/processor/internals/ReadOnlyTaskTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"java.util.Collection\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 168,
      "startColumnNumber" : 21,
      "endLineNumber" : 168,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 168,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 44
      },
      "nodeContext" : "case \"java.util.Collection\":",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 158,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (parameterTypes[i].getName()) {\ncase \"boolean\":  parameters[i]=true;\nbreak;\ncase \"long\":parameters[i]=0;\nbreak;\ncase \"java.util.Set\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Collection\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Map\":parameters[i]=Collections.emptyMap();\nbreak;\ncase \"org.apache.kafka.common.TopicPartition\":parameters[i]=new TopicPartition(\"topic\",0);\nbreak;\ncase \"java.lang.Exception\":parameters[i]=new IllegalStateException();\nbreak;\ncase \"java.util.function.Consumer\":parameters[i]=(Consumer)ignored -> {\n}\n;\nbreak;\ncase \"java.lang.Iterable\":parameters[i]=Collections.emptySet();\nbreak;\ndefault:parameters[i]=parameterTypes[i].getConstructor().newInstance();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 120,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1363,
        "startLineNumber" : 157,
        "startColumnNumber" : 56,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (parameterTypes[i].getName()) {\ncase \"boolean\":    parameters[i]=true;\n  break;\ncase \"long\":parameters[i]=0;\nbreak;\ncase \"java.util.Set\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Collection\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Map\":parameters[i]=Collections.emptyMap();\nbreak;\ncase \"org.apache.kafka.common.TopicPartition\":parameters[i]=new TopicPartition(\"topic\",0);\nbreak;\ncase \"java.lang.Exception\":parameters[i]=new IllegalStateException();\nbreak;\ncase \"java.util.function.Consumer\":parameters[i]=(Consumer)ignored -> {\n}\n;\nbreak;\ncase \"java.lang.Iterable\":parameters[i]=Collections.emptySet();\nbreak;\ndefault:parameters[i]=parameterTypes[i].getConstructor().newInstance();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 157,
        "startColumnNumber" : 8,
        "endLineNumber" : 189,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < parameterTypes.length; ++i) {\nswitch (parameterTypes[i].getName()) {\ncase \"boolean\":    parameters[i]=true;\n  break;\ncase \"long\":parameters[i]=0;\nbreak;\ncase \"java.util.Set\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Collection\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Map\":parameters[i]=Collections.emptyMap();\nbreak;\ncase \"org.apache.kafka.common.TopicPartition\":parameters[i]=new TopicPartition(\"topic\",0);\nbreak;\ncase \"java.lang.Exception\":parameters[i]=new IllegalStateException();\nbreak;\ncase \"java.util.function.Consumer\":parameters[i]=(Consumer)ignored -> {\n}\n;\nbreak;\ncase \"java.lang.Iterable\":parameters[i]=Collections.emptySet();\nbreak;\ndefault:parameters[i]=parameterTypes[i].getConstructor().newInstance();\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1533,
        "startLineNumber" : 154,
        "startColumnNumber" : 85,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Object[] parameters=new Object[parameterTypes.length];\n  for (int i=0; i < parameterTypes.length; ++i) {\nswitch (parameterTypes[i].getName()) {\ncase \"boolean\":      parameters[i]=true;\n    break;\ncase \"long\":  parameters[i]=0;\nbreak;\ncase \"java.util.Set\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Collection\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Map\":parameters[i]=Collections.emptyMap();\nbreak;\ncase \"org.apache.kafka.common.TopicPartition\":parameters[i]=new TopicPartition(\"topic\",0);\nbreak;\ncase \"java.lang.Exception\":parameters[i]=new IllegalStateException();\nbreak;\ncase \"java.util.function.Consumer\":parameters[i]=(Consumer)ignored -> {\n}\n;\nbreak;\ncase \"java.lang.Iterable\":parameters[i]=Collections.emptySet();\nbreak;\ndefault:parameters[i]=parameterTypes[i].getConstructor().newInstance();\n}\n}\nreturn parameters;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1614,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Object[] getParameters(final Class<?>[] parameterTypes) throws Exception {\n  final Object[] parameters=new Object[parameterTypes.length];\n  for (int i=0; i < parameterTypes.length; ++i) {\nswitch (parameterTypes[i].getName()) {\ncase \"boolean\":      parameters[i]=true;\n    break;\ncase \"long\":  parameters[i]=0;\nbreak;\ncase \"java.util.Set\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Collection\":parameters[i]=Collections.emptySet();\nbreak;\ncase \"java.util.Map\":parameters[i]=Collections.emptyMap();\nbreak;\ncase \"org.apache.kafka.common.TopicPartition\":parameters[i]=new TopicPartition(\"topic\",0);\nbreak;\ncase \"java.lang.Exception\":parameters[i]=new IllegalStateException();\nbreak;\ncase \"java.util.function.Consumer\":parameters[i]=(Consumer)ignored -> {\n}\n;\nbreak;\ncase \"java.lang.Iterable\":parameters[i]=Collections.emptySet();\nbreak;\ndefault:parameters[i]=parameterTypes[i].getConstructor().newInstance();\n}\n}\nreturn parameters;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 168,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 44
      },
      "nodeContext" : "case \"java.util.Collection\":",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 168,
    "startColumnNumber" : 21,
    "endLineNumber" : 168,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}