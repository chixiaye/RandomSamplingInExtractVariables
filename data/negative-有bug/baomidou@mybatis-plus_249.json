{
  "id" : 249,
  "expression" : "t",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-generate/src/main/java/com/baomidou/mybatisplus/generator/config/converts/PostgreSqlTypeConvert.java",
  "occurrences" : 17,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 34,
      "startColumnNumber" : 12,
      "endLineNumber" : 34,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 30
      },
      "nodeContext" : "t.contains(\"char\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 52
      },
      "nodeContext" : "t.contains(\"char\") || t.contains(\"text\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 52
      },
      "nodeContext" : "t.contains(\"char\") || t.contains(\"text\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 34,
      "startColumnNumber" : 34,
      "endLineNumber" : 34,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 34,
        "startColumnNumber" : 34,
        "endLineNumber" : 34,
        "endColumnNumber" : 52
      },
      "nodeContext" : "t.contains(\"text\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 52
      },
      "nodeContext" : "t.contains(\"char\") || t.contains(\"text\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 52
      },
      "nodeContext" : "t.contains(\"char\") || t.contains(\"text\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 36,
      "startColumnNumber" : 19,
      "endLineNumber" : 36,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 36,
        "startColumnNumber" : 19,
        "endLineNumber" : 36,
        "endColumnNumber" : 39
      },
      "nodeContext" : "t.contains(\"bigint\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 36,
        "startColumnNumber" : 19,
        "endLineNumber" : 36,
        "endColumnNumber" : 39
      },
      "nodeContext" : "t.contains(\"bigint\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 38,
      "startColumnNumber" : 19,
      "endLineNumber" : 38,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 38,
        "startColumnNumber" : 19,
        "endLineNumber" : 38,
        "endColumnNumber" : 36
      },
      "nodeContext" : "t.contains(\"int\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 38,
        "startColumnNumber" : 19,
        "endLineNumber" : 38,
        "endColumnNumber" : 36
      },
      "nodeContext" : "t.contains(\"int\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 40,
      "startColumnNumber" : 19,
      "endLineNumber" : 40,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"date\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 81
      },
      "nodeContext" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 81
      },
      "nodeContext" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 40,
      "startColumnNumber" : 41,
      "endLineNumber" : 40,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 40,
        "startColumnNumber" : 41,
        "endLineNumber" : 40,
        "endColumnNumber" : 59
      },
      "nodeContext" : "t.contains(\"time\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 81
      },
      "nodeContext" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 81
      },
      "nodeContext" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 40,
      "startColumnNumber" : 63,
      "endLineNumber" : 40,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 40,
        "startColumnNumber" : 63,
        "endLineNumber" : 40,
        "endColumnNumber" : 81
      },
      "nodeContext" : "t.contains(\"year\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 81
      },
      "nodeContext" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 40,
        "startColumnNumber" : 19,
        "endLineNumber" : 40,
        "endColumnNumber" : 81
      },
      "nodeContext" : "t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 42,
      "startColumnNumber" : 19,
      "endLineNumber" : 42,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 42,
        "startColumnNumber" : 19,
        "endLineNumber" : 42,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"text\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 42,
        "startColumnNumber" : 19,
        "endLineNumber" : 42,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"text\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 44,
      "startColumnNumber" : 19,
      "endLineNumber" : 44,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 44,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 36
      },
      "nodeContext" : "t.contains(\"bit\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 44,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 36
      },
      "nodeContext" : "t.contains(\"bit\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 46,
      "startColumnNumber" : 19,
      "endLineNumber" : 46,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 46,
        "startColumnNumber" : 19,
        "endLineNumber" : 46,
        "endColumnNumber" : 40
      },
      "nodeContext" : "t.contains(\"decimal\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 46,
        "startColumnNumber" : 19,
        "endLineNumber" : 46,
        "endColumnNumber" : 40
      },
      "nodeContext" : "t.contains(\"decimal\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 48,
      "startColumnNumber" : 19,
      "endLineNumber" : 48,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 48,
        "startColumnNumber" : 19,
        "endLineNumber" : 48,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"clob\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 48,
        "startColumnNumber" : 19,
        "endLineNumber" : 48,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"clob\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 50,
      "startColumnNumber" : 19,
      "endLineNumber" : 50,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"blob\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"blob\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 52,
      "startColumnNumber" : 19,
      "endLineNumber" : 52,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 52,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 38
      },
      "nodeContext" : "t.contains(\"float\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 52,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 38
      },
      "nodeContext" : "t.contains(\"float\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 54,
      "startColumnNumber" : 19,
      "endLineNumber" : 54,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 54,
        "startColumnNumber" : 19,
        "endLineNumber" : 54,
        "endColumnNumber" : 39
      },
      "nodeContext" : "t.contains(\"double\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 54,
        "startColumnNumber" : 19,
        "endLineNumber" : 54,
        "endColumnNumber" : 39
      },
      "nodeContext" : "t.contains(\"double\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 19,
      "endLineNumber" : 56,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 56,
        "endColumnNumber" : 37
      },
      "nodeContext" : "t.contains(\"json\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 56,
        "endColumnNumber" : 59
      },
      "nodeContext" : "t.contains(\"json\") || t.contains(\"enum\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 56,
        "endColumnNumber" : 59
      },
      "nodeContext" : "t.contains(\"json\") || t.contains(\"enum\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 56,
      "startColumnNumber" : 41,
      "endLineNumber" : 56,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 56,
        "startColumnNumber" : 41,
        "endLineNumber" : 56,
        "endColumnNumber" : 59
      },
      "nodeContext" : "t.contains(\"enum\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 56,
        "endColumnNumber" : 59
      },
      "nodeContext" : "t.contains(\"json\") || t.contains(\"enum\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 56,
        "endColumnNumber" : 59
      },
      "nodeContext" : "t.contains(\"json\") || t.contains(\"enum\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "t",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 58,
      "startColumnNumber" : 19,
      "endLineNumber" : 58,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 19,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "t.contains(\"boolean\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 58,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 48,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 46,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t.contains(\"char\") || t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bigint\")) {\n  return DbColumnType.LONG;\n}\n else if (t.contains(\"int\")) {\n  return DbColumnType.INTEGER;\n}\n else if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n  return DbColumnType.DATE;\n}\n else if (t.contains(\"text\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"bit\")) {\n  return DbColumnType.BOOLEAN;\n}\n else if (t.contains(\"decimal\")) {\n  return DbColumnType.BIG_DECIMAL;\n}\n else if (t.contains(\"clob\")) {\n  return DbColumnType.CLOB;\n}\n else if (t.contains(\"blob\")) {\n  return DbColumnType.BYTE_ARRAY;\n}\n else if (t.contains(\"float\")) {\n  return DbColumnType.FLOAT;\n}\n else if (t.contains(\"double\")) {\n  return DbColumnType.DOUBLE;\n}\n else if (t.contains(\"json\") || t.contains(\"enum\")) {\n  return DbColumnType.STRING;\n}\n else if (t.contains(\"boolean\")) {\n  return DbColumnType.BOOLEAN;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 32,
        "startColumnNumber" : 61,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DbColumnType processTypeConvert(String fieldType){\n  String t=fieldType.toLowerCase();\n  if (t.contains(\"char\") || t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bigint\")) {\n    return DbColumnType.LONG;\n  }\n else   if (t.contains(\"int\")) {\n    return DbColumnType.INTEGER;\n  }\n else   if (t.contains(\"date\") || t.contains(\"time\") || t.contains(\"year\")) {\n    return DbColumnType.DATE;\n  }\n else   if (t.contains(\"text\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"bit\")) {\n    return DbColumnType.BOOLEAN;\n  }\n else   if (t.contains(\"decimal\")) {\n    return DbColumnType.BIG_DECIMAL;\n  }\n else   if (t.contains(\"clob\")) {\n    return DbColumnType.CLOB;\n  }\n else   if (t.contains(\"blob\")) {\n    return DbColumnType.BYTE_ARRAY;\n  }\n else   if (t.contains(\"float\")) {\n    return DbColumnType.FLOAT;\n  }\n else   if (t.contains(\"double\")) {\n    return DbColumnType.DOUBLE;\n  }\n else   if (t.contains(\"json\") || t.contains(\"enum\")) {\n    return DbColumnType.STRING;\n  }\n else   if (t.contains(\"boolean\")) {\n    return DbColumnType.BOOLEAN;\n  }\n  return DbColumnType.STRING;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 58,
        "startColumnNumber" : 19,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "t.contains(\"boolean\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 34,
    "startColumnNumber" : 12,
    "endLineNumber" : 34,
    "endColumnNumber" : 13
  }, {
    "charLength" : 1,
    "startLineNumber" : 34,
    "startColumnNumber" : 34,
    "endLineNumber" : 34,
    "endColumnNumber" : 35
  }, {
    "charLength" : 1,
    "startLineNumber" : 36,
    "startColumnNumber" : 19,
    "endLineNumber" : 36,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 38,
    "startColumnNumber" : 19,
    "endLineNumber" : 38,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 40,
    "startColumnNumber" : 19,
    "endLineNumber" : 40,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 40,
    "startColumnNumber" : 41,
    "endLineNumber" : 40,
    "endColumnNumber" : 42
  }, {
    "charLength" : 1,
    "startLineNumber" : 40,
    "startColumnNumber" : 63,
    "endLineNumber" : 40,
    "endColumnNumber" : 64
  }, {
    "charLength" : 1,
    "startLineNumber" : 42,
    "startColumnNumber" : 19,
    "endLineNumber" : 42,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 44,
    "startColumnNumber" : 19,
    "endLineNumber" : 44,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 46,
    "startColumnNumber" : 19,
    "endLineNumber" : 46,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 48,
    "startColumnNumber" : 19,
    "endLineNumber" : 48,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 50,
    "startColumnNumber" : 19,
    "endLineNumber" : 50,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 52,
    "startColumnNumber" : 19,
    "endLineNumber" : 52,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 54,
    "startColumnNumber" : 19,
    "endLineNumber" : 54,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 19,
    "endLineNumber" : 56,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 56,
    "startColumnNumber" : 41,
    "endLineNumber" : 56,
    "endColumnNumber" : 42
  }, {
    "charLength" : 1,
    "startLineNumber" : 58,
    "startColumnNumber" : 19,
    "endLineNumber" : 58,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 1
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 11
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 11
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 10
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 1
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 11
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 10
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 2
  } ]
}