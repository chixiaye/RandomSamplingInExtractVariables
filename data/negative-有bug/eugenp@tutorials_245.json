{
  "id" : 245,
  "expression" : "\"/models/en-ner-person.bin\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/apache-opennlp/src/test/java/com/baeldung/apache/opennlp/NamedEntityRecognitionUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/models/en-ner-person.bin\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 22,
      "startColumnNumber" : 75,
      "endLineNumber" : 22,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 22,
        "startColumnNumber" : 44,
        "endLineNumber" : 22,
        "endColumnNumber" : 103
      },
      "nodeContext" : "getClass().getResourceAsStream(\"/models/en-ner-person.bin\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 22,
        "startColumnNumber" : 20,
        "endLineNumber" : 22,
        "endColumnNumber" : 103
      },
      "nodeContext" : "inputStreamNameFinder=getClass().getResourceAsStream(\"/models/en-ner-person.bin\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 104
      },
      "nodeContext" : "InputStream inputStreamNameFinder=getClass().getResourceAsStream(\"/models/en-ner-person.bin\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1012,
        "startLineNumber" : 17,
        "startColumnNumber" : 90,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SimpleTokenizer tokenizer=SimpleTokenizer.INSTANCE;\n  String[] tokens=tokenizer.tokenize(\"John is 26 years old. His best friend's name is Leonard. He has a sister named Penny.\");\n  InputStream inputStreamNameFinder=getClass().getResourceAsStream(\"/models/en-ner-person.bin\");\n  TokenNameFinderModel model=new TokenNameFinderModel(inputStreamNameFinder);\n  NameFinderME nameFinderME=new NameFinderME(model);\n  List<Span> spans=Arrays.asList(nameFinderME.find(tokens));\n  assertThat(spans.toString()).isEqualTo(\"[[0..1) person, [13..14) person, [20..21) person]\");\n  List<String> names=new ArrayList<String>();\n  int k=0;\n  for (  Span s : spans) {\n    names.add(\"\");\n    for (int index=s.getStart(); index < s.getEnd(); index++) {\n      names.set(k,names.get(k) + tokens[index]);\n    }\n    k++;\n  }\n  assertThat(names).contains(\"John\",\"Leonard\",\"Penny\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenEnglishPersonModel_whenNER_thenPersonsAreDetected() throws Exception {\n  SimpleTokenizer tokenizer=SimpleTokenizer.INSTANCE;\n  String[] tokens=tokenizer.tokenize(\"John is 26 years old. His best friend's name is Leonard. He has a sister named Penny.\");\n  InputStream inputStreamNameFinder=getClass().getResourceAsStream(\"/models/en-ner-person.bin\");\n  TokenNameFinderModel model=new TokenNameFinderModel(inputStreamNameFinder);\n  NameFinderME nameFinderME=new NameFinderME(model);\n  List<Span> spans=Arrays.asList(nameFinderME.find(tokens));\n  assertThat(spans.toString()).isEqualTo(\"[[0..1) person, [13..14) person, [20..21) person]\");\n  List<String> names=new ArrayList<String>();\n  int k=0;\n  for (  Span s : spans) {\n    names.add(\"\");\n    for (int index=s.getStart(); index < s.getEnd(); index++) {\n      names.set(k,names.get(k) + tokens[index]);\n    }\n    k++;\n  }\n  assertThat(names).contains(\"John\",\"Leonard\",\"Penny\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 104
      },
      "nodeContext" : "InputStream inputStreamNameFinder=getClass().getResourceAsStream(\"/models/en-ner-person.bin\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 22,
    "startColumnNumber" : 75,
    "endLineNumber" : 22,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ ]
}