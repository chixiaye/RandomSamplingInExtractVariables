{
  "id" : 249,
  "expression" : "xml.compareTo(html,exchange)",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-webflux/src/test/java/org/springframework/web/reactive/result/condition/ProducesRequestConditionTests.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "xml.compareTo(html,exchange)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 112,
      "startColumnNumber" : 13,
      "endLineNumber" : 112,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 112,
        "startColumnNumber" : 13,
        "endLineNumber" : 112,
        "endColumnNumber" : 46
      },
      "nodeContext" : "xml.compareTo(html,exchange) < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 104,
        "startColumnNumber" : 42,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compareTo() throws Exception {\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  }, {
    "nodeContext" : "xml.compareTo(html,exchange)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 122,
      "startColumnNumber" : 13,
      "endLineNumber" : 122,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 122,
        "startColumnNumber" : 13,
        "endLineNumber" : 122,
        "endColumnNumber" : 46
      },
      "nodeContext" : "xml.compareTo(html,exchange) < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 104,
        "startColumnNumber" : 42,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compareTo() throws Exception {\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 122,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  }, {
    "nodeContext" : "xml.compareTo(html,exchange)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 128,
      "startColumnNumber" : 13,
      "endLineNumber" : 128,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 128,
        "startColumnNumber" : 13,
        "endLineNumber" : 128,
        "endColumnNumber" : 47
      },
      "nodeContext" : "xml.compareTo(html,exchange) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) == 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) == 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 104,
        "startColumnNumber" : 42,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compareTo() throws Exception {\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) == 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  }, {
    "nodeContext" : "xml.compareTo(html,exchange)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 135,
      "startColumnNumber" : 13,
      "endLineNumber" : 135,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 135,
        "startColumnNumber" : 13,
        "endLineNumber" : 135,
        "endColumnNumber" : 46
      },
      "nodeContext" : "xml.compareTo(html,exchange) < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 104,
        "startColumnNumber" : 42,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 136,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compareTo() throws Exception {\n  ProducesRequestCondition html=new ProducesRequestCondition(\"text/html\");\n  ProducesRequestCondition xml=new ProducesRequestCondition(\"application/xml\");\n  ProducesRequestCondition none=new ProducesRequestCondition();\n  MockServerWebExchange exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/html\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  assertTrue(xml.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(xml,exchange) > 0);\n  assertTrue(html.compareTo(none,exchange) < 0);\n  assertTrue(none.compareTo(html,exchange) > 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/xml, text/*\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"application/pdf\"));\n  assertTrue(html.compareTo(xml,exchange) == 0);\n  assertTrue(xml.compareTo(html,exchange) == 0);\n  exchange=MockServerWebExchange.from(get(\"/\").header(\"Accept\",\"text/html;q=0.9,application/xml\"));\n  assertTrue(html.compareTo(xml,exchange) > 0);\n  assertTrue(xml.compareTo(html,exchange) < 0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(xml.compareTo(html,exchange) < 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 112,
    "startColumnNumber" : 13,
    "endLineNumber" : 112,
    "endColumnNumber" : 42
  }, {
    "charLength" : 29,
    "startLineNumber" : 122,
    "startColumnNumber" : 13,
    "endLineNumber" : 122,
    "endColumnNumber" : 42
  }, {
    "charLength" : 29,
    "startLineNumber" : 128,
    "startColumnNumber" : 13,
    "endLineNumber" : 128,
    "endColumnNumber" : 42
  }, {
    "charLength" : 29,
    "startLineNumber" : 135,
    "startColumnNumber" : 13,
    "endLineNumber" : 135,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}