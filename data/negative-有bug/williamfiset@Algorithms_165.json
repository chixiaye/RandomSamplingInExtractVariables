{
  "id" : 165,
  "expression" : "new int[n][n * 2]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/ModularLinearAlgebra.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new int[n][n * 2]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 47,
      "startColumnNumber" : 24,
      "endLineNumber" : 47,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 41
      },
      "nodeContext" : "augmented=new int[n][n * 2]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int[][] augmented=new int[n][n * 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 44,
        "startColumnNumber" : 63,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (arr.length != arr[0].length)   return null;\n  int n=arr.length;\n  int[][] augmented=new int[n][n * 2];\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      augmented[i][j]=arr[i][j];\n    }\n    augmented[i][i + n]=1;\n  }\n  rref(augmented,prime,modInv);\n  int[][] inv=new int[n][n];\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      if (i == j && augmented[i][j] != 1)       return null;\n else       if (augmented[i][j] != 0)       return null;\n      inv[i][j]=augmented[i][j + n];\n    }\n  }\n  return inv;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static int[][] inverse(int[][] arr,int prime,int[] modInv){\n  if (arr.length != arr[0].length)   return null;\n  int n=arr.length;\n  int[][] augmented=new int[n][n * 2];\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      augmented[i][j]=arr[i][j];\n    }\n    augmented[i][i + n]=1;\n  }\n  rref(augmented,prime,modInv);\n  int[][] inv=new int[n][n];\n  for (int i=0; i < n; i++) {\n    for (int j=0; j < n; j++) {\n      if (i == j && augmented[i][j] != 1)       return null;\n else       if (augmented[i][j] != 0)       return null;\n      inv[i][j]=augmented[i][j + n];\n    }\n  }\n  return inv;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int[][] augmented=new int[n][n * 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int[][]"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 47,
    "startColumnNumber" : 24,
    "endLineNumber" : 47,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}