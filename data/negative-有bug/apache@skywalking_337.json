{
  "id" : 337,
  "expression" : "\"http.method:GET\"",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-core/src/test/java/org/apache/skywalking/oap/server/core/analysis/metrics/expression/NotContainMatchTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"http.method:GET\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 30,
      "startColumnNumber" : 55,
      "endLineNumber" : 30,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 30,
        "startColumnNumber" : 27,
        "endLineNumber" : 30,
        "endColumnNumber" : 73
      },
      "nodeContext" : "notContainMatch.match(null,\"http.method:GET\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 28,
        "startColumnNumber" : 24,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void match(){\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"http.method:GET\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 32,
      "startColumnNumber" : 48,
      "endLineNumber" : 32,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 32,
        "startColumnNumber" : 34,
        "endLineNumber" : 32,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Arrays.asList(\"http.method:GET\",\"http.method:POST\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 106
      },
      "nodeContext" : "notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 28,
        "startColumnNumber" : 24,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void match(){\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 106
      },
      "nodeContext" : "notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"http.method:GET\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 32,
      "startColumnNumber" : 88,
      "endLineNumber" : 32,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 106
      },
      "nodeContext" : "notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 28,
        "startColumnNumber" : 24,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void match(){\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 106
      },
      "nodeContext" : "notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"http.method:GET\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 33,
      "startColumnNumber" : 62,
      "endLineNumber" : 33,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 33,
        "startColumnNumber" : 48,
        "endLineNumber" : 33,
        "endColumnNumber" : 100
      },
      "nodeContext" : "Arrays.asList(\"http.method:GET\",\"http.method:POST\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 33,
        "startColumnNumber" : 26,
        "endLineNumber" : 33,
        "endColumnNumber" : 120
      },
      "nodeContext" : "notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 121
      },
      "nodeContext" : "Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 28,
        "startColumnNumber" : 24,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void match(){\n  NotContainMatch notContainMatch=new NotContainMatch();\n  Assert.assertFalse(notContainMatch.match(null,\"http.method:GET\"));\n  Assert.assertFalse(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:GET\"));\n  Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Assert.assertTrue(notContainMatch.match(Arrays.asList(\"http.method:GET\",\"http.method:POST\"),\"http.method:PUT\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 30,
    "startColumnNumber" : 55,
    "endLineNumber" : 30,
    "endColumnNumber" : 72
  }, {
    "charLength" : 17,
    "startLineNumber" : 32,
    "startColumnNumber" : 48,
    "endLineNumber" : 32,
    "endColumnNumber" : 65
  }, {
    "charLength" : 17,
    "startLineNumber" : 32,
    "startColumnNumber" : 88,
    "endLineNumber" : 32,
    "endColumnNumber" : 105
  }, {
    "charLength" : 17,
    "startLineNumber" : 33,
    "startColumnNumber" : 62,
    "endLineNumber" : 33,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}