{
  "id" : 285,
  "expression" : "vertices[p1Offset]",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/graphics/g3d/particles/values/UnweightedMeshSpawnShapeValue.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "vertices[p1Offset]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 63,
      "startColumnNumber" : 14,
      "endLineNumber" : 63,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 63,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 32
      },
      "nodeContext" : "x1=vertices[p1Offset]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 257
      },
      "nodeContext" : "float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 59,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 59,
        "startColumnNumber" : 23,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int triangleIndex=MathUtils.random(vertexCount - 3) * vertexSize;\n  int p1Offset=triangleIndex + positionOffset, p2Offset=p1Offset + vertexSize, p3Offset=p2Offset + vertexSize;\n  float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n  Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (indices == null) {\n  int triangleIndex=MathUtils.random(vertexCount - 3) * vertexSize;\n  int p1Offset=triangleIndex + positionOffset, p2Offset=p1Offset + vertexSize, p3Offset=p2Offset + vertexSize;\n  float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n  Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n}\n else {\n  int triangleIndex=MathUtils.random(triangleCount - 1) * 3;\n  int p1Offset=indices[triangleIndex] * vertexSize + positionOffset, p2Offset=indices[triangleIndex + 1] * vertexSize + positionOffset, p3Offset=indices[triangleIndex + 2] * vertexSize + positionOffset;\n  float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n  Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 226,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 58,
        "startColumnNumber" : 54,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (indices == null) {\n    int triangleIndex=MathUtils.random(vertexCount - 3) * vertexSize;\n    int p1Offset=triangleIndex + positionOffset, p2Offset=p1Offset + vertexSize, p3Offset=p2Offset + vertexSize;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n else {\n    int triangleIndex=MathUtils.random(triangleCount - 1) * 3;\n    int p1Offset=indices[triangleIndex] * vertexSize + positionOffset, p2Offset=indices[triangleIndex + 1] * vertexSize + positionOffset, p3Offset=indices[triangleIndex + 2] * vertexSize + positionOffset;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void spawnAux(Vector3 vector,float percent){\n  if (indices == null) {\n    int triangleIndex=MathUtils.random(vertexCount - 3) * vertexSize;\n    int p1Offset=triangleIndex + positionOffset, p2Offset=p1Offset + vertexSize, p3Offset=p2Offset + vertexSize;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n else {\n    int triangleIndex=MathUtils.random(triangleCount - 1) * 3;\n    int p1Offset=indices[triangleIndex] * vertexSize + positionOffset, p2Offset=indices[triangleIndex + 1] * vertexSize + positionOffset, p3Offset=indices[triangleIndex + 2] * vertexSize + positionOffset;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 63,
        "startColumnNumber" : 3,
        "endLineNumber" : 63,
        "endColumnNumber" : 257
      },
      "nodeContext" : "float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 59,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float"
  }, {
    "nodeContext" : "vertices[p1Offset]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 70,
      "startColumnNumber" : 14,
      "endLineNumber" : 70,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 70,
        "startColumnNumber" : 9,
        "endLineNumber" : 70,
        "endColumnNumber" : 32
      },
      "nodeContext" : "x1=vertices[p1Offset]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 70,
        "endColumnNumber" : 257
      },
      "nodeContext" : "float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 59,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 65,
        "startColumnNumber" : 9,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int triangleIndex=MathUtils.random(triangleCount - 1) * 3;\n  int p1Offset=indices[triangleIndex] * vertexSize + positionOffset, p2Offset=indices[triangleIndex + 1] * vertexSize + positionOffset, p3Offset=indices[triangleIndex + 2] * vertexSize + positionOffset;\n  float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n  Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (indices == null) {\n  int triangleIndex=MathUtils.random(vertexCount - 3) * vertexSize;\n  int p1Offset=triangleIndex + positionOffset, p2Offset=p1Offset + vertexSize, p3Offset=p2Offset + vertexSize;\n  float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n  Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n}\n else {\n  int triangleIndex=MathUtils.random(triangleCount - 1) * 3;\n  int p1Offset=indices[triangleIndex] * vertexSize + positionOffset, p2Offset=indices[triangleIndex + 1] * vertexSize + positionOffset, p3Offset=indices[triangleIndex + 2] * vertexSize + positionOffset;\n  float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n  Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 226,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 58,
        "startColumnNumber" : 54,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (indices == null) {\n    int triangleIndex=MathUtils.random(vertexCount - 3) * vertexSize;\n    int p1Offset=triangleIndex + positionOffset, p2Offset=p1Offset + vertexSize, p3Offset=p2Offset + vertexSize;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n else {\n    int triangleIndex=MathUtils.random(triangleCount - 1) * 3;\n    int p1Offset=indices[triangleIndex] * vertexSize + positionOffset, p2Offset=indices[triangleIndex + 1] * vertexSize + positionOffset, p3Offset=indices[triangleIndex + 2] * vertexSize + positionOffset;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 73,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void spawnAux(Vector3 vector,float percent){\n  if (indices == null) {\n    int triangleIndex=MathUtils.random(vertexCount - 3) * vertexSize;\n    int p1Offset=triangleIndex + positionOffset, p2Offset=p1Offset + vertexSize, p3Offset=p2Offset + vertexSize;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n else {\n    int triangleIndex=MathUtils.random(triangleCount - 1) * 3;\n    int p1Offset=indices[triangleIndex] * vertexSize + positionOffset, p2Offset=indices[triangleIndex + 1] * vertexSize + positionOffset, p3Offset=indices[triangleIndex + 2] * vertexSize + positionOffset;\n    float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n    Triangle.pick(x1,y1,z1,x2,y2,z2,x3,y3,z3,vector);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 70,
        "startColumnNumber" : 3,
        "endLineNumber" : 70,
        "endColumnNumber" : 257
      },
      "nodeContext" : "float x1=vertices[p1Offset], y1=vertices[p1Offset + 1], z1=vertices[p1Offset + 2], x2=vertices[p2Offset], y2=vertices[p2Offset + 1], z2=vertices[p2Offset + 2], x3=vertices[p3Offset], y3=vertices[p3Offset + 1], z3=vertices[p3Offset + 2];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 59,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 63,
    "startColumnNumber" : 14,
    "endLineNumber" : 63,
    "endColumnNumber" : 32
  }, {
    "charLength" : 18,
    "startLineNumber" : 70,
    "startColumnNumber" : 14,
    "endLineNumber" : 70,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}