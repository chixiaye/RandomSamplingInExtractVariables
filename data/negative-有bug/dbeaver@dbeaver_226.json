{
  "id" : 226,
  "expression" : "DBWorkbench.getPlatformUI()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.oracle.ui/src/org/jkiss/dbeaver/ext/oracle/ui/actions/JobRunHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DBWorkbench.getPlatformUI()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 112,
      "startColumnNumber" : 20,
      "endLineNumber" : 112,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 103
      },
      "nodeContext" : "DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 104
      },
      "nodeContext" : "DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 111,
        "startColumnNumber" : 35,
        "endLineNumber" : 113,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (error != null) {\n  DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n}\n else if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n  int line=-1, position=-1;\n  StringBuilder fullMessage=new StringBuilder();\n  for (  DBCCompileError oce : compileLog.getErrorStack()) {\n    fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n    if (line < 0) {\n      line=oce.getLine();\n      position=oce.getPosition();\n    }\n  }\n  String errorTitle=job.getName() + \" run schedule failed\";\n  DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n}\n else {\n  String message=job.getName() + \" successfully scheduled to run\";\n  UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 120,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2086,
        "startLineNumber" : 89,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final OracleSchedulerJob job=objects.get(0);\n  final DBCCompileLog compileLog=new DBCCompileLogBase();\n  compileLog.clearLog();\n  Throwable error=null;\n  try {\n    UIUtils.runInProgressService(monitor -> {\n      try {\n        runJob(monitor,compileLog,job);\n      }\n catch (      DBCException e) {\n        throw new InvocationTargetException(e);\n      }\n    }\n);\n    if (compileLog.getError() != null) {\n      error=compileLog.getError();\n    }\n  }\n catch (  InvocationTargetException e) {\n    error=e.getTargetException();\n  }\ncatch (  InterruptedException e) {\n    return null;\n  }\n  if (error != null) {\n    DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n  }\n else   if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n    int line=-1, position=-1;\n    StringBuilder fullMessage=new StringBuilder();\n    for (    DBCCompileError oce : compileLog.getErrorStack()) {\n      fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n      if (line < 0) {\n        line=oce.getLine();\n        position=oce.getPosition();\n      }\n    }\n    String errorTitle=job.getName() + \" run schedule failed\";\n    DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n  }\n else {\n    String message=job.getName() + \" successfully scheduled to run\";\n    UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2111,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (objects.size() == 1) {\n  final OracleSchedulerJob job=objects.get(0);\n  final DBCCompileLog compileLog=new DBCCompileLogBase();\n  compileLog.clearLog();\n  Throwable error=null;\n  try {\n    UIUtils.runInProgressService(monitor -> {\n      try {\n        runJob(monitor,compileLog,job);\n      }\n catch (      DBCException e) {\n        throw new InvocationTargetException(e);\n      }\n    }\n);\n    if (compileLog.getError() != null) {\n      error=compileLog.getError();\n    }\n  }\n catch (  InvocationTargetException e) {\n    error=e.getTargetException();\n  }\ncatch (  InterruptedException e) {\n    return null;\n  }\n  if (error != null) {\n    DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n  }\n else   if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n    int line=-1, position=-1;\n    StringBuilder fullMessage=new StringBuilder();\n    for (    DBCCompileError oce : compileLog.getErrorStack()) {\n      fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n      if (line < 0) {\n        line=oce.getLine();\n        position=oce.getPosition();\n      }\n    }\n    String errorTitle=job.getName() + \" run schedule failed\";\n    DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n  }\n else {\n    String message=job.getName() + \" successfully scheduled to run\";\n    UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2845,
        "startLineNumber" : 74,
        "startColumnNumber" : 32,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (activePart instanceof EntityEditor) {\n    EntityEditor entityEditor=(EntityEditor)activePart;\n    if (entityEditor.isDirty()) {\n      NullProgressMonitor monitor=new NullProgressMonitor();\n      entityEditor.doSave(monitor);\n      if (monitor.isCanceled()) {\n        return null;\n      }\n    }\n  }\n  final Shell activeShell=HandlerUtil.getActiveShell(event);\n  if (objects.size() == 1) {\n    final OracleSchedulerJob job=objects.get(0);\n    final DBCCompileLog compileLog=new DBCCompileLogBase();\n    compileLog.clearLog();\n    Throwable error=null;\n    try {\n      UIUtils.runInProgressService(monitor -> {\n        try {\n          runJob(monitor,compileLog,job);\n        }\n catch (        DBCException e) {\n          throw new InvocationTargetException(e);\n        }\n      }\n);\n      if (compileLog.getError() != null) {\n        error=compileLog.getError();\n      }\n    }\n catch (    InvocationTargetException e) {\n      error=e.getTargetException();\n    }\ncatch (    InterruptedException e) {\n      return null;\n    }\n    if (error != null) {\n      DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n    }\n else     if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n      int line=-1, position=-1;\n      StringBuilder fullMessage=new StringBuilder();\n      for (      DBCCompileError oce : compileLog.getErrorStack()) {\n        fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n        if (line < 0) {\n          line=oce.getLine();\n          position=oce.getPosition();\n        }\n      }\n      String errorTitle=job.getName() + \" run schedule failed\";\n      DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n    }\n else {\n      String message=job.getName() + \" successfully scheduled to run\";\n      UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 269,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2869,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!objects.isEmpty()) {\n  if (activePart instanceof EntityEditor) {\n    EntityEditor entityEditor=(EntityEditor)activePart;\n    if (entityEditor.isDirty()) {\n      NullProgressMonitor monitor=new NullProgressMonitor();\n      entityEditor.doSave(monitor);\n      if (monitor.isCanceled()) {\n        return null;\n      }\n    }\n  }\n  final Shell activeShell=HandlerUtil.getActiveShell(event);\n  if (objects.size() == 1) {\n    final OracleSchedulerJob job=objects.get(0);\n    final DBCCompileLog compileLog=new DBCCompileLogBase();\n    compileLog.clearLog();\n    Throwable error=null;\n    try {\n      UIUtils.runInProgressService(monitor -> {\n        try {\n          runJob(monitor,compileLog,job);\n        }\n catch (        DBCException e) {\n          throw new InvocationTargetException(e);\n        }\n      }\n);\n      if (compileLog.getError() != null) {\n        error=compileLog.getError();\n      }\n    }\n catch (    InvocationTargetException e) {\n      error=e.getTargetException();\n    }\ncatch (    InterruptedException e) {\n      return null;\n    }\n    if (error != null) {\n      DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n    }\n else     if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n      int line=-1, position=-1;\n      StringBuilder fullMessage=new StringBuilder();\n      for (      DBCCompileError oce : compileLog.getErrorStack()) {\n        fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n        if (line < 0) {\n          line=oce.getLine();\n          position=oce.getPosition();\n        }\n      }\n      String errorTitle=job.getName() + \" run schedule failed\";\n      DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n    }\n else {\n      String message=job.getName() + \" successfully scheduled to run\";\n      UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 274,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3057,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final IWorkbenchPart activePart=HandlerUtil.getActiveEditor(event);\n  final List<OracleSchedulerJob> objects=getSelectedJobs(event);\n  if (!objects.isEmpty()) {\n    if (activePart instanceof EntityEditor) {\n      EntityEditor entityEditor=(EntityEditor)activePart;\n      if (entityEditor.isDirty()) {\n        NullProgressMonitor monitor=new NullProgressMonitor();\n        entityEditor.doSave(monitor);\n        if (monitor.isCanceled()) {\n          return null;\n        }\n      }\n    }\n    final Shell activeShell=HandlerUtil.getActiveShell(event);\n    if (objects.size() == 1) {\n      final OracleSchedulerJob job=objects.get(0);\n      final DBCCompileLog compileLog=new DBCCompileLogBase();\n      compileLog.clearLog();\n      Throwable error=null;\n      try {\n        UIUtils.runInProgressService(monitor -> {\n          try {\n            runJob(monitor,compileLog,job);\n          }\n catch (          DBCException e) {\n            throw new InvocationTargetException(e);\n          }\n        }\n);\n        if (compileLog.getError() != null) {\n          error=compileLog.getError();\n        }\n      }\n catch (      InvocationTargetException e) {\n        error=e.getTargetException();\n      }\ncatch (      InterruptedException e) {\n        return null;\n      }\n      if (error != null) {\n        DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n      }\n else       if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n        int line=-1, position=-1;\n        StringBuilder fullMessage=new StringBuilder();\n        for (        DBCCompileError oce : compileLog.getErrorStack()) {\n          fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n          if (line < 0) {\n            line=oce.getLine();\n            position=oce.getPosition();\n          }\n        }\n        String errorTitle=job.getName() + \" run schedule failed\";\n        DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n      }\n else {\n        String message=job.getName() + \" successfully scheduled to run\";\n        UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 299,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3145,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object execute(ExecutionEvent event) throws ExecutionException {\n  final IWorkbenchPart activePart=HandlerUtil.getActiveEditor(event);\n  final List<OracleSchedulerJob> objects=getSelectedJobs(event);\n  if (!objects.isEmpty()) {\n    if (activePart instanceof EntityEditor) {\n      EntityEditor entityEditor=(EntityEditor)activePart;\n      if (entityEditor.isDirty()) {\n        NullProgressMonitor monitor=new NullProgressMonitor();\n        entityEditor.doSave(monitor);\n        if (monitor.isCanceled()) {\n          return null;\n        }\n      }\n    }\n    final Shell activeShell=HandlerUtil.getActiveShell(event);\n    if (objects.size() == 1) {\n      final OracleSchedulerJob job=objects.get(0);\n      final DBCCompileLog compileLog=new DBCCompileLogBase();\n      compileLog.clearLog();\n      Throwable error=null;\n      try {\n        UIUtils.runInProgressService(monitor -> {\n          try {\n            runJob(monitor,compileLog,job);\n          }\n catch (          DBCException e) {\n            throw new InvocationTargetException(e);\n          }\n        }\n);\n        if (compileLog.getError() != null) {\n          error=compileLog.getError();\n        }\n      }\n catch (      InvocationTargetException e) {\n        error=e.getTargetException();\n      }\ncatch (      InterruptedException e) {\n        return null;\n      }\n      if (error != null) {\n        DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n      }\n else       if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n        int line=-1, position=-1;\n        StringBuilder fullMessage=new StringBuilder();\n        for (        DBCCompileError oce : compileLog.getErrorStack()) {\n          fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n          if (line < 0) {\n            line=oce.getLine();\n            position=oce.getPosition();\n          }\n        }\n        String errorTitle=job.getName() + \" run schedule failed\";\n        DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n      }\n else {\n        String message=job.getName() + \" successfully scheduled to run\";\n        UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 312,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 104
      },
      "nodeContext" : "DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.jkiss.dbeaver.runtime.ui.DBPPlatformUI"
  }, {
    "nodeContext" : "DBWorkbench.getPlatformUI()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 126,
      "startColumnNumber" : 20,
      "endLineNumber" : 126,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 93
      },
      "nodeContext" : "DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 94
      },
      "nodeContext" : "DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 113,
        "startColumnNumber" : 77,
        "endLineNumber" : 127,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int line=-1, position=-1;\n  StringBuilder fullMessage=new StringBuilder();\n  for (  DBCCompileError oce : compileLog.getErrorStack()) {\n    fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n    if (line < 0) {\n      line=oce.getLine();\n      position=oce.getPosition();\n    }\n  }\n  String errorTitle=job.getName() + \" run schedule failed\";\n  DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 113,
        "startColumnNumber" : 23,
        "endLineNumber" : 130,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n  int line=-1, position=-1;\n  StringBuilder fullMessage=new StringBuilder();\n  for (  DBCCompileError oce : compileLog.getErrorStack()) {\n    fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n    if (line < 0) {\n      line=oce.getLine();\n      position=oce.getPosition();\n    }\n  }\n  String errorTitle=job.getName() + \" run schedule failed\";\n  DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n}\n else {\n  String message=job.getName() + \" successfully scheduled to run\";\n  UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (error != null) {\n  DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n}\n else if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n  int line=-1, position=-1;\n  StringBuilder fullMessage=new StringBuilder();\n  for (  DBCCompileError oce : compileLog.getErrorStack()) {\n    fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n    if (line < 0) {\n      line=oce.getLine();\n      position=oce.getPosition();\n    }\n  }\n  String errorTitle=job.getName() + \" run schedule failed\";\n  DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n}\n else {\n  String message=job.getName() + \" successfully scheduled to run\";\n  UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 120,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2086,
        "startLineNumber" : 89,
        "startColumnNumber" : 37,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final OracleSchedulerJob job=objects.get(0);\n  final DBCCompileLog compileLog=new DBCCompileLogBase();\n  compileLog.clearLog();\n  Throwable error=null;\n  try {\n    UIUtils.runInProgressService(monitor -> {\n      try {\n        runJob(monitor,compileLog,job);\n      }\n catch (      DBCException e) {\n        throw new InvocationTargetException(e);\n      }\n    }\n);\n    if (compileLog.getError() != null) {\n      error=compileLog.getError();\n    }\n  }\n catch (  InvocationTargetException e) {\n    error=e.getTargetException();\n  }\ncatch (  InterruptedException e) {\n    return null;\n  }\n  if (error != null) {\n    DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n  }\n else   if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n    int line=-1, position=-1;\n    StringBuilder fullMessage=new StringBuilder();\n    for (    DBCCompileError oce : compileLog.getErrorStack()) {\n      fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n      if (line < 0) {\n        line=oce.getLine();\n        position=oce.getPosition();\n      }\n    }\n    String errorTitle=job.getName() + \" run schedule failed\";\n    DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n  }\n else {\n    String message=job.getName() + \" successfully scheduled to run\";\n    UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2111,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (objects.size() == 1) {\n  final OracleSchedulerJob job=objects.get(0);\n  final DBCCompileLog compileLog=new DBCCompileLogBase();\n  compileLog.clearLog();\n  Throwable error=null;\n  try {\n    UIUtils.runInProgressService(monitor -> {\n      try {\n        runJob(monitor,compileLog,job);\n      }\n catch (      DBCException e) {\n        throw new InvocationTargetException(e);\n      }\n    }\n);\n    if (compileLog.getError() != null) {\n      error=compileLog.getError();\n    }\n  }\n catch (  InvocationTargetException e) {\n    error=e.getTargetException();\n  }\ncatch (  InterruptedException e) {\n    return null;\n  }\n  if (error != null) {\n    DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n  }\n else   if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n    int line=-1, position=-1;\n    StringBuilder fullMessage=new StringBuilder();\n    for (    DBCCompileError oce : compileLog.getErrorStack()) {\n      fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n      if (line < 0) {\n        line=oce.getLine();\n        position=oce.getPosition();\n      }\n    }\n    String errorTitle=job.getName() + \" run schedule failed\";\n    DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n  }\n else {\n    String message=job.getName() + \" successfully scheduled to run\";\n    UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 218,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2845,
        "startLineNumber" : 74,
        "startColumnNumber" : 32,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (activePart instanceof EntityEditor) {\n    EntityEditor entityEditor=(EntityEditor)activePart;\n    if (entityEditor.isDirty()) {\n      NullProgressMonitor monitor=new NullProgressMonitor();\n      entityEditor.doSave(monitor);\n      if (monitor.isCanceled()) {\n        return null;\n      }\n    }\n  }\n  final Shell activeShell=HandlerUtil.getActiveShell(event);\n  if (objects.size() == 1) {\n    final OracleSchedulerJob job=objects.get(0);\n    final DBCCompileLog compileLog=new DBCCompileLogBase();\n    compileLog.clearLog();\n    Throwable error=null;\n    try {\n      UIUtils.runInProgressService(monitor -> {\n        try {\n          runJob(monitor,compileLog,job);\n        }\n catch (        DBCException e) {\n          throw new InvocationTargetException(e);\n        }\n      }\n);\n      if (compileLog.getError() != null) {\n        error=compileLog.getError();\n      }\n    }\n catch (    InvocationTargetException e) {\n      error=e.getTargetException();\n    }\ncatch (    InterruptedException e) {\n      return null;\n    }\n    if (error != null) {\n      DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n    }\n else     if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n      int line=-1, position=-1;\n      StringBuilder fullMessage=new StringBuilder();\n      for (      DBCCompileError oce : compileLog.getErrorStack()) {\n        fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n        if (line < 0) {\n          line=oce.getLine();\n          position=oce.getPosition();\n        }\n      }\n      String errorTitle=job.getName() + \" run schedule failed\";\n      DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n    }\n else {\n      String message=job.getName() + \" successfully scheduled to run\";\n      UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 269,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2869,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!objects.isEmpty()) {\n  if (activePart instanceof EntityEditor) {\n    EntityEditor entityEditor=(EntityEditor)activePart;\n    if (entityEditor.isDirty()) {\n      NullProgressMonitor monitor=new NullProgressMonitor();\n      entityEditor.doSave(monitor);\n      if (monitor.isCanceled()) {\n        return null;\n      }\n    }\n  }\n  final Shell activeShell=HandlerUtil.getActiveShell(event);\n  if (objects.size() == 1) {\n    final OracleSchedulerJob job=objects.get(0);\n    final DBCCompileLog compileLog=new DBCCompileLogBase();\n    compileLog.clearLog();\n    Throwable error=null;\n    try {\n      UIUtils.runInProgressService(monitor -> {\n        try {\n          runJob(monitor,compileLog,job);\n        }\n catch (        DBCException e) {\n          throw new InvocationTargetException(e);\n        }\n      }\n);\n      if (compileLog.getError() != null) {\n        error=compileLog.getError();\n      }\n    }\n catch (    InvocationTargetException e) {\n      error=e.getTargetException();\n    }\ncatch (    InterruptedException e) {\n      return null;\n    }\n    if (error != null) {\n      DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n    }\n else     if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n      int line=-1, position=-1;\n      StringBuilder fullMessage=new StringBuilder();\n      for (      DBCCompileError oce : compileLog.getErrorStack()) {\n        fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n        if (line < 0) {\n          line=oce.getLine();\n          position=oce.getPosition();\n        }\n      }\n      String errorTitle=job.getName() + \" run schedule failed\";\n      DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n    }\n else {\n      String message=job.getName() + \" successfully scheduled to run\";\n      UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 274,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3057,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final IWorkbenchPart activePart=HandlerUtil.getActiveEditor(event);\n  final List<OracleSchedulerJob> objects=getSelectedJobs(event);\n  if (!objects.isEmpty()) {\n    if (activePart instanceof EntityEditor) {\n      EntityEditor entityEditor=(EntityEditor)activePart;\n      if (entityEditor.isDirty()) {\n        NullProgressMonitor monitor=new NullProgressMonitor();\n        entityEditor.doSave(monitor);\n        if (monitor.isCanceled()) {\n          return null;\n        }\n      }\n    }\n    final Shell activeShell=HandlerUtil.getActiveShell(event);\n    if (objects.size() == 1) {\n      final OracleSchedulerJob job=objects.get(0);\n      final DBCCompileLog compileLog=new DBCCompileLogBase();\n      compileLog.clearLog();\n      Throwable error=null;\n      try {\n        UIUtils.runInProgressService(monitor -> {\n          try {\n            runJob(monitor,compileLog,job);\n          }\n catch (          DBCException e) {\n            throw new InvocationTargetException(e);\n          }\n        }\n);\n        if (compileLog.getError() != null) {\n          error=compileLog.getError();\n        }\n      }\n catch (      InvocationTargetException e) {\n        error=e.getTargetException();\n      }\ncatch (      InterruptedException e) {\n        return null;\n      }\n      if (error != null) {\n        DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n      }\n else       if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n        int line=-1, position=-1;\n        StringBuilder fullMessage=new StringBuilder();\n        for (        DBCCompileError oce : compileLog.getErrorStack()) {\n          fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n          if (line < 0) {\n            line=oce.getLine();\n            position=oce.getPosition();\n          }\n        }\n        String errorTitle=job.getName() + \" run schedule failed\";\n        DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n      }\n else {\n        String message=job.getName() + \" successfully scheduled to run\";\n        UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 299,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3145,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object execute(ExecutionEvent event) throws ExecutionException {\n  final IWorkbenchPart activePart=HandlerUtil.getActiveEditor(event);\n  final List<OracleSchedulerJob> objects=getSelectedJobs(event);\n  if (!objects.isEmpty()) {\n    if (activePart instanceof EntityEditor) {\n      EntityEditor entityEditor=(EntityEditor)activePart;\n      if (entityEditor.isDirty()) {\n        NullProgressMonitor monitor=new NullProgressMonitor();\n        entityEditor.doSave(monitor);\n        if (monitor.isCanceled()) {\n          return null;\n        }\n      }\n    }\n    final Shell activeShell=HandlerUtil.getActiveShell(event);\n    if (objects.size() == 1) {\n      final OracleSchedulerJob job=objects.get(0);\n      final DBCCompileLog compileLog=new DBCCompileLogBase();\n      compileLog.clearLog();\n      Throwable error=null;\n      try {\n        UIUtils.runInProgressService(monitor -> {\n          try {\n            runJob(monitor,compileLog,job);\n          }\n catch (          DBCException e) {\n            throw new InvocationTargetException(e);\n          }\n        }\n);\n        if (compileLog.getError() != null) {\n          error=compileLog.getError();\n        }\n      }\n catch (      InvocationTargetException e) {\n        error=e.getTargetException();\n      }\ncatch (      InterruptedException e) {\n        return null;\n      }\n      if (error != null) {\n        DBWorkbench.getPlatformUI().showError(\"Unexpected run schedule error\",null,error);\n      }\n else       if (!CommonUtils.isEmpty(compileLog.getErrorStack())) {\n        int line=-1, position=-1;\n        StringBuilder fullMessage=new StringBuilder();\n        for (        DBCCompileError oce : compileLog.getErrorStack()) {\n          fullMessage.append(oce.toString()).append(GeneralUtils.getDefaultLineSeparator());\n          if (line < 0) {\n            line=oce.getLine();\n            position=oce.getPosition();\n          }\n        }\n        String errorTitle=job.getName() + \" run schedule failed\";\n        DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n      }\n else {\n        String message=job.getName() + \" successfully scheduled to run\";\n        UIUtils.showMessageBox(activeShell,\"Done\",message,SWT.ICON_INFORMATION);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 312,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 94
      },
      "nodeContext" : "DBWorkbench.getPlatformUI().showError(errorTitle,fullMessage.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.jkiss.dbeaver.runtime.ui.DBPPlatformUI"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 112,
    "startColumnNumber" : 20,
    "endLineNumber" : 112,
    "endColumnNumber" : 47
  }, {
    "charLength" : 27,
    "startLineNumber" : 126,
    "startColumnNumber" : 20,
    "endLineNumber" : 126,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}