{
  "id" : 326,
  "expression" : "entries",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-common/src/test/java/com/facebook/presto/common/array/TestBlockBigArray.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 30,
      "startColumnNumber" : 67,
      "endLineNumber" : 30,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 30,
        "startColumnNumber" : 36,
        "endLineNumber" : 30,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new IntArrayBlockBuilder(null,entries)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 30,
        "startColumnNumber" : 21,
        "endLineNumber" : 30,
        "endColumnNumber" : 75
      },
      "nodeContext" : "blockBuilder=new IntArrayBlockBuilder(null,entries)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 76
      },
      "nodeContext" : "BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int entries=123;\n  BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n  for (int i=0; i < entries; i++) {\n    blockBuilder.writeInt(i);\n  }\n  Block block=blockBuilder.build();\n  int arraySize=456;\n  int blocks=7890;\n  BlockBigArray blockBigArray=new BlockBigArray();\n  blockBigArray.ensureCapacity(arraySize);\n  for (int i=0; i < blocks; i++) {\n    blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n  }\n  ReferenceCountMap referenceCountMap=new ReferenceCountMap();\n  referenceCountMap.incrementAndGet(block);\n  long expectedSize=ClassLayout.parseClass(BlockBigArray.class).instanceSize() + referenceCountMap.sizeOf() + (new ObjectBigArray()).sizeOf()+ block.getRetainedSizeInBytes()+ (arraySize - 1) * ClassLayout.parseClass(block.getClass()).instanceSize();\n  assertEquals(blockBigArray.sizeOf(),expectedSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRetainedSizeWithOverlappingBlocks(){\n  int entries=123;\n  BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n  for (int i=0; i < entries; i++) {\n    blockBuilder.writeInt(i);\n  }\n  Block block=blockBuilder.build();\n  int arraySize=456;\n  int blocks=7890;\n  BlockBigArray blockBigArray=new BlockBigArray();\n  blockBigArray.ensureCapacity(arraySize);\n  for (int i=0; i < blocks; i++) {\n    blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n  }\n  ReferenceCountMap referenceCountMap=new ReferenceCountMap();\n  referenceCountMap.incrementAndGet(block);\n  long expectedSize=ClassLayout.parseClass(BlockBigArray.class).instanceSize() + referenceCountMap.sizeOf() + (new ObjectBigArray()).sizeOf()+ block.getRetainedSizeInBytes()+ (arraySize - 1) * ClassLayout.parseClass(block.getClass()).instanceSize();\n  assertEquals(blockBigArray.sizeOf(),expectedSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 76
      },
      "nodeContext" : "BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "entries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 31,
      "startColumnNumber" : 28,
      "endLineNumber" : 31,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 31,
        "startColumnNumber" : 24,
        "endLineNumber" : 31,
        "endColumnNumber" : 35
      },
      "nodeContext" : "i < entries",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < entries; i++) {\n  blockBuilder.writeInt(i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int entries=123;\n  BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n  for (int i=0; i < entries; i++) {\n    blockBuilder.writeInt(i);\n  }\n  Block block=blockBuilder.build();\n  int arraySize=456;\n  int blocks=7890;\n  BlockBigArray blockBigArray=new BlockBigArray();\n  blockBigArray.ensureCapacity(arraySize);\n  for (int i=0; i < blocks; i++) {\n    blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n  }\n  ReferenceCountMap referenceCountMap=new ReferenceCountMap();\n  referenceCountMap.incrementAndGet(block);\n  long expectedSize=ClassLayout.parseClass(BlockBigArray.class).instanceSize() + referenceCountMap.sizeOf() + (new ObjectBigArray()).sizeOf()+ block.getRetainedSizeInBytes()+ (arraySize - 1) * ClassLayout.parseClass(block.getClass()).instanceSize();\n  assertEquals(blockBigArray.sizeOf(),expectedSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRetainedSizeWithOverlappingBlocks(){\n  int entries=123;\n  BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n  for (int i=0; i < entries; i++) {\n    blockBuilder.writeInt(i);\n  }\n  Block block=blockBuilder.build();\n  int arraySize=456;\n  int blocks=7890;\n  BlockBigArray blockBigArray=new BlockBigArray();\n  blockBigArray.ensureCapacity(arraySize);\n  for (int i=0; i < blocks; i++) {\n    blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n  }\n  ReferenceCountMap referenceCountMap=new ReferenceCountMap();\n  referenceCountMap.incrementAndGet(block);\n  long expectedSize=ClassLayout.parseClass(BlockBigArray.class).instanceSize() + referenceCountMap.sizeOf() + (new ObjectBigArray()).sizeOf()+ block.getRetainedSizeInBytes()+ (arraySize - 1) * ClassLayout.parseClass(block.getClass()).instanceSize();\n  assertEquals(blockBigArray.sizeOf(),expectedSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 31,
        "startColumnNumber" : 24,
        "endLineNumber" : 31,
        "endColumnNumber" : 35
      },
      "nodeContext" : "i < entries",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "entries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 42,
      "startColumnNumber" : 64,
      "endLineNumber" : 42,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 42,
        "startColumnNumber" : 45,
        "endLineNumber" : 42,
        "endColumnNumber" : 72
      },
      "nodeContext" : "block.getRegion(0,entries)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 73
      },
      "nodeContext" : "blockBigArray.set(i % arraySize,block.getRegion(0,entries))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 74
      },
      "nodeContext" : "blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 41,
        "startColumnNumber" : 41,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < blocks; i++) {\n  blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int entries=123;\n  BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n  for (int i=0; i < entries; i++) {\n    blockBuilder.writeInt(i);\n  }\n  Block block=blockBuilder.build();\n  int arraySize=456;\n  int blocks=7890;\n  BlockBigArray blockBigArray=new BlockBigArray();\n  blockBigArray.ensureCapacity(arraySize);\n  for (int i=0; i < blocks; i++) {\n    blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n  }\n  ReferenceCountMap referenceCountMap=new ReferenceCountMap();\n  referenceCountMap.incrementAndGet(block);\n  long expectedSize=ClassLayout.parseClass(BlockBigArray.class).instanceSize() + referenceCountMap.sizeOf() + (new ObjectBigArray()).sizeOf()+ block.getRetainedSizeInBytes()+ (arraySize - 1) * ClassLayout.parseClass(block.getClass()).instanceSize();\n  assertEquals(blockBigArray.sizeOf(),expectedSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRetainedSizeWithOverlappingBlocks(){\n  int entries=123;\n  BlockBuilder blockBuilder=new IntArrayBlockBuilder(null,entries);\n  for (int i=0; i < entries; i++) {\n    blockBuilder.writeInt(i);\n  }\n  Block block=blockBuilder.build();\n  int arraySize=456;\n  int blocks=7890;\n  BlockBigArray blockBigArray=new BlockBigArray();\n  blockBigArray.ensureCapacity(arraySize);\n  for (int i=0; i < blocks; i++) {\n    blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n  }\n  ReferenceCountMap referenceCountMap=new ReferenceCountMap();\n  referenceCountMap.incrementAndGet(block);\n  long expectedSize=ClassLayout.parseClass(BlockBigArray.class).instanceSize() + referenceCountMap.sizeOf() + (new ObjectBigArray()).sizeOf()+ block.getRetainedSizeInBytes()+ (arraySize - 1) * ClassLayout.parseClass(block.getClass()).instanceSize();\n  assertEquals(blockBigArray.sizeOf(),expectedSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 74
      },
      "nodeContext" : "blockBigArray.set(i % arraySize,block.getRegion(0,entries));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 30,
    "startColumnNumber" : 67,
    "endLineNumber" : 30,
    "endColumnNumber" : 74
  }, {
    "charLength" : 7,
    "startLineNumber" : 31,
    "startColumnNumber" : 28,
    "endLineNumber" : 31,
    "endColumnNumber" : 35
  }, {
    "charLength" : 7,
    "startLineNumber" : 42,
    "startColumnNumber" : 64,
    "endLineNumber" : 42,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}