{
  "id" : 447,
  "expression" : "Status",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/client/authorization/ExportAuthorizationSettingsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Status",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 67,
      "startColumnNumber" : 32,
      "endLineNumber" : 67,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 67,
        "startColumnNumber" : 32,
        "endLineNumber" : 67,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Status.CREATED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.assertEquals(Status.CREATED,create.getStatusInfo())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(Status.CREATED,create.getStatusInfo());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertEquals(Status.CREATED,create.getStatusInfo());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Assert.assertEquals(Status.CREATED,create.getStatusInfo());\n}\n  finally {\n  create.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1881,
        "startLineNumber" : 46,
        "startColumnNumber" : 63,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String permissionName=\"resource-based-permission\";\n  ClientResource clientResource=getClientResource();\n  AuthorizationResource authorizationResource=clientResource.authorization();\n  List<ResourceRepresentation> resources=authorizationResource.resources().findByName(\"Default Resource\");\n  Assert.assertTrue(resources.size() == 1);\n  ResourceRepresentation resource=resources.get(0);\n  PolicyRepresentation policy=authorizationResource.policies().findByName(\"Default Policy\");\n  ResourcePermissionRepresentation permission=new ResourcePermissionRepresentation();\n  permission.setName(permissionName);\n  permission.addPolicy(policy.getId());\n  permission.addResource(resource.getId());\n  Response create=authorizationResource.permissions().resource().create(permission);\n  try {\n    Assert.assertEquals(Status.CREATED,create.getStatusInfo());\n  }\n  finally {\n    create.close();\n  }\n  ResourceServerRepresentation exportSettings=authorizationResource.exportSettings();\n  boolean found=false;\n  for (  PolicyRepresentation p : exportSettings.getPolicies()) {\n    if (p.getName().equals(permissionName)) {\n      found=true;\n      Assert.assertEquals(\"[\\\"Default Resource\\\"]\",p.getConfig().get(\"resources\"));\n      Assert.assertEquals(\"[\\\"Default Policy\\\"]\",p.getConfig().get(\"applyPolicies\"));\n    }\n  }\n  Assert.assertTrue(\"Permission \\\"role-based-permission\\\" was not found.\",found);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1950,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testResourceBasedPermission() throws Exception {\n  String permissionName=\"resource-based-permission\";\n  ClientResource clientResource=getClientResource();\n  AuthorizationResource authorizationResource=clientResource.authorization();\n  List<ResourceRepresentation> resources=authorizationResource.resources().findByName(\"Default Resource\");\n  Assert.assertTrue(resources.size() == 1);\n  ResourceRepresentation resource=resources.get(0);\n  PolicyRepresentation policy=authorizationResource.policies().findByName(\"Default Policy\");\n  ResourcePermissionRepresentation permission=new ResourcePermissionRepresentation();\n  permission.setName(permissionName);\n  permission.addPolicy(policy.getId());\n  permission.addResource(resource.getId());\n  Response create=authorizationResource.permissions().resource().create(permission);\n  try {\n    Assert.assertEquals(Status.CREATED,create.getStatusInfo());\n  }\n  finally {\n    create.close();\n  }\n  ResourceServerRepresentation exportSettings=authorizationResource.exportSettings();\n  boolean found=false;\n  for (  PolicyRepresentation p : exportSettings.getPolicies()) {\n    if (p.getName().equals(permissionName)) {\n      found=true;\n      Assert.assertEquals(\"[\\\"Default Resource\\\"]\",p.getConfig().get(\"resources\"));\n      Assert.assertEquals(\"[\\\"Default Policy\\\"]\",p.getConfig().get(\"applyPolicies\"));\n    }\n  }\n  Assert.assertTrue(\"Permission \\\"role-based-permission\\\" was not found.\",found);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(Status.CREATED,create.getStatusInfo());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 67,
    "startColumnNumber" : 32,
    "endLineNumber" : 67,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}