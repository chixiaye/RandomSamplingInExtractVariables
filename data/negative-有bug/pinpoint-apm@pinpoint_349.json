{
  "id" : 349,
  "expression" : "properties",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/plugins/postgresql-jdbc/src/main/java/com/navercorp/pinpoint/plugin/jdbc/postgresql/interceptor/PostgreSQLConnectionCreateInterceptor.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "properties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 63,
      "startColumnNumber" : 39,
      "endLineNumber" : 63,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 63,
        "startColumnNumber" : 39,
        "endLineNumber" : 63,
        "endColumnNumber" : 71
      },
      "nodeContext" : "properties.getProperty(\"PGHOST\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 63,
        "startColumnNumber" : 21,
        "endLineNumber" : 63,
        "endColumnNumber" : 71
      },
      "nodeContext" : "hostToConnectTo=properties.getProperty(\"PGHOST\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 52,
        "startColumnNumber" : 88,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isDebug) {\n    logger.afterInterceptor(target,args,result,throwable);\n  }\n  if (args == null || args.length != 5) {\n    return;\n  }\n  Properties properties=getProperties(args[3]);\n  final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n  final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n  final String databaseId=properties.getProperty(\"PGDBNAME\");\n  DatabaseInfo databaseInfo=null;\n  if (hostToConnectTo != null && portToConnectTo != null && databaseId != null) {\n    databaseInfo=createDatabaseInfo(hostToConnectTo,portToConnectTo,databaseId);\n    if (InterceptorUtils.isSuccess(throwable)) {\n      if (target instanceof DatabaseInfoAccessor) {\n        ((DatabaseInfoAccessor)target)._$PINPOINT$_setDatabaseInfo(databaseInfo);\n      }\n    }\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.currentSpanEventRecorder();\n  if (databaseInfo != null) {\n    recorder.recordServiceType(databaseInfo.getType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void after(Object target,Object[] args,Object result,Throwable throwable){\n  if (isDebug) {\n    logger.afterInterceptor(target,args,result,throwable);\n  }\n  if (args == null || args.length != 5) {\n    return;\n  }\n  Properties properties=getProperties(args[3]);\n  final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n  final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n  final String databaseId=properties.getProperty(\"PGDBNAME\");\n  DatabaseInfo databaseInfo=null;\n  if (hostToConnectTo != null && portToConnectTo != null && databaseId != null) {\n    databaseInfo=createDatabaseInfo(hostToConnectTo,portToConnectTo,databaseId);\n    if (InterceptorUtils.isSuccess(throwable)) {\n      if (target instanceof DatabaseInfoAccessor) {\n        ((DatabaseInfoAccessor)target)._$PINPOINT$_setDatabaseInfo(databaseInfo);\n      }\n    }\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.currentSpanEventRecorder();\n  if (databaseInfo != null) {\n    recorder.recordServiceType(databaseInfo.getType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  }, {
    "nodeContext" : "properties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 64,
      "startColumnNumber" : 56,
      "endLineNumber" : 64,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 64,
        "startColumnNumber" : 56,
        "endLineNumber" : 64,
        "endColumnNumber" : 102
      },
      "nodeContext" : "properties.getProperty(\"PGPORT\",DEFAULT_PORT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 64,
        "startColumnNumber" : 40,
        "endLineNumber" : 64,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 64,
        "endColumnNumber" : 103
      },
      "nodeContext" : "portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 52,
        "startColumnNumber" : 88,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isDebug) {\n    logger.afterInterceptor(target,args,result,throwable);\n  }\n  if (args == null || args.length != 5) {\n    return;\n  }\n  Properties properties=getProperties(args[3]);\n  final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n  final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n  final String databaseId=properties.getProperty(\"PGDBNAME\");\n  DatabaseInfo databaseInfo=null;\n  if (hostToConnectTo != null && portToConnectTo != null && databaseId != null) {\n    databaseInfo=createDatabaseInfo(hostToConnectTo,portToConnectTo,databaseId);\n    if (InterceptorUtils.isSuccess(throwable)) {\n      if (target instanceof DatabaseInfoAccessor) {\n        ((DatabaseInfoAccessor)target)._$PINPOINT$_setDatabaseInfo(databaseInfo);\n      }\n    }\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.currentSpanEventRecorder();\n  if (databaseInfo != null) {\n    recorder.recordServiceType(databaseInfo.getType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void after(Object target,Object[] args,Object result,Throwable throwable){\n  if (isDebug) {\n    logger.afterInterceptor(target,args,result,throwable);\n  }\n  if (args == null || args.length != 5) {\n    return;\n  }\n  Properties properties=getProperties(args[3]);\n  final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n  final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n  final String databaseId=properties.getProperty(\"PGDBNAME\");\n  DatabaseInfo databaseInfo=null;\n  if (hostToConnectTo != null && portToConnectTo != null && databaseId != null) {\n    databaseInfo=createDatabaseInfo(hostToConnectTo,portToConnectTo,databaseId);\n    if (InterceptorUtils.isSuccess(throwable)) {\n      if (target instanceof DatabaseInfoAccessor) {\n        ((DatabaseInfoAccessor)target)._$PINPOINT$_setDatabaseInfo(databaseInfo);\n      }\n    }\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.currentSpanEventRecorder();\n  if (databaseInfo != null) {\n    recorder.recordServiceType(databaseInfo.getType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  }, {
    "nodeContext" : "properties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 66,
      "startColumnNumber" : 34,
      "endLineNumber" : 66,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 66,
        "startColumnNumber" : 34,
        "endLineNumber" : 66,
        "endColumnNumber" : 68
      },
      "nodeContext" : "properties.getProperty(\"PGDBNAME\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 66,
        "startColumnNumber" : 21,
        "endLineNumber" : 66,
        "endColumnNumber" : 68
      },
      "nodeContext" : "databaseId=properties.getProperty(\"PGDBNAME\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final String databaseId=properties.getProperty(\"PGDBNAME\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1710,
        "startLineNumber" : 52,
        "startColumnNumber" : 88,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isDebug) {\n    logger.afterInterceptor(target,args,result,throwable);\n  }\n  if (args == null || args.length != 5) {\n    return;\n  }\n  Properties properties=getProperties(args[3]);\n  final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n  final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n  final String databaseId=properties.getProperty(\"PGDBNAME\");\n  DatabaseInfo databaseInfo=null;\n  if (hostToConnectTo != null && portToConnectTo != null && databaseId != null) {\n    databaseInfo=createDatabaseInfo(hostToConnectTo,portToConnectTo,databaseId);\n    if (InterceptorUtils.isSuccess(throwable)) {\n      if (target instanceof DatabaseInfoAccessor) {\n        ((DatabaseInfoAccessor)target)._$PINPOINT$_setDatabaseInfo(databaseInfo);\n      }\n    }\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.currentSpanEventRecorder();\n  if (databaseInfo != null) {\n    recorder.recordServiceType(databaseInfo.getType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void after(Object target,Object[] args,Object result,Throwable throwable){\n  if (isDebug) {\n    logger.afterInterceptor(target,args,result,throwable);\n  }\n  if (args == null || args.length != 5) {\n    return;\n  }\n  Properties properties=getProperties(args[3]);\n  final String hostToConnectTo=properties.getProperty(\"PGHOST\");\n  final Integer portToConnectTo=Integer.valueOf(properties.getProperty(\"PGPORT\",DEFAULT_PORT));\n  final String databaseId=properties.getProperty(\"PGDBNAME\");\n  DatabaseInfo databaseInfo=null;\n  if (hostToConnectTo != null && portToConnectTo != null && databaseId != null) {\n    databaseInfo=createDatabaseInfo(hostToConnectTo,portToConnectTo,databaseId);\n    if (InterceptorUtils.isSuccess(throwable)) {\n      if (target instanceof DatabaseInfoAccessor) {\n        ((DatabaseInfoAccessor)target)._$PINPOINT$_setDatabaseInfo(databaseInfo);\n      }\n    }\n  }\n  final Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.currentSpanEventRecorder();\n  if (databaseInfo != null) {\n    recorder.recordServiceType(databaseInfo.getType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final String databaseId=properties.getProperty(\"PGDBNAME\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 63,
    "startColumnNumber" : 39,
    "endLineNumber" : 63,
    "endColumnNumber" : 49
  }, {
    "charLength" : 10,
    "startLineNumber" : 64,
    "startColumnNumber" : 56,
    "endLineNumber" : 64,
    "endColumnNumber" : 66
  }, {
    "charLength" : 10,
    "startLineNumber" : 66,
    "startColumnNumber" : 34,
    "endLineNumber" : 66,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}