{
  "id" : 15,
  "expression" : "new TestObservable(\"twoResume\",\"threeResume\")",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableOnExceptionResumeNextViaObservableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TestObservable(\"twoResume\",\"threeResume\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 149,
      "startColumnNumber" : 27,
      "endLineNumber" : 149,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 149,
        "startColumnNumber" : 23,
        "endLineNumber" : 149,
        "endColumnNumber" : 73
      },
      "nodeContext" : "f=new TestObservable(\"twoResume\",\"threeResume\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 74
      },
      "nodeContext" : "TestObservable f=new TestObservable(\"twoResume\",\"threeResume\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1709,
        "startLineNumber" : 145,
        "startColumnNumber" : 41,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<String> w=Observable.just(\"one\",\"fail\",\"two\",\"three\",\"fail\");\n  TestObservable f=new TestObservable(\"twoResume\",\"threeResume\");\n  Observable<String> resume=Observable.create(f);\n  w=w.map(new Function<String,String>(){\n    @Override public String apply(    String s){\n      if (\"fail\".equals(s))       throw new RuntimeException(\"Forced Failure\");\n      System.out.println(\"BadMapper:\" + s);\n      return s;\n    }\n  }\n);\n  Observable<String> NbpObservable=w.onExceptionResumeNext(resume);\n  Observer<String> NbpObserver=TestHelper.mockObserver();\n  NbpObservable.subscribe(NbpObserver);\n  try {\n    if (f.t != null) {\n      f.t.join();\n    }\n  }\n catch (  InterruptedException e) {\n    fail(e.getMessage());\n  }\n  verify(NbpObserver,times(1)).onNext(\"one\");\n  verify(NbpObserver,never()).onNext(\"two\");\n  verify(NbpObserver,never()).onNext(\"three\");\n  verify(NbpObserver,times(1)).onNext(\"twoResume\");\n  verify(NbpObserver,times(1)).onNext(\"threeResume\");\n  verify(NbpObserver,Mockito.never()).onError(any(Throwable.class));\n  verify(NbpObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1757,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMapResumeAsyncNext(){\n  Observable<String> w=Observable.just(\"one\",\"fail\",\"two\",\"three\",\"fail\");\n  TestObservable f=new TestObservable(\"twoResume\",\"threeResume\");\n  Observable<String> resume=Observable.create(f);\n  w=w.map(new Function<String,String>(){\n    @Override public String apply(    String s){\n      if (\"fail\".equals(s))       throw new RuntimeException(\"Forced Failure\");\n      System.out.println(\"BadMapper:\" + s);\n      return s;\n    }\n  }\n);\n  Observable<String> NbpObservable=w.onExceptionResumeNext(resume);\n  Observer<String> NbpObserver=TestHelper.mockObserver();\n  NbpObservable.subscribe(NbpObserver);\n  try {\n    if (f.t != null) {\n      f.t.join();\n    }\n  }\n catch (  InterruptedException e) {\n    fail(e.getMessage());\n  }\n  verify(NbpObserver,times(1)).onNext(\"one\");\n  verify(NbpObserver,never()).onNext(\"two\");\n  verify(NbpObserver,never()).onNext(\"three\");\n  verify(NbpObserver,times(1)).onNext(\"twoResume\");\n  verify(NbpObserver,times(1)).onNext(\"threeResume\");\n  verify(NbpObserver,Mockito.never()).onError(any(Throwable.class));\n  verify(NbpObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 219,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 74
      },
      "nodeContext" : "TestObservable f=new TestObservable(\"twoResume\",\"threeResume\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "io.reactivex.internal.operators.observable.ObservableOnExceptionResumeNextViaObservableTest.TestObservable"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 149,
    "startColumnNumber" : 27,
    "endLineNumber" : 149,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}