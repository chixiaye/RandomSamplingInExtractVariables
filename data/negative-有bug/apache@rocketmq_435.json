{
  "id" : 435,
  "expression" : "producer.getAllMsgBody()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/consumer/broadcast/tag/BroadCastTwoConsumerSubTagIT.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "producer.getAllMsgBody()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 65,
      "startColumnNumber" : 54,
      "endLineNumber" : 65,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 92
      },
      "nodeContext" : "consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 93
      },
      "nodeContext" : "consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerSubTag(){\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 93
      },
      "nodeContext" : "consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<java.lang.Object>"
  }, {
    "nodeContext" : "producer.getAllMsgBody()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 66,
      "startColumnNumber" : 54,
      "endLineNumber" : 66,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 92
      },
      "nodeContext" : "consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 93
      },
      "nodeContext" : "consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerSubTag(){\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 93
      },
      "nodeContext" : "consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<java.lang.Object>"
  }, {
    "nodeContext" : "producer.getAllMsgBody()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 68,
      "startColumnNumber" : 49,
      "endLineNumber" : 68,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 69,
        "endColumnNumber" : 52
      },
      "nodeContext" : "VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerSubTag(){\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 69,
        "endColumnNumber" : 52
      },
      "nodeContext" : "VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<java.lang.Object>"
  }, {
    "nodeContext" : "producer.getAllMsgBody()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 70,
      "startColumnNumber" : 39,
      "endLineNumber" : 70,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerSubTag(){\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<java.lang.Object>"
  }, {
    "nodeContext" : "producer.getAllMsgBody()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 71,
      "startColumnNumber" : 49,
      "endLineNumber" : 71,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 71,
        "startColumnNumber" : 19,
        "endLineNumber" : 72,
        "endColumnNumber" : 52
      },
      "nodeContext" : "VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerSubTag(){\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 71,
        "startColumnNumber" : 19,
        "endLineNumber" : 72,
        "endColumnNumber" : 52
      },
      "nodeContext" : "VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<java.lang.Object>"
  }, {
    "nodeContext" : "producer.getAllMsgBody()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 73,
      "startColumnNumber" : 39,
      "endLineNumber" : 73,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 52,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerSubTag(){\n  int msgSize=20;\n  String tag=\"jueyin_tag\";\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,topic,tag,new RMQNormalListener());\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,tag,new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(tag,msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 65,
    "startColumnNumber" : 54,
    "endLineNumber" : 65,
    "endColumnNumber" : 78
  }, {
    "charLength" : 24,
    "startLineNumber" : 66,
    "startColumnNumber" : 54,
    "endLineNumber" : 66,
    "endColumnNumber" : 78
  }, {
    "charLength" : 24,
    "startLineNumber" : 68,
    "startColumnNumber" : 49,
    "endLineNumber" : 68,
    "endColumnNumber" : 73
  }, {
    "charLength" : 24,
    "startLineNumber" : 70,
    "startColumnNumber" : 39,
    "endLineNumber" : 70,
    "endColumnNumber" : 63
  }, {
    "charLength" : 24,
    "startLineNumber" : 71,
    "startColumnNumber" : 49,
    "endLineNumber" : 71,
    "endColumnNumber" : 73
  }, {
    "charLength" : 24,
    "startLineNumber" : 73,
    "startColumnNumber" : 39,
    "endLineNumber" : 73,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 0
  } ]
}