{
  "id" : 389,
  "expression" : "sender",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/test/java/io/netty/handler/codec/DatagramPacketEncoderTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sender",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 66,
      "startColumnNumber" : 67,
      "endLineNumber" : 66,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 74
      },
      "nodeContext" : "new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 65,
        "startColumnNumber" : 19,
        "endLineNumber" : 66,
        "endColumnNumber" : 75
      },
      "nodeContext" : "channel.writeOutbound(new DefaultAddressedEnvelope<>(\"netty\",recipient,sender))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 62,
        "startColumnNumber" : 50,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InetSocketAddress recipient=SocketUtils.socketAddress(\"127.0.0.1\",10000);\n  InetSocketAddress sender=senderIsNull ? null : SocketUtils.socketAddress(\"127.0.0.1\",20000);\n  assertTrue(channel.writeOutbound(new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)));\n  DatagramPacket packet=channel.readOutbound();\n  try {\n    assertEquals(\"netty\",packet.content().toString(CharsetUtil.UTF_8));\n    assertEquals(recipient,packet.recipient());\n    assertEquals(sender,packet.sender());\n  }\n  finally {\n    packet.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testEncode(boolean senderIsNull){\n  InetSocketAddress recipient=SocketUtils.socketAddress(\"127.0.0.1\",10000);\n  InetSocketAddress sender=senderIsNull ? null : SocketUtils.socketAddress(\"127.0.0.1\",20000);\n  assertTrue(channel.writeOutbound(new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)));\n  DatagramPacket packet=channel.readOutbound();\n  try {\n    assertEquals(\"netty\",packet.content().toString(CharsetUtil.UTF_8));\n    assertEquals(recipient,packet.recipient());\n    assertEquals(sender,packet.sender());\n  }\n  finally {\n    packet.release();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 74
      },
      "nodeContext" : "new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.net.InetSocketAddress"
  }, {
    "nodeContext" : "sender",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 71,
      "startColumnNumber" : 25,
      "endLineNumber" : 71,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(sender,packet.sender())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(sender,packet.sender());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertEquals(\"netty\",packet.content().toString(CharsetUtil.UTF_8));\n  assertEquals(recipient,packet.recipient());\n  assertEquals(sender,packet.sender());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  assertEquals(\"netty\",packet.content().toString(CharsetUtil.UTF_8));\n  assertEquals(recipient,packet.recipient());\n  assertEquals(sender,packet.sender());\n}\n  finally {\n  packet.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 62,
        "startColumnNumber" : 50,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InetSocketAddress recipient=SocketUtils.socketAddress(\"127.0.0.1\",10000);\n  InetSocketAddress sender=senderIsNull ? null : SocketUtils.socketAddress(\"127.0.0.1\",20000);\n  assertTrue(channel.writeOutbound(new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)));\n  DatagramPacket packet=channel.readOutbound();\n  try {\n    assertEquals(\"netty\",packet.content().toString(CharsetUtil.UTF_8));\n    assertEquals(recipient,packet.recipient());\n    assertEquals(sender,packet.sender());\n  }\n  finally {\n    packet.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testEncode(boolean senderIsNull){\n  InetSocketAddress recipient=SocketUtils.socketAddress(\"127.0.0.1\",10000);\n  InetSocketAddress sender=senderIsNull ? null : SocketUtils.socketAddress(\"127.0.0.1\",20000);\n  assertTrue(channel.writeOutbound(new DefaultAddressedEnvelope<>(\"netty\",recipient,sender)));\n  DatagramPacket packet=channel.readOutbound();\n  try {\n    assertEquals(\"netty\",packet.content().toString(CharsetUtil.UTF_8));\n    assertEquals(recipient,packet.recipient());\n    assertEquals(sender,packet.sender());\n  }\n  finally {\n    packet.release();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(sender,packet.sender());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.net.InetSocketAddress"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 66,
    "startColumnNumber" : 67,
    "endLineNumber" : 66,
    "endColumnNumber" : 73
  }, {
    "charLength" : 6,
    "startLineNumber" : 71,
    "startColumnNumber" : 25,
    "endLineNumber" : 71,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}