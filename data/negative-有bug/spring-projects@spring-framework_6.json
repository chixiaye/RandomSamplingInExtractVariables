{
  "id" : 6,
  "expression" : "\"com.example.One\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-orm/src/test/java/org/springframework/orm/jpa/persistenceunit/PersistenceManagedTypesTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"com.example.One\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 36,
      "startColumnNumber" : 4,
      "endLineNumber" : 36,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 35,
        "startColumnNumber" : 41,
        "endLineNumber" : 36,
        "endColumnNumber" : 41
      },
      "nodeContext" : "PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 35,
        "startColumnNumber" : 26,
        "endLineNumber" : 36,
        "endColumnNumber" : 41
      },
      "nodeContext" : "managedTypes=PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 42
      },
      "nodeContext" : "PersistenceManagedTypes managedTypes=PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 34,
        "startColumnNumber" : 36,
        "endLineNumber" : 41,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  PersistenceManagedTypes managedTypes=PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedClassNames()).containsExactly(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedPackages()).isEmpty();\n  assertThat(managedTypes.getPersistenceUnitRootUrl()).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 33,
        "startColumnNumber" : 1,
        "endLineNumber" : 41,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void createWithManagedClassNames(){\n  PersistenceManagedTypes managedTypes=PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedClassNames()).containsExactly(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedPackages()).isEmpty();\n  assertThat(managedTypes.getPersistenceUnitRootUrl()).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 35,
        "startColumnNumber" : 41,
        "endLineNumber" : 36,
        "endColumnNumber" : 41
      },
      "nodeContext" : "PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"com.example.One\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 38,
      "startColumnNumber" : 4,
      "endLineNumber" : 38,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertThat(managedTypes.getManagedClassNames()).containsExactly(\"com.example.One\",\"com.example.Two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertThat(managedTypes.getManagedClassNames()).containsExactly(\"com.example.One\",\"com.example.Two\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 34,
        "startColumnNumber" : 36,
        "endLineNumber" : 41,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  PersistenceManagedTypes managedTypes=PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedClassNames()).containsExactly(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedPackages()).isEmpty();\n  assertThat(managedTypes.getPersistenceUnitRootUrl()).isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 33,
        "startColumnNumber" : 1,
        "endLineNumber" : 41,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void createWithManagedClassNames(){\n  PersistenceManagedTypes managedTypes=PersistenceManagedTypes.of(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedClassNames()).containsExactly(\"com.example.One\",\"com.example.Two\");\n  assertThat(managedTypes.getManagedPackages()).isEmpty();\n  assertThat(managedTypes.getPersistenceUnitRootUrl()).isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertThat(managedTypes.getManagedClassNames()).containsExactly(\"com.example.One\",\"com.example.Two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 36,
    "startColumnNumber" : 4,
    "endLineNumber" : 36,
    "endColumnNumber" : 21
  }, {
    "charLength" : 17,
    "startLineNumber" : 38,
    "startColumnNumber" : 4,
    "endLineNumber" : 38,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}