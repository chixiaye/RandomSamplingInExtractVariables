{
  "id" : 516,
  "expression" : "\"value must not be null!\"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonReactiveListCommands.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"value must not be null!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 183,
      "startColumnNumber" : 47,
      "endLineNumber" : 183,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 183,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.notNull(command.getValue(),\"value must not be null!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 183,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.notNull(command.getValue(),\"value must not be null!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 180,
        "startColumnNumber" : 44,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notNull(command.getValue(),\"value must not be null!\");\n  Assert.notNull(command.getIndex(),\"Index must not be null!\");\n  byte[] keyBuf=toByteArray(command.getKey());\n  byte[] valueBuf=toByteArray(command.getValue());\n  Mono<String> m=write(keyBuf,StringCodec.INSTANCE,LSET,keyBuf,command.getIndex(),valueBuf);\n  return m.map(v -> new BooleanResponse<>(command,true));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 180,
        "startColumnNumber" : 33,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "command -> {\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notNull(command.getValue(),\"value must not be null!\");\n  Assert.notNull(command.getIndex(),\"Index must not be null!\");\n  byte[] keyBuf=toByteArray(command.getKey());\n  byte[] valueBuf=toByteArray(command.getValue());\n  Mono<String> m=write(keyBuf,StringCodec.INSTANCE,LSET,keyBuf,command.getIndex(),valueBuf);\n  return m.map(v -> new BooleanResponse<>(command,true));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 83,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 183,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.notNull(command.getValue(),\"value must not be null!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 183,
    "startColumnNumber" : 47,
    "endLineNumber" : 183,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}