{
  "id" : 241,
  "expression" : "person.getBirthdate()",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/web-modules/jee-7/src/test/java/com/baeldug/json/JsonUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "person.getBirthdate()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 53,
      "startColumnNumber" : 16,
      "endLineNumber" : 53,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertEquals(\"Birthdate has expected value\",dateFormat.parse(\"06/15/1978\"),person.getBirthdate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(\"Birthdate has expected value\",dateFormat.parse(\"06/15/1978\"),person.getBirthdate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 45,
        "startColumnNumber" : 49,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Person person=new PersonBuilder(personJson).build();\n  assertEquals(\"First name has expected value\",\"Michael\",person.getFirstName());\n  assertEquals(\"Last name has expected value\",\"Scott\",person.getLastName());\n  assertEquals(\"Birthdate has expected value\",dateFormat.parse(\"06/15/1978\"),person.getBirthdate());\n  assertThat(\"Email list has two items\",person.getEmails(),hasItems(\"michael.scott@dd.com\",\"michael.scarn@gmail.com\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenJsonStringIsConvertedToPerson_thenAValidObjectIsReturned() throws IOException, ParseException {\n  Person person=new PersonBuilder(personJson).build();\n  assertEquals(\"First name has expected value\",\"Michael\",person.getFirstName());\n  assertEquals(\"Last name has expected value\",\"Scott\",person.getLastName());\n  assertEquals(\"Birthdate has expected value\",dateFormat.parse(\"06/15/1978\"),person.getBirthdate());\n  assertThat(\"Email list has two items\",person.getEmails(),hasItems(\"michael.scott@dd.com\",\"michael.scarn@gmail.com\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertEquals(\"Birthdate has expected value\",dateFormat.parse(\"06/15/1978\"),person.getBirthdate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.Date"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 53,
    "startColumnNumber" : 16,
    "endLineNumber" : 53,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}