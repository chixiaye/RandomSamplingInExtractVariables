{
  "id" : 336,
  "expression" : "previous + 1",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-spi/src/test/java/com/facebook/presto/spi/TestStandardErrorCode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "previous + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 65,
      "startColumnNumber" : 38,
      "endLineNumber" : 65,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertEquals(current,previous + 1,\"Code is not sequential: \" + code)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 64,
        "startColumnNumber" : 94,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((code != GENERIC_INTERNAL_ERROR) && (code != GENERIC_INSUFFICIENT_RESOURCES)) {\n  assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 60,
        "startColumnNumber" : 35,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StandardErrorCode code=iterator.next();\n  int current=code(code);\n  assertGreaterThan(current,previous,\"Code is out of order: \" + code);\n  if ((code != GENERIC_INTERNAL_ERROR) && (code != GENERIC_INSUFFICIENT_RESOURCES)) {\n    assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n  }\n  previous=current;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (iterator.hasNext()) {\n  StandardErrorCode code=iterator.next();\n  int current=code(code);\n  assertGreaterThan(current,previous,\"Code is out of order: \" + code);\n  if ((code != GENERIC_INTERNAL_ERROR) && (code != GENERIC_INSUFFICIENT_RESOURCES)) {\n    assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n  }\n  previous=current;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Iterator<StandardErrorCode> iterator=asList(StandardErrorCode.values()).iterator();\n  assertTrue(iterator.hasNext());\n  int previous=code(iterator.next());\n  while (iterator.hasNext()) {\n    StandardErrorCode code=iterator.next();\n    int current=code(code);\n    assertGreaterThan(current,previous,\"Code is out of order: \" + code);\n    if ((code != GENERIC_INTERNAL_ERROR) && (code != GENERIC_INSUFFICIENT_RESOURCES)) {\n      assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n    }\n    previous=current;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOrdering(){\n  Iterator<StandardErrorCode> iterator=asList(StandardErrorCode.values()).iterator();\n  assertTrue(iterator.hasNext());\n  int previous=code(iterator.next());\n  while (iterator.hasNext()) {\n    StandardErrorCode code=iterator.next();\n    int current=code(code);\n    assertGreaterThan(current,previous,\"Code is out of order: \" + code);\n    if ((code != GENERIC_INTERNAL_ERROR) && (code != GENERIC_INSUFFICIENT_RESOURCES)) {\n      assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n    }\n    previous=current;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertEquals(current,previous + 1,\"Code is not sequential: \" + code);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 65,
    "startColumnNumber" : 38,
    "endLineNumber" : 65,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}