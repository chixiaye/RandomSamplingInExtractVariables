{
  "id" : 461,
  "expression" : "Theme.getColor(\"status.notice.bgcolor\")",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/cc/arduino/contributions/ui/InstallerJDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Theme.getColor(\"status.notice.bgcolor\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 131,
      "startColumnNumber" : 40,
      "endLineNumber" : 131,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 80
      },
      "nodeContext" : "contribTable.setSelectionBackground(Theme.getColor(\"status.notice.bgcolor\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 81
      },
      "nodeContext" : "contribTable.setSelectionBackground(Theme.getColor(\"status.notice.bgcolor\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5081,
        "startLineNumber" : 86,
        "startColumnNumber" : 118,
        "endLineNumber" : 233,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(parent,title,applicationModal);\n  this.noConnectionErrorMessage=noConnectionErrorMessage;\n  setResizable(true);\n  Container pane=getContentPane();\n  pane.setLayout(new BorderLayout());\n{\n    categoryChooser=new JComboBox();\n    categoryChooser.setMaximumRowCount(20);\n    categoryChooser.setEnabled(false);\n    filterField=new FilterJTextField(_(\"Filter your search...\")){\n      @Override protected void onFilter(      String[] _filters){\n        filters=_filters;\n        if (contribTable.getCellEditor() != null) {\n          contribTable.getCellEditor().stopCellEditing();\n        }\n        updateIndexFilter(filters,categoryFilter);\n      }\n    }\n;\n    filtersContainer=new JPanel();\n    filtersContainer.setLayout(new BoxLayout(filtersContainer,BoxLayout.X_AXIS));\n    filtersContainer.add(Box.createHorizontalStrut(5));\n    filtersContainer.add(new JLabel(_(\"Type\")));\n    filtersContainer.add(Box.createHorizontalStrut(5));\n    filtersContainer.add(categoryChooser);\n    filtersContainer.add(Box.createHorizontalStrut(5));\n    filtersContainer.add(filterField);\n    filtersContainer.setBorder(new EmptyBorder(7,7,7,7));\n    pane.add(filtersContainer,BorderLayout.NORTH);\n  }\n  contribModel=createContribModel();\n  contribTable=new JTable(contribModel);\n  contribTable.setTableHeader(null);\n  contribTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n  contribTable.setColumnSelectionAllowed(false);\n  contribTable.setDragEnabled(false);\n  contribTable.setIntercellSpacing(new Dimension(0,1));\n  contribTable.setShowVerticalLines(false);\n  contribTable.setSelectionBackground(Theme.getColor(\"status.notice.bgcolor\"));\n  contribTable.addKeyListener(new AbstractKeyListener(){\n    @Override public void keyReleased(    KeyEvent keyEvent){\n      if (keyEvent.getKeyCode() != KeyEvent.VK_DOWN && keyEvent.getKeyCode() != KeyEvent.VK_UP) {\n        return;\n      }\n      if (!contribTable.isEnabled()) {\n        return;\n      }\n      contribTable.editCellAt(contribTable.getSelectedRow(),contribTable.getSelectedColumn());\n    }\n  }\n);\n{\n    TableColumnModel tcm=contribTable.getColumnModel();\n    TableColumn col=tcm.getColumn(DESCRIPTION_COL);\n    col.setCellRenderer(createCellRenderer());\n    col.setCellEditor(createCellEditor());\n    col.setResizable(true);\n  }\n{\n    JScrollPane scrollPane=new JScrollPane();\n    scrollPane.setViewportView(contribTable);\n    scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n    scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n    scrollPane.getVerticalScrollBar().setUnitIncrement(7);\n    pane.add(scrollPane,BorderLayout.CENTER);\n  }\n  pane.add(Box.createHorizontalStrut(10),BorderLayout.WEST);\n  pane.add(Box.createHorizontalStrut(10),BorderLayout.EAST);\n  progressBar=new ProgressJProgressBar();\n  progressBar.setStringPainted(true);\n  progressBar.setString(\" \");\n  progressBar.setVisible(true);\n  errorMessage=new JLabel(\"\");\n  errorMessage.setForeground(Color.RED);\n{\n    JButton cancelButton=new JButton(_(\"Cancel\"));\n    cancelButton.addActionListener(new ActionListener(){\n      @Override public void actionPerformed(      ActionEvent arg0){\n        onCancelPressed();\n      }\n    }\n);\n    progressBox=Box.createHorizontalBox();\n    progressBox.add(progressBar);\n    progressBox.add(Box.createHorizontalStrut(5));\n    progressBox.add(cancelButton);\n    JButton dismissErrorMessageButton=new JButton(_(\"OK\"));\n    dismissErrorMessageButton.addActionListener(new ActionListener(){\n      @Override public void actionPerformed(      ActionEvent arg0){\n        clearErrorMessage();\n      }\n    }\n);\n    errorMessageBox=Box.createHorizontalBox();\n    errorMessageBox.add(Box.createHorizontalGlue());\n    errorMessageBox.add(errorMessage);\n    errorMessageBox.add(Box.createHorizontalGlue());\n    errorMessageBox.add(dismissErrorMessageButton);\n    errorMessageBox.setVisible(false);\n  }\n{\n    JPanel progressPanel=new JPanel();\n    progressPanel.setBorder(new EmptyBorder(7,7,7,7));\n    progressPanel.setLayout(new BoxLayout(progressPanel,BoxLayout.Y_AXIS));\n    progressPanel.add(progressBox);\n    progressPanel.add(errorMessageBox);\n    pane.add(progressPanel,BorderLayout.SOUTH);\n  }\n  setProgressVisible(false,\"\");\n  setMinimumSize(new Dimension(800,450));\n  setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n  Base.registerWindowCloseKeys(getRootPane(),new ActionListener(){\n    @Override public void actionPerformed(    ActionEvent e){\n      InstallerJDialog.this.dispatchEvent(new WindowEvent(InstallerJDialog.this,WindowEvent.WINDOW_CLOSING));\n    }\n  }\n);\n  SwingUtilities.invokeLater(new Runnable(){\n    @Override public void run(){\n      onUpdatePressed();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 662,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5197,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 233,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public InstallerJDialog(Frame parent,String title,ModalityType applicationModal,String noConnectionErrorMessage){\n  super(parent,title,applicationModal);\n  this.noConnectionErrorMessage=noConnectionErrorMessage;\n  setResizable(true);\n  Container pane=getContentPane();\n  pane.setLayout(new BorderLayout());\n{\n    categoryChooser=new JComboBox();\n    categoryChooser.setMaximumRowCount(20);\n    categoryChooser.setEnabled(false);\n    filterField=new FilterJTextField(_(\"Filter your search...\")){\n      @Override protected void onFilter(      String[] _filters){\n        filters=_filters;\n        if (contribTable.getCellEditor() != null) {\n          contribTable.getCellEditor().stopCellEditing();\n        }\n        updateIndexFilter(filters,categoryFilter);\n      }\n    }\n;\n    filtersContainer=new JPanel();\n    filtersContainer.setLayout(new BoxLayout(filtersContainer,BoxLayout.X_AXIS));\n    filtersContainer.add(Box.createHorizontalStrut(5));\n    filtersContainer.add(new JLabel(_(\"Type\")));\n    filtersContainer.add(Box.createHorizontalStrut(5));\n    filtersContainer.add(categoryChooser);\n    filtersContainer.add(Box.createHorizontalStrut(5));\n    filtersContainer.add(filterField);\n    filtersContainer.setBorder(new EmptyBorder(7,7,7,7));\n    pane.add(filtersContainer,BorderLayout.NORTH);\n  }\n  contribModel=createContribModel();\n  contribTable=new JTable(contribModel);\n  contribTable.setTableHeader(null);\n  contribTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n  contribTable.setColumnSelectionAllowed(false);\n  contribTable.setDragEnabled(false);\n  contribTable.setIntercellSpacing(new Dimension(0,1));\n  contribTable.setShowVerticalLines(false);\n  contribTable.setSelectionBackground(Theme.getColor(\"status.notice.bgcolor\"));\n  contribTable.addKeyListener(new AbstractKeyListener(){\n    @Override public void keyReleased(    KeyEvent keyEvent){\n      if (keyEvent.getKeyCode() != KeyEvent.VK_DOWN && keyEvent.getKeyCode() != KeyEvent.VK_UP) {\n        return;\n      }\n      if (!contribTable.isEnabled()) {\n        return;\n      }\n      contribTable.editCellAt(contribTable.getSelectedRow(),contribTable.getSelectedColumn());\n    }\n  }\n);\n{\n    TableColumnModel tcm=contribTable.getColumnModel();\n    TableColumn col=tcm.getColumn(DESCRIPTION_COL);\n    col.setCellRenderer(createCellRenderer());\n    col.setCellEditor(createCellEditor());\n    col.setResizable(true);\n  }\n{\n    JScrollPane scrollPane=new JScrollPane();\n    scrollPane.setViewportView(contribTable);\n    scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);\n    scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);\n    scrollPane.getVerticalScrollBar().setUnitIncrement(7);\n    pane.add(scrollPane,BorderLayout.CENTER);\n  }\n  pane.add(Box.createHorizontalStrut(10),BorderLayout.WEST);\n  pane.add(Box.createHorizontalStrut(10),BorderLayout.EAST);\n  progressBar=new ProgressJProgressBar();\n  progressBar.setStringPainted(true);\n  progressBar.setString(\" \");\n  progressBar.setVisible(true);\n  errorMessage=new JLabel(\"\");\n  errorMessage.setForeground(Color.RED);\n{\n    JButton cancelButton=new JButton(_(\"Cancel\"));\n    cancelButton.addActionListener(new ActionListener(){\n      @Override public void actionPerformed(      ActionEvent arg0){\n        onCancelPressed();\n      }\n    }\n);\n    progressBox=Box.createHorizontalBox();\n    progressBox.add(progressBar);\n    progressBox.add(Box.createHorizontalStrut(5));\n    progressBox.add(cancelButton);\n    JButton dismissErrorMessageButton=new JButton(_(\"OK\"));\n    dismissErrorMessageButton.addActionListener(new ActionListener(){\n      @Override public void actionPerformed(      ActionEvent arg0){\n        clearErrorMessage();\n      }\n    }\n);\n    errorMessageBox=Box.createHorizontalBox();\n    errorMessageBox.add(Box.createHorizontalGlue());\n    errorMessageBox.add(errorMessage);\n    errorMessageBox.add(Box.createHorizontalGlue());\n    errorMessageBox.add(dismissErrorMessageButton);\n    errorMessageBox.setVisible(false);\n  }\n{\n    JPanel progressPanel=new JPanel();\n    progressPanel.setBorder(new EmptyBorder(7,7,7,7));\n    progressPanel.setLayout(new BoxLayout(progressPanel,BoxLayout.Y_AXIS));\n    progressPanel.add(progressBox);\n    progressPanel.add(errorMessageBox);\n    pane.add(progressPanel,BorderLayout.SOUTH);\n  }\n  setProgressVisible(false,\"\");\n  setMinimumSize(new Dimension(800,450));\n  setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n  Base.registerWindowCloseKeys(getRootPane(),new ActionListener(){\n    @Override public void actionPerformed(    ActionEvent e){\n      InstallerJDialog.this.dispatchEvent(new WindowEvent(InstallerJDialog.this,WindowEvent.WINDOW_CLOSING));\n    }\n  }\n);\n  SwingUtilities.invokeLater(new Runnable(){\n    @Override public void run(){\n      onUpdatePressed();\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 681,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 81
      },
      "nodeContext" : "contribTable.setSelectionBackground(Theme.getColor(\"status.notice.bgcolor\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.awt.Color"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 131,
    "startColumnNumber" : 40,
    "endLineNumber" : 131,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}