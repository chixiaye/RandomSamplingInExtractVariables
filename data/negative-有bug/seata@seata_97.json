{
  "id" : 97,
  "expression" : "\" to \"",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/integration/sofa-rpc/src/main/java/io/seata/integration/sofa/rpc/TransactionContextConsumerFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" to \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 74,
      "startColumnNumber" : 80,
      "endLineNumber" : 74,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 74,
        "startColumnNumber" : 36,
        "endLineNumber" : 74,
        "endColumnNumber" : 98
      },
      "nodeContext" : "\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 74,
        "endColumnNumber" : 99
      },
      "nodeContext" : "LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 74,
        "endColumnNumber" : 100
      },
      "nodeContext" : "LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 73,
        "startColumnNumber" : 48,
        "endLineNumber" : 75,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 73,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (LOGGER.isWarnEnabled()) {\n  LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 481,
        "startLineNumber" : 72,
        "startColumnNumber" : 57,
        "endLineNumber" : 82,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (LOGGER.isWarnEnabled()) {\n    LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n  }\n  if (unbindXid != null) {\n    RootContext.bind(unbindXid);\n    if (LOGGER.isWarnEnabled()) {\n      LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n  if (LOGGER.isWarnEnabled()) {\n    LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n  }\n  if (unbindXid != null) {\n    RootContext.bind(unbindXid);\n    if (LOGGER.isWarnEnabled()) {\n      LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 756,
        "startLineNumber" : 67,
        "startColumnNumber" : 22,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String unbindXid=RootContext.unbind();\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n  }\n  if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n    if (LOGGER.isWarnEnabled()) {\n      LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n    }\n    if (unbindXid != null) {\n      RootContext.bind(unbindXid);\n      if (LOGGER.isWarnEnabled()) {\n        LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 766,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (bind) {\n  String unbindXid=RootContext.unbind();\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n  }\n  if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n    if (LOGGER.isWarnEnabled()) {\n      LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n    }\n    if (unbindXid != null) {\n      RootContext.bind(unbindXid);\n      if (LOGGER.isWarnEnabled()) {\n        LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 66,
        "startColumnNumber" : 18,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (bind) {\n    String unbindXid=RootContext.unbind();\n    if (LOGGER.isDebugEnabled()) {\n      LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n    }\n    if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n      if (LOGGER.isWarnEnabled()) {\n        LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n      }\n      if (unbindXid != null) {\n        RootContext.bind(unbindXid);\n        if (LOGGER.isWarnEnabled()) {\n          LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return filterInvoker.invoke(sofaRequest);\n}\n  finally {\n  if (bind) {\n    String unbindXid=RootContext.unbind();\n    if (LOGGER.isDebugEnabled()) {\n      LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n    }\n    if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n      if (LOGGER.isWarnEnabled()) {\n        LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n      }\n      if (unbindXid != null) {\n        RootContext.bind(unbindXid);\n        if (LOGGER.isWarnEnabled()) {\n          LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 46,
        "startColumnNumber" : 109,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String xid=RootContext.getXID();\n  String rpcXid=(String)RpcInternalContext.getContext().getAttachment(RootContext.KEY_XID);\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"xid in RootContext[\" + xid + \"] xid in RpcContext[\"+ rpcXid+ \"]\");\n  }\n  boolean bind=false;\n  if (xid != null) {\n    sofaRequest.addRequestProp(RootContext.KEY_XID,xid);\n  }\n else {\n    if (rpcXid != null) {\n      RootContext.bind(rpcXid);\n      bind=true;\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"bind[\" + rpcXid + \"] to RootContext\");\n      }\n    }\n  }\n  try {\n    return filterInvoker.invoke(sofaRequest);\n  }\n  finally {\n    if (bind) {\n      String unbindXid=RootContext.unbind();\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n      }\n      if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n        if (LOGGER.isWarnEnabled()) {\n          LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n        }\n        if (unbindXid != null) {\n          RootContext.bind(unbindXid);\n          if (LOGGER.isWarnEnabled()) {\n            LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1698,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public SofaResponse invoke(FilterInvoker filterInvoker,SofaRequest sofaRequest) throws SofaRpcException {\n  String xid=RootContext.getXID();\n  String rpcXid=(String)RpcInternalContext.getContext().getAttachment(RootContext.KEY_XID);\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"xid in RootContext[\" + xid + \"] xid in RpcContext[\"+ rpcXid+ \"]\");\n  }\n  boolean bind=false;\n  if (xid != null) {\n    sofaRequest.addRequestProp(RootContext.KEY_XID,xid);\n  }\n else {\n    if (rpcXid != null) {\n      RootContext.bind(rpcXid);\n      bind=true;\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"bind[\" + rpcXid + \"] to RootContext\");\n      }\n    }\n  }\n  try {\n    return filterInvoker.invoke(sofaRequest);\n  }\n  finally {\n    if (bind) {\n      String unbindXid=RootContext.unbind();\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n      }\n      if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n        if (LOGGER.isWarnEnabled()) {\n          LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n        }\n        if (unbindXid != null) {\n          RootContext.bind(unbindXid);\n          if (LOGGER.isWarnEnabled()) {\n            LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 74,
        "startColumnNumber" : 24,
        "endLineNumber" : 74,
        "endColumnNumber" : 100
      },
      "nodeContext" : "LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 74,
    "startColumnNumber" : 80,
    "endLineNumber" : 74,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}