{
  "id" : 428,
  "expression" : "this",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/java/util/common/parsers/DelimitedParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 50,
      "startColumnNumber" : 4,
      "endLineNumber" : 50,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 17
      },
      "nodeContext" : "this.splitter",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.splitter=Splitter.on(finalDelimiter)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.splitter=Splitter.on(finalDelimiter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(listDelimiter,hasHeaderRow,maxSkipHeaderRows);\n  final String finalDelimiter=delimiter != null ? delimiter : FlatTextFormat.DELIMITED.getDefaultDelimiter();\n  Preconditions.checkState(!finalDelimiter.equals(getListDelimiter()),\"Cannot have same delimiter and list delimiter of [%s]\",finalDelimiter);\n  this.splitter=Splitter.on(finalDelimiter);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public DelimitedParser(@Nullable final String delimiter,@Nullable final String listDelimiter,final boolean hasHeaderRow,final int maxSkipHeaderRows){\n  super(listDelimiter,hasHeaderRow,maxSkipHeaderRows);\n  final String finalDelimiter=delimiter != null ? delimiter : FlatTextFormat.DELIMITED.getDefaultDelimiter();\n  Preconditions.checkState(!finalDelimiter.equals(getListDelimiter()),\"Cannot have same delimiter and list delimiter of [%s]\",finalDelimiter);\n  this.splitter=Splitter.on(finalDelimiter);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.splitter=Splitter.on(finalDelimiter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.java.util.common.parsers.DelimitedParser"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 50,
    "startColumnNumber" : 4,
    "endLineNumber" : 50,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ ]
}