{
  "id" : 468,
  "expression" : "\"http:error:\" + throwable.getMessage()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HttpHealthCheckProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"http:error:\" + throwable.getMessage()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 167,
      "startColumnNumber" : 59,
      "endLineNumber" : 167,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 167,
        "startColumnNumber" : 16,
        "endLineNumber" : 167,
        "endColumnNumber" : 98
      },
      "nodeContext" : "healthCheckCommon.checkFail(task,service,\"http:error:\" + throwable.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 167,
        "startColumnNumber" : 16,
        "endLineNumber" : 167,
        "endColumnNumber" : 99
      },
      "nodeContext" : "healthCheckCommon.checkFail(task,service,\"http:error:\" + throwable.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 166,
        "startColumnNumber" : 19,
        "endLineNumber" : 168,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  healthCheckCommon.checkFail(task,service,\"http:error:\" + throwable.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 164,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (throwable instanceof ConnectException) {\n  healthCheckCommon.checkFailNow(task,service,\"http:unable2connect:\" + throwable.getMessage());\n}\n else {\n  healthCheckCommon.checkFail(task,service,\"http:error:\" + throwable.getMessage());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 149,
        "startColumnNumber" : 49,
        "endLineNumber" : 171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Throwable cause=throwable;\n  instance.setCheckRt(System.currentTimeMillis() - startTime);\n  int maxStackDepth=50;\n  for (int deepth=0; deepth < maxStackDepth && cause != null; deepth++) {\n    if (HttpUtils.isTimeoutException(cause)) {\n      healthCheckCommon.checkFail(task,service,\"http:\" + cause.getMessage());\n      healthCheckCommon.reEvaluateCheckRT(task.getCheckRtNormalized() * 2,task,switchDomain.getHttpHealthParams());\n      return;\n    }\n    cause=cause.getCause();\n  }\n  if (throwable instanceof ConnectException) {\n    healthCheckCommon.checkFailNow(task,service,\"http:unable2connect:\" + throwable.getMessage());\n  }\n else {\n    healthCheckCommon.checkFail(task,service,\"http:error:\" + throwable.getMessage());\n  }\n  healthCheckCommon.reEvaluateCheckRT(switchDomain.getHttpHealthParams().getMax(),task,switchDomain.getHttpHealthParams());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void onError(Throwable throwable){\n  Throwable cause=throwable;\n  instance.setCheckRt(System.currentTimeMillis() - startTime);\n  int maxStackDepth=50;\n  for (int deepth=0; deepth < maxStackDepth && cause != null; deepth++) {\n    if (HttpUtils.isTimeoutException(cause)) {\n      healthCheckCommon.checkFail(task,service,\"http:\" + cause.getMessage());\n      healthCheckCommon.reEvaluateCheckRT(task.getCheckRtNormalized() * 2,task,switchDomain.getHttpHealthParams());\n      return;\n    }\n    cause=cause.getCause();\n  }\n  if (throwable instanceof ConnectException) {\n    healthCheckCommon.checkFailNow(task,service,\"http:unable2connect:\" + throwable.getMessage());\n  }\n else {\n    healthCheckCommon.checkFail(task,service,\"http:error:\" + throwable.getMessage());\n  }\n  healthCheckCommon.reEvaluateCheckRT(switchDomain.getHttpHealthParams().getMax(),task,switchDomain.getHttpHealthParams());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 167,
        "startColumnNumber" : 16,
        "endLineNumber" : 167,
        "endColumnNumber" : 99
      },
      "nodeContext" : "healthCheckCommon.checkFail(task,service,\"http:error:\" + throwable.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 167,
    "startColumnNumber" : 59,
    "endLineNumber" : 167,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}