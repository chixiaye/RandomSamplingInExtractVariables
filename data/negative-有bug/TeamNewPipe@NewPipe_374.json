{
  "id" : 374,
  "expression" : "item",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/local/holder/LocalPlaylistStreamItemHolder.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 35,
      "endLineNumber" : 61,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 61,
        "startColumnNumber" : 35,
        "endLineNumber" : 61,
        "endColumnNumber" : 57
      },
      "nodeContext" : "item.getStreamEntity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 61,
        "startColumnNumber" : 35,
        "endLineNumber" : 61,
        "endColumnNumber" : 68
      },
      "nodeContext" : "item.getStreamEntity().getTitle()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 69
      },
      "nodeContext" : "itemVideoTitleView.setText(item.getStreamEntity().getTitle())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 70
      },
      "nodeContext" : "itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 70
      },
      "nodeContext" : "itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 63,
      "startColumnNumber" : 36,
      "endLineNumber" : 63,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 63,
        "startColumnNumber" : 36,
        "endLineNumber" : 63,
        "endColumnNumber" : 58
      },
      "nodeContext" : "item.getStreamEntity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 63,
        "startColumnNumber" : 36,
        "endLineNumber" : 63,
        "endColumnNumber" : 72
      },
      "nodeContext" : "item.getStreamEntity().getUploader()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 62,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 89
      },
      "nodeContext" : "itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 90
      },
      "nodeContext" : "itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 63,
        "startColumnNumber" : 36,
        "endLineNumber" : 63,
        "endColumnNumber" : 72
      },
      "nodeContext" : "item.getStreamEntity().getUploader()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 64,
      "startColumnNumber" : 49,
      "endLineNumber" : 64,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 64,
        "startColumnNumber" : 49,
        "endLineNumber" : 64,
        "endColumnNumber" : 71
      },
      "nodeContext" : "item.getStreamEntity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 49,
        "endLineNumber" : 64,
        "endColumnNumber" : 86
      },
      "nodeContext" : "item.getStreamEntity().getServiceId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 64,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 87
      },
      "nodeContext" : "NewPipe.getNameOfService(item.getStreamEntity().getServiceId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 62,
        "startColumnNumber" : 42,
        "endLineNumber" : 64,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 89
      },
      "nodeContext" : "itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 90
      },
      "nodeContext" : "itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 64,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 87
      },
      "nodeContext" : "NewPipe.getNameOfService(item.getStreamEntity().getServiceId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 66,
      "startColumnNumber" : 12,
      "endLineNumber" : 66,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 34
      },
      "nodeContext" : "item.getStreamEntity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "item.getStreamEntity().getDuration()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 52
      },
      "nodeContext" : "item.getStreamEntity().getDuration() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (item.getStreamEntity().getDuration() > 0) {\n  itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n  itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n  itemDurationView.setVisibility(View.VISIBLE);\n  StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n      add(localItem);\n    }\n  }\n).blockingGet().get(0);\n  if (state != null) {\n    itemProgressView.setVisibility(View.VISIBLE);\n    itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n    itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n  }\n else {\n    itemProgressView.setVisibility(View.GONE);\n  }\n}\n else {\n  itemDurationView.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 52
      },
      "nodeContext" : "item.getStreamEntity().getDuration() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 68,
      "startColumnNumber" : 39,
      "endLineNumber" : 68,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 68,
        "endColumnNumber" : 61
      },
      "nodeContext" : "item.getStreamEntity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 68,
        "endColumnNumber" : 75
      },
      "nodeContext" : "item.getStreamEntity().getDuration()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 67,
        "startColumnNumber" : 37,
        "endLineNumber" : 68,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Localization.getDurationString(item.getStreamEntity().getDuration())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 77
      },
      "nodeContext" : "itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 78
      },
      "nodeContext" : "itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 66,
        "startColumnNumber" : 54,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n  itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n  itemDurationView.setVisibility(View.VISIBLE);\n  StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n      add(localItem);\n    }\n  }\n).blockingGet().get(0);\n  if (state != null) {\n    itemProgressView.setVisibility(View.VISIBLE);\n    itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n    itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n  }\n else {\n    itemProgressView.setVisibility(View.GONE);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (item.getStreamEntity().getDuration() > 0) {\n  itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n  itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n  itemDurationView.setVisibility(View.VISIBLE);\n  StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n      add(localItem);\n    }\n  }\n).blockingGet().get(0);\n  if (state != null) {\n    itemProgressView.setVisibility(View.VISIBLE);\n    itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n    itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n  }\n else {\n    itemProgressView.setVisibility(View.GONE);\n  }\n}\n else {\n  itemDurationView.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 68,
        "endColumnNumber" : 75
      },
      "nodeContext" : "item.getStreamEntity().getDuration()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 79,
      "startColumnNumber" : 46,
      "endLineNumber" : 79,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 79,
        "startColumnNumber" : 46,
        "endLineNumber" : 79,
        "endColumnNumber" : 68
      },
      "nodeContext" : "item.getStreamEntity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 79,
        "startColumnNumber" : 46,
        "endLineNumber" : 79,
        "endColumnNumber" : 82
      },
      "nodeContext" : "item.getStreamEntity().getDuration()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 79,
        "startColumnNumber" : 40,
        "endLineNumber" : 79,
        "endColumnNumber" : 82
      },
      "nodeContext" : "(int)item.getStreamEntity().getDuration()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 83
      },
      "nodeContext" : "itemProgressView.setMax((int)item.getStreamEntity().getDuration())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 84
      },
      "nodeContext" : "itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 77,
        "startColumnNumber" : 31,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  itemProgressView.setVisibility(View.VISIBLE);\n  itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n  itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state != null) {\n  itemProgressView.setVisibility(View.VISIBLE);\n  itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n  itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n}\n else {\n  itemProgressView.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 66,
        "startColumnNumber" : 54,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n  itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n  itemDurationView.setVisibility(View.VISIBLE);\n  StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n      add(localItem);\n    }\n  }\n).blockingGet().get(0);\n  if (state != null) {\n    itemProgressView.setVisibility(View.VISIBLE);\n    itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n    itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n  }\n else {\n    itemProgressView.setVisibility(View.GONE);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (item.getStreamEntity().getDuration() > 0) {\n  itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n  itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n  itemDurationView.setVisibility(View.VISIBLE);\n  StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n      add(localItem);\n    }\n  }\n).blockingGet().get(0);\n  if (state != null) {\n    itemProgressView.setVisibility(View.VISIBLE);\n    itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n    itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n  }\n else {\n    itemProgressView.setVisibility(View.GONE);\n  }\n}\n else {\n  itemDurationView.setVisibility(View.GONE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 84
      },
      "nodeContext" : "itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 90,
      "startColumnNumber" : 33,
      "endLineNumber" : 90,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 90,
        "startColumnNumber" : 33,
        "endLineNumber" : 90,
        "endColumnNumber" : 55
      },
      "nodeContext" : "item.getStreamEntity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 90,
        "startColumnNumber" : 33,
        "endLineNumber" : 90,
        "endColumnNumber" : 73
      },
      "nodeContext" : "item.getStreamEntity().getThumbnailUrl()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 64
      },
      "nodeContext" : "itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 65
      },
      "nodeContext" : "itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 90,
        "startColumnNumber" : 33,
        "endLineNumber" : 90,
        "endColumnNumber" : 73
      },
      "nodeContext" : "item.getStreamEntity().getThumbnailUrl()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 107,
      "startColumnNumber" : 64,
      "endLineNumber" : 107,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 107,
        "startColumnNumber" : 45,
        "endLineNumber" : 107,
        "endColumnNumber" : 69
      },
      "nodeContext" : "getOnTouchListener(item)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 70
      },
      "nodeContext" : "itemThumbnailView.setOnTouchListener(getOnTouchListener(item))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 71
      },
      "nodeContext" : "itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 71
      },
      "nodeContext" : "itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  }, {
    "nodeContext" : "item",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 108,
      "startColumnNumber" : 61,
      "endLineNumber" : 108,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 108,
        "startColumnNumber" : 42,
        "endLineNumber" : 108,
        "endColumnNumber" : 66
      },
      "nodeContext" : "getOnTouchListener(item)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 67
      },
      "nodeContext" : "itemHandleView.setOnTouchListener(getOnTouchListener(item))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 68
      },
      "nodeContext" : "itemHandleView.setOnTouchListener(getOnTouchListener(item));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2437,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2645,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateFromItem(final LocalItem localItem,final HistoryRecordManager historyRecordManager,final DateFormat dateFormat){\n  if (!(localItem instanceof PlaylistStreamEntry)) {\n    return;\n  }\n  final PlaylistStreamEntry item=(PlaylistStreamEntry)localItem;\n  itemVideoTitleView.setText(item.getStreamEntity().getTitle());\n  itemAdditionalDetailsView.setText(Localization.concatenateStrings(item.getStreamEntity().getUploader(),NewPipe.getNameOfService(item.getStreamEntity().getServiceId())));\n  if (item.getStreamEntity().getDuration() > 0) {\n    itemDurationView.setText(Localization.getDurationString(item.getStreamEntity().getDuration()));\n    itemDurationView.setBackgroundColor(ContextCompat.getColor(itemBuilder.getContext(),R.color.duration_background_color));\n    itemDurationView.setVisibility(View.VISIBLE);\n    StreamStateEntity state=historyRecordManager.loadLocalStreamStateBatch(new ArrayList<LocalItem>(){\n{\n        add(localItem);\n      }\n    }\n).blockingGet().get(0);\n    if (state != null) {\n      itemProgressView.setVisibility(View.VISIBLE);\n      itemProgressView.setMax((int)item.getStreamEntity().getDuration());\n      itemProgressView.setProgress((int)TimeUnit.MILLISECONDS.toSeconds(state.getProgressTime()));\n    }\n else {\n      itemProgressView.setVisibility(View.GONE);\n    }\n  }\n else {\n    itemDurationView.setVisibility(View.GONE);\n  }\n  itemBuilder.displayImage(item.getStreamEntity().getThumbnailUrl(),itemThumbnailView,ImageDisplayConstants.DISPLAY_THUMBNAIL_OPTIONS);\n  itemView.setOnClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().selected(item);\n    }\n  }\n);\n  itemView.setLongClickable(true);\n  itemView.setOnLongClickListener(view -> {\n    if (itemBuilder.getOnItemSelectedListener() != null) {\n      itemBuilder.getOnItemSelectedListener().held(item);\n    }\n    return true;\n  }\n);\n  itemThumbnailView.setOnTouchListener(getOnTouchListener(item));\n  itemHandleView.setOnTouchListener(getOnTouchListener(item));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 68
      },
      "nodeContext" : "itemHandleView.setOnTouchListener(getOnTouchListener(item));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.schabi.newpipe.local.holder.PlaylistStreamEntry"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 35,
    "endLineNumber" : 61,
    "endColumnNumber" : 39
  }, {
    "charLength" : 4,
    "startLineNumber" : 63,
    "startColumnNumber" : 36,
    "endLineNumber" : 63,
    "endColumnNumber" : 40
  }, {
    "charLength" : 4,
    "startLineNumber" : 64,
    "startColumnNumber" : 49,
    "endLineNumber" : 64,
    "endColumnNumber" : 53
  }, {
    "charLength" : 4,
    "startLineNumber" : 66,
    "startColumnNumber" : 12,
    "endLineNumber" : 66,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 68,
    "startColumnNumber" : 39,
    "endLineNumber" : 68,
    "endColumnNumber" : 43
  }, {
    "charLength" : 4,
    "startLineNumber" : 79,
    "startColumnNumber" : 46,
    "endLineNumber" : 79,
    "endColumnNumber" : 50
  }, {
    "charLength" : 4,
    "startLineNumber" : 90,
    "startColumnNumber" : 33,
    "endLineNumber" : 90,
    "endColumnNumber" : 37
  }, {
    "charLength" : 4,
    "startLineNumber" : 107,
    "startColumnNumber" : 64,
    "endLineNumber" : 107,
    "endColumnNumber" : 68
  }, {
    "charLength" : 4,
    "startLineNumber" : 108,
    "startColumnNumber" : 61,
    "endLineNumber" : 108,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  } ]
}