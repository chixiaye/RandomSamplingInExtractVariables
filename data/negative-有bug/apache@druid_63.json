{
  "id" : 63,
  "expression" : "testUtils",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/metadata/input/SqlEntityTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 68,
      "startColumnNumber" : 4,
      "endLineNumber" : 68,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 51
      },
      "nodeContext" : "testUtils.createAndUpdateTable(TABLE_NAME_1,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 52
      },
      "nodeContext" : "testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  derbyConnector=derbyConnectorRule.getConnector();\n  SqlTestUtils testUtils=new SqlTestUtils(derbyConnector);\n  testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n  File tmpFile=File.createTempFile(\"testQueryResults\",\"\");\n  InputEntity.CleanableFile queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile);\n  InputStream queryInputStream=new FileInputStream(queryResult.file());\n  String actualJson=IOUtils.toString(queryInputStream,StandardCharsets.UTF_8);\n  Assert.assertEquals(actualJson,resultJson);\n  testUtils.dropTable(TABLE_NAME_1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 764,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testExecuteQuery() throws IOException {\n  derbyConnector=derbyConnectorRule.getConnector();\n  SqlTestUtils testUtils=new SqlTestUtils(derbyConnector);\n  testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n  File tmpFile=File.createTempFile(\"testQueryResults\",\"\");\n  InputEntity.CleanableFile queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile);\n  InputStream queryInputStream=new FileInputStream(queryResult.file());\n  String actualJson=IOUtils.toString(queryInputStream,StandardCharsets.UTF_8);\n  Assert.assertEquals(actualJson,resultJson);\n  testUtils.dropTable(TABLE_NAME_1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 52
      },
      "nodeContext" : "testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.metadata.input.SqlTestUtils"
  }, {
    "nodeContext" : "testUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 75,
      "startColumnNumber" : 8,
      "endLineNumber" : 75,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 45
      },
      "nodeContext" : "testUtils.getDerbyFirehoseConnector()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 73,
        "startColumnNumber" : 44,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 73,
        "startColumnNumber" : 30,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 6
      },
      "nodeContext" : "InputEntity.CleanableFile queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  derbyConnector=derbyConnectorRule.getConnector();\n  SqlTestUtils testUtils=new SqlTestUtils(derbyConnector);\n  testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n  File tmpFile=File.createTempFile(\"testQueryResults\",\"\");\n  InputEntity.CleanableFile queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile);\n  InputStream queryInputStream=new FileInputStream(queryResult.file());\n  String actualJson=IOUtils.toString(queryInputStream,StandardCharsets.UTF_8);\n  Assert.assertEquals(actualJson,resultJson);\n  testUtils.dropTable(TABLE_NAME_1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 764,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testExecuteQuery() throws IOException {\n  derbyConnector=derbyConnectorRule.getConnector();\n  SqlTestUtils testUtils=new SqlTestUtils(derbyConnector);\n  testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n  File tmpFile=File.createTempFile(\"testQueryResults\",\"\");\n  InputEntity.CleanableFile queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile);\n  InputStream queryInputStream=new FileInputStream(queryResult.file());\n  String actualJson=IOUtils.toString(queryInputStream,StandardCharsets.UTF_8);\n  Assert.assertEquals(actualJson,resultJson);\n  testUtils.dropTable(TABLE_NAME_1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 45
      },
      "nodeContext" : "testUtils.getDerbyFirehoseConnector()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.metadata.input.SqlTestUtils"
  }, {
    "nodeContext" : "testUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 84,
      "startColumnNumber" : 4,
      "endLineNumber" : 84,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 37
      },
      "nodeContext" : "testUtils.dropTable(TABLE_NAME_1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "testUtils.dropTable(TABLE_NAME_1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  derbyConnector=derbyConnectorRule.getConnector();\n  SqlTestUtils testUtils=new SqlTestUtils(derbyConnector);\n  testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n  File tmpFile=File.createTempFile(\"testQueryResults\",\"\");\n  InputEntity.CleanableFile queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile);\n  InputStream queryInputStream=new FileInputStream(queryResult.file());\n  String actualJson=IOUtils.toString(queryInputStream,StandardCharsets.UTF_8);\n  Assert.assertEquals(actualJson,resultJson);\n  testUtils.dropTable(TABLE_NAME_1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 764,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testExecuteQuery() throws IOException {\n  derbyConnector=derbyConnectorRule.getConnector();\n  SqlTestUtils testUtils=new SqlTestUtils(derbyConnector);\n  testUtils.createAndUpdateTable(TABLE_NAME_1,1);\n  File tmpFile=File.createTempFile(\"testQueryResults\",\"\");\n  InputEntity.CleanableFile queryResult=SqlEntity.openCleanableFile(VALID_SQL,testUtils.getDerbyFirehoseConnector(),mapper,true,tmpFile);\n  InputStream queryInputStream=new FileInputStream(queryResult.file());\n  String actualJson=IOUtils.toString(queryInputStream,StandardCharsets.UTF_8);\n  Assert.assertEquals(actualJson,resultJson);\n  testUtils.dropTable(TABLE_NAME_1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 38
      },
      "nodeContext" : "testUtils.dropTable(TABLE_NAME_1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.metadata.input.SqlTestUtils"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 68,
    "startColumnNumber" : 4,
    "endLineNumber" : 68,
    "endColumnNumber" : 13
  }, {
    "charLength" : 9,
    "startLineNumber" : 75,
    "startColumnNumber" : 8,
    "endLineNumber" : 75,
    "endColumnNumber" : 17
  }, {
    "charLength" : 9,
    "startLineNumber" : 84,
    "startColumnNumber" : 4,
    "endLineNumber" : 84,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}