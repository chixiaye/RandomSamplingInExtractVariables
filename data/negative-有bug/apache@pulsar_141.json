{
  "id" : 141,
  "expression" : "\"Starting Pulsar producer perf with config: {}\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client/src/main/java/org/apache/pulsar/client/impl/ProducerStatsRecorderImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Starting Pulsar producer perf with config: {}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 101,
      "startColumnNumber" : 21,
      "endLineNumber" : 101,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 97
      },
      "nodeContext" : "log.info(\"Starting Pulsar producer perf with config: {}\",w.writeValueAsString(conf))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 98
      },
      "nodeContext" : "log.info(\"Starting Pulsar producer perf with config: {}\",w.writeValueAsString(conf));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  log.info(\"Starting Pulsar producer perf with config: {}\",w.writeValueAsString(conf));\n  log.info(\"Pulsar client config: {}\",w.withoutAttribute(\"authentication\").writeValueAsString(pulsarClient.getConfiguration()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  log.info(\"Starting Pulsar producer perf with config: {}\",w.writeValueAsString(conf));\n  log.info(\"Pulsar client config: {}\",w.withoutAttribute(\"authentication\").writeValueAsString(pulsarClient.getConfiguration()));\n}\n catch (IOException e) {\n  log.error(\"Failed to dump config info\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3459,
        "startLineNumber" : 95,
        "startColumnNumber" : 54,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ObjectMapper m=new ObjectMapper();\n  m.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS,false);\n  ObjectWriter w=m.writerWithDefaultPrettyPrinter();\n  try {\n    log.info(\"Starting Pulsar producer perf with config: {}\",w.writeValueAsString(conf));\n    log.info(\"Pulsar client config: {}\",w.withoutAttribute(\"authentication\").writeValueAsString(pulsarClient.getConfiguration()));\n  }\n catch (  IOException e) {\n    log.error(\"Failed to dump config info\",e);\n  }\n  stat=(timeout) -> {\n    if (timeout.isCancelled()) {\n      return;\n    }\n    try {\n      long now=System.nanoTime();\n      double elapsed=(now - oldTime) / 1e9;\n      oldTime=now;\n      long currentNumMsgsSent=numMsgsSent.sumThenReset();\n      long currentNumBytesSent=numBytesSent.sumThenReset();\n      long currentNumSendFailedMsgs=numSendFailed.sumThenReset();\n      long currentNumAcksReceived=numAcksReceived.sumThenReset();\n      totalMsgsSent.add(currentNumMsgsSent);\n      totalBytesSent.add(currentNumBytesSent);\n      totalSendFailed.add(currentNumSendFailedMsgs);\n      totalAcksReceived.add(currentNumAcksReceived);\nsynchronized (ds) {\n        latencyPctValues=ds.getQuantiles(PERCENTILES);\n        ds.reset();\n      }\n      sendMsgsRate=currentNumMsgsSent / elapsed;\n      sendBytesRate=currentNumBytesSent / elapsed;\n      if ((currentNumMsgsSent | currentNumSendFailedMsgs | currentNumAcksReceived| currentNumMsgsSent) != 0) {\n        for (int i=0; i < latencyPctValues.length; i++) {\n          if (Double.isNaN(latencyPctValues[i])) {\n            latencyPctValues[i]=0;\n          }\n        }\n        log.info(\"[{}] [{}] Pending messages: {} --- Publish throughput: {} msg/s --- {} Mbit/s --- \" + \"Latency: med: {} ms - 95pct: {} ms - 99pct: {} ms - 99.9pct: {} ms - max: {} ms --- \" + \"Ack received rate: {} ack/s --- Failed messages: {}\",producer.getTopic(),producer.getProducerName(),producer.getPendingQueueSize(),THROUGHPUT_FORMAT.format(sendMsgsRate),THROUGHPUT_FORMAT.format(sendBytesRate / 1024 / 1024 * 8),DEC.format(latencyPctValues[0]),DEC.format(latencyPctValues[2]),DEC.format(latencyPctValues[3]),DEC.format(latencyPctValues[4]),DEC.format(latencyPctValues[5]),THROUGHPUT_FORMAT.format(currentNumAcksReceived / elapsed),currentNumSendFailedMsgs);\n      }\n    }\n catch (    Exception e) {\n      log.error(\"[{}] [{}]: {}\",producer.getTopic(),producer.getProducerName(),e.getMessage());\n    }\n finally {\n      statTimeout=pulsarClient.timer().newTimeout(stat,statsIntervalSeconds,TimeUnit.SECONDS);\n    }\n  }\n;\n  oldTime=System.nanoTime();\n  statTimeout=pulsarClient.timer().newTimeout(stat,statsIntervalSeconds,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 330,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3509,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void init(ProducerConfigurationData conf){\n  ObjectMapper m=new ObjectMapper();\n  m.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS,false);\n  ObjectWriter w=m.writerWithDefaultPrettyPrinter();\n  try {\n    log.info(\"Starting Pulsar producer perf with config: {}\",w.writeValueAsString(conf));\n    log.info(\"Pulsar client config: {}\",w.withoutAttribute(\"authentication\").writeValueAsString(pulsarClient.getConfiguration()));\n  }\n catch (  IOException e) {\n    log.error(\"Failed to dump config info\",e);\n  }\n  stat=(timeout) -> {\n    if (timeout.isCancelled()) {\n      return;\n    }\n    try {\n      long now=System.nanoTime();\n      double elapsed=(now - oldTime) / 1e9;\n      oldTime=now;\n      long currentNumMsgsSent=numMsgsSent.sumThenReset();\n      long currentNumBytesSent=numBytesSent.sumThenReset();\n      long currentNumSendFailedMsgs=numSendFailed.sumThenReset();\n      long currentNumAcksReceived=numAcksReceived.sumThenReset();\n      totalMsgsSent.add(currentNumMsgsSent);\n      totalBytesSent.add(currentNumBytesSent);\n      totalSendFailed.add(currentNumSendFailedMsgs);\n      totalAcksReceived.add(currentNumAcksReceived);\nsynchronized (ds) {\n        latencyPctValues=ds.getQuantiles(PERCENTILES);\n        ds.reset();\n      }\n      sendMsgsRate=currentNumMsgsSent / elapsed;\n      sendBytesRate=currentNumBytesSent / elapsed;\n      if ((currentNumMsgsSent | currentNumSendFailedMsgs | currentNumAcksReceived| currentNumMsgsSent) != 0) {\n        for (int i=0; i < latencyPctValues.length; i++) {\n          if (Double.isNaN(latencyPctValues[i])) {\n            latencyPctValues[i]=0;\n          }\n        }\n        log.info(\"[{}] [{}] Pending messages: {} --- Publish throughput: {} msg/s --- {} Mbit/s --- \" + \"Latency: med: {} ms - 95pct: {} ms - 99pct: {} ms - 99.9pct: {} ms - max: {} ms --- \" + \"Ack received rate: {} ack/s --- Failed messages: {}\",producer.getTopic(),producer.getProducerName(),producer.getPendingQueueSize(),THROUGHPUT_FORMAT.format(sendMsgsRate),THROUGHPUT_FORMAT.format(sendBytesRate / 1024 / 1024 * 8),DEC.format(latencyPctValues[0]),DEC.format(latencyPctValues[2]),DEC.format(latencyPctValues[3]),DEC.format(latencyPctValues[4]),DEC.format(latencyPctValues[5]),THROUGHPUT_FORMAT.format(currentNumAcksReceived / elapsed),currentNumSendFailedMsgs);\n      }\n    }\n catch (    Exception e) {\n      log.error(\"[{}] [{}]: {}\",producer.getTopic(),producer.getProducerName(),e.getMessage());\n    }\n finally {\n      statTimeout=pulsarClient.timer().newTimeout(stat,statsIntervalSeconds,TimeUnit.SECONDS);\n    }\n  }\n;\n  oldTime=System.nanoTime();\n  statTimeout=pulsarClient.timer().newTimeout(stat,statsIntervalSeconds,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 338,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 98
      },
      "nodeContext" : "log.info(\"Starting Pulsar producer perf with config: {}\",w.writeValueAsString(conf));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 101,
    "startColumnNumber" : 21,
    "endLineNumber" : 101,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}