{
  "id" : 29,
  "expression" : "Vars.state.rules",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/consumers/ConsumeItemExplode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Vars.state.rules",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 34,
      "startColumnNumber" : 15,
      "endLineNumber" : 34,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Vars.state.rules.reactorExplosions",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 139
      },
      "nodeContext" : "Vars.state.rules.reactorExplosions && Mathf.chance(build.delta() * baseChance * Mathf.clamp(item.explosiveness - threshold))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Vars.state.rules.reactorExplosions && Mathf.chance(build.delta() * baseChance * Mathf.clamp(item.explosiveness - threshold))) {\n  build.damage(damage);\n  explodeEffect.at(build.x + Mathf.range(build.block.size * tilesize / 2f),build.y + Mathf.range(build.block.size * tilesize / 2f));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 33,
        "startColumnNumber" : 24,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Vars.state.rules.reactorExplosions && Mathf.chance(build.delta() * baseChance * Mathf.clamp(item.explosiveness - threshold))) {\n    build.damage(damage);\n    explodeEffect.at(build.x + Mathf.range(build.block.size * tilesize / 2f),build.y + Mathf.range(build.block.size * tilesize / 2f));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (item != null) {\n  if (Vars.state.rules.reactorExplosions && Mathf.chance(build.delta() * baseChance * Mathf.clamp(item.explosiveness - threshold))) {\n    build.damage(damage);\n    explodeEffect.at(build.x + Mathf.range(build.block.size * tilesize / 2f),build.y + Mathf.range(build.block.size * tilesize / 2f));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 30,
        "startColumnNumber" : 38,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  var item=getConsumed(build);\n  if (item != null) {\n    if (Vars.state.rules.reactorExplosions && Mathf.chance(build.delta() * baseChance * Mathf.clamp(item.explosiveness - threshold))) {\n      build.damage(damage);\n      explodeEffect.at(build.x + Mathf.range(build.block.size * tilesize / 2f),build.y + Mathf.range(build.block.size * tilesize / 2f));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void update(Building build){\n  var item=getConsumed(build);\n  if (item != null) {\n    if (Vars.state.rules.reactorExplosions && Mathf.chance(build.delta() * baseChance * Mathf.clamp(item.explosiveness - threshold))) {\n      build.damage(damage);\n      explodeEffect.at(build.x + Mathf.range(build.block.size * tilesize / 2f),build.y + Mathf.range(build.block.size * tilesize / 2f));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 139
      },
      "nodeContext" : "Vars.state.rules.reactorExplosions && Mathf.chance(build.delta() * baseChance * Mathf.clamp(item.explosiveness - threshold))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "mindustry.game.Rules"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 34,
    "startColumnNumber" : 15,
    "endLineNumber" : 34,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}