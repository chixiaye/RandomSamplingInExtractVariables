{
  "id" : 295,
  "expression" : "transformation.audioMimeType == null ? decoderInputFormat.sampleMimeType : transformation.audioMimeType",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/transformer/src/main/java/com/google/android/exoplayer2/transformer/TransformerAudioRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "transformation.audioMimeType == null ? decoderInputFormat.sampleMimeType : transformation.audioMimeType",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 127,
      "startLineNumber" : 357,
      "startColumnNumber" : 8,
      "endLineNumber" : 359,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 356,
        "startColumnNumber" : 11,
        "endLineNumber" : 359,
        "endColumnNumber" : 42
      },
      "nodeContext" : "audioMimeType=transformation.audioMimeType == null ? decoderInputFormat.sampleMimeType : transformation.audioMimeType",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 356,
        "startColumnNumber" : 4,
        "endLineNumber" : 359,
        "endColumnNumber" : 43
      },
      "nodeContext" : "String audioMimeType=transformation.audioMimeType == null ? decoderInputFormat.sampleMimeType : transformation.audioMimeType;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1701,
        "startLineNumber" : 333,
        "startColumnNumber" : 90,
        "endLineNumber" : 375,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (encoder != null && encoderInputAudioFormat != null) {\n    return true;\n  }\n  MediaCodecAdapterWrapper decoder=this.decoder;\n  @Nullable Format decoderOutputFormat=decoder.getOutputFormat();\n  if (decoderOutputFormat == null) {\n    return false;\n  }\n  AudioFormat outputAudioFormat=new AudioFormat(decoderOutputFormat.sampleRate,decoderOutputFormat.channelCount,decoderOutputFormat.pcmEncoding);\n  if (transformation.flattenForSlowMotion) {\n    try {\n      outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n      flushSonicAndSetSpeed(currentSpeed);\n    }\n catch (    AudioProcessor.UnhandledAudioFormatException e) {\n      throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n    }\n  }\n  String audioMimeType=transformation.audioMimeType == null ? decoderInputFormat.sampleMimeType : transformation.audioMimeType;\n  try {\n    encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n  }\n catch (  IOException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n  encoderInputAudioFormat=outputAudioFormat;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2121,
        "startLineNumber" : 325,
        "startColumnNumber" : 2,
        "endLineNumber" : 375,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Attempts to configure the  {@link #encoder} and Sonic (if applicable), if they have not beenconfigured yet, and returns whether they have been configured.\n */\n@RequiresNonNull({\"decoder\",\"decoderInputFormat\"}) @EnsuresNonNullIf(expression={\"encoder\",\"encoderInputAudioFormat\"},result=true) private boolean ensureEncoderAndAudioProcessingConfigured() throws ExoPlaybackException {\n  if (encoder != null && encoderInputAudioFormat != null) {\n    return true;\n  }\n  MediaCodecAdapterWrapper decoder=this.decoder;\n  @Nullable Format decoderOutputFormat=decoder.getOutputFormat();\n  if (decoderOutputFormat == null) {\n    return false;\n  }\n  AudioFormat outputAudioFormat=new AudioFormat(decoderOutputFormat.sampleRate,decoderOutputFormat.channelCount,decoderOutputFormat.pcmEncoding);\n  if (transformation.flattenForSlowMotion) {\n    try {\n      outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n      flushSonicAndSetSpeed(currentSpeed);\n    }\n catch (    AudioProcessor.UnhandledAudioFormatException e) {\n      throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n    }\n  }\n  String audioMimeType=transformation.audioMimeType == null ? decoderInputFormat.sampleMimeType : transformation.audioMimeType;\n  try {\n    encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n  }\n catch (  IOException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n  encoderInputAudioFormat=outputAudioFormat;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 356,
        "startColumnNumber" : 11,
        "endLineNumber" : 359,
        "endColumnNumber" : 42
      },
      "nodeContext" : "audioMimeType=transformation.audioMimeType == null ? decoderInputFormat.sampleMimeType : transformation.audioMimeType",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 127,
    "startLineNumber" : 357,
    "startColumnNumber" : 8,
    "endLineNumber" : 359,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}