{
  "id" : 285,
  "expression" : "Long.MIN_VALUE",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/math/MathPreconditionsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Long.MIN_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 80,
      "startColumnNumber" : 46,
      "endLineNumber" : 80,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 80,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "MathPreconditions.checkPositive(\"long\",Long.MIN_VALUE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 80,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "MathPreconditions.checkPositive(\"long\",Long.MIN_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MathPreconditions.checkPositive(\"long\",Long.MIN_VALUE);\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  MathPreconditions.checkPositive(\"long\",Long.MIN_VALUE);\n  fail();\n}\n catch (IllegalArgumentException expected) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 78,
        "startColumnNumber" : 42,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    MathPreconditions.checkPositive(\"long\",Long.MIN_VALUE);\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testCheckPositive_minLong(){\n  try {\n    MathPreconditions.checkPositive(\"long\",Long.MIN_VALUE);\n    fail();\n  }\n catch (  IllegalArgumentException expected) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 24,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 80,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "MathPreconditions.checkPositive(\"long\",Long.MIN_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 80,
    "startColumnNumber" : 46,
    "endLineNumber" : 80,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}