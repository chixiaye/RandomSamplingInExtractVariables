{
  "id" : 445,
  "expression" : "serverDescription",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/runtime/BlazeCommandDispatcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serverDescription",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 194,
      "startColumnNumber" : 48,
      "endLineNumber" : 194,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 191,
        "startColumnNumber" : 18,
        "endLineNumber" : 194,
        "endColumnNumber" : 66
      },
      "nodeContext" : "String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 190,
        "startColumnNumber" : 14,
        "endLineNumber" : 194,
        "endColumnNumber" : 67
      },
      "nodeContext" : "outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 190,
        "startColumnNumber" : 14,
        "endLineNumber" : 194,
        "endColumnNumber" : 68
      },
      "nodeContext" : "outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 187,
        "startColumnNumber" : 74,
        "endLineNumber" : 196,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n  outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n  otherClientDescription=currentClientDescription;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 187,
        "startColumnNumber" : 12,
        "endLineNumber" : 196,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!otherClientDescription.equals(currentClientDescription)) {\n  String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n  outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n  otherClientDescription=currentClientDescription;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (lockingMode) {\ncase WAIT:  if (!otherClientDescription.equals(currentClientDescription)) {\n    String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n    outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n    otherClientDescription=currentClientDescription;\n  }\ncommandLock.wait(500);\nbreak;\ncase ERROR_OUT:String message=String.format(\"Another command (%s) is running. Exiting immediately.\",currentClientDescription);\noutErr.printErrLn(message);\nreturn createDetailedCommandResult(message,FailureDetails.Command.Code.ANOTHER_COMMAND_RUNNING);\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 184,
        "startColumnNumber" : 47,
        "endLineNumber" : 214,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\nswitch (lockingMode) {\ncase WAIT:    if (!otherClientDescription.equals(currentClientDescription)) {\n      String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n      outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n      otherClientDescription=currentClientDescription;\n    }\n  commandLock.wait(500);\nbreak;\ncase ERROR_OUT:String message=String.format(\"Another command (%s) is running. Exiting immediately.\",currentClientDescription);\noutErr.printErrLn(message);\nreturn createDetailedCommandResult(message,FailureDetails.Command.Code.ANOTHER_COMMAND_RUNNING);\ndefault:throw new IllegalStateException();\n}\nmultipleAttempts=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1205,
        "startLineNumber" : 184,
        "startColumnNumber" : 6,
        "endLineNumber" : 214,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (currentClientDescription != null) {\nswitch (lockingMode) {\ncase WAIT:    if (!otherClientDescription.equals(currentClientDescription)) {\n      String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n      outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n      otherClientDescription=currentClientDescription;\n    }\n  commandLock.wait(500);\nbreak;\ncase ERROR_OUT:String message=String.format(\"Another command (%s) is running. Exiting immediately.\",currentClientDescription);\noutErr.printErrLn(message);\nreturn createDetailedCommandResult(message,FailureDetails.Command.Code.ANOTHER_COMMAND_RUNNING);\ndefault:throw new IllegalStateException();\n}\nmultipleAttempts=true;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1271,
        "startLineNumber" : 183,
        "startColumnNumber" : 31,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (currentClientDescription != null) {\nswitch (lockingMode) {\ncase WAIT:      if (!otherClientDescription.equals(currentClientDescription)) {\n        String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n        outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n        otherClientDescription=currentClientDescription;\n      }\n    commandLock.wait(500);\n  break;\ncase ERROR_OUT:String message=String.format(\"Another command (%s) is running. Exiting immediately.\",currentClientDescription);\noutErr.printErrLn(message);\nreturn createDetailedCommandResult(message,FailureDetails.Command.Code.ANOTHER_COMMAND_RUNNING);\ndefault:throw new IllegalStateException();\n}\nmultipleAttempts=true;\n}\ncurrentClientDescription=clientDescription;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1298,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (commandLock) {\n  while (currentClientDescription != null) {\nswitch (lockingMode) {\ncase WAIT:      if (!otherClientDescription.equals(currentClientDescription)) {\n        String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n        outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n        otherClientDescription=currentClientDescription;\n      }\n    commandLock.wait(500);\n  break;\ncase ERROR_OUT:String message=String.format(\"Another command (%s) is running. Exiting immediately.\",currentClientDescription);\noutErr.printErrLn(message);\nreturn createDetailedCommandResult(message,FailureDetails.Command.Code.ANOTHER_COMMAND_RUNNING);\ndefault:throw new IllegalStateException();\n}\nmultipleAttempts=true;\n}\ncurrentClientDescription=clientDescription;\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4653,
        "startLineNumber" : 147,
        "startColumnNumber" : 34,
        "endLineNumber" : 259,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  OriginalUnstructuredCommandLineEvent originalCommandLine=new OriginalUnstructuredCommandLineEvent(args);\n  Preconditions.checkNotNull(clientDescription);\n  if (args.isEmpty()) {\n    args=HELP_COMMAND;\n  }\n  String commandName=args.get(0);\n  if (ALL_HELP_OPTIONS.contains(commandName)) {\n    commandName=\"help\";\n  }\n  BlazeCommand command=runtime.getCommandMap().get(commandName);\n  if (command == null) {\n    outErr.printErrLn(String.format(\"Command '%s' not found. Try '%s help'.\",commandName,runtime.getProductName()));\n    return createDetailedCommandResult(String.format(\"Command '%s' not found.\",commandName),FailureDetails.Command.Code.COMMAND_NOT_FOUND);\n  }\n  boolean multipleAttempts=false;\n  long clockBefore=BlazeClock.nanoTime();\n  String otherClientDescription=\"\";\nsynchronized (commandLock) {\n    while (currentClientDescription != null) {\nswitch (lockingMode) {\ncase WAIT:        if (!otherClientDescription.equals(currentClientDescription)) {\n          String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n          outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n          otherClientDescription=currentClientDescription;\n        }\n      commandLock.wait(500);\n    break;\ncase ERROR_OUT:  String message=String.format(\"Another command (%s) is running. Exiting immediately.\",currentClientDescription);\noutErr.printErrLn(message);\nreturn createDetailedCommandResult(message,FailureDetails.Command.Code.ANOTHER_COMMAND_RUNNING);\ndefault:throw new IllegalStateException();\n}\nmultipleAttempts=true;\n}\ncurrentClientDescription=clientDescription;\n}\nlong waitTimeInMs=!multipleAttempts ? 0 : (BlazeClock.nanoTime() - clockBefore) / (1000L * 1000L);\ntry {\nString retrievedShutdownReason=this.shutdownReason.get();\nif (retrievedShutdownReason != null) {\noutErr.printErrLn(retrievedShutdownReason);\nreturn createDetailedCommandResult(retrievedShutdownReason,FailureDetails.Command.Code.PREVIOUSLY_SHUTDOWN);\n}\nBlazeCommandResult result=execExclusively(originalCommandLine,invocationPolicy,args,outErr,firstContactTimeMillis,commandName,command,waitTimeInMs,startupOptionsTaggedWithBazelRc,commandExtensions);\nif (result.shutdown()) {\nsetShutdownReason(\"Server shut down \" + (result.getExitCode().isInfrastructureFailure() ? \"due to a crash: \" + result.getFailureDetail().getMessage() : \"explicitly by client \" + clientDescription));\n}\nif (!result.getDetailedExitCode().isSuccess()) {\nlogger.atInfo().log(\"Exit status was %s\",result.getDetailedExitCode());\n}\nreturn result;\n}\n  finally {\nsynchronized (commandLock) {\ncurrentClientDescription=null;\ncommandLock.notify();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 329,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5027,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 259,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public BlazeCommandResult exec(InvocationPolicy invocationPolicy,List<String> args,OutErr outErr,LockingMode lockingMode,String clientDescription,long firstContactTimeMillis,Optional<List<Pair<String,String>>> startupOptionsTaggedWithBazelRc,List<Any> commandExtensions) throws InterruptedException {\n  OriginalUnstructuredCommandLineEvent originalCommandLine=new OriginalUnstructuredCommandLineEvent(args);\n  Preconditions.checkNotNull(clientDescription);\n  if (args.isEmpty()) {\n    args=HELP_COMMAND;\n  }\n  String commandName=args.get(0);\n  if (ALL_HELP_OPTIONS.contains(commandName)) {\n    commandName=\"help\";\n  }\n  BlazeCommand command=runtime.getCommandMap().get(commandName);\n  if (command == null) {\n    outErr.printErrLn(String.format(\"Command '%s' not found. Try '%s help'.\",commandName,runtime.getProductName()));\n    return createDetailedCommandResult(String.format(\"Command '%s' not found.\",commandName),FailureDetails.Command.Code.COMMAND_NOT_FOUND);\n  }\n  boolean multipleAttempts=false;\n  long clockBefore=BlazeClock.nanoTime();\n  String otherClientDescription=\"\";\nsynchronized (commandLock) {\n    while (currentClientDescription != null) {\nswitch (lockingMode) {\ncase WAIT:        if (!otherClientDescription.equals(currentClientDescription)) {\n          String serverDescription=serverPid == UNKNOWN_SERVER_PID ? \"\" : (\" (server_pid=\" + serverPid + \")\");\n          outErr.printErrLn(String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription));\n          otherClientDescription=currentClientDescription;\n        }\n      commandLock.wait(500);\n    break;\ncase ERROR_OUT:  String message=String.format(\"Another command (%s) is running. Exiting immediately.\",currentClientDescription);\noutErr.printErrLn(message);\nreturn createDetailedCommandResult(message,FailureDetails.Command.Code.ANOTHER_COMMAND_RUNNING);\ndefault:throw new IllegalStateException();\n}\nmultipleAttempts=true;\n}\ncurrentClientDescription=clientDescription;\n}\nlong waitTimeInMs=!multipleAttempts ? 0 : (BlazeClock.nanoTime() - clockBefore) / (1000L * 1000L);\ntry {\nString retrievedShutdownReason=this.shutdownReason.get();\nif (retrievedShutdownReason != null) {\noutErr.printErrLn(retrievedShutdownReason);\nreturn createDetailedCommandResult(retrievedShutdownReason,FailureDetails.Command.Code.PREVIOUSLY_SHUTDOWN);\n}\nBlazeCommandResult result=execExclusively(originalCommandLine,invocationPolicy,args,outErr,firstContactTimeMillis,commandName,command,waitTimeInMs,startupOptionsTaggedWithBazelRc,commandExtensions);\nif (result.shutdown()) {\nsetShutdownReason(\"Server shut down \" + (result.getExitCode().isInfrastructureFailure() ? \"due to a crash: \" + result.getFailureDetail().getMessage() : \"explicitly by client \" + clientDescription));\n}\nif (!result.getDetailedExitCode().isSuccess()) {\nlogger.atInfo().log(\"Exit status was %s\",result.getDetailedExitCode());\n}\nreturn result;\n}\n  finally {\nsynchronized (commandLock) {\ncurrentClientDescription=null;\ncommandLock.notify();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 191,
        "startColumnNumber" : 18,
        "endLineNumber" : 194,
        "endColumnNumber" : 66
      },
      "nodeContext" : "String.format(\"Another command (%s) is running. Waiting for it to complete on the\" + \" server%s...\",currentClientDescription,serverDescription)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 194,
    "startColumnNumber" : 48,
    "endLineNumber" : 194,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}