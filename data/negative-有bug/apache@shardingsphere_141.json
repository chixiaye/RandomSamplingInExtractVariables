{
  "id" : 141,
  "expression" : "\"DATA_MATCH\"",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/core/check/consistency/DataConsistencyCalculateAlgorithmChooser.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"DATA_MATCH\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 42,
      "startColumnNumber" : 28,
      "endLineNumber" : 42,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 40
      },
      "nodeContext" : "algorithmType=\"DATA_MATCH\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 41
      },
      "nodeContext" : "algorithmType=\"DATA_MATCH\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 41,
        "startColumnNumber" : 82,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  algorithmType=\"DATA_MATCH\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!databaseType.getType().equalsIgnoreCase(peerDatabaseType.getType())) {\n  algorithmType=\"DATA_MATCH\";\n}\n else if (databaseType instanceof MySQLDatabaseType) {\n  algorithmType=\"CRC32_MATCH\";\n}\n else {\n  algorithmType=\"DATA_MATCH\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 39,
        "startColumnNumber" : 129,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String algorithmType;\n  if (!databaseType.getType().equalsIgnoreCase(peerDatabaseType.getType())) {\n    algorithmType=\"DATA_MATCH\";\n  }\n else   if (databaseType instanceof MySQLDatabaseType) {\n    algorithmType=\"CRC32_MATCH\";\n  }\n else {\n    algorithmType=\"DATA_MATCH\";\n  }\n  return DataConsistencyCalculateAlgorithmFactory.newInstance(algorithmType,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Choose data consistency calculate algorithm when it's not defined.\n * @param databaseType database type\n * @param peerDatabaseType peer database type\n * @return algorithm\n */\npublic static DataConsistencyCalculateAlgorithm choose(final DatabaseType databaseType,final DatabaseType peerDatabaseType){\n  String algorithmType;\n  if (!databaseType.getType().equalsIgnoreCase(peerDatabaseType.getType())) {\n    algorithmType=\"DATA_MATCH\";\n  }\n else   if (databaseType instanceof MySQLDatabaseType) {\n    algorithmType=\"CRC32_MATCH\";\n  }\n else {\n    algorithmType=\"DATA_MATCH\";\n  }\n  return DataConsistencyCalculateAlgorithmFactory.newInstance(algorithmType,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 41
      },
      "nodeContext" : "algorithmType=\"DATA_MATCH\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"DATA_MATCH\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 46,
      "startColumnNumber" : 28,
      "endLineNumber" : 46,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 40
      },
      "nodeContext" : "algorithmType=\"DATA_MATCH\"",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 41
      },
      "nodeContext" : "algorithmType=\"DATA_MATCH\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 45,
        "startColumnNumber" : 15,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  algorithmType=\"DATA_MATCH\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 43,
        "startColumnNumber" : 15,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (databaseType instanceof MySQLDatabaseType) {\n  algorithmType=\"CRC32_MATCH\";\n}\n else {\n  algorithmType=\"DATA_MATCH\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!databaseType.getType().equalsIgnoreCase(peerDatabaseType.getType())) {\n  algorithmType=\"DATA_MATCH\";\n}\n else if (databaseType instanceof MySQLDatabaseType) {\n  algorithmType=\"CRC32_MATCH\";\n}\n else {\n  algorithmType=\"DATA_MATCH\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 39,
        "startColumnNumber" : 129,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String algorithmType;\n  if (!databaseType.getType().equalsIgnoreCase(peerDatabaseType.getType())) {\n    algorithmType=\"DATA_MATCH\";\n  }\n else   if (databaseType instanceof MySQLDatabaseType) {\n    algorithmType=\"CRC32_MATCH\";\n  }\n else {\n    algorithmType=\"DATA_MATCH\";\n  }\n  return DataConsistencyCalculateAlgorithmFactory.newInstance(algorithmType,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Choose data consistency calculate algorithm when it's not defined.\n * @param databaseType database type\n * @param peerDatabaseType peer database type\n * @return algorithm\n */\npublic static DataConsistencyCalculateAlgorithm choose(final DatabaseType databaseType,final DatabaseType peerDatabaseType){\n  String algorithmType;\n  if (!databaseType.getType().equalsIgnoreCase(peerDatabaseType.getType())) {\n    algorithmType=\"DATA_MATCH\";\n  }\n else   if (databaseType instanceof MySQLDatabaseType) {\n    algorithmType=\"CRC32_MATCH\";\n  }\n else {\n    algorithmType=\"DATA_MATCH\";\n  }\n  return DataConsistencyCalculateAlgorithmFactory.newInstance(algorithmType,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 41
      },
      "nodeContext" : "algorithmType=\"DATA_MATCH\";\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 42,
    "startColumnNumber" : 28,
    "endLineNumber" : 42,
    "endColumnNumber" : 40
  }, {
    "charLength" : 12,
    "startLineNumber" : 46,
    "startColumnNumber" : 28,
    "endLineNumber" : 46,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}