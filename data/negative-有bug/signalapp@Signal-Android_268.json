{
  "id" : 268,
  "expression" : "recipient",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/jobs/SendDeliveryReceiptJob.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "recipient",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 105,
      "startColumnNumber" : 8,
      "endLineNumber" : 105,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 34
      },
      "nodeContext" : "recipient.isUnregistered()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (recipient.isUnregistered()) {\n  Log.w(TAG,recipient.getId() + \" is unregistered!\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 97,
        "startColumnNumber" : 100,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onRun() throws IOException, UntrustedIdentityException, UndeliverableMessageException {\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 34
      },
      "nodeContext" : "recipient.isUnregistered()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.recipients.Recipient"
  }, {
    "nodeContext" : "recipient",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 106,
      "startColumnNumber" : 17,
      "endLineNumber" : 106,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 106,
        "startColumnNumber" : 17,
        "endLineNumber" : 106,
        "endColumnNumber" : 34
      },
      "nodeContext" : "recipient.getId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 106,
        "startColumnNumber" : 17,
        "endLineNumber" : 106,
        "endColumnNumber" : 56
      },
      "nodeContext" : "recipient.getId() + \" is unregistered!\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 106,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Log.w(TAG,recipient.getId() + \" is unregistered!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 106,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Log.w(TAG,recipient.getId() + \" is unregistered!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 105,
        "startColumnNumber" : 36,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Log.w(TAG,recipient.getId() + \" is unregistered!\");\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (recipient.isUnregistered()) {\n  Log.w(TAG,recipient.getId() + \" is unregistered!\");\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 97,
        "startColumnNumber" : 100,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onRun() throws IOException, UntrustedIdentityException, UndeliverableMessageException {\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 106,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Log.w(TAG,recipient.getId() + \" is unregistered!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.recipients.Recipient"
  }, {
    "nodeContext" : "recipient",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 110,
      "startColumnNumber" : 95,
      "endLineNumber" : 110,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 110,
        "startColumnNumber" : 49,
        "endLineNumber" : 110,
        "endColumnNumber" : 105
      },
      "nodeContext" : "RecipientUtil.toSignalServiceAddress(context,recipient)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 110,
        "startColumnNumber" : 32,
        "endLineNumber" : 110,
        "endColumnNumber" : 105
      },
      "nodeContext" : "remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 106
      },
      "nodeContext" : "SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 97,
        "startColumnNumber" : 100,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onRun() throws IOException, UntrustedIdentityException, UndeliverableMessageException {\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 106
      },
      "nodeContext" : "SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.recipients.Recipient"
  }, {
    "nodeContext" : "recipient",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 116,
      "startColumnNumber" : 102,
      "endLineNumber" : 116,
      "endColumnNumber" : 111
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 116,
        "startColumnNumber" : 57,
        "endLineNumber" : 116,
        "endColumnNumber" : 112
      },
      "nodeContext" : "UnidentifiedAccessUtil.getAccessFor(context,recipient)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 115,
        "startColumnNumber" : 31,
        "endLineNumber" : 117,
        "endColumnNumber" : 72
      },
      "nodeContext" : "messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 115,
        "startColumnNumber" : 22,
        "endLineNumber" : 117,
        "endColumnNumber" : 72
      },
      "nodeContext" : "result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 73
      },
      "nodeContext" : "SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 97,
        "startColumnNumber" : 100,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onRun() throws IOException, UntrustedIdentityException, UndeliverableMessageException {\n  if (!Recipient.self().isRegistered()) {\n    throw new NotPushRegisteredException();\n  }\n  SignalServiceMessageSender messageSender=ApplicationDependencies.getSignalServiceMessageSender();\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.isUnregistered()) {\n    Log.w(TAG,recipient.getId() + \" is unregistered!\");\n    return;\n  }\n  SignalServiceAddress remoteAddress=RecipientUtil.toSignalServiceAddress(context,recipient);\n  SignalServiceReceiptMessage receiptMessage=new SignalServiceReceiptMessage(SignalServiceReceiptMessage.Type.DELIVERY,Collections.singletonList(messageSentTimestamp),timestamp);\n  SendMessageResult result=messageSender.sendReceipt(remoteAddress,UnidentifiedAccessUtil.getAccessFor(context,recipient),receiptMessage);\n  if (messageId != null) {\n    DatabaseFactory.getMessageLogDatabase(context).insertIfPossible(recipientId,timestamp,result,ContentHint.IMPLICIT,messageId);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 116,
        "startColumnNumber" : 57,
        "endLineNumber" : 116,
        "endColumnNumber" : 112
      },
      "nodeContext" : "UnidentifiedAccessUtil.getAccessFor(context,recipient)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.recipients.Recipient"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 105,
    "startColumnNumber" : 8,
    "endLineNumber" : 105,
    "endColumnNumber" : 17
  }, {
    "charLength" : 9,
    "startLineNumber" : 106,
    "startColumnNumber" : 17,
    "endLineNumber" : 106,
    "endColumnNumber" : 26
  }, {
    "charLength" : 9,
    "startLineNumber" : 110,
    "startColumnNumber" : 95,
    "endLineNumber" : 110,
    "endColumnNumber" : 104
  }, {
    "charLength" : 9,
    "startLineNumber" : 116,
    "startColumnNumber" : 102,
    "endLineNumber" : 116,
    "endColumnNumber" : 111
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}