{
  "id" : 489,
  "expression" : "VARCHAR",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/type/TestDoubleOperators.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "VARCHAR",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 180,
      "startColumnNumber" : 50,
      "endLineNumber" : 180,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 180,
        "startColumnNumber" : 8,
        "endLineNumber" : 180,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertFunction(\"cast(37.7E0 as varchar)\",VARCHAR,\"3.77E1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 180,
        "startColumnNumber" : 8,
        "endLineNumber" : 180,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertFunction(\"cast(37.7E0 as varchar)\",VARCHAR,\"3.77E1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 179,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertFunction(\"cast(37.7E0 as varchar)\",VARCHAR,\"3.77E1\");\n  assertFunction(\"cast(17.1E0 as varchar)\",VARCHAR,\"1.71E1\");\n  assertFunction(\"cast(12e2 as varchar(6))\",createVarcharType(6),\"1.2E3\");\n  assertFunction(\"cast(12e2 as varchar(50))\",createVarcharType(50),\"1.2E3\");\n  assertFunction(\"cast(12345678.9e0 as varchar(50))\",createVarcharType(50),\"1.23456789E7\");\n  assertFunction(\"cast(DOUBLE 'NaN' as varchar(3))\",createVarcharType(3),\"NaN\");\n  assertFunction(\"cast(DOUBLE 'Infinity' as varchar(50))\",createVarcharType(50),\"Infinity\");\n  assertFunction(\"cast(12e2 as varchar(5))\",createVarcharType(5),\"1.2E3\");\n  assertInvalidCast(\"cast(12e2 as varchar(4))\",\"Value 1200.0 (1.2E3) cannot be represented as varchar(4)\");\n  assertInvalidCast(\"cast(0e0 as varchar(2))\",\"Value 0.0 (0E0) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(-0e0 as varchar(3))\",\"Value -0.0 (-0E0) cannot be represented as varchar(3)\");\n  assertInvalidCast(\"cast(0e0 / 0e0 as varchar(2))\",\"Value NaN (NaN) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(DOUBLE 'Infinity' as varchar(7))\",\"Value Infinity (Infinity) cannot be represented as varchar(7)\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCastToVarchar(){\n  assertFunction(\"cast(37.7E0 as varchar)\",VARCHAR,\"3.77E1\");\n  assertFunction(\"cast(17.1E0 as varchar)\",VARCHAR,\"1.71E1\");\n  assertFunction(\"cast(12e2 as varchar(6))\",createVarcharType(6),\"1.2E3\");\n  assertFunction(\"cast(12e2 as varchar(50))\",createVarcharType(50),\"1.2E3\");\n  assertFunction(\"cast(12345678.9e0 as varchar(50))\",createVarcharType(50),\"1.23456789E7\");\n  assertFunction(\"cast(DOUBLE 'NaN' as varchar(3))\",createVarcharType(3),\"NaN\");\n  assertFunction(\"cast(DOUBLE 'Infinity' as varchar(50))\",createVarcharType(50),\"Infinity\");\n  assertFunction(\"cast(12e2 as varchar(5))\",createVarcharType(5),\"1.2E3\");\n  assertInvalidCast(\"cast(12e2 as varchar(4))\",\"Value 1200.0 (1.2E3) cannot be represented as varchar(4)\");\n  assertInvalidCast(\"cast(0e0 as varchar(2))\",\"Value 0.0 (0E0) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(-0e0 as varchar(3))\",\"Value -0.0 (-0E0) cannot be represented as varchar(3)\");\n  assertInvalidCast(\"cast(0e0 / 0e0 as varchar(2))\",\"Value NaN (NaN) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(DOUBLE 'Infinity' as varchar(7))\",\"Value Infinity (Infinity) cannot be represented as varchar(7)\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 180,
        "startColumnNumber" : 8,
        "endLineNumber" : 180,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertFunction(\"cast(37.7E0 as varchar)\",VARCHAR,\"3.77E1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.common.type.VarcharType"
  }, {
    "nodeContext" : "VARCHAR",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 181,
      "startColumnNumber" : 50,
      "endLineNumber" : 181,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertFunction(\"cast(17.1E0 as varchar)\",VARCHAR,\"1.71E1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertFunction(\"cast(17.1E0 as varchar)\",VARCHAR,\"1.71E1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 179,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertFunction(\"cast(37.7E0 as varchar)\",VARCHAR,\"3.77E1\");\n  assertFunction(\"cast(17.1E0 as varchar)\",VARCHAR,\"1.71E1\");\n  assertFunction(\"cast(12e2 as varchar(6))\",createVarcharType(6),\"1.2E3\");\n  assertFunction(\"cast(12e2 as varchar(50))\",createVarcharType(50),\"1.2E3\");\n  assertFunction(\"cast(12345678.9e0 as varchar(50))\",createVarcharType(50),\"1.23456789E7\");\n  assertFunction(\"cast(DOUBLE 'NaN' as varchar(3))\",createVarcharType(3),\"NaN\");\n  assertFunction(\"cast(DOUBLE 'Infinity' as varchar(50))\",createVarcharType(50),\"Infinity\");\n  assertFunction(\"cast(12e2 as varchar(5))\",createVarcharType(5),\"1.2E3\");\n  assertInvalidCast(\"cast(12e2 as varchar(4))\",\"Value 1200.0 (1.2E3) cannot be represented as varchar(4)\");\n  assertInvalidCast(\"cast(0e0 as varchar(2))\",\"Value 0.0 (0E0) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(-0e0 as varchar(3))\",\"Value -0.0 (-0E0) cannot be represented as varchar(3)\");\n  assertInvalidCast(\"cast(0e0 / 0e0 as varchar(2))\",\"Value NaN (NaN) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(DOUBLE 'Infinity' as varchar(7))\",\"Value Infinity (Infinity) cannot be represented as varchar(7)\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 193,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCastToVarchar(){\n  assertFunction(\"cast(37.7E0 as varchar)\",VARCHAR,\"3.77E1\");\n  assertFunction(\"cast(17.1E0 as varchar)\",VARCHAR,\"1.71E1\");\n  assertFunction(\"cast(12e2 as varchar(6))\",createVarcharType(6),\"1.2E3\");\n  assertFunction(\"cast(12e2 as varchar(50))\",createVarcharType(50),\"1.2E3\");\n  assertFunction(\"cast(12345678.9e0 as varchar(50))\",createVarcharType(50),\"1.23456789E7\");\n  assertFunction(\"cast(DOUBLE 'NaN' as varchar(3))\",createVarcharType(3),\"NaN\");\n  assertFunction(\"cast(DOUBLE 'Infinity' as varchar(50))\",createVarcharType(50),\"Infinity\");\n  assertFunction(\"cast(12e2 as varchar(5))\",createVarcharType(5),\"1.2E3\");\n  assertInvalidCast(\"cast(12e2 as varchar(4))\",\"Value 1200.0 (1.2E3) cannot be represented as varchar(4)\");\n  assertInvalidCast(\"cast(0e0 as varchar(2))\",\"Value 0.0 (0E0) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(-0e0 as varchar(3))\",\"Value -0.0 (-0E0) cannot be represented as varchar(3)\");\n  assertInvalidCast(\"cast(0e0 / 0e0 as varchar(2))\",\"Value NaN (NaN) cannot be represented as varchar(2)\");\n  assertInvalidCast(\"cast(DOUBLE 'Infinity' as varchar(7))\",\"Value Infinity (Infinity) cannot be represented as varchar(7)\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertFunction(\"cast(17.1E0 as varchar)\",VARCHAR,\"1.71E1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.common.type.VarcharType"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 180,
    "startColumnNumber" : 50,
    "endLineNumber" : 180,
    "endColumnNumber" : 57
  }, {
    "charLength" : 7,
    "startLineNumber" : 181,
    "startColumnNumber" : 50,
    "endLineNumber" : 181,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}