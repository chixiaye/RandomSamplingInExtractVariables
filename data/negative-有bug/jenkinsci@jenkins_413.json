{
  "id" : 413,
  "expression" : "Level",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/util/DoubleLaunchChecker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Level",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 27,
      "endLineNumber" : 106,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 106,
        "startColumnNumber" : 27,
        "endLineNumber" : 106,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Level.SEVERE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 76
      },
      "nodeContext" : "LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 77
      },
      "nodeContext" : "LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 105,
        "startColumnNumber" : 36,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (IOException e) {\n  LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  collidingId=FileUtils.readFileToString(timestampFile,Charset.defaultCharset());\n}\n catch (IOException e) {\n  LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 102,
        "startColumnNumber" : 68,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    collidingId=FileUtils.readFileToString(timestampFile,Charset.defaultCharset());\n  }\n catch (  IOException e) {\n    LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n  }\n  Jenkins.get().servletContext.setAttribute(\"app\",this);\n  LOGGER.severe(\"Collision detected. timestamp=\" + t + \", expected=\"+ lastWriteTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t != 0 && lastWriteTime != 0 && t != lastWriteTime && !ignore) {\n  try {\n    collidingId=FileUtils.readFileToString(timestampFile,Charset.defaultCharset());\n  }\n catch (  IOException e) {\n    LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n  }\n  Jenkins.get().servletContext.setAttribute(\"app\",this);\n  LOGGER.severe(\"Collision detected. timestamp=\" + t + \", expected=\"+ lastWriteTime);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 98,
        "startColumnNumber" : 29,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File timestampFile=new File(home,\".owner\");\n  long t=timestampFile.lastModified();\n  if (t != 0 && lastWriteTime != 0 && t != lastWriteTime && !ignore) {\n    try {\n      collidingId=FileUtils.readFileToString(timestampFile,Charset.defaultCharset());\n    }\n catch (    IOException e) {\n      LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n    }\n    Jenkins.get().servletContext.setAttribute(\"app\",this);\n    LOGGER.severe(\"Collision detected. timestamp=\" + t + \", expected=\"+ lastWriteTime);\n  }\n  try {\n    FileUtils.writeStringToFile(timestampFile,getId(),Charset.defaultCharset());\n    lastWriteTime=timestampFile.lastModified();\n  }\n catch (  IOException e) {\n    lastWriteTime=0;\n  }\n  schedule();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1213,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void execute(){\n  File timestampFile=new File(home,\".owner\");\n  long t=timestampFile.lastModified();\n  if (t != 0 && lastWriteTime != 0 && t != lastWriteTime && !ignore) {\n    try {\n      collidingId=FileUtils.readFileToString(timestampFile,Charset.defaultCharset());\n    }\n catch (    IOException e) {\n      LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n    }\n    Jenkins.get().servletContext.setAttribute(\"app\",this);\n    LOGGER.severe(\"Collision detected. timestamp=\" + t + \", expected=\"+ lastWriteTime);\n  }\n  try {\n    FileUtils.writeStringToFile(timestampFile,getId(),Charset.defaultCharset());\n    lastWriteTime=timestampFile.lastModified();\n  }\n catch (  IOException e) {\n    lastWriteTime=0;\n  }\n  schedule();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 77
      },
      "nodeContext" : "LOGGER.log(Level.SEVERE,\"Failed to read collision file\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.logging.Level"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 27,
    "endLineNumber" : 106,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}