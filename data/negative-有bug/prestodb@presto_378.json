{
  "id" : 378,
  "expression" : "\"    CAST(\\n\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-verifier/src/test/java/com/facebook/presto/verifier/rewrite/TestQueryRewriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"    CAST(\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 286,
      "startColumnNumber" : 24,
      "endLineNumber" : 286,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 294,
        "endColumnNumber" : 61
      },
      "nodeContext" : "\"SELECT\\n\" + \"    CAST(ARRAY[DATE '2020-01-01'] AS ARRAY(timestamp)),\\n\" + \"    CAST(ARRAY[NULL] AS ARRAY(BIGINT)),\\n\"+ \"    CAST(\\n\"+ \"        \\\"map\\\"(\\n\"+ \"            ARRAY[DATE '2020-01-01'],\\n\"+ \"            ARRAY[\\n\"+ \"                CAST(ROW (1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"            ]\\n\"+ \"        ) AS MAP(timestamp, ROW(x INTEGER, y VARCHAR, z timestamp))\\n\"+ \"    ),\\n\"+ \"    CAST(ROW (NULL) AS ROW(BIGINT))\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 281,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertCreateTableAs(queryBundle.getQuery(),\"SELECT\\n\" + \"    CAST(ARRAY[DATE '2020-01-01'] AS ARRAY(timestamp)),\\n\" + \"    CAST(ARRAY[NULL] AS ARRAY(BIGINT)),\\n\"+ \"    CAST(\\n\"+ \"        \\\"map\\\"(\\n\"+ \"            ARRAY[DATE '2020-01-01'],\\n\"+ \"            ARRAY[\\n\"+ \"                CAST(ROW (1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"            ]\\n\"+ \"        ) AS MAP(timestamp, ROW(x INTEGER, y VARCHAR, z timestamp))\\n\"+ \"    ),\\n\"+ \"    CAST(ROW (NULL) AS ROW(BIGINT))\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 281,
        "startColumnNumber" : 8,
        "endLineNumber" : 294,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertCreateTableAs(queryBundle.getQuery(),\"SELECT\\n\" + \"    CAST(ARRAY[DATE '2020-01-01'] AS ARRAY(timestamp)),\\n\" + \"    CAST(ARRAY[NULL] AS ARRAY(BIGINT)),\\n\"+ \"    CAST(\\n\"+ \"        \\\"map\\\"(\\n\"+ \"            ARRAY[DATE '2020-01-01'],\\n\"+ \"            ARRAY[\\n\"+ \"                CAST(ROW (1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"            ]\\n\"+ \"        ) AS MAP(timestamp, ROW(x INTEGER, y VARCHAR, z timestamp))\\n\"+ \"    ),\\n\"+ \"    CAST(ROW (NULL) AS ROW(BIGINT))\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1394,
        "startLineNumber" : 269,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  QueryBundle queryBundle=getQueryRewriter().rewriteQuery(\"SELECT\\n\" + \"    ARRAY[DATE '2020-01-01'],\\n\" + \"    ARRAY[NULL],\\n\"+ \"    MAP(\\n\"+ \"        ARRAY[DATE '2020-01-01'], ARRAY[\\n\"+ \"            CAST(ROW(1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"        ]\\n\"+ \"    ),\\n\"+ \"    ROW(NULL)\",CONTROL);\n  assertCreateTableAs(queryBundle.getQuery(),\"SELECT\\n\" + \"    CAST(ARRAY[DATE '2020-01-01'] AS ARRAY(timestamp)),\\n\" + \"    CAST(ARRAY[NULL] AS ARRAY(BIGINT)),\\n\"+ \"    CAST(\\n\"+ \"        \\\"map\\\"(\\n\"+ \"            ARRAY[DATE '2020-01-01'],\\n\"+ \"            ARRAY[\\n\"+ \"                CAST(ROW (1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"            ]\\n\"+ \"        ) AS MAP(timestamp, ROW(x INTEGER, y VARCHAR, z timestamp))\\n\"+ \"    ),\\n\"+ \"    CAST(ROW (NULL) AS ROW(BIGINT))\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1460,
        "startLineNumber" : 267,
        "startColumnNumber" : 4,
        "endLineNumber" : 295,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRewriteNonStorableStructuredTypes(){\n  QueryBundle queryBundle=getQueryRewriter().rewriteQuery(\"SELECT\\n\" + \"    ARRAY[DATE '2020-01-01'],\\n\" + \"    ARRAY[NULL],\\n\"+ \"    MAP(\\n\"+ \"        ARRAY[DATE '2020-01-01'], ARRAY[\\n\"+ \"            CAST(ROW(1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"        ]\\n\"+ \"    ),\\n\"+ \"    ROW(NULL)\",CONTROL);\n  assertCreateTableAs(queryBundle.getQuery(),\"SELECT\\n\" + \"    CAST(ARRAY[DATE '2020-01-01'] AS ARRAY(timestamp)),\\n\" + \"    CAST(ARRAY[NULL] AS ARRAY(BIGINT)),\\n\"+ \"    CAST(\\n\"+ \"        \\\"map\\\"(\\n\"+ \"            ARRAY[DATE '2020-01-01'],\\n\"+ \"            ARRAY[\\n\"+ \"                CAST(ROW (1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"            ]\\n\"+ \"        ) AS MAP(timestamp, ROW(x INTEGER, y VARCHAR, z timestamp))\\n\"+ \"    ),\\n\"+ \"    CAST(ROW (NULL) AS ROW(BIGINT))\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 294,
        "endColumnNumber" : 61
      },
      "nodeContext" : "\"SELECT\\n\" + \"    CAST(ARRAY[DATE '2020-01-01'] AS ARRAY(timestamp)),\\n\" + \"    CAST(ARRAY[NULL] AS ARRAY(BIGINT)),\\n\"+ \"    CAST(\\n\"+ \"        \\\"map\\\"(\\n\"+ \"            ARRAY[DATE '2020-01-01'],\\n\"+ \"            ARRAY[\\n\"+ \"                CAST(ROW (1, 'a', DATE '2020-01-01') AS ROW(x int, y VARCHAR, z date))\\n\"+ \"            ]\\n\"+ \"        ) AS MAP(timestamp, ROW(x INTEGER, y VARCHAR, z timestamp))\\n\"+ \"    ),\\n\"+ \"    CAST(ROW (NULL) AS ROW(BIGINT))\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 286,
    "startColumnNumber" : 24,
    "endLineNumber" : 286,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}