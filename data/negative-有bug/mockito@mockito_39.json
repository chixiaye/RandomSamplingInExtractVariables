{
  "id" : 39,
  "expression" : "print(new int[]{1,2})",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/matchers/text/ValuePrinterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "print(new int[]{1,2})",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 26,
      "startColumnNumber" : 19,
      "endLineNumber" : 26,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertThat(print(new int[]{1,2}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(print(new int[]{1,2})).isEqualTo(\"[1, 2]\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(print(new int[]{1,2})).isEqualTo(\"[1, 2]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 18,
        "startColumnNumber" : 32,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(print(null)).isEqualTo(\"null\");\n  assertThat(print(\"str\")).isEqualTo(\"\\\"str\\\"\");\n  assertThat(print(\"x\\ny\")).isEqualTo(\"\\\"x\\ny\\\"\");\n  assertThat(print(3)).isEqualTo(\"3\");\n  assertThat(print(3L)).isEqualTo(\"3L\");\n  assertThat(print(3.14d)).isEqualTo(\"3.14d\");\n  assertThat(print(3.14f)).isEqualTo(\"3.14f\");\n  assertThat(print(new int[]{1,2})).isEqualTo(\"[1, 2]\");\n  assertThat(print(new LinkedHashMap<String,Object>(){\n{\n      put(\"foo\",2L);\n    }\n  }\n)).isEqualTo(\"{\\\"foo\\\" = 2L}\");\n  assertThat(print(new LinkedHashMap<String,Object>(){\n{\n      put(\"int passed as hex\",0x01);\n      put(\"byte\",(byte)0x01);\n      put(\"short\",(short)2);\n      put(\"int\",3);\n      put(\"long\",4L);\n      put(\"float\",2.71f);\n      put(\"double\",3.14d);\n    }\n  }\n)).isEqualTo(\"{\\\"int passed as hex\\\" = 1, \\\"byte\\\" = (byte) 0x01, \\\"short\\\" = (short) 2, \\\"int\\\" = 3, \\\"long\\\" = 4L, \\\"float\\\" = 2.71f, \\\"double\\\" = 3.14d}\");\n  assertTrue(print(new UnsafeToString()).contains(\"UnsafeToString\"));\n  assertThat(print(new ToString())).isEqualTo(\"ToString\");\n  assertThat(print(new FormattedText(\"formatted\"))).isEqualTo(\"formatted\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void prints_values(){\n  assertThat(print(null)).isEqualTo(\"null\");\n  assertThat(print(\"str\")).isEqualTo(\"\\\"str\\\"\");\n  assertThat(print(\"x\\ny\")).isEqualTo(\"\\\"x\\ny\\\"\");\n  assertThat(print(3)).isEqualTo(\"3\");\n  assertThat(print(3L)).isEqualTo(\"3L\");\n  assertThat(print(3.14d)).isEqualTo(\"3.14d\");\n  assertThat(print(3.14f)).isEqualTo(\"3.14f\");\n  assertThat(print(new int[]{1,2})).isEqualTo(\"[1, 2]\");\n  assertThat(print(new LinkedHashMap<String,Object>(){\n{\n      put(\"foo\",2L);\n    }\n  }\n)).isEqualTo(\"{\\\"foo\\\" = 2L}\");\n  assertThat(print(new LinkedHashMap<String,Object>(){\n{\n      put(\"int passed as hex\",0x01);\n      put(\"byte\",(byte)0x01);\n      put(\"short\",(short)2);\n      put(\"int\",3);\n      put(\"long\",4L);\n      put(\"float\",2.71f);\n      put(\"double\",3.14d);\n    }\n  }\n)).isEqualTo(\"{\\\"int passed as hex\\\" = 1, \\\"byte\\\" = (byte) 0x01, \\\"short\\\" = (short) 2, \\\"int\\\" = 3, \\\"long\\\" = 4L, \\\"float\\\" = 2.71f, \\\"double\\\" = 3.14d}\");\n  assertTrue(print(new UnsafeToString()).contains(\"UnsafeToString\"));\n  assertThat(print(new ToString())).isEqualTo(\"ToString\");\n  assertThat(print(new FormattedText(\"formatted\"))).isEqualTo(\"formatted\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(print(new int[]{1,2})).isEqualTo(\"[1, 2]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 26,
    "startColumnNumber" : 19,
    "endLineNumber" : 26,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}