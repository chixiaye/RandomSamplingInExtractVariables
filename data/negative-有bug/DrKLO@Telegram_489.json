{
  "id" : 489,
  "expression" : "\"ChoosePhoto\"",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ChoosePhoto\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 427,
      "startColumnNumber" : 69,
      "endLineNumber" : 427,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 427,
        "startColumnNumber" : 42,
        "endLineNumber" : 427,
        "endColumnNumber" : 105
      },
      "nodeContext" : "LocaleController.getString(\"ChoosePhoto\",R.string.ChoosePhoto)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 427,
        "startColumnNumber" : 8,
        "endLineNumber" : 427,
        "endColumnNumber" : 106
      },
      "nodeContext" : "avatarImage.setContentDescription(LocaleController.getString(\"ChoosePhoto\",R.string.ChoosePhoto))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 427,
        "startColumnNumber" : 8,
        "endLineNumber" : 427,
        "endColumnNumber" : 107
      },
      "nodeContext" : "avatarImage.setContentDescription(LocaleController.getString(\"ChoosePhoto\",R.string.ChoosePhoto));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 18651,
        "startLineNumber" : 246,
        "startColumnNumber" : 44,
        "endLineNumber" : 600,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (editText != null) {\n    editText.onDestroy();\n  }\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  actionBar.setTitle(LocaleController.getString(\"NewGroup\",R.string.NewGroup));\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n    }\n  }\n);\n  SizeNotifierFrameLayout sizeNotifierFrameLayout=new SizeNotifierFrameLayout(context){\n    private boolean ignoreLayout;\n    @Override protected void onMeasure(    int widthMeasureSpec,    int heightMeasureSpec){\n      int widthSize=MeasureSpec.getSize(widthMeasureSpec);\n      int heightSize=MeasureSpec.getSize(heightMeasureSpec);\n      setMeasuredDimension(widthSize,heightSize);\n      heightSize-=getPaddingTop();\n      measureChildWithMargins(actionBar,widthMeasureSpec,0,heightMeasureSpec,0);\n      int keyboardSize=measureKeyboardHeight();\n      if (keyboardSize > AndroidUtilities.dp(20)) {\n        ignoreLayout=true;\n        editText.hideEmojiView();\n        ignoreLayout=false;\n      }\n      int childCount=getChildCount();\n      for (int i=0; i < childCount; i++) {\n        View child=getChildAt(i);\n        if (child == null || child.getVisibility() == GONE || child == actionBar) {\n          continue;\n        }\n        if (editText != null && editText.isPopupView(child)) {\n          if (AndroidUtilities.isInMultiwindow || AndroidUtilities.isTablet()) {\n            if (AndroidUtilities.isTablet()) {\n              child.measure(MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(Math.min(AndroidUtilities.dp(AndroidUtilities.isTablet() ? 200 : 320),heightSize - AndroidUtilities.statusBarHeight + getPaddingTop()),MeasureSpec.EXACTLY));\n            }\n else {\n              child.measure(MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(heightSize - AndroidUtilities.statusBarHeight + getPaddingTop(),MeasureSpec.EXACTLY));\n            }\n          }\n else {\n            child.measure(MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(child.getLayoutParams().height,MeasureSpec.EXACTLY));\n          }\n        }\n else {\n          measureChildWithMargins(child,widthMeasureSpec,0,heightMeasureSpec,0);\n        }\n      }\n    }\n    @Override protected void onLayout(    boolean changed,    int l,    int t,    int r,    int b){\n      final int count=getChildCount();\n      int keyboardSize=measureKeyboardHeight();\n      int paddingBottom=keyboardSize <= AndroidUtilities.dp(20) && !AndroidUtilities.isInMultiwindow && !AndroidUtilities.isTablet() ? editText.getEmojiPadding() : 0;\n      setBottomClip(paddingBottom);\n      for (int i=0; i < count; i++) {\n        final View child=getChildAt(i);\n        if (child.getVisibility() == GONE) {\n          continue;\n        }\n        final LayoutParams lp=(LayoutParams)child.getLayoutParams();\n        final int width=child.getMeasuredWidth();\n        final int height=child.getMeasuredHeight();\n        int childLeft;\n        int childTop;\n        int gravity=lp.gravity;\n        if (gravity == -1) {\n          gravity=Gravity.TOP | Gravity.LEFT;\n        }\n        final int absoluteGravity=gravity & Gravity.HORIZONTAL_GRAVITY_MASK;\n        final int verticalGravity=gravity & Gravity.VERTICAL_GRAVITY_MASK;\nswitch (absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:          childLeft=(r - l - width) / 2 + lp.leftMargin - lp.rightMargin;\n        break;\ncase Gravity.RIGHT:      childLeft=r - width - lp.rightMargin;\n    break;\ncase Gravity.LEFT:default:  childLeft=lp.leftMargin;\n}\nswitch (verticalGravity) {\ncase Gravity.TOP:childTop=lp.topMargin + getPaddingTop();\nbreak;\ncase Gravity.CENTER_VERTICAL:childTop=((b - paddingBottom) - t - height) / 2 + lp.topMargin - lp.bottomMargin;\nbreak;\ncase Gravity.BOTTOM:childTop=((b - paddingBottom) - t) - height - lp.bottomMargin;\nbreak;\ndefault:childTop=lp.topMargin;\n}\nif (editText != null && editText.isPopupView(child)) {\nif (AndroidUtilities.isTablet()) {\nchildTop=getMeasuredHeight() - child.getMeasuredHeight();\n}\n else {\nchildTop=getMeasuredHeight() + keyboardSize - child.getMeasuredHeight();\n}\n}\nchild.layout(childLeft,childTop,childLeft + width,childTop + height);\n}\nnotifyHeightChanged();\n}\n@Override public void requestLayout(){\nif (ignoreLayout) {\nreturn;\n}\nsuper.requestLayout();\n}\n}\n;\nfragmentView=sizeNotifierFrameLayout;\nfragmentView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT));\nfragmentView.setOnTouchListener((v,event) -> true);\nshadowDrawable=context.getResources().getDrawable(R.drawable.greydivider_top).mutate();\nLinearLayout linearLayout=new LinearLayout(context){\n@Override protected boolean drawChild(Canvas canvas,View child,long drawingTime){\nboolean result=super.drawChild(canvas,child,drawingTime);\nif (child == listView && shadowDrawable != null) {\nint y=editTextContainer.getMeasuredHeight();\nshadowDrawable.setBounds(0,y,getMeasuredWidth(),y + shadowDrawable.getIntrinsicHeight());\nshadowDrawable.draw(canvas);\n}\nreturn result;\n}\n}\n;\nlinearLayout.setOrientation(LinearLayout.VERTICAL);\nsizeNotifierFrameLayout.addView(linearLayout,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\neditTextContainer=new FrameLayout(context);\nlinearLayout.addView(editTextContainer,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT));\navatarImage=new BackupImageView(context){\n@Override public void invalidate(){\nif (avatarOverlay != null) {\navatarOverlay.invalidate();\n}\nsuper.invalidate();\n}\n@Override public void invalidate(int l,int t,int r,int b){\nif (avatarOverlay != null) {\navatarOverlay.invalidate();\n}\nsuper.invalidate(l,t,r,b);\n}\n}\n;\navatarImage.setRoundRadius(AndroidUtilities.dp(32));\navatarDrawable.setInfo(5,null,null);\navatarImage.setImageDrawable(avatarDrawable);\navatarImage.setContentDescription(LocaleController.getString(\"ChoosePhoto\",R.string.ChoosePhoto));\neditTextContainer.addView(avatarImage,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\nPaint paint=new Paint(Paint.ANTI_ALIAS_FLAG);\npaint.setColor(0x55000000);\navatarOverlay=new View(context){\n@Override protected void onDraw(Canvas canvas){\nif (avatarImage != null && avatarProgressView.getVisibility() == VISIBLE) {\npaint.setAlpha((int)(0x55 * avatarImage.getImageReceiver().getCurrentAlpha() * avatarProgressView.getAlpha()));\ncanvas.drawCircle(getMeasuredWidth() / 2.0f,getMeasuredHeight() / 2.0f,getMeasuredWidth() / 2.0f,paint);\n}\n}\n}\n;\neditTextContainer.addView(avatarOverlay,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\navatarOverlay.setOnClickListener(view -> imageUpdater.openMenu(avatar != null,() -> {\navatar=null;\navatarBig=null;\ninputPhoto=null;\ninputVideo=null;\ninputVideoPath=null;\nvideoTimestamp=0;\nshowAvatarProgress(false,true);\navatarImage.setImage(null,null,avatarDrawable,null);\navatarEditor.setImageResource(R.drawable.actions_setphoto);\n}\n));\navatarEditor=new ImageView(context){\n@Override public void invalidate(int l,int t,int r,int b){\nsuper.invalidate(l,t,r,b);\navatarOverlay.invalidate();\n}\n@Override public void invalidate(){\nsuper.invalidate();\navatarOverlay.invalidate();\n}\n}\n;\navatarEditor.setScaleType(ImageView.ScaleType.CENTER);\navatarEditor.setImageResource(R.drawable.actions_setphoto);\navatarEditor.setEnabled(false);\navatarEditor.setClickable(false);\navatarEditor.setPadding(AndroidUtilities.dp(2),0,0,0);\neditTextContainer.addView(avatarEditor,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\navatarProgressView=new RadialProgressView(context){\n@Override public void setAlpha(float alpha){\nsuper.setAlpha(alpha);\navatarOverlay.invalidate();\n}\n}\n;\navatarProgressView.setSize(AndroidUtilities.dp(30));\navatarProgressView.setProgressColor(0xffffffff);\navatarProgressView.setNoProgress(false);\neditTextContainer.addView(avatarProgressView,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\nshowAvatarProgress(false,false);\neditText=new EditTextEmoji(context,sizeNotifierFrameLayout,this,EditTextEmoji.STYLE_FRAGMENT);\neditText.setHint(chatType == ChatObject.CHAT_TYPE_CHAT || chatType == ChatObject.CHAT_TYPE_MEGAGROUP ? LocaleController.getString(\"EnterGroupNamePlaceholder\",R.string.EnterGroupNamePlaceholder) : LocaleController.getString(\"EnterListName\",R.string.EnterListName));\nif (nameToSet != null) {\neditText.setText(nameToSet);\nnameToSet=null;\n}\nInputFilter[] inputFilters=new InputFilter[1];\ninputFilters[0]=new InputFilter.LengthFilter(100);\neditText.setFilters(inputFilters);\neditTextContainer.addView(editText,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_VERTICAL,LocaleController.isRTL ? 5 : 96,0,LocaleController.isRTL ? 96 : 5,0));\nLinearLayoutManager linearLayoutManager=new LinearLayoutManager(context,LinearLayoutManager.VERTICAL,false);\nlistView=new RecyclerListView(context);\nlistView.setAdapter(adapter=new GroupCreateAdapter(context));\nlistView.setLayoutManager(linearLayoutManager);\nlistView.setVerticalScrollBarEnabled(false);\nlistView.setVerticalScrollbarPosition(LocaleController.isRTL ? View.SCROLLBAR_POSITION_LEFT : View.SCROLLBAR_POSITION_RIGHT);\nGroupCreateDividerItemDecoration decoration=new GroupCreateDividerItemDecoration();\ndecoration.setSkipRows(currentGroupCreateAddress != null ? 5 : 2);\nlistView.addItemDecoration(decoration);\nlinearLayout.addView(listView,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\nlistView.setOnScrollListener(new RecyclerView.OnScrollListener(){\n@Override public void onScrollStateChanged(RecyclerView recyclerView,int newState){\nif (newState == RecyclerView.SCROLL_STATE_DRAGGING) {\nAndroidUtilities.hideKeyboard(editText);\n}\n}\n}\n);\nlistView.setOnItemClickListener((view,position) -> {\nif (view instanceof TextSettingsCell) {\nif (!AndroidUtilities.isGoogleMapsInstalled(GroupCreateFinalActivity.this)) {\nreturn;\n}\nLocationActivity fragment=new LocationActivity(LocationActivity.LOCATION_TYPE_GROUP);\nfragment.setDialogId(0);\nfragment.setDelegate((location,live,notify,scheduleDate) -> {\ncurrentGroupCreateLocation.setLatitude(location.geo.lat);\ncurrentGroupCreateLocation.setLongitude(location.geo._long);\ncurrentGroupCreateAddress=location.address;\n}\n);\npresentFragment(fragment);\n}\n}\n);\nfloatingButtonContainer=new FrameLayout(context);\nDrawable drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(56),Theme.getColor(Theme.key_chats_actionBackground),Theme.getColor(Theme.key_chats_actionPressedBackground));\nif (Build.VERSION.SDK_INT < 21) {\nDrawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow).mutate();\nshadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\nCombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\ncombinedDrawable.setIconSize(AndroidUtilities.dp(56),AndroidUtilities.dp(56));\ndrawable=combinedDrawable;\n}\nfloatingButtonContainer.setBackgroundDrawable(drawable);\nif (Build.VERSION.SDK_INT >= 21) {\nStateListAnimator animator=new StateListAnimator();\nanimator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(floatingButtonIcon,\"translationZ\",AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\nanimator.addState(new int[]{},ObjectAnimator.ofFloat(floatingButtonIcon,\"translationZ\",AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\nfloatingButtonContainer.setStateListAnimator(animator);\nfloatingButtonContainer.setOutlineProvider(new ViewOutlineProvider(){\n@SuppressLint(\"NewApi\") @Override public void getOutline(View view,Outline outline){\noutline.setOval(0,0,AndroidUtilities.dp(56),AndroidUtilities.dp(56));\n}\n}\n);\n}\nVerticalPositionAutoAnimator.attach(floatingButtonContainer);\nsizeNotifierFrameLayout.addView(floatingButtonContainer,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 56 : 60,Build.VERSION.SDK_INT >= 21 ? 56 : 60,(LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM,LocaleController.isRTL ? 14 : 0,0,LocaleController.isRTL ? 0 : 14,14));\nfloatingButtonContainer.setOnClickListener(view -> {\nif (donePressed) {\nreturn;\n}\nif (editText.length() == 0) {\nVibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\nif (v != null) {\nv.vibrate(200);\n}\nAndroidUtilities.shakeView(editText,2,0);\nreturn;\n}\ndonePressed=true;\nAndroidUtilities.hideKeyboard(editText);\neditText.setEnabled(false);\nif (imageUpdater.isUploadingImage()) {\ncreateAfterUpload=true;\n}\n else {\nshowEditDoneProgress(true);\nreqId=MessagesController.getInstance(currentAccount).createChat(editText.getText().toString(),selectedContacts,null,chatType,currentGroupCreateLocation,currentGroupCreateAddress,GroupCreateFinalActivity.this);\n}\n}\n);\nfloatingButtonIcon=new ImageView(context);\nfloatingButtonIcon.setScaleType(ImageView.ScaleType.CENTER);\nfloatingButtonIcon.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chats_actionIcon),PorterDuff.Mode.MULTIPLY));\nfloatingButtonIcon.setImageResource(R.drawable.checkbig);\nfloatingButtonIcon.setPadding(0,AndroidUtilities.dp(2),0,0);\nfloatingButtonContainer.setContentDescription(LocaleController.getString(\"Done\",R.string.Done));\nfloatingButtonContainer.addView(floatingButtonIcon,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 56 : 60,Build.VERSION.SDK_INT >= 21 ? 56 : 60));\nprogressView=new ContextProgressView(context,1);\nprogressView.setAlpha(0.0f);\nprogressView.setScaleX(0.1f);\nprogressView.setScaleY(0.1f);\nprogressView.setVisibility(View.INVISIBLE);\nfloatingButtonContainer.addView(progressView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\nreturn fragmentView;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2226,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 18705,
        "startLineNumber" : 245,
        "startColumnNumber" : 4,
        "endLineNumber" : 600,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public View createView(Context context){\n  if (editText != null) {\n    editText.onDestroy();\n  }\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  actionBar.setTitle(LocaleController.getString(\"NewGroup\",R.string.NewGroup));\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n    }\n  }\n);\n  SizeNotifierFrameLayout sizeNotifierFrameLayout=new SizeNotifierFrameLayout(context){\n    private boolean ignoreLayout;\n    @Override protected void onMeasure(    int widthMeasureSpec,    int heightMeasureSpec){\n      int widthSize=MeasureSpec.getSize(widthMeasureSpec);\n      int heightSize=MeasureSpec.getSize(heightMeasureSpec);\n      setMeasuredDimension(widthSize,heightSize);\n      heightSize-=getPaddingTop();\n      measureChildWithMargins(actionBar,widthMeasureSpec,0,heightMeasureSpec,0);\n      int keyboardSize=measureKeyboardHeight();\n      if (keyboardSize > AndroidUtilities.dp(20)) {\n        ignoreLayout=true;\n        editText.hideEmojiView();\n        ignoreLayout=false;\n      }\n      int childCount=getChildCount();\n      for (int i=0; i < childCount; i++) {\n        View child=getChildAt(i);\n        if (child == null || child.getVisibility() == GONE || child == actionBar) {\n          continue;\n        }\n        if (editText != null && editText.isPopupView(child)) {\n          if (AndroidUtilities.isInMultiwindow || AndroidUtilities.isTablet()) {\n            if (AndroidUtilities.isTablet()) {\n              child.measure(MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(Math.min(AndroidUtilities.dp(AndroidUtilities.isTablet() ? 200 : 320),heightSize - AndroidUtilities.statusBarHeight + getPaddingTop()),MeasureSpec.EXACTLY));\n            }\n else {\n              child.measure(MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(heightSize - AndroidUtilities.statusBarHeight + getPaddingTop(),MeasureSpec.EXACTLY));\n            }\n          }\n else {\n            child.measure(MeasureSpec.makeMeasureSpec(widthSize,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(child.getLayoutParams().height,MeasureSpec.EXACTLY));\n          }\n        }\n else {\n          measureChildWithMargins(child,widthMeasureSpec,0,heightMeasureSpec,0);\n        }\n      }\n    }\n    @Override protected void onLayout(    boolean changed,    int l,    int t,    int r,    int b){\n      final int count=getChildCount();\n      int keyboardSize=measureKeyboardHeight();\n      int paddingBottom=keyboardSize <= AndroidUtilities.dp(20) && !AndroidUtilities.isInMultiwindow && !AndroidUtilities.isTablet() ? editText.getEmojiPadding() : 0;\n      setBottomClip(paddingBottom);\n      for (int i=0; i < count; i++) {\n        final View child=getChildAt(i);\n        if (child.getVisibility() == GONE) {\n          continue;\n        }\n        final LayoutParams lp=(LayoutParams)child.getLayoutParams();\n        final int width=child.getMeasuredWidth();\n        final int height=child.getMeasuredHeight();\n        int childLeft;\n        int childTop;\n        int gravity=lp.gravity;\n        if (gravity == -1) {\n          gravity=Gravity.TOP | Gravity.LEFT;\n        }\n        final int absoluteGravity=gravity & Gravity.HORIZONTAL_GRAVITY_MASK;\n        final int verticalGravity=gravity & Gravity.VERTICAL_GRAVITY_MASK;\nswitch (absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\ncase Gravity.CENTER_HORIZONTAL:          childLeft=(r - l - width) / 2 + lp.leftMargin - lp.rightMargin;\n        break;\ncase Gravity.RIGHT:      childLeft=r - width - lp.rightMargin;\n    break;\ncase Gravity.LEFT:default:  childLeft=lp.leftMargin;\n}\nswitch (verticalGravity) {\ncase Gravity.TOP:childTop=lp.topMargin + getPaddingTop();\nbreak;\ncase Gravity.CENTER_VERTICAL:childTop=((b - paddingBottom) - t - height) / 2 + lp.topMargin - lp.bottomMargin;\nbreak;\ncase Gravity.BOTTOM:childTop=((b - paddingBottom) - t) - height - lp.bottomMargin;\nbreak;\ndefault:childTop=lp.topMargin;\n}\nif (editText != null && editText.isPopupView(child)) {\nif (AndroidUtilities.isTablet()) {\nchildTop=getMeasuredHeight() - child.getMeasuredHeight();\n}\n else {\nchildTop=getMeasuredHeight() + keyboardSize - child.getMeasuredHeight();\n}\n}\nchild.layout(childLeft,childTop,childLeft + width,childTop + height);\n}\nnotifyHeightChanged();\n}\n@Override public void requestLayout(){\nif (ignoreLayout) {\nreturn;\n}\nsuper.requestLayout();\n}\n}\n;\nfragmentView=sizeNotifierFrameLayout;\nfragmentView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT));\nfragmentView.setOnTouchListener((v,event) -> true);\nshadowDrawable=context.getResources().getDrawable(R.drawable.greydivider_top).mutate();\nLinearLayout linearLayout=new LinearLayout(context){\n@Override protected boolean drawChild(Canvas canvas,View child,long drawingTime){\nboolean result=super.drawChild(canvas,child,drawingTime);\nif (child == listView && shadowDrawable != null) {\nint y=editTextContainer.getMeasuredHeight();\nshadowDrawable.setBounds(0,y,getMeasuredWidth(),y + shadowDrawable.getIntrinsicHeight());\nshadowDrawable.draw(canvas);\n}\nreturn result;\n}\n}\n;\nlinearLayout.setOrientation(LinearLayout.VERTICAL);\nsizeNotifierFrameLayout.addView(linearLayout,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\neditTextContainer=new FrameLayout(context);\nlinearLayout.addView(editTextContainer,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT));\navatarImage=new BackupImageView(context){\n@Override public void invalidate(){\nif (avatarOverlay != null) {\navatarOverlay.invalidate();\n}\nsuper.invalidate();\n}\n@Override public void invalidate(int l,int t,int r,int b){\nif (avatarOverlay != null) {\navatarOverlay.invalidate();\n}\nsuper.invalidate(l,t,r,b);\n}\n}\n;\navatarImage.setRoundRadius(AndroidUtilities.dp(32));\navatarDrawable.setInfo(5,null,null);\navatarImage.setImageDrawable(avatarDrawable);\navatarImage.setContentDescription(LocaleController.getString(\"ChoosePhoto\",R.string.ChoosePhoto));\neditTextContainer.addView(avatarImage,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\nPaint paint=new Paint(Paint.ANTI_ALIAS_FLAG);\npaint.setColor(0x55000000);\navatarOverlay=new View(context){\n@Override protected void onDraw(Canvas canvas){\nif (avatarImage != null && avatarProgressView.getVisibility() == VISIBLE) {\npaint.setAlpha((int)(0x55 * avatarImage.getImageReceiver().getCurrentAlpha() * avatarProgressView.getAlpha()));\ncanvas.drawCircle(getMeasuredWidth() / 2.0f,getMeasuredHeight() / 2.0f,getMeasuredWidth() / 2.0f,paint);\n}\n}\n}\n;\neditTextContainer.addView(avatarOverlay,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\navatarOverlay.setOnClickListener(view -> imageUpdater.openMenu(avatar != null,() -> {\navatar=null;\navatarBig=null;\ninputPhoto=null;\ninputVideo=null;\ninputVideoPath=null;\nvideoTimestamp=0;\nshowAvatarProgress(false,true);\navatarImage.setImage(null,null,avatarDrawable,null);\navatarEditor.setImageResource(R.drawable.actions_setphoto);\n}\n));\navatarEditor=new ImageView(context){\n@Override public void invalidate(int l,int t,int r,int b){\nsuper.invalidate(l,t,r,b);\navatarOverlay.invalidate();\n}\n@Override public void invalidate(){\nsuper.invalidate();\navatarOverlay.invalidate();\n}\n}\n;\navatarEditor.setScaleType(ImageView.ScaleType.CENTER);\navatarEditor.setImageResource(R.drawable.actions_setphoto);\navatarEditor.setEnabled(false);\navatarEditor.setClickable(false);\navatarEditor.setPadding(AndroidUtilities.dp(2),0,0,0);\neditTextContainer.addView(avatarEditor,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\navatarProgressView=new RadialProgressView(context){\n@Override public void setAlpha(float alpha){\nsuper.setAlpha(alpha);\navatarOverlay.invalidate();\n}\n}\n;\navatarProgressView.setSize(AndroidUtilities.dp(30));\navatarProgressView.setProgressColor(0xffffffff);\navatarProgressView.setNoProgress(false);\neditTextContainer.addView(avatarProgressView,LayoutHelper.createFrame(64,64,Gravity.TOP | (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT),LocaleController.isRTL ? 0 : 16,16,LocaleController.isRTL ? 16 : 0,16));\nshowAvatarProgress(false,false);\neditText=new EditTextEmoji(context,sizeNotifierFrameLayout,this,EditTextEmoji.STYLE_FRAGMENT);\neditText.setHint(chatType == ChatObject.CHAT_TYPE_CHAT || chatType == ChatObject.CHAT_TYPE_MEGAGROUP ? LocaleController.getString(\"EnterGroupNamePlaceholder\",R.string.EnterGroupNamePlaceholder) : LocaleController.getString(\"EnterListName\",R.string.EnterListName));\nif (nameToSet != null) {\neditText.setText(nameToSet);\nnameToSet=null;\n}\nInputFilter[] inputFilters=new InputFilter[1];\ninputFilters[0]=new InputFilter.LengthFilter(100);\neditText.setFilters(inputFilters);\neditTextContainer.addView(editText,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.CENTER_VERTICAL,LocaleController.isRTL ? 5 : 96,0,LocaleController.isRTL ? 96 : 5,0));\nLinearLayoutManager linearLayoutManager=new LinearLayoutManager(context,LinearLayoutManager.VERTICAL,false);\nlistView=new RecyclerListView(context);\nlistView.setAdapter(adapter=new GroupCreateAdapter(context));\nlistView.setLayoutManager(linearLayoutManager);\nlistView.setVerticalScrollBarEnabled(false);\nlistView.setVerticalScrollbarPosition(LocaleController.isRTL ? View.SCROLLBAR_POSITION_LEFT : View.SCROLLBAR_POSITION_RIGHT);\nGroupCreateDividerItemDecoration decoration=new GroupCreateDividerItemDecoration();\ndecoration.setSkipRows(currentGroupCreateAddress != null ? 5 : 2);\nlistView.addItemDecoration(decoration);\nlinearLayout.addView(listView,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\nlistView.setOnScrollListener(new RecyclerView.OnScrollListener(){\n@Override public void onScrollStateChanged(RecyclerView recyclerView,int newState){\nif (newState == RecyclerView.SCROLL_STATE_DRAGGING) {\nAndroidUtilities.hideKeyboard(editText);\n}\n}\n}\n);\nlistView.setOnItemClickListener((view,position) -> {\nif (view instanceof TextSettingsCell) {\nif (!AndroidUtilities.isGoogleMapsInstalled(GroupCreateFinalActivity.this)) {\nreturn;\n}\nLocationActivity fragment=new LocationActivity(LocationActivity.LOCATION_TYPE_GROUP);\nfragment.setDialogId(0);\nfragment.setDelegate((location,live,notify,scheduleDate) -> {\ncurrentGroupCreateLocation.setLatitude(location.geo.lat);\ncurrentGroupCreateLocation.setLongitude(location.geo._long);\ncurrentGroupCreateAddress=location.address;\n}\n);\npresentFragment(fragment);\n}\n}\n);\nfloatingButtonContainer=new FrameLayout(context);\nDrawable drawable=Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(56),Theme.getColor(Theme.key_chats_actionBackground),Theme.getColor(Theme.key_chats_actionPressedBackground));\nif (Build.VERSION.SDK_INT < 21) {\nDrawable shadowDrawable=context.getResources().getDrawable(R.drawable.floating_shadow).mutate();\nshadowDrawable.setColorFilter(new PorterDuffColorFilter(0xff000000,PorterDuff.Mode.MULTIPLY));\nCombinedDrawable combinedDrawable=new CombinedDrawable(shadowDrawable,drawable,0,0);\ncombinedDrawable.setIconSize(AndroidUtilities.dp(56),AndroidUtilities.dp(56));\ndrawable=combinedDrawable;\n}\nfloatingButtonContainer.setBackgroundDrawable(drawable);\nif (Build.VERSION.SDK_INT >= 21) {\nStateListAnimator animator=new StateListAnimator();\nanimator.addState(new int[]{android.R.attr.state_pressed},ObjectAnimator.ofFloat(floatingButtonIcon,\"translationZ\",AndroidUtilities.dp(2),AndroidUtilities.dp(4)).setDuration(200));\nanimator.addState(new int[]{},ObjectAnimator.ofFloat(floatingButtonIcon,\"translationZ\",AndroidUtilities.dp(4),AndroidUtilities.dp(2)).setDuration(200));\nfloatingButtonContainer.setStateListAnimator(animator);\nfloatingButtonContainer.setOutlineProvider(new ViewOutlineProvider(){\n@SuppressLint(\"NewApi\") @Override public void getOutline(View view,Outline outline){\noutline.setOval(0,0,AndroidUtilities.dp(56),AndroidUtilities.dp(56));\n}\n}\n);\n}\nVerticalPositionAutoAnimator.attach(floatingButtonContainer);\nsizeNotifierFrameLayout.addView(floatingButtonContainer,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 56 : 60,Build.VERSION.SDK_INT >= 21 ? 56 : 60,(LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM,LocaleController.isRTL ? 14 : 0,0,LocaleController.isRTL ? 0 : 14,14));\nfloatingButtonContainer.setOnClickListener(view -> {\nif (donePressed) {\nreturn;\n}\nif (editText.length() == 0) {\nVibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\nif (v != null) {\nv.vibrate(200);\n}\nAndroidUtilities.shakeView(editText,2,0);\nreturn;\n}\ndonePressed=true;\nAndroidUtilities.hideKeyboard(editText);\neditText.setEnabled(false);\nif (imageUpdater.isUploadingImage()) {\ncreateAfterUpload=true;\n}\n else {\nshowEditDoneProgress(true);\nreqId=MessagesController.getInstance(currentAccount).createChat(editText.getText().toString(),selectedContacts,null,chatType,currentGroupCreateLocation,currentGroupCreateAddress,GroupCreateFinalActivity.this);\n}\n}\n);\nfloatingButtonIcon=new ImageView(context);\nfloatingButtonIcon.setScaleType(ImageView.ScaleType.CENTER);\nfloatingButtonIcon.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_chats_actionIcon),PorterDuff.Mode.MULTIPLY));\nfloatingButtonIcon.setImageResource(R.drawable.checkbig);\nfloatingButtonIcon.setPadding(0,AndroidUtilities.dp(2),0,0);\nfloatingButtonContainer.setContentDescription(LocaleController.getString(\"Done\",R.string.Done));\nfloatingButtonContainer.addView(floatingButtonIcon,LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 56 : 60,Build.VERSION.SDK_INT >= 21 ? 56 : 60));\nprogressView=new ContextProgressView(context,1);\nprogressView.setAlpha(0.0f);\nprogressView.setScaleX(0.1f);\nprogressView.setScaleY(0.1f);\nprogressView.setVisibility(View.INVISIBLE);\nfloatingButtonContainer.addView(progressView,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\nreturn fragmentView;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2237,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 427,
        "startColumnNumber" : 8,
        "endLineNumber" : 427,
        "endColumnNumber" : 107
      },
      "nodeContext" : "avatarImage.setContentDescription(LocaleController.getString(\"ChoosePhoto\",R.string.ChoosePhoto));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 427,
    "startColumnNumber" : 69,
    "endLineNumber" : 427,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}