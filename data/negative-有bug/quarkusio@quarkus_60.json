{
  "id" : 60,
  "expression" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties)",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/devtools/gradle/gradle-application-plugin/src/main/java/io/quarkus/gradle/tasks/QuarkusGenerateCode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 293,
      "startLineNumber" : 97,
      "startColumnNumber" : 53,
      "endLineNumber" : 102,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 24,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 97,
        "startColumnNumber" : 53,
        "endLineNumber" : 103,
        "endColumnNumber" : 58
      },
      "nodeContext" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 97,
        "startColumnNumber" : 53,
        "endLineNumber" : 104,
        "endColumnNumber" : 48
      },
      "nodeContext" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 97,
        "startColumnNumber" : 53,
        "endLineNumber" : 105,
        "endColumnNumber" : 43
      },
      "nodeContext" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 97,
        "startColumnNumber" : 53,
        "endLineNumber" : 106,
        "endColumnNumber" : 24
      },
      "nodeContext" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 37,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 97,
        "startColumnNumber" : 53,
        "endLineNumber" : 106,
        "endColumnNumber" : 36
      },
      "nodeContext" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true).build().bootstrap()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 97,
        "startColumnNumber" : 32,
        "endLineNumber" : 106,
        "endColumnNumber" : 36
      },
      "nodeContext" : "appCreationContext=QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true).build().bootstrap()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 41,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 97,
        "startColumnNumber" : 13,
        "endLineNumber" : 106,
        "endColumnNumber" : 36
      },
      "nodeContext" : "CuratedApplication appCreationContext=QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true).build().bootstrap()",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 44,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2782,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (CuratedApplication appCreationContext=QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true).build().bootstrap()){\n  final JavaPluginConvention javaConvention=getProject().getConvention().findPlugin(JavaPluginConvention.class);\n  if (javaConvention != null) {\n    final String generateSourcesDir=test ? QUARKUS_TEST_GENERATED_SOURCES : QUARKUS_GENERATED_SOURCES;\n    final SourceSet generatedSources=javaConvention.getSourceSets().findByName(generateSourcesDir);\n    List<Path> paths=new ArrayList<>();\n    generatedSources.getOutput().filter(f -> f.getName().equals(generateSourcesDir)).forEach(f -> paths.add(f.toPath()));\n    if (paths.isEmpty()) {\n      throw new GradleException(\"Failed to create quarkus-generated-sources\");\n    }\n    getLogger().debug(\"Will trigger preparing sources for source directory: {} buildDir: {}\",sourcesDirectories,getProject().getBuildDir().getAbsolutePath());\n    QuarkusClassLoader deploymentClassLoader=appCreationContext.createDeploymentClassLoader();\n    Class<?> codeGenerator=deploymentClassLoader.loadClass(CodeGenerator.class.getName());\n    Optional<Method> initAndRun=Arrays.stream(codeGenerator.getMethods()).filter(m -> m.getName().equals(INIT_AND_RUN)).findAny();\n    if (initAndRun.isEmpty()) {\n      throw new GradleException(\"Failed to find \" + INIT_AND_RUN + \" method in \"+ CodeGenerator.class.getName());\n    }\n    initAndRun.get().invoke(null,deploymentClassLoader,PathList.from(sourcesDirectories),paths.get(0),buildDir,sourceRegistrar,appCreationContext.getApplicationModel(),realProperties,launchMode.name(),test);\n  }\n}\n catch (BootstrapException|IllegalAccessException|InvocationTargetException|ClassNotFoundException e) {\n  throw new GradleException(\"Failed to generate sources in the QuarkusPrepare task\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 262,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 89,
        "startColumnNumber" : 33,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  getLogger().lifecycle(\"preparing quarkus application\");\n  LaunchMode launchMode=test ? LaunchMode.TEST : devMode ? LaunchMode.DEVELOPMENT : LaunchMode.NORMAL;\n  final ApplicationModel appModel=extension().getApplicationModel(launchMode);\n  final Properties realProperties=getBuildSystemProperties(appModel.getAppArtifact());\n  Path buildDir=getProject().getBuildDir().toPath();\n  try (CuratedApplication appCreationContext=QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true).build().bootstrap()){\n    final JavaPluginConvention javaConvention=getProject().getConvention().findPlugin(JavaPluginConvention.class);\n    if (javaConvention != null) {\n      final String generateSourcesDir=test ? QUARKUS_TEST_GENERATED_SOURCES : QUARKUS_GENERATED_SOURCES;\n      final SourceSet generatedSources=javaConvention.getSourceSets().findByName(generateSourcesDir);\n      List<Path> paths=new ArrayList<>();\n      generatedSources.getOutput().filter(f -> f.getName().equals(generateSourcesDir)).forEach(f -> paths.add(f.toPath()));\n      if (paths.isEmpty()) {\n        throw new GradleException(\"Failed to create quarkus-generated-sources\");\n      }\n      getLogger().debug(\"Will trigger preparing sources for source directory: {} buildDir: {}\",sourcesDirectories,getProject().getBuildDir().getAbsolutePath());\n      QuarkusClassLoader deploymentClassLoader=appCreationContext.createDeploymentClassLoader();\n      Class<?> codeGenerator=deploymentClassLoader.loadClass(CodeGenerator.class.getName());\n      Optional<Method> initAndRun=Arrays.stream(codeGenerator.getMethods()).filter(m -> m.getName().equals(INIT_AND_RUN)).findAny();\n      if (initAndRun.isEmpty()) {\n        throw new GradleException(\"Failed to find \" + INIT_AND_RUN + \" method in \"+ CodeGenerator.class.getName());\n      }\n      initAndRun.get().invoke(null,deploymentClassLoader,PathList.from(sourcesDirectories),paths.get(0),buildDir,sourceRegistrar,appCreationContext.getApplicationModel(),realProperties,launchMode.name(),test);\n    }\n  }\n catch (  BootstrapException|IllegalAccessException|InvocationTargetException|ClassNotFoundException e) {\n    throw new GradleException(\"Failed to generate sources in the QuarkusPrepare task\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 320,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3263,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@TaskAction public void prepareQuarkus(){\n  getLogger().lifecycle(\"preparing quarkus application\");\n  LaunchMode launchMode=test ? LaunchMode.TEST : devMode ? LaunchMode.DEVELOPMENT : LaunchMode.NORMAL;\n  final ApplicationModel appModel=extension().getApplicationModel(launchMode);\n  final Properties realProperties=getBuildSystemProperties(appModel.getAppArtifact());\n  Path buildDir=getProject().getBuildDir().toPath();\n  try (CuratedApplication appCreationContext=QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact()).setLocalProjectDiscovery(false).setIsolateDeployment(true).build().bootstrap()){\n    final JavaPluginConvention javaConvention=getProject().getConvention().findPlugin(JavaPluginConvention.class);\n    if (javaConvention != null) {\n      final String generateSourcesDir=test ? QUARKUS_TEST_GENERATED_SOURCES : QUARKUS_GENERATED_SOURCES;\n      final SourceSet generatedSources=javaConvention.getSourceSets().findByName(generateSourcesDir);\n      List<Path> paths=new ArrayList<>();\n      generatedSources.getOutput().filter(f -> f.getName().equals(generateSourcesDir)).forEach(f -> paths.add(f.toPath()));\n      if (paths.isEmpty()) {\n        throw new GradleException(\"Failed to create quarkus-generated-sources\");\n      }\n      getLogger().debug(\"Will trigger preparing sources for source directory: {} buildDir: {}\",sourcesDirectories,getProject().getBuildDir().getAbsolutePath());\n      QuarkusClassLoader deploymentClassLoader=appCreationContext.createDeploymentClassLoader();\n      Class<?> codeGenerator=deploymentClassLoader.loadClass(CodeGenerator.class.getName());\n      Optional<Method> initAndRun=Arrays.stream(codeGenerator.getMethods()).filter(m -> m.getName().equals(INIT_AND_RUN)).findAny();\n      if (initAndRun.isEmpty()) {\n        throw new GradleException(\"Failed to find \" + INIT_AND_RUN + \" method in \"+ CodeGenerator.class.getName());\n      }\n      initAndRun.get().invoke(null,deploymentClassLoader,PathList.from(sourcesDirectories),paths.get(0),buildDir,sourceRegistrar,appCreationContext.getApplicationModel(),realProperties,launchMode.name(),test);\n    }\n  }\n catch (  BootstrapException|IllegalAccessException|InvocationTargetException|ClassNotFoundException e) {\n    throw new GradleException(\"Failed to generate sources in the QuarkusPrepare task\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 326,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 97,
        "startColumnNumber" : 53,
        "endLineNumber" : 103,
        "endColumnNumber" : 58
      },
      "nodeContext" : "QuarkusBootstrap.builder().setBaseClassLoader(getClass().getClassLoader()).setExistingModel(appModel).setTargetDirectory(buildDir).setBaseName(extension().finalName()).setBuildSystemProperties(realProperties).setAppArtifact(appModel.getAppArtifact())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 9
    },
    "tokenLength" : 14,
    "type" : "io.quarkus.bootstrap.app.QuarkusBootstrap.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 293,
    "startLineNumber" : 97,
    "startColumnNumber" : 53,
    "endLineNumber" : 102,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}