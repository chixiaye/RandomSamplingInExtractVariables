{
  "id" : 81,
  "expression" : "refIndices[SCHEME_COLON] != -1",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/common/src/main/java/com/google/android/exoplayer2/util/UriUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "refIndices[SCHEME_COLON] != -1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 89,
      "startColumnNumber" : 8,
      "endLineNumber" : 89,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (refIndices[SCHEME_COLON] != -1) {\n  uri.append(referenceUri);\n  removeDotSegments(uri,refIndices[PATH],refIndices[QUERY]);\n  return uri.toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3163,
        "startLineNumber" : 81,
        "startColumnNumber" : 88,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder uri=new StringBuilder();\n  baseUri=baseUri == null ? \"\" : baseUri;\n  referenceUri=referenceUri == null ? \"\" : referenceUri;\n  int[] refIndices=getUriIndices(referenceUri);\n  if (refIndices[SCHEME_COLON] != -1) {\n    uri.append(referenceUri);\n    removeDotSegments(uri,refIndices[PATH],refIndices[QUERY]);\n    return uri.toString();\n  }\n  int[] baseIndices=getUriIndices(baseUri);\n  if (refIndices[FRAGMENT] == 0) {\n    return uri.append(baseUri,0,baseIndices[FRAGMENT]).append(referenceUri).toString();\n  }\n  if (refIndices[QUERY] == 0) {\n    return uri.append(baseUri,0,baseIndices[QUERY]).append(referenceUri).toString();\n  }\n  if (refIndices[PATH] != 0) {\n    int baseLimit=baseIndices[SCHEME_COLON] + 1;\n    uri.append(baseUri,0,baseLimit).append(referenceUri);\n    return removeDotSegments(uri,baseLimit + refIndices[PATH],baseLimit + refIndices[QUERY]);\n  }\n  if (referenceUri.charAt(refIndices[PATH]) == '/') {\n    uri.append(baseUri,0,baseIndices[PATH]).append(referenceUri);\n    return removeDotSegments(uri,baseIndices[PATH],baseIndices[PATH] + refIndices[QUERY]);\n  }\n  if (baseIndices[SCHEME_COLON] + 2 < baseIndices[PATH] && baseIndices[PATH] == baseIndices[QUERY]) {\n    uri.append(baseUri,0,baseIndices[PATH]).append('/').append(referenceUri);\n    return removeDotSegments(uri,baseIndices[PATH],baseIndices[PATH] + refIndices[QUERY] + 1);\n  }\n else {\n    int lastSlashIndex=baseUri.lastIndexOf('/',baseIndices[QUERY] - 1);\n    int baseLimit=lastSlashIndex == -1 ? baseIndices[PATH] : lastSlashIndex + 1;\n    uri.append(baseUri,0,baseLimit).append(referenceUri);\n    return removeDotSegments(uri,baseIndices[PATH],baseLimit + refIndices[QUERY]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 290,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3517,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Performs relative resolution of a  {@code referenceUri} with respect to a {@code baseUri}. <p>The resolution is performed as specified by RFC-3986.\n * @param baseUri The base URI.\n * @param referenceUri The reference URI to resolve.\n */\npublic static String resolve(@Nullable String baseUri,@Nullable String referenceUri){\n  StringBuilder uri=new StringBuilder();\n  baseUri=baseUri == null ? \"\" : baseUri;\n  referenceUri=referenceUri == null ? \"\" : referenceUri;\n  int[] refIndices=getUriIndices(referenceUri);\n  if (refIndices[SCHEME_COLON] != -1) {\n    uri.append(referenceUri);\n    removeDotSegments(uri,refIndices[PATH],refIndices[QUERY]);\n    return uri.toString();\n  }\n  int[] baseIndices=getUriIndices(baseUri);\n  if (refIndices[FRAGMENT] == 0) {\n    return uri.append(baseUri,0,baseIndices[FRAGMENT]).append(referenceUri).toString();\n  }\n  if (refIndices[QUERY] == 0) {\n    return uri.append(baseUri,0,baseIndices[QUERY]).append(referenceUri).toString();\n  }\n  if (refIndices[PATH] != 0) {\n    int baseLimit=baseIndices[SCHEME_COLON] + 1;\n    uri.append(baseUri,0,baseLimit).append(referenceUri);\n    return removeDotSegments(uri,baseLimit + refIndices[PATH],baseLimit + refIndices[QUERY]);\n  }\n  if (referenceUri.charAt(refIndices[PATH]) == '/') {\n    uri.append(baseUri,0,baseIndices[PATH]).append(referenceUri);\n    return removeDotSegments(uri,baseIndices[PATH],baseIndices[PATH] + refIndices[QUERY]);\n  }\n  if (baseIndices[SCHEME_COLON] + 2 < baseIndices[PATH] && baseIndices[PATH] == baseIndices[QUERY]) {\n    uri.append(baseUri,0,baseIndices[PATH]).append('/').append(referenceUri);\n    return removeDotSegments(uri,baseIndices[PATH],baseIndices[PATH] + refIndices[QUERY] + 1);\n  }\n else {\n    int lastSlashIndex=baseUri.lastIndexOf('/',baseIndices[QUERY] - 1);\n    int baseLimit=lastSlashIndex == -1 ? baseIndices[PATH] : lastSlashIndex + 1;\n    uri.append(baseUri,0,baseLimit).append(referenceUri);\n    return removeDotSegments(uri,baseIndices[PATH],baseLimit + refIndices[QUERY]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (refIndices[SCHEME_COLON] != -1) {\n  uri.append(referenceUri);\n  removeDotSegments(uri,refIndices[PATH],refIndices[QUERY]);\n  return uri.toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 89,
    "startColumnNumber" : 8,
    "endLineNumber" : 89,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}