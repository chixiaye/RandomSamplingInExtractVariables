{
  "id" : 250,
  "expression" : "val",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/persistence/FileSnap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "val",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 77,
      "startColumnNumber" : 12,
      "endLineNumber" : 77,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 27
      },
      "nodeContext" : "val != checkSum",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (val != checkSum) {\n  throw new IOException(\"CRC corruption in snapshot :  \" + snap);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 65,
        "startColumnNumber" : 31,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File snap=findMostRecentSnapshot();\n  if (snap == null) {\n    return -1L;\n  }\n  LOG.info(\"Reading snapshot \" + snap);\n  InputStream snapIS=new BufferedInputStream(new FileInputStream(snap));\n  CheckedInputStream crcIn=new CheckedInputStream(snapIS,new Adler32());\n  InputArchive ia=BinaryInputArchive.getArchive(crcIn);\n  deserialize(dt,sessions,ia);\n  long checkSum=crcIn.getChecksum().getValue();\n  long val=ia.readLong(\"val\");\n  if (val != checkSum) {\n    throw new IOException(\"CRC corruption in snapshot :  \" + snap);\n  }\n  snapIS.close();\n  crcIn.close();\n  dt.lastProcessedZxid=Util.getZxidFromName(snap.getName(),\"snapshot\");\n  return dt.lastProcessedZxid;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * deserialize a data tree from the most recent snapshot\n * @return the zxid of the snapshot\n */\npublic long deserialize(DataTree dt,Map<Long,Integer> sessions) throws IOException {\n  File snap=findMostRecentSnapshot();\n  if (snap == null) {\n    return -1L;\n  }\n  LOG.info(\"Reading snapshot \" + snap);\n  InputStream snapIS=new BufferedInputStream(new FileInputStream(snap));\n  CheckedInputStream crcIn=new CheckedInputStream(snapIS,new Adler32());\n  InputArchive ia=BinaryInputArchive.getArchive(crcIn);\n  deserialize(dt,sessions,ia);\n  long checkSum=crcIn.getChecksum().getValue();\n  long val=ia.readLong(\"val\");\n  if (val != checkSum) {\n    throw new IOException(\"CRC corruption in snapshot :  \" + snap);\n  }\n  snapIS.close();\n  crcIn.close();\n  dt.lastProcessedZxid=Util.getZxidFromName(snap.getName(),\"snapshot\");\n  return dt.lastProcessedZxid;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 77,
        "endColumnNumber" : 27
      },
      "nodeContext" : "val != checkSum",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 77,
    "startColumnNumber" : 12,
    "endLineNumber" : 77,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}