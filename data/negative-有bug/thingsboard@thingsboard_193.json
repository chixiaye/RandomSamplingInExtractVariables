{
  "id" : 193,
  "expression" : "ChannelOption",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/common/transport/mqtt/src/main/java/org/thingsboard/server/transport/mqtt/MqttTransportService.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 87,
      "startColumnNumber" : 29,
      "endLineNumber" : 87,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 87,
        "startColumnNumber" : 29,
        "endLineNumber" : 87,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ChannelOption.SO_KEEPALIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,false)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 68
      },
      "nodeContext" : "b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,false)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 76,
        "startColumnNumber" : 40,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.info(\"Setting resource leak detector level to {}\",leakDetectorLevel);\n  ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.valueOf(leakDetectorLevel.toUpperCase()));\n  log.info(\"Starting MQTT transport...\");\n  bossGroup=new NioEventLoopGroup(bossGroupThreadCount);\n  workerGroup=new NioEventLoopGroup(workerGroupThreadCount);\n  ServerBootstrap b=new ServerBootstrap();\n  b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,false)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n  serverChannel=b.bind(host,port).sync().channel();\n  if (sslEnabled) {\n    b=new ServerBootstrap();\n    b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n    sslServerChannel=b.bind(sslHost,sslPort).sync().channel();\n  }\n  log.info(\"Mqtt transport started!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@PostConstruct public void init() throws Exception {\n  log.info(\"Setting resource leak detector level to {}\",leakDetectorLevel);\n  ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.valueOf(leakDetectorLevel.toUpperCase()));\n  log.info(\"Starting MQTT transport...\");\n  bossGroup=new NioEventLoopGroup(bossGroupThreadCount);\n  workerGroup=new NioEventLoopGroup(workerGroupThreadCount);\n  ServerBootstrap b=new ServerBootstrap();\n  b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,false)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n  serverChannel=b.bind(host,port).sync().channel();\n  if (sslEnabled) {\n    b=new ServerBootstrap();\n    b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n    sslServerChannel=b.bind(sslHost,sslPort).sync().channel();\n  }\n  log.info(\"Mqtt transport started!\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 87,
        "startColumnNumber" : 29,
        "endLineNumber" : 87,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ChannelOption.SO_KEEPALIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ChannelOption",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 95,
      "startColumnNumber" : 33,
      "endLineNumber" : 95,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 95,
        "startColumnNumber" : 33,
        "endLineNumber" : 95,
        "endColumnNumber" : 59
      },
      "nodeContext" : "ChannelOption.SO_KEEPALIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 71
      },
      "nodeContext" : "b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 72
      },
      "nodeContext" : "b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  b=new ServerBootstrap();\n  b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n  sslServerChannel=b.bind(sslHost,sslPort).sync().channel();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (sslEnabled) {\n  b=new ServerBootstrap();\n  b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n  sslServerChannel=b.bind(sslHost,sslPort).sync().channel();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 76,
        "startColumnNumber" : 40,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.info(\"Setting resource leak detector level to {}\",leakDetectorLevel);\n  ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.valueOf(leakDetectorLevel.toUpperCase()));\n  log.info(\"Starting MQTT transport...\");\n  bossGroup=new NioEventLoopGroup(bossGroupThreadCount);\n  workerGroup=new NioEventLoopGroup(workerGroupThreadCount);\n  ServerBootstrap b=new ServerBootstrap();\n  b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,false)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n  serverChannel=b.bind(host,port).sync().channel();\n  if (sslEnabled) {\n    b=new ServerBootstrap();\n    b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n    sslServerChannel=b.bind(sslHost,sslPort).sync().channel();\n  }\n  log.info(\"Mqtt transport started!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@PostConstruct public void init() throws Exception {\n  log.info(\"Setting resource leak detector level to {}\",leakDetectorLevel);\n  ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.valueOf(leakDetectorLevel.toUpperCase()));\n  log.info(\"Starting MQTT transport...\");\n  bossGroup=new NioEventLoopGroup(bossGroupThreadCount);\n  workerGroup=new NioEventLoopGroup(workerGroupThreadCount);\n  ServerBootstrap b=new ServerBootstrap();\n  b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,false)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n  serverChannel=b.bind(host,port).sync().channel();\n  if (sslEnabled) {\n    b=new ServerBootstrap();\n    b.group(bossGroup,workerGroup).channel(NioServerSocketChannel.class).childHandler(new MqttTransportServerInitializer(context,true)).childOption(ChannelOption.SO_KEEPALIVE,keepAlive);\n    sslServerChannel=b.bind(sslHost,sslPort).sync().channel();\n  }\n  log.info(\"Mqtt transport started!\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 95,
        "startColumnNumber" : 33,
        "endLineNumber" : 95,
        "endColumnNumber" : 59
      },
      "nodeContext" : "ChannelOption.SO_KEEPALIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 87,
    "startColumnNumber" : 29,
    "endLineNumber" : 87,
    "endColumnNumber" : 42
  }, {
    "charLength" : 13,
    "startLineNumber" : 95,
    "startColumnNumber" : 33,
    "endLineNumber" : 95,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}