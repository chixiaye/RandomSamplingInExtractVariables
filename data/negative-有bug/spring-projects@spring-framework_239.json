{
  "id" : 239,
  "expression" : "parserContext.extractSource(element)",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/main/java/org/springframework/context/config/MBeanServerBeanDefinitionParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parserContext.extractSource(element)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 86,
      "startColumnNumber" : 15,
      "endLineNumber" : 86,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "bd.setSource(parserContext.extractSource(element))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 53
      },
      "nodeContext" : "bd.setSource(parserContext.extractSource(element));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 726,
        "startLineNumber" : 70,
        "startColumnNumber" : 94,
        "endLineNumber" : 88,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String agentId=element.getAttribute(AGENT_ID_ATTRIBUTE);\n  if (StringUtils.hasText(agentId)) {\n    RootBeanDefinition bd=new RootBeanDefinition(MBeanServerFactoryBean.class);\n    bd.getPropertyValues().add(\"agentId\",agentId);\n    return bd;\n  }\n  AbstractBeanDefinition specialServer=findServerForSpecialEnvironment();\n  if (specialServer != null) {\n    return specialServer;\n  }\n  RootBeanDefinition bd=new RootBeanDefinition(MBeanServerFactoryBean.class);\n  bd.getPropertyValues().add(\"locateExistingServerIfPossible\",Boolean.TRUE);\n  bd.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n  bd.setSource(parserContext.extractSource(element));\n  return bd;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 88,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected AbstractBeanDefinition parseInternal(Element element,ParserContext parserContext){\n  String agentId=element.getAttribute(AGENT_ID_ATTRIBUTE);\n  if (StringUtils.hasText(agentId)) {\n    RootBeanDefinition bd=new RootBeanDefinition(MBeanServerFactoryBean.class);\n    bd.getPropertyValues().add(\"agentId\",agentId);\n    return bd;\n  }\n  AbstractBeanDefinition specialServer=findServerForSpecialEnvironment();\n  if (specialServer != null) {\n    return specialServer;\n  }\n  RootBeanDefinition bd=new RootBeanDefinition(MBeanServerFactoryBean.class);\n  bd.getPropertyValues().add(\"locateExistingServerIfPossible\",Boolean.TRUE);\n  bd.setRole(BeanDefinition.ROLE_INFRASTRUCTURE);\n  bd.setSource(parserContext.extractSource(element));\n  return bd;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 53
      },
      "nodeContext" : "bd.setSource(parserContext.extractSource(element));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 86,
    "startColumnNumber" : 15,
    "endLineNumber" : 86,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}