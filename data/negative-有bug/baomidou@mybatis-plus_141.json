{
  "id" : 141,
  "expression" : "GlobalConfigUtils.DEFAULT",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/TableInfoHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "GlobalConfigUtils.DEFAULT",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 118,
      "startColumnNumber" : 27,
      "endLineNumber" : 118,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 52
      },
      "nodeContext" : "globalConfig=GlobalConfigUtils.DEFAULT",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 53
      },
      "nodeContext" : "globalConfig=GlobalConfigUtils.DEFAULT;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 116,
        "startColumnNumber" : 15,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  globalConfig=GlobalConfigUtils.DEFAULT;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != builderAssistant) {\n  tableInfo.setCurrentNamespace(builderAssistant.getCurrentNamespace());\n  tableInfo.setConfigMark(builderAssistant.getConfiguration());\n  globalConfig=GlobalConfigUtils.getGlobalConfig(builderAssistant.getConfiguration());\n}\n else {\n  globalConfig=GlobalConfigUtils.DEFAULT;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3307,
        "startLineNumber" : 102,
        "startColumnNumber" : 112,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TableInfo tableInfo=tableInfoCache.get(clazz.getName());\n  if (StringUtils.checkValNotNull(tableInfo)) {\n    if (StringUtils.checkValNotNull(builderAssistant)) {\n      tableInfo.setConfigMark(builderAssistant.getConfiguration());\n    }\n    return tableInfo;\n  }\n  tableInfo=new TableInfo();\n  GlobalConfiguration globalConfig;\n  if (null != builderAssistant) {\n    tableInfo.setCurrentNamespace(builderAssistant.getCurrentNamespace());\n    tableInfo.setConfigMark(builderAssistant.getConfiguration());\n    globalConfig=GlobalConfigUtils.getGlobalConfig(builderAssistant.getConfiguration());\n  }\n else {\n    globalConfig=GlobalConfigUtils.DEFAULT;\n  }\n  TableName table=clazz.getAnnotation(TableName.class);\n  String tableName=clazz.getSimpleName();\n  if (table != null && StringUtils.isNotEmpty(table.value())) {\n    tableName=table.value();\n  }\n else {\n    if (globalConfig.isDbColumnUnderline()) {\n      tableName=StringUtils.camelToUnderline(tableName);\n    }\n    if (globalConfig.isCapitalMode()) {\n      tableName=tableName.toUpperCase();\n    }\n else {\n      tableName=StringUtils.firstToLowerCase(tableName);\n    }\n  }\n  tableInfo.setTableName(tableName);\n  if (null != globalConfig.getKeyGenerator()) {\n    tableInfo.setKeySequence(clazz.getAnnotation(KeySequence.class));\n  }\n  if (table != null && StringUtils.isNotEmpty(table.resultMap())) {\n    tableInfo.setResultMap(table.resultMap());\n  }\n  List<TableFieldInfo> fieldList=new ArrayList<>();\n  List<Field> list=getAllFields(clazz);\n  boolean isReadPK=false;\n  boolean existTableId=existTableId(list);\n  for (  Field field : list) {\n    if (!isReadPK) {\n      if (existTableId) {\n        isReadPK=initTableId(globalConfig,tableInfo,field,clazz);\n      }\n else {\n        isReadPK=initFieldId(globalConfig,tableInfo,field,clazz);\n      }\n      if (isReadPK) {\n        continue;\n      }\n    }\n    if (initTableField(globalConfig,tableInfo,fieldList,field,clazz)) {\n      continue;\n    }\n    fieldList.add(new TableFieldInfo(globalConfig,tableInfo,field));\n  }\n  tableInfo.setFieldList(globalConfig,fieldList);\n  if (StringUtils.isEmpty(tableInfo.getKeyColumn())) {\n    logger.warn(String.format(\"Warn: Could not find @TableId in Class: %s.\",clazz.getName()));\n  }\n  tableInfoCache.put(clazz.getName(),tableInfo);\n  return tableInfo;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3524,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 实体类反射获取表信息【初始化】 <p>\n * @param clazz 反射实体类\n * @return\n */\npublic synchronized static TableInfo initTableInfo(MapperBuilderAssistant builderAssistant,Class<?> clazz){\n  TableInfo tableInfo=tableInfoCache.get(clazz.getName());\n  if (StringUtils.checkValNotNull(tableInfo)) {\n    if (StringUtils.checkValNotNull(builderAssistant)) {\n      tableInfo.setConfigMark(builderAssistant.getConfiguration());\n    }\n    return tableInfo;\n  }\n  tableInfo=new TableInfo();\n  GlobalConfiguration globalConfig;\n  if (null != builderAssistant) {\n    tableInfo.setCurrentNamespace(builderAssistant.getCurrentNamespace());\n    tableInfo.setConfigMark(builderAssistant.getConfiguration());\n    globalConfig=GlobalConfigUtils.getGlobalConfig(builderAssistant.getConfiguration());\n  }\n else {\n    globalConfig=GlobalConfigUtils.DEFAULT;\n  }\n  TableName table=clazz.getAnnotation(TableName.class);\n  String tableName=clazz.getSimpleName();\n  if (table != null && StringUtils.isNotEmpty(table.value())) {\n    tableName=table.value();\n  }\n else {\n    if (globalConfig.isDbColumnUnderline()) {\n      tableName=StringUtils.camelToUnderline(tableName);\n    }\n    if (globalConfig.isCapitalMode()) {\n      tableName=tableName.toUpperCase();\n    }\n else {\n      tableName=StringUtils.firstToLowerCase(tableName);\n    }\n  }\n  tableInfo.setTableName(tableName);\n  if (null != globalConfig.getKeyGenerator()) {\n    tableInfo.setKeySequence(clazz.getAnnotation(KeySequence.class));\n  }\n  if (table != null && StringUtils.isNotEmpty(table.resultMap())) {\n    tableInfo.setResultMap(table.resultMap());\n  }\n  List<TableFieldInfo> fieldList=new ArrayList<>();\n  List<Field> list=getAllFields(clazz);\n  boolean isReadPK=false;\n  boolean existTableId=existTableId(list);\n  for (  Field field : list) {\n    if (!isReadPK) {\n      if (existTableId) {\n        isReadPK=initTableId(globalConfig,tableInfo,field,clazz);\n      }\n else {\n        isReadPK=initFieldId(globalConfig,tableInfo,field,clazz);\n      }\n      if (isReadPK) {\n        continue;\n      }\n    }\n    if (initTableField(globalConfig,tableInfo,fieldList,field,clazz)) {\n      continue;\n    }\n    fieldList.add(new TableFieldInfo(globalConfig,tableInfo,field));\n  }\n  tableInfo.setFieldList(globalConfig,fieldList);\n  if (StringUtils.isEmpty(tableInfo.getKeyColumn())) {\n    logger.warn(String.format(\"Warn: Could not find @TableId in Class: %s.\",clazz.getName()));\n  }\n  tableInfoCache.put(clazz.getName(),tableInfo);\n  return tableInfo;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 334,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 53
      },
      "nodeContext" : "globalConfig=GlobalConfigUtils.DEFAULT;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.baomidou.mybatisplus.entity.GlobalConfiguration"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 118,
    "startColumnNumber" : 27,
    "endLineNumber" : 118,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}