{
  "id" : 27,
  "expression" : "\"foo\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/matchers/CapturingMatcherTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"foo\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 25,
      "startColumnNumber" : 22,
      "endLineNumber" : 25,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 28
      },
      "nodeContext" : "m.captureFrom(\"foo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 29
      },
      "nodeContext" : "m.captureFrom(\"foo\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 20,
        "startColumnNumber" : 60,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CapturingMatcher<String> m=new CapturingMatcher<String>();\n  m.captureFrom(\"foo\");\n  m.captureFrom(\"bar\");\n  assertThat(m.getAllValues()).containsSequence(\"foo\",\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_capture_arguments() throws Exception {\n  CapturingMatcher<String> m=new CapturingMatcher<String>();\n  m.captureFrom(\"foo\");\n  m.captureFrom(\"bar\");\n  assertThat(m.getAllValues()).containsSequence(\"foo\",\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 29
      },
      "nodeContext" : "m.captureFrom(\"foo\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"foo\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 29,
      "startColumnNumber" : 54,
      "endLineNumber" : 29,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(m.getAllValues()).containsSequence(\"foo\",\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(m.getAllValues()).containsSequence(\"foo\",\"bar\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 20,
        "startColumnNumber" : 60,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CapturingMatcher<String> m=new CapturingMatcher<String>();\n  m.captureFrom(\"foo\");\n  m.captureFrom(\"bar\");\n  assertThat(m.getAllValues()).containsSequence(\"foo\",\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_capture_arguments() throws Exception {\n  CapturingMatcher<String> m=new CapturingMatcher<String>();\n  m.captureFrom(\"foo\");\n  m.captureFrom(\"bar\");\n  assertThat(m.getAllValues()).containsSequence(\"foo\",\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(m.getAllValues()).containsSequence(\"foo\",\"bar\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 25,
    "startColumnNumber" : 22,
    "endLineNumber" : 25,
    "endColumnNumber" : 27
  }, {
    "charLength" : 5,
    "startLineNumber" : 29,
    "startColumnNumber" : 54,
    "endLineNumber" : 29,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}