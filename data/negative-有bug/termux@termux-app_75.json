{
  "id" : 75,
  "expression" : "ActivityManager.RunningAppProcessInfo",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/termux-shared/src/main/java/com/termux/shared/android/ProcessUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ActivityManager.RunningAppProcessInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 42,
      "startColumnNumber" : 17,
      "endLineNumber" : 42,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ParameterizedType,typeArguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 42,
        "startColumnNumber" : 17,
        "endLineNumber" : 42,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ActivityManager.RunningAppProcessInfo",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 55
      },
      "nodeContext" : "List<ActivityManager.RunningAppProcessInfo>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 111
      },
      "nodeContext" : "List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n  if (runningApps == null) {\n    return null;\n  }\n  for (  ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n    if (procInfo.pid == pid) {\n      return procInfo.processName;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n  if (runningApps == null) {\n    return null;\n  }\n  for (  ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n    if (procInfo.pid == pid) {\n      return procInfo.processName;\n    }\n  }\n}\n catch (Exception e) {\n  Logger.logStackTraceWithMessage(LOG_TAG,\"Failed to get app process name for pid \" + pid,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 807,
        "startLineNumber" : 36,
        "startColumnNumber" : 84,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (pid < 0)   return null;\n  ActivityManager activityManager=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);\n  if (activityManager == null)   return null;\n  try {\n    List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n    if (runningApps == null) {\n      return null;\n    }\n    for (    ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n      if (procInfo.pid == pid) {\n        return procInfo.processName;\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.logStackTraceWithMessage(LOG_TAG,\"Failed to get app process name for pid \" + pid,e);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2234,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get the app process name for a pid with a call to  {@link ActivityManager#getRunningAppProcesses()}. This will not return child process names. Android did not keep track of them before android 12 phantom process addition, but there is no API via IActivityManager to get them. To get process name for pids of own app's child processes, check `get_process_name_from_cmdline()` in `local-socket.cpp`. https://cs.android.com/android/platform/superproject/+/android-12.0.0_r32:frameworks/base/core/java/android/app/ActivityManager.java;l=3362 https://cs.android.com/android/platform/superproject/+/android-12.0.0_r32:frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java;l=8434 https://cs.android.com/android/_/android/platform/frameworks/base/+/refs/tags/android-12.0.0_r32:services/core/java/com/android/server/am/PhantomProcessList.java https://cs.android.com/android/_/android/platform/frameworks/base/+/refs/tags/android-12.0.0_r32:services/core/java/com/android/server/am/PhantomProcessRecord.java\n * @param context The {@link Context} for operations.\n * @param pid The pid of the process.\n * @return Returns the app process name if found, otherwise {@code null}.\n */\n@Nullable public static String getAppProcessNameForPid(@NonNull Context context,int pid){\n  if (pid < 0)   return null;\n  ActivityManager activityManager=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);\n  if (activityManager == null)   return null;\n  try {\n    List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n    if (runningApps == null) {\n      return null;\n    }\n    for (    ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n      if (procInfo.pid == pid) {\n        return procInfo.processName;\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.logStackTraceWithMessage(LOG_TAG,\"Failed to get app process name for pid \" + pid,e);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 111
      },
      "nodeContext" : "List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "ActivityManager"
  }, {
    "nodeContext" : "ActivityManager.RunningAppProcessInfo",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 46,
      "startColumnNumber" : 17,
      "endLineNumber" : 46,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 46,
        "startColumnNumber" : 17,
        "endLineNumber" : 46,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ActivityManager.RunningAppProcessInfo",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 46,
        "startColumnNumber" : 17,
        "endLineNumber" : 46,
        "endColumnNumber" : 63
      },
      "nodeContext" : "ActivityManager.RunningAppProcessInfo procInfo",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n  if (procInfo.pid == pid) {\n    return procInfo.processName;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n  if (runningApps == null) {\n    return null;\n  }\n  for (  ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n    if (procInfo.pid == pid) {\n      return procInfo.processName;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n  if (runningApps == null) {\n    return null;\n  }\n  for (  ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n    if (procInfo.pid == pid) {\n      return procInfo.processName;\n    }\n  }\n}\n catch (Exception e) {\n  Logger.logStackTraceWithMessage(LOG_TAG,\"Failed to get app process name for pid \" + pid,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 807,
        "startLineNumber" : 36,
        "startColumnNumber" : 84,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (pid < 0)   return null;\n  ActivityManager activityManager=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);\n  if (activityManager == null)   return null;\n  try {\n    List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n    if (runningApps == null) {\n      return null;\n    }\n    for (    ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n      if (procInfo.pid == pid) {\n        return procInfo.processName;\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.logStackTraceWithMessage(LOG_TAG,\"Failed to get app process name for pid \" + pid,e);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2234,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get the app process name for a pid with a call to  {@link ActivityManager#getRunningAppProcesses()}. This will not return child process names. Android did not keep track of them before android 12 phantom process addition, but there is no API via IActivityManager to get them. To get process name for pids of own app's child processes, check `get_process_name_from_cmdline()` in `local-socket.cpp`. https://cs.android.com/android/platform/superproject/+/android-12.0.0_r32:frameworks/base/core/java/android/app/ActivityManager.java;l=3362 https://cs.android.com/android/platform/superproject/+/android-12.0.0_r32:frameworks/base/services/core/java/com/android/server/am/ActivityManagerService.java;l=8434 https://cs.android.com/android/_/android/platform/frameworks/base/+/refs/tags/android-12.0.0_r32:services/core/java/com/android/server/am/PhantomProcessList.java https://cs.android.com/android/_/android/platform/frameworks/base/+/refs/tags/android-12.0.0_r32:services/core/java/com/android/server/am/PhantomProcessRecord.java\n * @param context The {@link Context} for operations.\n * @param pid The pid of the process.\n * @return Returns the app process name if found, otherwise {@code null}.\n */\n@Nullable public static String getAppProcessNameForPid(@NonNull Context context,int pid){\n  if (pid < 0)   return null;\n  ActivityManager activityManager=(ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE);\n  if (activityManager == null)   return null;\n  try {\n    List<ActivityManager.RunningAppProcessInfo> runningApps=activityManager.getRunningAppProcesses();\n    if (runningApps == null) {\n      return null;\n    }\n    for (    ActivityManager.RunningAppProcessInfo procInfo : runningApps) {\n      if (procInfo.pid == pid) {\n        return procInfo.processName;\n      }\n    }\n  }\n catch (  Exception e) {\n    Logger.logStackTraceWithMessage(LOG_TAG,\"Failed to get app process name for pid \" + pid,e);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 46,
        "startColumnNumber" : 17,
        "endLineNumber" : 46,
        "endColumnNumber" : 63
      },
      "nodeContext" : "ActivityManager.RunningAppProcessInfo procInfo",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "ActivityManager"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 42,
    "startColumnNumber" : 17,
    "endLineNumber" : 42,
    "endColumnNumber" : 54
  }, {
    "charLength" : 37,
    "startLineNumber" : 46,
    "startColumnNumber" : 17,
    "endLineNumber" : 46,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}