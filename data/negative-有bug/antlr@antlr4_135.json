{
  "id" : 135,
  "expression" : "ANTLRParser",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/semantics/UseDefAnalyzer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ANTLRParser",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 81,
      "startColumnNumber" : 55,
      "endLineNumber" : 81,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 81,
        "startColumnNumber" : 55,
        "endLineNumber" : 81,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ANTLRParser.TOKEN_REF",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 81,
        "startColumnNumber" : 32,
        "endLineNumber" : 81,
        "endColumnNumber" : 77
      },
      "nodeContext" : "r.ast.getNodesWithType(ANTLRParser.TOKEN_REF)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 81,
        "startColumnNumber" : 20,
        "endLineNumber" : 81,
        "endColumnNumber" : 77
      },
      "nodeContext" : "tokenRefs=r.ast.getNodesWithType(ANTLRParser.TOKEN_REF)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 78
      },
      "nodeContext" : "List<GrammarAST> tokenRefs=r.ast.getNodesWithType(ANTLRParser.TOKEN_REF);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 80,
        "startColumnNumber" : 23,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<GrammarAST> tokenRefs=r.ast.getNodesWithType(ANTLRParser.TOKEN_REF);\n  for (  GrammarAST tref : tokenRefs) {\n    Set<Rule> calls=dependencies.get(r);\n    if (calls == null) {\n      calls=new HashSet<Rule>();\n      dependencies.put(r,calls);\n    }\n    calls.add(g.getRule(tref.getText()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Rule r : rules) {\n  List<GrammarAST> tokenRefs=r.ast.getNodesWithType(ANTLRParser.TOKEN_REF);\n  for (  GrammarAST tref : tokenRefs) {\n    Set<Rule> calls=dependencies.get(r);\n    if (calls == null) {\n      calls=new HashSet<Rule>();\n      dependencies.put(r,calls);\n    }\n    calls.add(g.getRule(tref.getText()));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 72,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 77,
        "startColumnNumber" : 91,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Rule,Set<Rule>> dependencies=new HashMap<Rule,Set<Rule>>();\n  for (  Rule r : rules) {\n    List<GrammarAST> tokenRefs=r.ast.getNodesWithType(ANTLRParser.TOKEN_REF);\n    for (    GrammarAST tref : tokenRefs) {\n      Set<Rule> calls=dependencies.get(r);\n      if (calls == null) {\n        calls=new HashSet<Rule>();\n        dependencies.put(r,calls);\n      }\n      calls.add(g.getRule(tref.getText()));\n    }\n  }\n  return dependencies;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 77,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static Map<Rule,Set<Rule>> getRuleDependencies(Grammar g,Collection<Rule> rules){\n  Map<Rule,Set<Rule>> dependencies=new HashMap<Rule,Set<Rule>>();\n  for (  Rule r : rules) {\n    List<GrammarAST> tokenRefs=r.ast.getNodesWithType(ANTLRParser.TOKEN_REF);\n    for (    GrammarAST tref : tokenRefs) {\n      Set<Rule> calls=dependencies.get(r);\n      if (calls == null) {\n        calls=new HashSet<Rule>();\n        dependencies.put(r,calls);\n      }\n      calls.add(g.getRule(tref.getText()));\n    }\n  }\n  return dependencies;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 78
      },
      "nodeContext" : "List<GrammarAST> tokenRefs=r.ast.getNodesWithType(ANTLRParser.TOKEN_REF);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 81,
    "startColumnNumber" : 55,
    "endLineNumber" : 81,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}