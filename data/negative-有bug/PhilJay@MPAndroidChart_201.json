{
  "id" : 201,
  "expression" : "index",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/data/BarEntry.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 105,
      "startColumnNumber" : 14,
      "endLineNumber" : 105,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 23
      },
      "nodeContext" : "index > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "index > 0 && val > mVals[index] + remainder",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (index > 0 && val > mVals[index] + remainder) {\n  remainder+=mVals[index];\n  index--;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 97,
        "startColumnNumber" : 47,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the closest value inside the values array (for stacked barchart) to the value given as a parameter. The closest value must be higher (above) the provided value.\n * @param val\n * @return\n */\npublic int getClosestIndexAbove(float val){\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "index > 0 && val > mVals[index] + remainder",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 105,
      "startColumnNumber" : 39,
      "endLineNumber" : 105,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 105,
        "startColumnNumber" : 33,
        "endLineNumber" : 105,
        "endColumnNumber" : 45
      },
      "nodeContext" : "mVals[index]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 105,
        "startColumnNumber" : 33,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "mVals[index] + remainder",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 105,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "val > mVals[index] + remainder",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "index > 0 && val > mVals[index] + remainder",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (index > 0 && val > mVals[index] + remainder) {\n  remainder+=mVals[index];\n  index--;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 97,
        "startColumnNumber" : 47,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the closest value inside the values array (for stacked barchart) to the value given as a parameter. The closest value must be higher (above) the provided value.\n * @param val\n * @return\n */\npublic int getClosestIndexAbove(float val){\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 105,
        "startColumnNumber" : 14,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "index > 0 && val > mVals[index] + remainder",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 31,
      "endLineNumber" : 106,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 106,
        "startColumnNumber" : 25,
        "endLineNumber" : 106,
        "endColumnNumber" : 37
      },
      "nodeContext" : "mVals[index]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 37
      },
      "nodeContext" : "remainder+=mVals[index]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 38
      },
      "nodeContext" : "remainder+=mVals[index];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 105,
        "startColumnNumber" : 59,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  remainder+=mVals[index];\n  index--;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (index > 0 && val > mVals[index] + remainder) {\n  remainder+=mVals[index];\n  index--;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 97,
        "startColumnNumber" : 47,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the closest value inside the values array (for stacked barchart) to the value given as a parameter. The closest value must be higher (above) the provided value.\n * @param val\n * @return\n */\npublic int getClosestIndexAbove(float val){\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 38
      },
      "nodeContext" : "remainder+=mVals[index];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "index",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 110,
      "startColumnNumber" : 15,
      "endLineNumber" : 110,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return index;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 97,
        "startColumnNumber" : 47,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the closest value inside the values array (for stacked barchart) to the value given as a parameter. The closest value must be higher (above) the provided value.\n * @param val\n * @return\n */\npublic int getClosestIndexAbove(float val){\n  if (mVals == null)   return 0;\n  int index=mVals.length - 1;\n  float remainder=0f;\n  while (index > 0 && val > mVals[index] + remainder) {\n    remainder+=mVals[index];\n    index--;\n  }\n  return index;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return index;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 105,
    "startColumnNumber" : 14,
    "endLineNumber" : 105,
    "endColumnNumber" : 19
  }, {
    "charLength" : 5,
    "startLineNumber" : 105,
    "startColumnNumber" : 39,
    "endLineNumber" : 105,
    "endColumnNumber" : 44
  }, {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 31,
    "endLineNumber" : 106,
    "endColumnNumber" : 36
  }, {
    "charLength" : 5,
    "startLineNumber" : 110,
    "startColumnNumber" : 15,
    "endLineNumber" : 110,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}