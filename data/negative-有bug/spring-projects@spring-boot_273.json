{
  "id" : 273,
  "expression" : "domain",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/groovy/template/GroovyTemplateAutoConfiguration.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "domain",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 112,
      "startColumnNumber" : 28,
      "endLineNumber" : 112,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 112,
        "startColumnNumber" : 28,
        "endLineNumber" : 112,
        "endColumnNumber" : 50
      },
      "nodeContext" : "domain.getCodeSource()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 112,
        "startColumnNumber" : 15,
        "endLineNumber" : 112,
        "endColumnNumber" : 50
      },
      "nodeContext" : "codeSource=domain.getCodeSource()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 51
      },
      "nodeContext" : "CodeSource codeSource=domain.getCodeSource();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 109,
        "startColumnNumber" : 7,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  ProtectionDomain domain=MarkupTemplateEngine.class.getProtectionDomain();\n  CodeSource codeSource=domain.getCodeSource();\n  if (codeSource != null && codeSource.getLocation().toString().contains(\"-all\")) {\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 109,
        "startColumnNumber" : 3,
        "endLineNumber" : 121,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  ProtectionDomain domain=MarkupTemplateEngine.class.getProtectionDomain();\n  CodeSource codeSource=domain.getCodeSource();\n  if (codeSource != null && codeSource.getLocation().toString().contains(\"-all\")) {\n    return true;\n  }\n  return false;\n}\n catch (Exception ex) {\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 108,
        "startColumnNumber" : 40,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    ProtectionDomain domain=MarkupTemplateEngine.class.getProtectionDomain();\n    CodeSource codeSource=domain.getCodeSource();\n    if (codeSource != null && codeSource.getLocation().toString().contains(\"-all\")) {\n      return true;\n    }\n    return false;\n  }\n catch (  Exception ex) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * MarkupTemplateEngine could be loaded from groovy-templates or groovy-all. Unfortunately it's quite common for people to use groovy-all and not actually need templating support. This method check attempts to check the source jar so that we can skip the  {@code /template} folder check for such cases.\n * @return true if the groovy-all jar is used\n */\nprivate boolean isUsingGroovyAllJar(){\n  try {\n    ProtectionDomain domain=MarkupTemplateEngine.class.getProtectionDomain();\n    CodeSource codeSource=domain.getCodeSource();\n    if (codeSource != null && codeSource.getLocation().toString().contains(\"-all\")) {\n      return true;\n    }\n    return false;\n  }\n catch (  Exception ex) {\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 51
      },
      "nodeContext" : "CodeSource codeSource=domain.getCodeSource();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.security.ProtectionDomain"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 112,
    "startColumnNumber" : 28,
    "endLineNumber" : 112,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}