{
  "id" : 100,
  "expression" : "4",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/app/src/main/java/io/virtualapp/widgets/BallGridBeatIndicator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 25,
      "startColumnNumber" : 30,
      "endLineNumber" : 25,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 25,
        "startColumnNumber" : 14,
        "endLineNumber" : 25,
        "endColumnNumber" : 31
      },
      "nodeContext" : "circleSpacing=4",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 32
      },
      "nodeContext" : "float circleSpacing=4;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 24,
        "startColumnNumber" : 49,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float circleSpacing=4;\n  float radius=(getWidth() - circleSpacing * 4) / 6;\n  float x=getWidth() / 2 - (radius * 2 + circleSpacing);\n  float y=getWidth() / 2 - (radius * 2 + circleSpacing);\n  for (int i=0; i < 3; i++) {\n    for (int j=0; j < 3; j++) {\n      canvas.save();\n      float translateX=x + (radius * 2) * j + circleSpacing * j;\n      float translateY=y + (radius * 2) * i + circleSpacing * i;\n      canvas.translate(translateX,translateY);\n      paint.setAlpha(ALPHAS[3 * i + j]);\n      canvas.drawCircle(0,0,radius,paint);\n      canvas.restore();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(Canvas canvas,Paint paint){\n  float circleSpacing=4;\n  float radius=(getWidth() - circleSpacing * 4) / 6;\n  float x=getWidth() / 2 - (radius * 2 + circleSpacing);\n  float y=getWidth() / 2 - (radius * 2 + circleSpacing);\n  for (int i=0; i < 3; i++) {\n    for (int j=0; j < 3; j++) {\n      canvas.save();\n      float translateX=x + (radius * 2) * j + circleSpacing * j;\n      float translateY=y + (radius * 2) * i + circleSpacing * i;\n      canvas.translate(translateX,translateY);\n      paint.setAlpha(ALPHAS[3 * i + j]);\n      canvas.drawCircle(0,0,radius,paint);\n      canvas.restore();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 32
      },
      "nodeContext" : "float circleSpacing=4;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 26,
      "startColumnNumber" : 53,
      "endLineNumber" : 26,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 26,
        "startColumnNumber" : 37,
        "endLineNumber" : 26,
        "endColumnNumber" : 54
      },
      "nodeContext" : "circleSpacing * 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 26,
        "startColumnNumber" : 24,
        "endLineNumber" : 26,
        "endColumnNumber" : 54
      },
      "nodeContext" : "getWidth() - circleSpacing * 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 26,
        "startColumnNumber" : 23,
        "endLineNumber" : 26,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(getWidth() - circleSpacing * 4)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 26,
        "startColumnNumber" : 23,
        "endLineNumber" : 26,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(getWidth() - circleSpacing * 4) / 6",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 26,
        "startColumnNumber" : 14,
        "endLineNumber" : 26,
        "endColumnNumber" : 59
      },
      "nodeContext" : "radius=(getWidth() - circleSpacing * 4) / 6",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 60
      },
      "nodeContext" : "float radius=(getWidth() - circleSpacing * 4) / 6;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 24,
        "startColumnNumber" : 49,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float circleSpacing=4;\n  float radius=(getWidth() - circleSpacing * 4) / 6;\n  float x=getWidth() / 2 - (radius * 2 + circleSpacing);\n  float y=getWidth() / 2 - (radius * 2 + circleSpacing);\n  for (int i=0; i < 3; i++) {\n    for (int j=0; j < 3; j++) {\n      canvas.save();\n      float translateX=x + (radius * 2) * j + circleSpacing * j;\n      float translateY=y + (radius * 2) * i + circleSpacing * i;\n      canvas.translate(translateX,translateY);\n      paint.setAlpha(ALPHAS[3 * i + j]);\n      canvas.drawCircle(0,0,radius,paint);\n      canvas.restore();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(Canvas canvas,Paint paint){\n  float circleSpacing=4;\n  float radius=(getWidth() - circleSpacing * 4) / 6;\n  float x=getWidth() / 2 - (radius * 2 + circleSpacing);\n  float y=getWidth() / 2 - (radius * 2 + circleSpacing);\n  for (int i=0; i < 3; i++) {\n    for (int j=0; j < 3; j++) {\n      canvas.save();\n      float translateX=x + (radius * 2) * j + circleSpacing * j;\n      float translateY=y + (radius * 2) * i + circleSpacing * i;\n      canvas.translate(translateX,translateY);\n      paint.setAlpha(ALPHAS[3 * i + j]);\n      canvas.drawCircle(0,0,radius,paint);\n      canvas.restore();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 60
      },
      "nodeContext" : "float radius=(getWidth() - circleSpacing * 4) / 6;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 25,
    "startColumnNumber" : 30,
    "endLineNumber" : 25,
    "endColumnNumber" : 31
  }, {
    "charLength" : 1,
    "startLineNumber" : 26,
    "startColumnNumber" : 53,
    "endLineNumber" : 26,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}