{
  "id" : 348,
  "expression" : "2f",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/comp/FireComp.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2f",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 73,
      "startColumnNumber" : 110,
      "endLineNumber" : 73,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 73,
        "startColumnNumber" : 73,
        "endLineNumber" : 73,
        "endColumnNumber" : 113
      },
      "nodeContext" : "Mathf.clamp(flammability / 5f,0.3f,2f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 73,
        "startColumnNumber" : 45,
        "endLineNumber" : 73,
        "endColumnNumber" : 113
      },
      "nodeContext" : "spreadChance * Time.delta * Mathf.clamp(flammability / 5f,0.3f,2f)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 73,
        "startColumnNumber" : 32,
        "endLineNumber" : 73,
        "endColumnNumber" : 114
      },
      "nodeContext" : "Mathf.chance(spreadChance * Time.delta * Mathf.clamp(flammability / 5f,0.3f,2f))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 73,
        "startColumnNumber" : 11,
        "endLineNumber" : 73,
        "endColumnNumber" : 114
      },
      "nodeContext" : "flammability > 1f && Mathf.chance(spreadChance * Time.delta * Mathf.clamp(flammability / 5f,0.3f,2f))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (flammability > 1f && Mathf.chance(spreadChance * Time.delta * Mathf.clamp(flammability / 5f,0.3f,2f))) {\n  Point2 p=Geometry.d4[Mathf.random(3)];\n  Tile other=world.tile(tile.x + p.x,tile.y + p.y);\n  Fires.create(other);\n  if (Mathf.chance(fireballChance * Time.delta * Mathf.clamp(flammability / 10f))) {\n    Bullets.fireball.createNet(Team.derelict,x,y,Mathf.random(360f),-1f,1,1);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2222,
        "startLineNumber" : 29,
        "startColumnNumber" : 24,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Mathf.chance(0.09 * Time.delta)) {\n    Fx.fire.at(x + Mathf.range(4f),y + Mathf.range(4f));\n  }\n  if (Mathf.chance(0.05 * Time.delta)) {\n    Fx.fireSmoke.at(x + Mathf.range(4f),y + Mathf.range(4f));\n  }\n  if (!headless) {\n    control.sound.loop(Sounds.fire,this,0.07f);\n  }\n  float speedMultiplier=1f + Math.max(state.envAttrs.get(Attribute.water) * 10f,0);\n  time=Mathf.clamp(time + Time.delta * speedMultiplier,0,lifetime);\n  if (Vars.net.client()) {\n    return;\n  }\n  if (time >= lifetime || tile == null) {\n    remove();\n    return;\n  }\n  Building entity=tile.build;\n  boolean damage=entity != null;\n  float flammability=baseFlammability + puddleFlammability;\n  if (!damage && flammability <= 0) {\n    time+=Time.delta * 8;\n  }\n  if (baseFlammability < 0 || block != tile.block()) {\n    baseFlammability=tile.build == null ? 0 : tile.getFlammability();\n    block=tile.block();\n  }\n  if (damage) {\n    lifetime+=Mathf.clamp(flammability / 8f,0f,0.6f) * Time.delta;\n  }\n  if (flammability > 1f && Mathf.chance(spreadChance * Time.delta * Mathf.clamp(flammability / 5f,0.3f,2f))) {\n    Point2 p=Geometry.d4[Mathf.random(3)];\n    Tile other=world.tile(tile.x + p.x,tile.y + p.y);\n    Fires.create(other);\n    if (Mathf.chance(fireballChance * Time.delta * Mathf.clamp(flammability / 10f))) {\n      Bullets.fireball.createNet(Team.derelict,x,y,Mathf.random(360f),-1f,1,1);\n    }\n  }\n  if (Mathf.chance(0.025 * Time.delta)) {\n    Puddlec p=Puddles.get(tile);\n    puddleFlammability=p != null ? p.getFlammability() / 3f : 0;\n    if (damage) {\n      entity.damage(1.6f);\n    }\n    Damage.damageUnits(null,tile.worldx(),tile.worldy(),tilesize,3f,unit -> !unit.isFlying() && !unit.isImmune(StatusEffects.burning),unit -> unit.apply(StatusEffects.burning,60 * 5));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 391,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void update(){\n  if (Mathf.chance(0.09 * Time.delta)) {\n    Fx.fire.at(x + Mathf.range(4f),y + Mathf.range(4f));\n  }\n  if (Mathf.chance(0.05 * Time.delta)) {\n    Fx.fireSmoke.at(x + Mathf.range(4f),y + Mathf.range(4f));\n  }\n  if (!headless) {\n    control.sound.loop(Sounds.fire,this,0.07f);\n  }\n  float speedMultiplier=1f + Math.max(state.envAttrs.get(Attribute.water) * 10f,0);\n  time=Mathf.clamp(time + Time.delta * speedMultiplier,0,lifetime);\n  if (Vars.net.client()) {\n    return;\n  }\n  if (time >= lifetime || tile == null) {\n    remove();\n    return;\n  }\n  Building entity=tile.build;\n  boolean damage=entity != null;\n  float flammability=baseFlammability + puddleFlammability;\n  if (!damage && flammability <= 0) {\n    time+=Time.delta * 8;\n  }\n  if (baseFlammability < 0 || block != tile.block()) {\n    baseFlammability=tile.build == null ? 0 : tile.getFlammability();\n    block=tile.block();\n  }\n  if (damage) {\n    lifetime+=Mathf.clamp(flammability / 8f,0f,0.6f) * Time.delta;\n  }\n  if (flammability > 1f && Mathf.chance(spreadChance * Time.delta * Mathf.clamp(flammability / 5f,0.3f,2f))) {\n    Point2 p=Geometry.d4[Mathf.random(3)];\n    Tile other=world.tile(tile.x + p.x,tile.y + p.y);\n    Fires.create(other);\n    if (Mathf.chance(fireballChance * Time.delta * Mathf.clamp(flammability / 10f))) {\n      Bullets.fireball.createNet(Team.derelict,x,y,Mathf.random(360f),-1f,1,1);\n    }\n  }\n  if (Mathf.chance(0.025 * Time.delta)) {\n    Puddlec p=Puddles.get(tile);\n    puddleFlammability=p != null ? p.getFlammability() / 3f : 0;\n    if (damage) {\n      entity.damage(1.6f);\n    }\n    Damage.damageUnits(null,tile.worldx(),tile.worldy(),tilesize,3f,unit -> !unit.isFlying() && !unit.isImmune(StatusEffects.burning),unit -> unit.apply(StatusEffects.burning,60 * 5));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 397,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 73,
        "startColumnNumber" : 11,
        "endLineNumber" : 73,
        "endColumnNumber" : 114
      },
      "nodeContext" : "flammability > 1f && Mathf.chance(spreadChance * Time.delta * Mathf.clamp(flammability / 5f,0.3f,2f))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 73,
    "startColumnNumber" : 110,
    "endLineNumber" : 73,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ ]
}