{
  "id" : 457,
  "expression" : "\"checking on 120s\"",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/test/java/com/netflix/eureka/registry/TimeConsumingInstanceRegistryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"checking on 120s\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 145,
      "startColumnNumber" : 39,
      "endLineNumber" : 145,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 145,
        "startColumnNumber" : 20,
        "endLineNumber" : 145,
        "endColumnNumber" : 58
      },
      "nodeContext" : "System.out.println(\"checking on 120s\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 145,
        "startColumnNumber" : 20,
        "endLineNumber" : 145,
        "endColumnNumber" : 59
      },
      "nodeContext" : "System.out.println(\"checking on 120s\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 144,
        "startColumnNumber" : 38,
        "endLineNumber" : 150,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  System.out.println(\"checking on 120s\");\n  System.out.println(\"getNumOfRenewsPerMinThreshold=\" + registry.getNumOfRenewsPerMinThreshold());\n  Preconditions.checkState(registry.getNumOfRenewsPerMinThreshold() == 256,\"NumOfRenewsPerMinThreshold should be updated to 256\");\n  Preconditions.checkState(registry.getApplication(LOCAL_REGION_APP_NAME).getInstances().size() == 45,\"There should be 45 instances in application - MYLOCAPP\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 143,
        "startColumnNumber" : 16,
        "endLineNumber" : 150,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void execute(){\n  System.out.println(\"checking on 120s\");\n  System.out.println(\"getNumOfRenewsPerMinThreshold=\" + registry.getNumOfRenewsPerMinThreshold());\n  Preconditions.checkState(registry.getNumOfRenewsPerMinThreshold() == 256,\"NumOfRenewsPerMinThreshold should be updated to 256\");\n  Preconditions.checkState(registry.getApplication(LOCAL_REGION_APP_NAME).getInstances().size() == 45,\"There should be 45 instances in application - MYLOCAPP\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 145,
        "startColumnNumber" : 20,
        "endLineNumber" : 145,
        "endColumnNumber" : 59
      },
      "nodeContext" : "System.out.println(\"checking on 120s\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 145,
    "startColumnNumber" : 39,
    "endLineNumber" : 145,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}