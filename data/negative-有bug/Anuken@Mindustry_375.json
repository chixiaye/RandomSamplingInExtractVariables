{
  "id" : 375,
  "expression" : "\"else if(lastUpdated != 0)\"",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/annotations/src/main/java/mindustry/annotations/entity/EntityIO.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"else if(lastUpdated != 0)\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 208,
      "startColumnNumber" : 14,
      "endLineNumber" : 208,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ncont(\"else if(lastUpdated != 0)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 43
      },
      "nodeContext" : "ncont(\"else if(lastUpdated != 0)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1012,
        "startLineNumber" : 193,
        "startColumnNumber" : 87,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.method=method;\n  cont(\"if(lastUpdated != 0 && updateSpacing != 0)\");\n  st(\"float timeSinceUpdate = Time.timeSinceMillis(lastUpdated)\");\n  st(\"float alpha = Math.min(timeSinceUpdate / updateSpacing, 2f)\");\n  for (  Svar field : fields) {\n    String name=field.name(), targetName=name + targetSuf, lastName=name + lastSuf;\n    st(\"$L = $L($T.$L($L, $L, alpha))\",name,field.annotation(SyncField.class).clamped() ? \"arc.math.Mathf.clamp\" : \"\",Mathf.class,field.annotation(SyncField.class).value() ? \"lerp\" : \"slerp\",lastName,targetName);\n  }\n  ncont(\"else if(lastUpdated != 0)\");\n  for (  Svar field : fields) {\n    String name=field.name(), targetName=name + targetSuf;\n    st(\"$L = $L\",name,targetName);\n  }\n  econt();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 193,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void writeInterpolate(MethodSpec.Builder method,Seq<Svar> fields) throws Exception {\n  this.method=method;\n  cont(\"if(lastUpdated != 0 && updateSpacing != 0)\");\n  st(\"float timeSinceUpdate = Time.timeSinceMillis(lastUpdated)\");\n  st(\"float alpha = Math.min(timeSinceUpdate / updateSpacing, 2f)\");\n  for (  Svar field : fields) {\n    String name=field.name(), targetName=name + targetSuf, lastName=name + lastSuf;\n    st(\"$L = $L($T.$L($L, $L, alpha))\",name,field.annotation(SyncField.class).clamped() ? \"arc.math.Mathf.clamp\" : \"\",Mathf.class,field.annotation(SyncField.class).value() ? \"lerp\" : \"slerp\",lastName,targetName);\n  }\n  ncont(\"else if(lastUpdated != 0)\");\n  for (  Svar field : fields) {\n    String name=field.name(), targetName=name + targetSuf;\n    st(\"$L = $L\",name,targetName);\n  }\n  econt();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 43
      },
      "nodeContext" : "ncont(\"else if(lastUpdated != 0)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 208,
    "startColumnNumber" : 14,
    "endLineNumber" : 208,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}