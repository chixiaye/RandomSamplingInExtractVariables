{
  "id" : 219,
  "expression" : "a + ParticleChannels.InterpolationStartOffset",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ScaleInfluencer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a + ParticleChannels.InterpolationStartOffset",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 38,
      "startColumnNumber" : 30,
      "endLineNumber" : 38,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 76
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 84
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 85
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 35,
        "startColumnNumber" : 106,
        "endLineNumber" : 41,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  float start=value.newLowValue() * controller.scale.x;\n  float diff=value.newHighValue() * controller.scale.x;\n  interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n  interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n  valueChannel.data[i]=start + diff * value.getScale(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 34,
        "startColumnNumber" : 3,
        "endLineNumber" : 41,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n  float start=value.newLowValue() * controller.scale.x;\n  float diff=value.newHighValue() * controller.scale.x;\n  interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n  interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n  valueChannel.data[i]=start + diff * value.getScale(0);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 33,
        "startColumnNumber" : 26,
        "endLineNumber" : 42,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n    float start=value.newLowValue() * controller.scale.x;\n    float diff=value.newHighValue() * controller.scale.x;\n    interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n    valueChannel.data[i]=start + diff * value.getScale(0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1212,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value.isRelative()) {\n  for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n    float start=value.newLowValue() * controller.scale.x;\n    float diff=value.newHighValue() * controller.scale.x;\n    interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n    valueChannel.data[i]=start + diff * value.getScale(0);\n  }\n}\n else {\n  for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n    float start=value.newLowValue() * controller.scale.x;\n    float diff=value.newHighValue() * controller.scale.x - start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n    valueChannel.data[i]=start + diff * value.getScale(0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 218,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 32,
        "startColumnNumber" : 59,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (value.isRelative()) {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n else {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x - start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void activateParticles(int startIndex,int count){\n  if (value.isRelative()) {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n else {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x - start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 85
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "int"
  }, {
    "nodeContext" : "a + ParticleChannels.InterpolationStartOffset",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 47,
      "startColumnNumber" : 30,
      "endLineNumber" : 47,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 76
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 84
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 85
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 44,
        "startColumnNumber" : 106,
        "endLineNumber" : 50,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  float start=value.newLowValue() * controller.scale.x;\n  float diff=value.newHighValue() * controller.scale.x - start;\n  interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n  interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n  valueChannel.data[i]=start + diff * value.getScale(0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 43,
        "startColumnNumber" : 3,
        "endLineNumber" : 50,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n  float start=value.newLowValue() * controller.scale.x;\n  float diff=value.newHighValue() * controller.scale.x - start;\n  interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n  interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n  valueChannel.data[i]=start + diff * value.getScale(0);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 42,
        "startColumnNumber" : 9,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n    float start=value.newLowValue() * controller.scale.x;\n    float diff=value.newHighValue() * controller.scale.x - start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n    valueChannel.data[i]=start + diff * value.getScale(0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1212,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value.isRelative()) {\n  for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n    float start=value.newLowValue() * controller.scale.x;\n    float diff=value.newHighValue() * controller.scale.x;\n    interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n    valueChannel.data[i]=start + diff * value.getScale(0);\n  }\n}\n else {\n  for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n    float start=value.newLowValue() * controller.scale.x;\n    float diff=value.newHighValue() * controller.scale.x - start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n    interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n    valueChannel.data[i]=start + diff * value.getScale(0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 218,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 32,
        "startColumnNumber" : 59,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (value.isRelative()) {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n else {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x - start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 52,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void activateParticles(int startIndex,int count){\n  if (value.isRelative()) {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n else {\n    for (int i=startIndex * valueChannel.strideSize, a=startIndex * interpolationChannel.strideSize, c=i + count * valueChannel.strideSize; i < c; i+=valueChannel.strideSize, a+=interpolationChannel.strideSize) {\n      float start=value.newLowValue() * controller.scale.x;\n      float diff=value.newHighValue() * controller.scale.x - start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n      interpolationChannel.data[a + ParticleChannels.InterpolationDiffOffset]=diff;\n      valueChannel.data[i]=start + diff * value.getScale(0);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 85
      },
      "nodeContext" : "interpolationChannel.data[a + ParticleChannels.InterpolationStartOffset]=start;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 38,
    "startColumnNumber" : 30,
    "endLineNumber" : 38,
    "endColumnNumber" : 75
  }, {
    "charLength" : 45,
    "startLineNumber" : 47,
    "startColumnNumber" : 30,
    "endLineNumber" : 47,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}