{
  "id" : 331,
  "expression" : "i",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/StringUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 101,
      "startColumnNumber" : 28,
      "endLineNumber" : 101,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 101,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 38
      },
      "nodeContext" : "i < strLen",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < strLen; i++) {\n  if (!Character.isWhitespace(string.charAt(i))) {\n    result=false;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 100,
        "startColumnNumber" : 15,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < strLen; i++) {\n    if (!Character.isWhitespace(string.charAt(i))) {\n      result=false;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (string == null || (strLen=string.length()) == 0) {\n  result=true;\n}\n else {\n  for (int i=0; i < strLen; i++) {\n    if (!Character.isWhitespace(string.charAt(i))) {\n      result=false;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 95,
        "startColumnNumber" : 55,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean result=false;\n  int strLen;\n  if (string == null || (strLen=string.length()) == 0) {\n    result=true;\n  }\n else {\n    for (int i=0; i < strLen; i++) {\n      if (!Character.isWhitespace(string.charAt(i))) {\n        result=false;\n        break;\n      }\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 946,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p>Checks if a String is whitespace, empty (\"\") or null.</p> <p/> <pre> StringUtils.isBlank(null)      = true StringUtils.isBlank(\"\")        = true StringUtils.isBlank(\" \")       = true StringUtils.isBlank(\"bob\")     = false StringUtils.isBlank(\"  bob  \") = false </pre>\n * @param string the String to check, may be null\n * @return <code>true</code> if the String is null, empty or whitespace\n */\npublic static boolean isBlank(final String string){\n  boolean result=false;\n  int strLen;\n  if (string == null || (strLen=string.length()) == 0) {\n    result=true;\n  }\n else {\n    for (int i=0; i < strLen; i++) {\n      if (!Character.isWhitespace(string.charAt(i))) {\n        result=false;\n        break;\n      }\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 101,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 38
      },
      "nodeContext" : "i < strLen",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 102,
      "startColumnNumber" : 58,
      "endLineNumber" : 102,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 102,
        "startColumnNumber" : 44,
        "endLineNumber" : 102,
        "endColumnNumber" : 60
      },
      "nodeContext" : "string.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 102,
        "startColumnNumber" : 21,
        "endLineNumber" : 102,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Character.isWhitespace(string.charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 61
      },
      "nodeContext" : "!Character.isWhitespace(string.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 105,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!Character.isWhitespace(string.charAt(i))) {\n  result=false;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 101,
        "startColumnNumber" : 45,
        "endLineNumber" : 106,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!Character.isWhitespace(string.charAt(i))) {\n    result=false;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < strLen; i++) {\n  if (!Character.isWhitespace(string.charAt(i))) {\n    result=false;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 100,
        "startColumnNumber" : 15,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < strLen; i++) {\n    if (!Character.isWhitespace(string.charAt(i))) {\n      result=false;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (string == null || (strLen=string.length()) == 0) {\n  result=true;\n}\n else {\n  for (int i=0; i < strLen; i++) {\n    if (!Character.isWhitespace(string.charAt(i))) {\n      result=false;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 95,
        "startColumnNumber" : 55,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean result=false;\n  int strLen;\n  if (string == null || (strLen=string.length()) == 0) {\n    result=true;\n  }\n else {\n    for (int i=0; i < strLen; i++) {\n      if (!Character.isWhitespace(string.charAt(i))) {\n        result=false;\n        break;\n      }\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 946,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p>Checks if a String is whitespace, empty (\"\") or null.</p> <p/> <pre> StringUtils.isBlank(null)      = true StringUtils.isBlank(\"\")        = true StringUtils.isBlank(\" \")       = true StringUtils.isBlank(\"bob\")     = false StringUtils.isBlank(\"  bob  \") = false </pre>\n * @param string the String to check, may be null\n * @return <code>true</code> if the String is null, empty or whitespace\n */\npublic static boolean isBlank(final String string){\n  boolean result=false;\n  int strLen;\n  if (string == null || (strLen=string.length()) == 0) {\n    result=true;\n  }\n else {\n    for (int i=0; i < strLen; i++) {\n      if (!Character.isWhitespace(string.charAt(i))) {\n        result=false;\n        break;\n      }\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 61
      },
      "nodeContext" : "!Character.isWhitespace(string.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 101,
    "startColumnNumber" : 28,
    "endLineNumber" : 101,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 102,
    "startColumnNumber" : 58,
    "endLineNumber" : 102,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}