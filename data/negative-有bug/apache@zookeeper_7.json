{
  "id" : 7,
  "expression" : "\"Updating keyStore & trustStore files !!!!\"",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/zookeeper-server/src/test/java/org/apache/zookeeper/server/ClientSSLReloadTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Updating keyStore & trustStore files !!!!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 153,
      "startColumnNumber" : 21,
      "endLineNumber" : 153,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Log.info(\"Updating keyStore & trustStore files !!!!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Log.info(\"Updating keyStore & trustStore files !!!!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3828,
        "startLineNumber" : 125,
        "startColumnNumber" : 26,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  zkServer.start();\n  assertTrue(ClientBase.waitForServerUp(zkServer.getConnectionString(),60000));\n  for (int i=0; i < 100; i++) {\n    ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n    if (status.isLeader() && status.isStandaloneMode()) {\n      break;\n    }\n    Thread.sleep(100);\n  }\n  ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n  assertTrue(status.isLeader());\n  assertTrue(status.isStandaloneMode());\n  CountDownLatch l=new CountDownLatch(1);\n  ZKClientConfig zKClientConfig=getZKClientConfig();\n  try (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(  WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:      l.countDown();\n    break;\n}\n}\n,zKClientConfig)){\nassertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\nassertTrue(l.await(10,TimeUnit.SECONDS));\n}\n Log.info(\"Updating keyStore & trustStore files !!!!\");\nFileUtils.writeStringToFile(keyStoreFile1,FileUtils.readFileToString(keyStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nFileUtils.writeStringToFile(trustStoreFile1,FileUtils.readFileToString(trustStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nfor (int i=0; i < 5; i++) {\nCountDownLatch l2=new CountDownLatch(1);\nThread.sleep(5000);\ntry (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:    l.countDown();\n  break;\n}\n}\n,zKClientConfig)){\nif (!l2.await(5,TimeUnit.SECONDS)) {\nLOG.error(\"Unable to connect to zk server\");\nbreak;\n}\n}\n }\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.location\",keyStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.location\",trustStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.type\",\"PEM\");\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.type\",\"PEM\");\nCountDownLatch l3=new CountDownLatch(1);\ntry (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:l3.countDown();\nbreak;\n}\n}\n,zKClientConfig)){\nassertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\nassertTrue(l3.await(10,TimeUnit.SECONDS));\n}\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4089,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (ZooKeeperServerEmbedded zkServer=ZooKeeperServerEmbedded.builder().baseDir(dir1.toPath()).configuration(configZookeeper).exitHandler(ExitHandler.LOG_ONLY).build()){\n  zkServer.start();\n  assertTrue(ClientBase.waitForServerUp(zkServer.getConnectionString(),60000));\n  for (int i=0; i < 100; i++) {\n    ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n    if (status.isLeader() && status.isStandaloneMode()) {\n      break;\n    }\n    Thread.sleep(100);\n  }\n  ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n  assertTrue(status.isLeader());\n  assertTrue(status.isStandaloneMode());\n  CountDownLatch l=new CountDownLatch(1);\n  ZKClientConfig zKClientConfig=getZKClientConfig();\n  try (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(  WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:      l.countDown();\n    break;\n}\n}\n,zKClientConfig)){\nassertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\nassertTrue(l.await(10,TimeUnit.SECONDS));\n}\n Log.info(\"Updating keyStore & trustStore files !!!!\");\nFileUtils.writeStringToFile(keyStoreFile1,FileUtils.readFileToString(keyStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nFileUtils.writeStringToFile(trustStoreFile1,FileUtils.readFileToString(trustStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nfor (int i=0; i < 5; i++) {\nCountDownLatch l2=new CountDownLatch(1);\nThread.sleep(5000);\ntry (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:    l.countDown();\n  break;\n}\n}\n,zKClientConfig)){\nif (!l2.await(5,TimeUnit.SECONDS)) {\nLOG.error(\"Unable to connect to zk server\");\nbreak;\n}\n}\n }\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.location\",keyStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.location\",trustStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.type\",\"PEM\");\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.type\",\"PEM\");\nCountDownLatch l3=new CountDownLatch(1);\ntry (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:l3.countDown();\nbreak;\n}\n}\n,zKClientConfig)){\nassertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\nassertTrue(l3.await(10,TimeUnit.SECONDS));\n}\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 370,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4172,
        "startLineNumber" : 117,
        "startColumnNumber" : 56,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Properties configZookeeper=getServerConfig();\n  try (ZooKeeperServerEmbedded zkServer=ZooKeeperServerEmbedded.builder().baseDir(dir1.toPath()).configuration(configZookeeper).exitHandler(ExitHandler.LOG_ONLY).build()){\n    zkServer.start();\n    assertTrue(ClientBase.waitForServerUp(zkServer.getConnectionString(),60000));\n    for (int i=0; i < 100; i++) {\n      ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n      if (status.isLeader() && status.isStandaloneMode()) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n    assertTrue(status.isLeader());\n    assertTrue(status.isStandaloneMode());\n    CountDownLatch l=new CountDownLatch(1);\n    ZKClientConfig zKClientConfig=getZKClientConfig();\n    try (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(    WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:        l.countDown();\n      break;\n  }\n}\n,zKClientConfig)){\n  assertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\n  assertTrue(l.await(10,TimeUnit.SECONDS));\n}\n Log.info(\"Updating keyStore & trustStore files !!!!\");\nFileUtils.writeStringToFile(keyStoreFile1,FileUtils.readFileToString(keyStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nFileUtils.writeStringToFile(trustStoreFile1,FileUtils.readFileToString(trustStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nfor (int i=0; i < 5; i++) {\n  CountDownLatch l2=new CountDownLatch(1);\n  Thread.sleep(5000);\n  try (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(  WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:      l.countDown();\n    break;\n}\n}\n,zKClientConfig)){\nif (!l2.await(5,TimeUnit.SECONDS)) {\n  LOG.error(\"Unable to connect to zk server\");\n  break;\n}\n}\n }\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.location\",keyStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.location\",trustStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.type\",\"PEM\");\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.type\",\"PEM\");\nCountDownLatch l3=new CountDownLatch(1);\ntry (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:l3.countDown();\nbreak;\n}\n}\n,zKClientConfig)){\nassertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\nassertTrue(l3.await(10,TimeUnit.SECONDS));\n}\n }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4235,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void certficateReloadTest() throws Exception {\n  final Properties configZookeeper=getServerConfig();\n  try (ZooKeeperServerEmbedded zkServer=ZooKeeperServerEmbedded.builder().baseDir(dir1.toPath()).configuration(configZookeeper).exitHandler(ExitHandler.LOG_ONLY).build()){\n    zkServer.start();\n    assertTrue(ClientBase.waitForServerUp(zkServer.getConnectionString(),60000));\n    for (int i=0; i < 100; i++) {\n      ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n      if (status.isLeader() && status.isStandaloneMode()) {\n        break;\n      }\n      Thread.sleep(100);\n    }\n    ZookeeperServeInfo.ServerInfo status=ZookeeperServeInfo.getStatus(\"StandaloneServer*\");\n    assertTrue(status.isLeader());\n    assertTrue(status.isStandaloneMode());\n    CountDownLatch l=new CountDownLatch(1);\n    ZKClientConfig zKClientConfig=getZKClientConfig();\n    try (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(    WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:        l.countDown();\n      break;\n  }\n}\n,zKClientConfig)){\n  assertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\n  assertTrue(l.await(10,TimeUnit.SECONDS));\n}\n Log.info(\"Updating keyStore & trustStore files !!!!\");\nFileUtils.writeStringToFile(keyStoreFile1,FileUtils.readFileToString(keyStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nFileUtils.writeStringToFile(trustStoreFile1,FileUtils.readFileToString(trustStoreFile2,StandardCharsets.US_ASCII),StandardCharsets.US_ASCII,false);\nfor (int i=0; i < 5; i++) {\n  CountDownLatch l2=new CountDownLatch(1);\n  Thread.sleep(5000);\n  try (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(  WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:      l.countDown();\n    break;\n}\n}\n,zKClientConfig)){\nif (!l2.await(5,TimeUnit.SECONDS)) {\n  LOG.error(\"Unable to connect to zk server\");\n  break;\n}\n}\n }\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.location\",keyStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.location\",trustStoreFile2.getAbsolutePath());\nzKClientConfig.setProperty(\"zookeeper.ssl.keyStore.type\",\"PEM\");\nzKClientConfig.setProperty(\"zookeeper.ssl.trustStore.type\",\"PEM\");\nCountDownLatch l3=new CountDownLatch(1);\ntry (ZooKeeper zk=new ZooKeeper(zkServer.getSecureConnectionString(),60000,(WatchedEvent event) -> {\nswitch (event.getState()) {\ncase SyncConnected:l3.countDown();\nbreak;\n}\n}\n,zKClientConfig)){\nassertTrue(zk.getClientConfig().getBoolean(ZKClientConfig.SECURE_CLIENT));\nassertTrue(l3.await(10,TimeUnit.SECONDS));\n}\n }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 387,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 153,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Log.info(\"Updating keyStore & trustStore files !!!!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 153,
    "startColumnNumber" : 21,
    "endLineNumber" : 153,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}