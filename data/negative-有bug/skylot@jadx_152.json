{
  "id" : 152,
  "expression" : "node",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/utils/ErrorsCounter.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 40,
      "startColumnNumber" : 17,
      "endLineNumber" : 40,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 22
      },
      "nodeContext" : "errorNodes.add(node)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 23
      },
      "nodeContext" : "errorNodes.add(node);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 39,
        "startColumnNumber" : 121,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 39,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private synchronized <N extends IDexNode & IAttributeNode>String addError(N node,String error,@Nullable Throwable e){\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 23
      },
      "nodeContext" : "errorNodes.add(node);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "N"
  }, {
    "nodeContext" : "node",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 43,
      "startColumnNumber" : 25,
      "endLineNumber" : 43,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 43,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 37
      },
      "nodeContext" : "formatMsg(node,error)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 43,
        "startColumnNumber" : 9,
        "endLineNumber" : 43,
        "endColumnNumber" : 37
      },
      "nodeContext" : "msg=formatMsg(node,error)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 38
      },
      "nodeContext" : "String msg=formatMsg(node,error);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 39,
        "startColumnNumber" : 121,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 39,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private synchronized <N extends IDexNode & IAttributeNode>String addError(N node,String error,@Nullable Throwable e){\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 38
      },
      "nodeContext" : "String msg=formatMsg(node,error);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "N"
  }, {
    "nodeContext" : "node",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 2,
      "endLineNumber" : 54,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 57
      },
      "nodeContext" : "node.addAttr(AType.JADX_ERROR,new JadxError(error,e))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 58
      },
      "nodeContext" : "node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 39,
        "startColumnNumber" : 121,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 39,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private synchronized <N extends IDexNode & IAttributeNode>String addError(N node,String error,@Nullable Throwable e){\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 58
      },
      "nodeContext" : "node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "N"
  }, {
    "nodeContext" : "node",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 55,
      "startColumnNumber" : 2,
      "endLineNumber" : 55,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 38
      },
      "nodeContext" : "node.remove(AFlag.INCONSISTENT_CODE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 39
      },
      "nodeContext" : "node.remove(AFlag.INCONSISTENT_CODE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 39,
        "startColumnNumber" : 121,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 39,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private synchronized <N extends IDexNode & IAttributeNode>String addError(N node,String error,@Nullable Throwable e){\n  errorNodes.add(node);\n  errorsCount++;\n  String msg=formatMsg(node,error);\n  if (e == null) {\n    LOG.error(msg);\n  }\n else   if (e instanceof JadxOverflowException) {\n    e=new JadxOverflowException(e.getMessage());\n    LOG.error(\"{}, details: {}\",msg,e.getMessage());\n  }\n else {\n    LOG.error(msg,e);\n  }\n  node.addAttr(AType.JADX_ERROR,new JadxError(error,e));\n  node.remove(AFlag.INCONSISTENT_CODE);\n  return msg;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 39
      },
      "nodeContext" : "node.remove(AFlag.INCONSISTENT_CODE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "N"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 40,
    "startColumnNumber" : 17,
    "endLineNumber" : 40,
    "endColumnNumber" : 21
  }, {
    "charLength" : 4,
    "startLineNumber" : 43,
    "startColumnNumber" : 25,
    "endLineNumber" : 43,
    "endColumnNumber" : 29
  }, {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 2,
    "endLineNumber" : 54,
    "endColumnNumber" : 6
  }, {
    "charLength" : 4,
    "startLineNumber" : 55,
    "startColumnNumber" : 2,
    "endLineNumber" : 55,
    "endColumnNumber" : 6
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}