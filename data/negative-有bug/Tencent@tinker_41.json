{
  "id" : 41,
  "expression" : "new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS])",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader-no-op/src/main/java/com/tencent/tinker/loader/shareutil/ShareElfFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS])",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 60,
      "startColumnNumber" : 32,
      "endLineNumber" : 60,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 102
      },
      "nodeContext" : "programHeaders[i]=new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 103
      },
      "nodeContext" : "programHeaders[i]=new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 58,
        "startColumnNumber" : 56,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  readUntilLimit(channel,headerBuffer,\"failed to read phdr.\");\n  programHeaders[i]=new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < programHeaders.length; ++i) {\n  readUntilLimit(channel,headerBuffer,\"failed to read phdr.\");\n  programHeaders[i]=new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1620,
        "startLineNumber" : 46,
        "startColumnNumber" : 54,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  fis=new FileInputStream(file);\n  final FileChannel channel=fis.getChannel();\n  elfHeader=new ElfHeader(channel);\n  final ByteBuffer headerBuffer=ByteBuffer.allocate(128);\n  headerBuffer.limit(elfHeader.ePhEntSize);\n  headerBuffer.order(elfHeader.eIndent[ElfHeader.EI_DATA] == ElfHeader.ELFDATA2LSB ? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN);\n  channel.position(elfHeader.ePhOff);\n  programHeaders=new ProgramHeader[elfHeader.ePhNum];\n  for (int i=0; i < programHeaders.length; ++i) {\n    readUntilLimit(channel,headerBuffer,\"failed to read phdr.\");\n    programHeaders[i]=new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n  }\n  channel.position(elfHeader.eShOff);\n  headerBuffer.limit(elfHeader.eShEntSize);\n  sectionHeaders=new SectionHeader[elfHeader.eShNum];\n  for (int i=0; i < sectionHeaders.length; ++i) {\n    readUntilLimit(channel,headerBuffer,\"failed to read shdr.\");\n    sectionHeaders[i]=new SectionHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n  }\n  if (elfHeader.eShStrNdx > 0) {\n    final SectionHeader shStrTabSectionHeader=sectionHeaders[elfHeader.eShStrNdx];\n    final ByteBuffer shStrTab=getSection(shStrTabSectionHeader);\n    for (    SectionHeader shdr : sectionHeaders) {\n      shStrTab.position(shdr.shName);\n      shdr.shNameStr=readCString(shStrTab);\n      sectionNameToHeaderMap.put(shdr.shNameStr,shdr);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1670,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ShareElfFile(File file) throws IOException {\n  fis=new FileInputStream(file);\n  final FileChannel channel=fis.getChannel();\n  elfHeader=new ElfHeader(channel);\n  final ByteBuffer headerBuffer=ByteBuffer.allocate(128);\n  headerBuffer.limit(elfHeader.ePhEntSize);\n  headerBuffer.order(elfHeader.eIndent[ElfHeader.EI_DATA] == ElfHeader.ELFDATA2LSB ? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN);\n  channel.position(elfHeader.ePhOff);\n  programHeaders=new ProgramHeader[elfHeader.ePhNum];\n  for (int i=0; i < programHeaders.length; ++i) {\n    readUntilLimit(channel,headerBuffer,\"failed to read phdr.\");\n    programHeaders[i]=new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n  }\n  channel.position(elfHeader.eShOff);\n  headerBuffer.limit(elfHeader.eShEntSize);\n  sectionHeaders=new SectionHeader[elfHeader.eShNum];\n  for (int i=0; i < sectionHeaders.length; ++i) {\n    readUntilLimit(channel,headerBuffer,\"failed to read shdr.\");\n    sectionHeaders[i]=new SectionHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n  }\n  if (elfHeader.eShStrNdx > 0) {\n    final SectionHeader shStrTabSectionHeader=sectionHeaders[elfHeader.eShStrNdx];\n    final ByteBuffer shStrTab=getSection(shStrTabSectionHeader);\n    for (    SectionHeader shdr : sectionHeaders) {\n      shStrTab.position(shdr.shName);\n      shdr.shNameStr=readCString(shStrTab);\n      sectionNameToHeaderMap.put(shdr.shNameStr,shdr);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 103
      },
      "nodeContext" : "programHeaders[i]=new ProgramHeader(headerBuffer,elfHeader.eIndent[ElfHeader.EI_CLASS]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "com.tencent.tinker.loader.shareutil.ShareElfFile.ProgramHeader"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 60,
    "startColumnNumber" : 32,
    "endLineNumber" : 60,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ ]
}