{
  "id" : 454,
  "expression" : "firstConnection",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/test/java/com/netflix/eureka2/channel/AbstractClientChannelTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "firstConnection",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 45,
      "startColumnNumber" : 41,
      "endLineNumber" : 45,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(messageConnection1,firstConnection)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(messageConnection1,firstConnection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 40,
        "startColumnNumber" : 58,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MessageConnection firstConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  MessageConnection secondConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  assertEquals(messageConnection1,firstConnection);\n  assertEquals(messageConnection1,secondConnection);\n  assertNotEquals(messageConnection2,firstConnection);\n  assertNotEquals(messageConnection2,secondConnection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultipleConnectReturnSameConnection(){\n  MessageConnection firstConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  MessageConnection secondConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  assertEquals(messageConnection1,firstConnection);\n  assertEquals(messageConnection1,secondConnection);\n  assertNotEquals(messageConnection2,firstConnection);\n  assertNotEquals(messageConnection2,secondConnection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(messageConnection1,firstConnection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.transport.MessageConnection"
  }, {
    "nodeContext" : "firstConnection",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 47,
      "startColumnNumber" : 44,
      "endLineNumber" : 47,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertNotEquals(messageConnection2,firstConnection)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertNotEquals(messageConnection2,firstConnection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 40,
        "startColumnNumber" : 58,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MessageConnection firstConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  MessageConnection secondConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  assertEquals(messageConnection1,firstConnection);\n  assertEquals(messageConnection1,secondConnection);\n  assertNotEquals(messageConnection2,firstConnection);\n  assertNotEquals(messageConnection2,secondConnection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultipleConnectReturnSameConnection(){\n  MessageConnection firstConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  MessageConnection secondConnection=(MessageConnection)channel.connect().toBlocking().firstOrDefault(null);\n  assertEquals(messageConnection1,firstConnection);\n  assertEquals(messageConnection1,secondConnection);\n  assertNotEquals(messageConnection2,firstConnection);\n  assertNotEquals(messageConnection2,secondConnection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertNotEquals(messageConnection2,firstConnection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.transport.MessageConnection"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 45,
    "startColumnNumber" : 41,
    "endLineNumber" : 45,
    "endColumnNumber" : 56
  }, {
    "charLength" : 15,
    "startLineNumber" : 47,
    "startColumnNumber" : 44,
    "endLineNumber" : 47,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}