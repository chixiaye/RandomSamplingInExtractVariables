{
  "id" : 20,
  "expression" : "\"0\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestVocabulary.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 30,
      "startColumnNumber" : 22,
      "endLineNumber" : 30,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 30,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertEquals(\"0\",VocabularyImpl.EMPTY_VOCABULARY.getDisplayName(Token.INVALID_TYPE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Assert.assertEquals(\"0\",VocabularyImpl.EMPTY_VOCABULARY.getDisplayName(Token.INVALID_TYPE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 27,
        "startColumnNumber" : 35,
        "endLineNumber" : 31,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.assertNotNull(VocabularyImpl.EMPTY_VOCABULARY);\n  Assert.assertEquals(\"EOF\",VocabularyImpl.EMPTY_VOCABULARY.getSymbolicName(Token.EOF));\n  Assert.assertEquals(\"0\",VocabularyImpl.EMPTY_VOCABULARY.getDisplayName(Token.INVALID_TYPE));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 26,
        "startColumnNumber" : 1,
        "endLineNumber" : 31,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testEmptyVocabulary(){\n  Assert.assertNotNull(VocabularyImpl.EMPTY_VOCABULARY);\n  Assert.assertEquals(\"EOF\",VocabularyImpl.EMPTY_VOCABULARY.getSymbolicName(Token.EOF));\n  Assert.assertEquals(\"0\",VocabularyImpl.EMPTY_VOCABULARY.getDisplayName(Token.INVALID_TYPE));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Assert.assertEquals(\"0\",VocabularyImpl.EMPTY_VOCABULARY.getDisplayName(Token.INVALID_TYPE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 30,
    "startColumnNumber" : 22,
    "endLineNumber" : 30,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}