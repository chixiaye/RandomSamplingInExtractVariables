{
  "id" : 228,
  "expression" : "pulsarClient.newConsumer().topic(topicName)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/NonPersistentTopicE2ETest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pulsarClient.newConsumer().topic(topicName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 109,
      "startColumnNumber" : 36,
      "endLineNumber" : 109,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 109,
        "startColumnNumber" : 36,
        "endLineNumber" : 109,
        "endColumnNumber" : 105
      },
      "nodeContext" : "pulsarClient.newConsumer().topic(topicName).subscriptionName(subName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 109,
        "startColumnNumber" : 36,
        "endLineNumber" : 109,
        "endColumnNumber" : 117
      },
      "nodeContext" : "pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 109,
        "startColumnNumber" : 25,
        "endLineNumber" : 109,
        "endColumnNumber" : 117
      },
      "nodeContext" : "consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 118
      },
      "nodeContext" : "Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2595,
        "startLineNumber" : 83,
        "startColumnNumber" : 58,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String topicName=\"non-persistent://prop/ns-abc/topic-1\";\n  Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  producer.close();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-1a\";\n  String subName=\"sub1\";\n  Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-2\";\n  subName=\"sub1\";\n  consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 339,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2678,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(groups=\"broker\") public void testGCWillDeleteSchema() throws Exception {\n  String topicName=\"non-persistent://prop/ns-abc/topic-1\";\n  Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  producer.close();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-1a\";\n  String subName=\"sub1\";\n  Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-2\";\n  subName=\"sub1\";\n  consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 118
      },
      "nodeContext" : "Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.api.ConsumerBuilder<byte[]>"
  }, {
    "nodeContext" : "pulsarClient.newConsumer().topic(topicName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 126,
      "startColumnNumber" : 19,
      "endLineNumber" : 126,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 126,
        "startColumnNumber" : 19,
        "endLineNumber" : 126,
        "endColumnNumber" : 88
      },
      "nodeContext" : "pulsarClient.newConsumer().topic(topicName).subscriptionName(subName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 126,
        "startColumnNumber" : 19,
        "endLineNumber" : 126,
        "endColumnNumber" : 100
      },
      "nodeContext" : "pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 100
      },
      "nodeContext" : "consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 101
      },
      "nodeContext" : "consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2595,
        "startLineNumber" : 83,
        "startColumnNumber" : 58,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String topicName=\"non-persistent://prop/ns-abc/topic-1\";\n  Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  producer.close();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-1a\";\n  String subName=\"sub1\";\n  Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-2\";\n  subName=\"sub1\";\n  consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 339,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2678,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(groups=\"broker\") public void testGCWillDeleteSchema() throws Exception {\n  String topicName=\"non-persistent://prop/ns-abc/topic-1\";\n  Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  producer.close();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-1a\";\n  String subName=\"sub1\";\n  Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n  topicName=\"non-persistent://prop/ns-abc/topic-2\";\n  subName=\"sub1\";\n  consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  consumer.close();\n  runGC();\n  topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  assertTrue(topicHasSchema(topicName));\n  admin.topics().deleteSubscription(topicName,subName);\n  runGC();\n  topic=getTopic(topicName);\n  assertFalse(topic.isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 101
      },
      "nodeContext" : "consumer=pulsarClient.newConsumer().topic(topicName).subscriptionName(subName).subscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.api.ConsumerBuilder<byte[]>"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 109,
    "startColumnNumber" : 36,
    "endLineNumber" : 109,
    "endColumnNumber" : 79
  }, {
    "charLength" : 43,
    "startLineNumber" : 126,
    "startColumnNumber" : 19,
    "endLineNumber" : 126,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}