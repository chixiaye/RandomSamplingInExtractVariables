{
  "id" : 289,
  "expression" : "Short.class",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/convert/impl/PrimitiveConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Short.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 75,
      "startColumnNumber" : 66,
      "endLineNumber" : 75,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 75,
        "startColumnNumber" : 35,
        "endLineNumber" : 75,
        "endColumnNumber" : 92
      },
      "nodeContext" : "NumberConverter.convert(value,Short.class,toStringFunc)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 75,
        "startColumnNumber" : 10,
        "endLineNumber" : 75,
        "endColumnNumber" : 96
      },
      "nodeContext" : "ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 75,
        "startColumnNumber" : 3,
        "endLineNumber" : 75,
        "endColumnNumber" : 97
      },
      "nodeContext" : "return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 74,
        "startColumnNumber" : 44,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (short.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0);\n}\n else if (int.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Integer.class,toStringFunc),0);\n}\n else if (long.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Long.class,toStringFunc),0);\n}\n else if (float.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Float.class,toStringFunc),0);\n}\n else if (double.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Double.class,toStringFunc),0);\n}\n else if (char.class == primitiveClass) {\n  return Convert.convert(Character.class,value);\n}\n else if (boolean.class == primitiveClass) {\n  return Convert.convert(Boolean.class,value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 123,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1065,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (byte.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Byte.class,toStringFunc),0);\n}\n else if (short.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0);\n}\n else if (int.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Integer.class,toStringFunc),0);\n}\n else if (long.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Long.class,toStringFunc),0);\n}\n else if (float.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Float.class,toStringFunc),0);\n}\n else if (double.class == primitiveClass) {\n  return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Double.class,toStringFunc),0);\n}\n else if (char.class == primitiveClass) {\n  return Convert.convert(Character.class,value);\n}\n else if (boolean.class == primitiveClass) {\n  return Convert.convert(Boolean.class,value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 71,
        "startColumnNumber" : 111,
        "endLineNumber" : 91,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (byte.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Byte.class,toStringFunc),0);\n  }\n else   if (short.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0);\n  }\n else   if (int.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Integer.class,toStringFunc),0);\n  }\n else   if (long.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Long.class,toStringFunc),0);\n  }\n else   if (float.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Float.class,toStringFunc),0);\n  }\n else   if (double.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Double.class,toStringFunc),0);\n  }\n else   if (char.class == primitiveClass) {\n    return Convert.convert(Character.class,value);\n  }\n else   if (boolean.class == primitiveClass) {\n    return Convert.convert(Boolean.class,value);\n  }\n  throw new ConvertException(\"Unsupported target type: {}\",primitiveClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 91,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 将指定值转换为原始类型的值\n * @param value 值\n * @param primitiveClass 原始类型\n * @param toStringFunc 当无法直接转换时，转为字符串后再转换的函数\n * @return 转换结果\n * @since 5.5.0\n */\nprotected static Object convert(Object value,Class<?> primitiveClass,Function<Object,String> toStringFunc){\n  if (byte.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Byte.class,toStringFunc),0);\n  }\n else   if (short.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0);\n  }\n else   if (int.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Integer.class,toStringFunc),0);\n  }\n else   if (long.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Long.class,toStringFunc),0);\n  }\n else   if (float.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Float.class,toStringFunc),0);\n  }\n else   if (double.class == primitiveClass) {\n    return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Double.class,toStringFunc),0);\n  }\n else   if (char.class == primitiveClass) {\n    return Convert.convert(Character.class,value);\n  }\n else   if (boolean.class == primitiveClass) {\n    return Convert.convert(Boolean.class,value);\n  }\n  throw new ConvertException(\"Unsupported target type: {}\",primitiveClass);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 75,
        "startColumnNumber" : 3,
        "endLineNumber" : 75,
        "endColumnNumber" : 97
      },
      "nodeContext" : "return ObjectUtil.defaultIfNull(NumberConverter.convert(value,Short.class,toStringFunc),0);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Short>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 75,
    "startColumnNumber" : 66,
    "endLineNumber" : 75,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}