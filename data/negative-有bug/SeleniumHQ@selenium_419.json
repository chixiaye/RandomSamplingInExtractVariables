{
  "id" : 419,
  "expression" : "this::createTmpFile",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/UploadTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this::createTmpFile",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 99,
      "startColumnNumber" : 13,
      "endLineNumber" : 99,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 97,
        "startColumnNumber" : 23,
        "endLineNumber" : 99,
        "endColumnNumber" : 33
      },
      "nodeContext" : "multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 97,
        "startColumnNumber" : 23,
        "endLineNumber" : 100,
        "endColumnNumber" : 35
      },
      "nodeContext" : "multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile).map(File::getAbsolutePath)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 97,
        "startColumnNumber" : 23,
        "endLineNumber" : 101,
        "endColumnNumber" : 42
      },
      "nodeContext" : "multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile).map(File::getAbsolutePath).collect(Collectors.joining(\"\\n\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 97,
        "startColumnNumber" : 11,
        "endLineNumber" : 101,
        "endColumnNumber" : 42
      },
      "nodeContext" : "fileNames=multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile).map(File::getAbsolutePath).collect(Collectors.joining(\"\\n\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 43
      },
      "nodeContext" : "String fileNames=multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile).map(File::getAbsolutePath).collect(Collectors.joining(\"\\n\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 95,
        "startColumnNumber" : 42,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<String> multiContent=Arrays.asList(LOREM_IPSUM_TEXT,LOREM_IPSUM_TEXT,LOREM_IPSUM_TEXT);\n  String fileNames=multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile).map(File::getAbsolutePath).collect(Collectors.joining(\"\\n\"));\n  assumeFalse(\"This test as written assumes a file on local disk is accessible to the browser. \" + \"That is not true for browsers on mobile platforms.\",TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n  driver.get(pages.uploadPage);\n  driver.findElement(By.id(\"upload\")).sendKeys(fileNames);\n  driver.findElement(By.id(\"go\")).click();\n  WebElement label=driver.findElement(By.id(\"upload_label\"));\n  wait.until(not(visibilityOf(label)));\n  driver.switchTo().frame(\"upload_target\");\n  WebElement body=driver.findElement(By.xpath(\"//body\"));\n  wait.until(elementTextToEqual(body,String.join(\"\\n\",multiContent)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SwitchToTopAfterTest @Test @NotYetImplemented(value=SAFARI,reason=\"Returns wrong text of the frame body\") public void testMultipleFileUploading(){\n  List<String> multiContent=Arrays.asList(LOREM_IPSUM_TEXT,LOREM_IPSUM_TEXT,LOREM_IPSUM_TEXT);\n  String fileNames=multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile).map(File::getAbsolutePath).collect(Collectors.joining(\"\\n\"));\n  assumeFalse(\"This test as written assumes a file on local disk is accessible to the browser. \" + \"That is not true for browsers on mobile platforms.\",TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n  driver.get(pages.uploadPage);\n  driver.findElement(By.id(\"upload\")).sendKeys(fileNames);\n  driver.findElement(By.id(\"go\")).click();\n  WebElement label=driver.findElement(By.id(\"upload_label\"));\n  wait.until(not(visibilityOf(label)));\n  driver.switchTo().frame(\"upload_target\");\n  WebElement body=driver.findElement(By.xpath(\"//body\"));\n  wait.until(elementTextToEqual(body,String.join(\"\\n\",multiContent)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 97,
        "startColumnNumber" : 23,
        "endLineNumber" : 99,
        "endColumnNumber" : 33
      },
      "nodeContext" : "multiContent.stream().map(text -> \"<div>\" + text + \"</div>\").map(this::createTmpFile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.function.Function<? super java.lang.String,? extends java.io.File>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 99,
    "startColumnNumber" : 13,
    "endLineNumber" : 99,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}