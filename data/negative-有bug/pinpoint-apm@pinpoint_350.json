{
  "id" : 350,
  "expression" : "new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand)",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/transformer/MatchableTransformerRegistry.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 143,
      "startLineNumber" : 185,
      "startColumnNumber" : 22,
      "endLineNumber" : 185,
      "endColumnNumber" : 165
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 166
      },
      "nodeContext" : "throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 184,
        "startColumnNumber" : 19,
        "endLineNumber" : 186,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 180,
        "startColumnNumber" : 19,
        "endLineNumber" : 186,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (operand instanceof PackageInternalNameMatcherOperand) {\n  PackageInternalNameMatcherOperand packageInternalNameMatcherOperand=(PackageInternalNameMatcherOperand)operand;\n  addIndexData(packageInternalNameMatcherOperand.getPackageInternalName(),indexValue,this.packageNameBasedIndex);\n  indexed=true;\n}\n else {\n  throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 173,
        "startColumnNumber" : 12,
        "endLineNumber" : 186,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (operand instanceof ClassInternalNameMatcherOperand) {\n  ClassInternalNameMatcherOperand classInternalNameMatcherOperand=(ClassInternalNameMatcherOperand)operand;\n  final IndexValue prev=classNameBasedIndex.put(classInternalNameMatcherOperand.getClassInternalName(),indexValue);\n  if (prev != null) {\n    throw new IllegalStateException(\"Transformer already exist. class=\" + classInternalNameMatcherOperand.getClassInternalName() + \", new=\"+ indexValue+ \", prev=\"+ prev);\n  }\n  indexed=true;\n}\n else if (operand instanceof PackageInternalNameMatcherOperand) {\n  PackageInternalNameMatcherOperand packageInternalNameMatcherOperand=(PackageInternalNameMatcherOperand)operand;\n  addIndexData(packageInternalNameMatcherOperand.getPackageInternalName(),indexValue,this.packageNameBasedIndex);\n  indexed=true;\n}\n else {\n  throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 172,
        "startColumnNumber" : 62,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (operand instanceof ClassInternalNameMatcherOperand) {\n    ClassInternalNameMatcherOperand classInternalNameMatcherOperand=(ClassInternalNameMatcherOperand)operand;\n    final IndexValue prev=classNameBasedIndex.put(classInternalNameMatcherOperand.getClassInternalName(),indexValue);\n    if (prev != null) {\n      throw new IllegalStateException(\"Transformer already exist. class=\" + classInternalNameMatcherOperand.getClassInternalName() + \", new=\"+ indexValue+ \", prev=\"+ prev);\n    }\n    indexed=true;\n  }\n else   if (operand instanceof PackageInternalNameMatcherOperand) {\n    PackageInternalNameMatcherOperand packageInternalNameMatcherOperand=(PackageInternalNameMatcherOperand)operand;\n    addIndexData(packageInternalNameMatcherOperand.getPackageInternalName(),indexValue,this.packageNameBasedIndex);\n    indexed=true;\n  }\n else {\n    throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n  }\n  if (!indexed) {\n    throw new IllegalArgumentException(\"invalid matcher or execution planner - no such indexed operand. operand=\" + condition);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (MatcherOperand operand : indexedMatcherOperands) {\n  if (operand instanceof ClassInternalNameMatcherOperand) {\n    ClassInternalNameMatcherOperand classInternalNameMatcherOperand=(ClassInternalNameMatcherOperand)operand;\n    final IndexValue prev=classNameBasedIndex.put(classInternalNameMatcherOperand.getClassInternalName(),indexValue);\n    if (prev != null) {\n      throw new IllegalStateException(\"Transformer already exist. class=\" + classInternalNameMatcherOperand.getClassInternalName() + \", new=\"+ indexValue+ \", prev=\"+ prev);\n    }\n    indexed=true;\n  }\n else   if (operand instanceof PackageInternalNameMatcherOperand) {\n    PackageInternalNameMatcherOperand packageInternalNameMatcherOperand=(PackageInternalNameMatcherOperand)operand;\n    addIndexData(packageInternalNameMatcherOperand.getPackageInternalName(),indexValue,this.packageNameBasedIndex);\n    indexed=true;\n  }\n else {\n    throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n  }\n  if (!indexed) {\n    throw new IllegalArgumentException(\"invalid matcher or execution planner - no such indexed operand. operand=\" + condition);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1870,
        "startLineNumber" : 163,
        "startColumnNumber" : 98,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<MatcherOperand> indexedMatcherOperands=executionPlanner.findIndex(condition);\n  if (indexedMatcherOperands.isEmpty()) {\n    throw new IllegalArgumentException(\"invalid matcher - not found index operand. condition=\" + condition);\n  }\n  boolean indexed;\n  final IndexValue indexValue=new IndexValue(condition,transformer);\n  for (  MatcherOperand operand : indexedMatcherOperands) {\n    if (operand instanceof ClassInternalNameMatcherOperand) {\n      ClassInternalNameMatcherOperand classInternalNameMatcherOperand=(ClassInternalNameMatcherOperand)operand;\n      final IndexValue prev=classNameBasedIndex.put(classInternalNameMatcherOperand.getClassInternalName(),indexValue);\n      if (prev != null) {\n        throw new IllegalStateException(\"Transformer already exist. class=\" + classInternalNameMatcherOperand.getClassInternalName() + \", new=\"+ indexValue+ \", prev=\"+ prev);\n      }\n      indexed=true;\n    }\n else     if (operand instanceof PackageInternalNameMatcherOperand) {\n      PackageInternalNameMatcherOperand packageInternalNameMatcherOperand=(PackageInternalNameMatcherOperand)operand;\n      addIndexData(packageInternalNameMatcherOperand.getPackageInternalName(),indexValue,this.packageNameBasedIndex);\n      indexed=true;\n    }\n else {\n      throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n    }\n    if (!indexed) {\n      throw new IllegalArgumentException(\"invalid matcher or execution planner - no such indexed operand. operand=\" + condition);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void addIndex(final MatcherOperand condition,final ClassFileTransformer transformer){\n  final List<MatcherOperand> indexedMatcherOperands=executionPlanner.findIndex(condition);\n  if (indexedMatcherOperands.isEmpty()) {\n    throw new IllegalArgumentException(\"invalid matcher - not found index operand. condition=\" + condition);\n  }\n  boolean indexed;\n  final IndexValue indexValue=new IndexValue(condition,transformer);\n  for (  MatcherOperand operand : indexedMatcherOperands) {\n    if (operand instanceof ClassInternalNameMatcherOperand) {\n      ClassInternalNameMatcherOperand classInternalNameMatcherOperand=(ClassInternalNameMatcherOperand)operand;\n      final IndexValue prev=classNameBasedIndex.put(classInternalNameMatcherOperand.getClassInternalName(),indexValue);\n      if (prev != null) {\n        throw new IllegalStateException(\"Transformer already exist. class=\" + classInternalNameMatcherOperand.getClassInternalName() + \", new=\"+ indexValue+ \", prev=\"+ prev);\n      }\n      indexed=true;\n    }\n else     if (operand instanceof PackageInternalNameMatcherOperand) {\n      PackageInternalNameMatcherOperand packageInternalNameMatcherOperand=(PackageInternalNameMatcherOperand)operand;\n      addIndexData(packageInternalNameMatcherOperand.getPackageInternalName(),indexValue,this.packageNameBasedIndex);\n      indexed=true;\n    }\n else {\n      throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n    }\n    if (!indexed) {\n      throw new IllegalArgumentException(\"invalid matcher or execution planner - no such indexed operand. operand=\" + condition);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 166
      },
      "nodeContext" : "throw new IllegalArgumentException(\"invalid matcher or execution planner - unknown operand. condition=\" + condition + \", unknown operand=\"+ operand);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 17,
    "type" : "java.lang.IllegalArgumentException"
  } ],
  "positionList" : [ {
    "charLength" : 143,
    "startLineNumber" : 185,
    "startColumnNumber" : 22,
    "endLineNumber" : 185,
    "endColumnNumber" : 165
  } ],
  "layoutRelationDataList" : [ ]
}