{
  "id" : 253,
  "expression" : "1",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableTakeUntilPredicateTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 48,
      "startColumnNumber" : 22,
      "endLineNumber" : 48,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Flowable.just(1,2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Flowable.just(1,2).takeUntil(new Predicate<Integer>(){\n  @Override public boolean test(  Integer v){\n    return false;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 23
      },
      "nodeContext" : "Flowable.just(1,2).takeUntil(new Predicate<Integer>(){\n  @Override public boolean test(  Integer v){\n    return false;\n  }\n}\n).subscribe(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 24
      },
      "nodeContext" : "Flowable.just(1,2).takeUntil(new Predicate<Integer>(){\n  @Override public boolean test(  Integer v){\n    return false;\n  }\n}\n).subscribe(o);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 45,
        "startColumnNumber" : 26,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Subscriber<Object> o=TestHelper.mockSubscriber();\n  Flowable.just(1,2).takeUntil(new Predicate<Integer>(){\n    @Override public boolean test(    Integer v){\n      return false;\n    }\n  }\n).subscribe(o);\n  verify(o).onNext(1);\n  verify(o).onNext(2);\n  verify(o,never()).onError(any(Throwable.class));\n  verify(o).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 481,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void takeAll(){\n  Subscriber<Object> o=TestHelper.mockSubscriber();\n  Flowable.just(1,2).takeUntil(new Predicate<Integer>(){\n    @Override public boolean test(    Integer v){\n      return false;\n    }\n  }\n).subscribe(o);\n  verify(o).onNext(1);\n  verify(o).onNext(2);\n  verify(o,never()).onError(any(Throwable.class));\n  verify(o).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Flowable.just(1,2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 25,
      "endLineNumber" : 55,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 27
      },
      "nodeContext" : "verify(o).onNext(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 28
      },
      "nodeContext" : "verify(o).onNext(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 45,
        "startColumnNumber" : 26,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Subscriber<Object> o=TestHelper.mockSubscriber();\n  Flowable.just(1,2).takeUntil(new Predicate<Integer>(){\n    @Override public boolean test(    Integer v){\n      return false;\n    }\n  }\n).subscribe(o);\n  verify(o).onNext(1);\n  verify(o).onNext(2);\n  verify(o,never()).onError(any(Throwable.class));\n  verify(o).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 481,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void takeAll(){\n  Subscriber<Object> o=TestHelper.mockSubscriber();\n  Flowable.just(1,2).takeUntil(new Predicate<Integer>(){\n    @Override public boolean test(    Integer v){\n      return false;\n    }\n  }\n).subscribe(o);\n  verify(o).onNext(1);\n  verify(o).onNext(2);\n  verify(o,never()).onError(any(Throwable.class));\n  verify(o).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 28
      },
      "nodeContext" : "verify(o).onNext(1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 48,
    "startColumnNumber" : 22,
    "endLineNumber" : 48,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 25,
    "endLineNumber" : 55,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}