{
  "id" : 254,
  "expression" : "MavenMojoNote.PATTERN",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/tasks/_maven/MavenConsoleAnnotator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MavenMojoNote.PATTERN",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 58,
      "startColumnNumber" : 20,
      "endLineNumber" : 58,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 58,
        "endColumnNumber" : 55
      },
      "nodeContext" : "MavenMojoNote.PATTERN.matcher(line)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 55
      },
      "nodeContext" : "m=MavenMojoNote.PATTERN.matcher(line)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Matcher m=MavenMojoNote.PATTERN.matcher(line);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 48,
        "startColumnNumber" : 61,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String line=charset.decode(ByteBuffer.wrap(b,0,len)).toString();\n  line=trimEOL(line);\n  Matcher m=MavenMojoNote.PATTERN.matcher(line);\n  if (m.matches())   new MavenMojoNote().encodeTo(out);\n  m=Maven3MojoNote.PATTERN.matcher(line);\n  if (m.matches())   new Maven3MojoNote().encodeTo(out);\n  m=MavenWarningNote.PATTERN.matcher(line);\n  if (m.find())   new MavenWarningNote().encodeTo(out);\n  m=MavenErrorNote.PATTERN.matcher(line);\n  if (m.find())   new MavenErrorNote().encodeTo(out);\n  out.write(b,0,len);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1020,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void eol(byte[] b,int len) throws IOException {\n  String line=charset.decode(ByteBuffer.wrap(b,0,len)).toString();\n  line=trimEOL(line);\n  Matcher m=MavenMojoNote.PATTERN.matcher(line);\n  if (m.matches())   new MavenMojoNote().encodeTo(out);\n  m=Maven3MojoNote.PATTERN.matcher(line);\n  if (m.matches())   new Maven3MojoNote().encodeTo(out);\n  m=MavenWarningNote.PATTERN.matcher(line);\n  if (m.find())   new MavenWarningNote().encodeTo(out);\n  m=MavenErrorNote.PATTERN.matcher(line);\n  if (m.find())   new MavenErrorNote().encodeTo(out);\n  out.write(b,0,len);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Matcher m=MavenMojoNote.PATTERN.matcher(line);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.regex.Pattern"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 58,
    "startColumnNumber" : 20,
    "endLineNumber" : 58,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}