{
  "id" : 455,
  "expression" : "e",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/frame/processor/FrameProcessorExecutor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 177,
      "startColumnNumber" : 15,
      "endLineNumber" : 177,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 177,
        "startColumnNumber" : 10,
        "endLineNumber" : 177,
        "endColumnNumber" : 17
      },
      "nodeContext" : "fail(e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 177,
        "startColumnNumber" : 10,
        "endLineNumber" : 177,
        "endColumnNumber" : 18
      },
      "nodeContext" : "fail(e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 176,
        "startColumnNumber" : 28,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  fail(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable e) {\n  fail(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2217,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final List<ListenableFuture<?>> allWritabilityFutures=gatherWritabilityFutures();\n  final List<ListenableFuture<?>> writabilityFuturesToWaitFor=allWritabilityFutures.stream().filter(f -> !f.isDone()).collect(Collectors.toList());\n  logProcessorStatusString(processor,finished,allWritabilityFutures);\n  if (!writabilityFuturesToWaitFor.isEmpty()) {\n    runProcessorAfterFutureResolves(Futures.allAsList(writabilityFuturesToWaitFor));\n    return;\n  }\n  final Optional<ReturnOrAwait<T>> maybeResult=runProcessorNow();\n  if (!maybeResult.isPresent()) {\n    return;\n  }\n  final ReturnOrAwait<T> result=maybeResult.get();\n  logProcessorStatusString(processor,finished,null);\n  if (result.isReturn()) {\n    succeed(result.value());\n  }\n else {\n    final IntSet await=result.awaitSet();\n    if (await.isEmpty()) {\n      exec.submit(ExecutorRunnable.this);\n    }\n else     if (result.isAwaitAll() || await.size() == 1) {\n      final List<ListenableFuture<?>> readabilityFutures=new ArrayList<>();\n      for (      final int channelNumber : await) {\n        final ReadableFrameChannel channel=inputChannels.get(channelNumber);\n        if (!channel.isFinished() && !channel.canRead()) {\n          readabilityFutures.add(channel.readabilityFuture());\n        }\n      }\n      if (readabilityFutures.isEmpty()) {\n        exec.submit(ExecutorRunnable.this);\n      }\n else {\n        runProcessorAfterFutureResolves(Futures.allAsList(readabilityFutures));\n      }\n    }\n else {\n      runProcessorAfterFutureResolves(awaitAnyWidget.awaitAny(await));\n    }\n  }\n}\n catch (Throwable e) {\n  fail(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 232,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2237,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 179,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    final List<ListenableFuture<?>> allWritabilityFutures=gatherWritabilityFutures();\n    final List<ListenableFuture<?>> writabilityFuturesToWaitFor=allWritabilityFutures.stream().filter(f -> !f.isDone()).collect(Collectors.toList());\n    logProcessorStatusString(processor,finished,allWritabilityFutures);\n    if (!writabilityFuturesToWaitFor.isEmpty()) {\n      runProcessorAfterFutureResolves(Futures.allAsList(writabilityFuturesToWaitFor));\n      return;\n    }\n    final Optional<ReturnOrAwait<T>> maybeResult=runProcessorNow();\n    if (!maybeResult.isPresent()) {\n      return;\n    }\n    final ReturnOrAwait<T> result=maybeResult.get();\n    logProcessorStatusString(processor,finished,null);\n    if (result.isReturn()) {\n      succeed(result.value());\n    }\n else {\n      final IntSet await=result.awaitSet();\n      if (await.isEmpty()) {\n        exec.submit(ExecutorRunnable.this);\n      }\n else       if (result.isAwaitAll() || await.size() == 1) {\n        final List<ListenableFuture<?>> readabilityFutures=new ArrayList<>();\n        for (        final int channelNumber : await) {\n          final ReadableFrameChannel channel=inputChannels.get(channelNumber);\n          if (!channel.isFinished() && !channel.canRead()) {\n            readabilityFutures.add(channel.readabilityFuture());\n          }\n        }\n        if (readabilityFutures.isEmpty()) {\n          exec.submit(ExecutorRunnable.this);\n        }\n else {\n          runProcessorAfterFutureResolves(Futures.allAsList(readabilityFutures));\n        }\n      }\n else {\n        runProcessorAfterFutureResolves(awaitAnyWidget.awaitAny(await));\n      }\n    }\n  }\n catch (  Throwable e) {\n    fail(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 122,
        "startColumnNumber" : 6,
        "endLineNumber" : 179,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    final List<ListenableFuture<?>> allWritabilityFutures=gatherWritabilityFutures();\n    final List<ListenableFuture<?>> writabilityFuturesToWaitFor=allWritabilityFutures.stream().filter(f -> !f.isDone()).collect(Collectors.toList());\n    logProcessorStatusString(processor,finished,allWritabilityFutures);\n    if (!writabilityFuturesToWaitFor.isEmpty()) {\n      runProcessorAfterFutureResolves(Futures.allAsList(writabilityFuturesToWaitFor));\n      return;\n    }\n    final Optional<ReturnOrAwait<T>> maybeResult=runProcessorNow();\n    if (!maybeResult.isPresent()) {\n      return;\n    }\n    final ReturnOrAwait<T> result=maybeResult.get();\n    logProcessorStatusString(processor,finished,null);\n    if (result.isReturn()) {\n      succeed(result.value());\n    }\n else {\n      final IntSet await=result.awaitSet();\n      if (await.isEmpty()) {\n        exec.submit(ExecutorRunnable.this);\n      }\n else       if (result.isAwaitAll() || await.size() == 1) {\n        final List<ListenableFuture<?>> readabilityFutures=new ArrayList<>();\n        for (        final int channelNumber : await) {\n          final ReadableFrameChannel channel=inputChannels.get(channelNumber);\n          if (!channel.isFinished() && !channel.canRead()) {\n            readabilityFutures.add(channel.readabilityFuture());\n          }\n        }\n        if (readabilityFutures.isEmpty()) {\n          exec.submit(ExecutorRunnable.this);\n        }\n else {\n          runProcessorAfterFutureResolves(Futures.allAsList(readabilityFutures));\n        }\n      }\n else {\n        runProcessorAfterFutureResolves(awaitAnyWidget.awaitAny(await));\n      }\n    }\n  }\n catch (  Throwable e) {\n    fail(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 177,
        "startColumnNumber" : 10,
        "endLineNumber" : 177,
        "endColumnNumber" : 18
      },
      "nodeContext" : "fail(e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 177,
    "startColumnNumber" : 15,
    "endLineNumber" : 177,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}