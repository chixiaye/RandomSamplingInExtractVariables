{
  "id" : 59,
  "expression" : "ssizeTmp > 1",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/jmh/java/com/github/benmanes/caffeine/cache/map/ConcurrentHashMapV7.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ssizeTmp > 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 1684,
      "startColumnNumber" : 15,
      "endLineNumber" : 1684,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 1684,
        "startColumnNumber" : 8,
        "endLineNumber" : 1687,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (ssizeTmp > 1) {\n  ++sshift;\n  ssizeTmp>>>=1;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1679,
        "startLineNumber" : 1672,
        "startColumnNumber" : 51,
        "endLineNumber" : 1715,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ObjectInputStream.GetField oisFields=s.readFields();\n  final Segment<K,V>[] oisSegments=(Segment<K,V>[])oisFields.get(\"segments\",null);\n  final int ssize=oisSegments.length;\n  if (ssize < 1 || ssize > MAX_SEGMENTS || (ssize & (ssize - 1)) != 0) {\n    throw new java.io.InvalidObjectException(\"Bad number of segments:\" + ssize);\n  }\n  int sshift=0, ssizeTmp=ssize;\n  while (ssizeTmp > 1) {\n    ++sshift;\n    ssizeTmp>>>=1;\n  }\n  UNSAFE.putIntVolatile(this,SEGSHIFT_OFFSET,32 - sshift);\n  UNSAFE.putIntVolatile(this,SEGMASK_OFFSET,ssize - 1);\n  UNSAFE.putObjectVolatile(this,SEGMENTS_OFFSET,oisSegments);\n  UNSAFE.putIntVolatile(this,HASHSEED_OFFSET,randomHashSeed(this));\n  int cap=MIN_SEGMENT_TABLE_CAPACITY;\n  final Segment<K,V>[] segments=this.segments;\n  for (int k=0; k < segments.length; ++k) {\n    Segment<K,V> seg=segments[k];\n    if (seg != null) {\n      seg.threshold=(int)(cap * seg.loadFactor);\n      seg.table=new HashEntry[cap];\n    }\n  }\n  for (; ; ) {\n    K key=(K)s.readObject();\n    V value=(V)s.readObject();\n    if (key == null) {\n      break;\n    }\n    put(key,value);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1973,
        "startLineNumber" : 1665,
        "startColumnNumber" : 4,
        "endLineNumber" : 1715,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reconstitute the <tt>ConcurrentHashMap</tt> instance from a stream (i.e., deserialize it).\n * @param s the stream\n */\n@SuppressWarnings(\"unchecked\") private void readObject(java.io.ObjectInputStream s) throws IOException, ClassNotFoundException {\n  ObjectInputStream.GetField oisFields=s.readFields();\n  final Segment<K,V>[] oisSegments=(Segment<K,V>[])oisFields.get(\"segments\",null);\n  final int ssize=oisSegments.length;\n  if (ssize < 1 || ssize > MAX_SEGMENTS || (ssize & (ssize - 1)) != 0) {\n    throw new java.io.InvalidObjectException(\"Bad number of segments:\" + ssize);\n  }\n  int sshift=0, ssizeTmp=ssize;\n  while (ssizeTmp > 1) {\n    ++sshift;\n    ssizeTmp>>>=1;\n  }\n  UNSAFE.putIntVolatile(this,SEGSHIFT_OFFSET,32 - sshift);\n  UNSAFE.putIntVolatile(this,SEGMASK_OFFSET,ssize - 1);\n  UNSAFE.putObjectVolatile(this,SEGMENTS_OFFSET,oisSegments);\n  UNSAFE.putIntVolatile(this,HASHSEED_OFFSET,randomHashSeed(this));\n  int cap=MIN_SEGMENT_TABLE_CAPACITY;\n  final Segment<K,V>[] segments=this.segments;\n  for (int k=0; k < segments.length; ++k) {\n    Segment<K,V> seg=segments[k];\n    if (seg != null) {\n      seg.threshold=(int)(cap * seg.loadFactor);\n      seg.table=new HashEntry[cap];\n    }\n  }\n  for (; ; ) {\n    K key=(K)s.readObject();\n    V value=(V)s.readObject();\n    if (key == null) {\n      break;\n    }\n    put(key,value);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 1684,
        "startColumnNumber" : 8,
        "endLineNumber" : 1687,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (ssizeTmp > 1) {\n  ++sshift;\n  ssizeTmp>>>=1;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 1684,
    "startColumnNumber" : 15,
    "endLineNumber" : 1684,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}