{
  "id" : 384,
  "expression" : "new ArrayDeque<>()",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/decoder/src/main/java/com/google/android/exoplayer2/decoder/SimpleDecoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ArrayDeque<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 57,
      "startColumnNumber" : 25,
      "endLineNumber" : 57,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 43
      },
      "nodeContext" : "queuedInputBuffers=new ArrayDeque<>()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 44
      },
      "nodeContext" : "queuedInputBuffers=new ArrayDeque<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 55,
        "startColumnNumber" : 63,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  lock=new Object();\n  queuedInputBuffers=new ArrayDeque<>();\n  queuedOutputBuffers=new ArrayDeque<>();\n  availableInputBuffers=inputBuffers;\n  availableInputBufferCount=inputBuffers.length;\n  for (int i=0; i < availableInputBufferCount; i++) {\n    availableInputBuffers[i]=createInputBuffer();\n  }\n  availableOutputBuffers=outputBuffers;\n  availableOutputBufferCount=outputBuffers.length;\n  for (int i=0; i < availableOutputBufferCount; i++) {\n    availableOutputBuffers[i]=createOutputBuffer();\n  }\n  decodeThread=new Thread(\"ExoPlayer:SimpleDecoder\"){\n    @Override public void run(){\n      SimpleDecoder.this.run();\n    }\n  }\n;\n  decodeThread.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1081,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param inputBuffers An array of nulls that will be used to store references to input buffers.\n * @param outputBuffers An array of nulls that will be used to store references to output buffers.\n */\n@SuppressWarnings(\"nullness:method.invocation\") protected SimpleDecoder(I[] inputBuffers,O[] outputBuffers){\n  lock=new Object();\n  queuedInputBuffers=new ArrayDeque<>();\n  queuedOutputBuffers=new ArrayDeque<>();\n  availableInputBuffers=inputBuffers;\n  availableInputBufferCount=inputBuffers.length;\n  for (int i=0; i < availableInputBufferCount; i++) {\n    availableInputBuffers[i]=createInputBuffer();\n  }\n  availableOutputBuffers=outputBuffers;\n  availableOutputBufferCount=outputBuffers.length;\n  for (int i=0; i < availableOutputBufferCount; i++) {\n    availableOutputBuffers[i]=createOutputBuffer();\n  }\n  decodeThread=new Thread(\"ExoPlayer:SimpleDecoder\"){\n    @Override public void run(){\n      SimpleDecoder.this.run();\n    }\n  }\n;\n  decodeThread.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 44
      },
      "nodeContext" : "queuedInputBuffers=new ArrayDeque<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayDeque<I>"
  }, {
    "nodeContext" : "new ArrayDeque<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 58,
      "startColumnNumber" : 26,
      "endLineNumber" : 58,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 44
      },
      "nodeContext" : "queuedOutputBuffers=new ArrayDeque<>()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "queuedOutputBuffers=new ArrayDeque<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 55,
        "startColumnNumber" : 63,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  lock=new Object();\n  queuedInputBuffers=new ArrayDeque<>();\n  queuedOutputBuffers=new ArrayDeque<>();\n  availableInputBuffers=inputBuffers;\n  availableInputBufferCount=inputBuffers.length;\n  for (int i=0; i < availableInputBufferCount; i++) {\n    availableInputBuffers[i]=createInputBuffer();\n  }\n  availableOutputBuffers=outputBuffers;\n  availableOutputBufferCount=outputBuffers.length;\n  for (int i=0; i < availableOutputBufferCount; i++) {\n    availableOutputBuffers[i]=createOutputBuffer();\n  }\n  decodeThread=new Thread(\"ExoPlayer:SimpleDecoder\"){\n    @Override public void run(){\n      SimpleDecoder.this.run();\n    }\n  }\n;\n  decodeThread.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1081,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param inputBuffers An array of nulls that will be used to store references to input buffers.\n * @param outputBuffers An array of nulls that will be used to store references to output buffers.\n */\n@SuppressWarnings(\"nullness:method.invocation\") protected SimpleDecoder(I[] inputBuffers,O[] outputBuffers){\n  lock=new Object();\n  queuedInputBuffers=new ArrayDeque<>();\n  queuedOutputBuffers=new ArrayDeque<>();\n  availableInputBuffers=inputBuffers;\n  availableInputBufferCount=inputBuffers.length;\n  for (int i=0; i < availableInputBufferCount; i++) {\n    availableInputBuffers[i]=createInputBuffer();\n  }\n  availableOutputBuffers=outputBuffers;\n  availableOutputBufferCount=outputBuffers.length;\n  for (int i=0; i < availableOutputBufferCount; i++) {\n    availableOutputBuffers[i]=createOutputBuffer();\n  }\n  decodeThread=new Thread(\"ExoPlayer:SimpleDecoder\"){\n    @Override public void run(){\n      SimpleDecoder.this.run();\n    }\n  }\n;\n  decodeThread.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "queuedOutputBuffers=new ArrayDeque<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayDeque<O>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 57,
    "startColumnNumber" : 25,
    "endLineNumber" : 57,
    "endColumnNumber" : 43
  }, {
    "charLength" : 18,
    "startLineNumber" : 58,
    "startColumnNumber" : 26,
    "endLineNumber" : 58,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}