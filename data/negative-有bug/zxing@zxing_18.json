{
  "id" : 18,
  "expression" : "12",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/rss/RSS14Reader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "12",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 256,
      "startColumnNumber" : 43,
      "endLineNumber" : 256,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 256,
        "startColumnNumber" : 34,
        "endLineNumber" : 256,
        "endColumnNumber" : 45
      },
      "nodeContext" : "oddSum > 12",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 256,
        "startColumnNumber" : 10,
        "endLineNumber" : 256,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(oddSum & 0x01) != 0 || oddSum > 12",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 256,
        "startColumnNumber" : 10,
        "endLineNumber" : 256,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 256,
        "startColumnNumber" : 6,
        "endLineNumber" : 258,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 255,
        "startColumnNumber" : 21,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(12 - oddSum) / 2;\n  int oddWidest=OUTSIDE_ODD_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n  int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n  int gSum=OUTSIDE_GSUM[group];\n  return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 255,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (outsideChar) {\n  if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(12 - oddSum) / 2;\n  int oddWidest=OUTSIDE_ODD_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n  int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n  int gSum=OUTSIDE_GSUM[group];\n  return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n}\n else {\n  if ((evenSum & 0x01) != 0 || evenSum > 10 || evenSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(10 - evenSum) / 2;\n  int oddWidest=INSIDE_ODD_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n  int tOdd=INSIDE_ODD_TOTAL_SUBSET[group];\n  int gSum=INSIDE_GSUM[group];\n  return new DataCharacter(vEven * tOdd + vOdd + gSum,checksumPortion);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 184,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 187,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] counters=getDataCharacterCounters();\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  counters[4]=0;\n  counters[5]=0;\n  counters[6]=0;\n  counters[7]=0;\n  if (outsideChar) {\n    recordPatternInReverse(row,pattern.getStartEnd()[0],counters);\n  }\n else {\n    recordPattern(row,pattern.getStartEnd()[1] + 1,counters);\n    for (int i=0, j=counters.length - 1; i < j; i++, j--) {\n      int temp=counters[i];\n      counters[i]=counters[j];\n      counters[j]=temp;\n    }\n  }\n  int numModules=outsideChar ? 16 : 15;\n  float elementWidth=(float)count(counters) / (float)numModules;\n  int[] oddCounts=this.getOddCounts();\n  int[] evenCounts=this.getEvenCounts();\n  float[] oddRoundingErrors=this.getOddRoundingErrors();\n  float[] evenRoundingErrors=this.getEvenRoundingErrors();\n  for (int i=0; i < counters.length; i++) {\n    float value=(float)counters[i] / elementWidth;\n    int count=(int)(value + 0.5f);\n    if (count < 1) {\n      count=1;\n    }\n else     if (count > 8) {\n      count=8;\n    }\n    int offset=i >> 1;\n    if ((i & 0x01) == 0) {\n      oddCounts[offset]=count;\n      oddRoundingErrors[offset]=value - count;\n    }\n else {\n      evenCounts[offset]=count;\n      evenRoundingErrors[offset]=value - count;\n    }\n  }\n  adjustOddEvenCounts(outsideChar,numModules);\n  int oddSum=0;\n  int oddChecksumPortion=0;\n  for (int i=oddCounts.length - 1; i >= 0; i--) {\n    oddChecksumPortion*=9;\n    oddChecksumPortion+=oddCounts[i];\n    oddSum+=oddCounts[i];\n  }\n  int evenChecksumPortion=0;\n  int evenSum=0;\n  for (int i=evenCounts.length - 1; i >= 0; i--) {\n    evenChecksumPortion*=9;\n    evenChecksumPortion+=evenCounts[i];\n    evenSum+=evenCounts[i];\n  }\n  int checksumPortion=oddChecksumPortion + 3 * evenChecksumPortion;\n  if (outsideChar) {\n    if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(12 - oddSum) / 2;\n    int oddWidest=OUTSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n    int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n    int gSum=OUTSIDE_GSUM[group];\n    return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n  }\n else {\n    if ((evenSum & 0x01) != 0 || evenSum > 10 || evenSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(10 - evenSum) / 2;\n    int oddWidest=INSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n    int tOdd=INSIDE_ODD_TOTAL_SUBSET[group];\n    int gSum=INSIDE_GSUM[group];\n    return new DataCharacter(vEven * tOdd + vOdd + gSum,checksumPortion);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 561,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3373,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 281,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private DataCharacter decodeDataCharacter(BitArray row,FinderPattern pattern,boolean outsideChar) throws NotFoundException {\n  int[] counters=getDataCharacterCounters();\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  counters[4]=0;\n  counters[5]=0;\n  counters[6]=0;\n  counters[7]=0;\n  if (outsideChar) {\n    recordPatternInReverse(row,pattern.getStartEnd()[0],counters);\n  }\n else {\n    recordPattern(row,pattern.getStartEnd()[1] + 1,counters);\n    for (int i=0, j=counters.length - 1; i < j; i++, j--) {\n      int temp=counters[i];\n      counters[i]=counters[j];\n      counters[j]=temp;\n    }\n  }\n  int numModules=outsideChar ? 16 : 15;\n  float elementWidth=(float)count(counters) / (float)numModules;\n  int[] oddCounts=this.getOddCounts();\n  int[] evenCounts=this.getEvenCounts();\n  float[] oddRoundingErrors=this.getOddRoundingErrors();\n  float[] evenRoundingErrors=this.getEvenRoundingErrors();\n  for (int i=0; i < counters.length; i++) {\n    float value=(float)counters[i] / elementWidth;\n    int count=(int)(value + 0.5f);\n    if (count < 1) {\n      count=1;\n    }\n else     if (count > 8) {\n      count=8;\n    }\n    int offset=i >> 1;\n    if ((i & 0x01) == 0) {\n      oddCounts[offset]=count;\n      oddRoundingErrors[offset]=value - count;\n    }\n else {\n      evenCounts[offset]=count;\n      evenRoundingErrors[offset]=value - count;\n    }\n  }\n  adjustOddEvenCounts(outsideChar,numModules);\n  int oddSum=0;\n  int oddChecksumPortion=0;\n  for (int i=oddCounts.length - 1; i >= 0; i--) {\n    oddChecksumPortion*=9;\n    oddChecksumPortion+=oddCounts[i];\n    oddSum+=oddCounts[i];\n  }\n  int evenChecksumPortion=0;\n  int evenSum=0;\n  for (int i=evenCounts.length - 1; i >= 0; i--) {\n    evenChecksumPortion*=9;\n    evenChecksumPortion+=evenCounts[i];\n    evenSum+=evenCounts[i];\n  }\n  int checksumPortion=oddChecksumPortion + 3 * evenChecksumPortion;\n  if (outsideChar) {\n    if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(12 - oddSum) / 2;\n    int oddWidest=OUTSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n    int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n    int gSum=OUTSIDE_GSUM[group];\n    return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n  }\n else {\n    if ((evenSum & 0x01) != 0 || evenSum > 10 || evenSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(10 - evenSum) / 2;\n    int oddWidest=INSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n    int tOdd=INSIDE_ODD_TOTAL_SUBSET[group];\n    int gSum=INSIDE_GSUM[group];\n    return new DataCharacter(vEven * tOdd + vOdd + gSum,checksumPortion);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 579,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 256,
        "startColumnNumber" : 10,
        "endLineNumber" : 256,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "12",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 259,
      "startColumnNumber" : 19,
      "endLineNumber" : 259,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 259,
        "startColumnNumber" : 19,
        "endLineNumber" : 259,
        "endColumnNumber" : 30
      },
      "nodeContext" : "12 - oddSum",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 259,
        "startColumnNumber" : 18,
        "endLineNumber" : 259,
        "endColumnNumber" : 31
      },
      "nodeContext" : "(12 - oddSum)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 259,
        "startColumnNumber" : 18,
        "endLineNumber" : 259,
        "endColumnNumber" : 35
      },
      "nodeContext" : "(12 - oddSum) / 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 259,
        "startColumnNumber" : 10,
        "endLineNumber" : 259,
        "endColumnNumber" : 35
      },
      "nodeContext" : "group=(12 - oddSum) / 2",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 259,
        "startColumnNumber" : 6,
        "endLineNumber" : 259,
        "endColumnNumber" : 36
      },
      "nodeContext" : "int group=(12 - oddSum) / 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 255,
        "startColumnNumber" : 21,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(12 - oddSum) / 2;\n  int oddWidest=OUTSIDE_ODD_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n  int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n  int gSum=OUTSIDE_GSUM[group];\n  return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 255,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (outsideChar) {\n  if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(12 - oddSum) / 2;\n  int oddWidest=OUTSIDE_ODD_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n  int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n  int gSum=OUTSIDE_GSUM[group];\n  return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n}\n else {\n  if ((evenSum & 0x01) != 0 || evenSum > 10 || evenSum < 4) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int group=(10 - evenSum) / 2;\n  int oddWidest=INSIDE_ODD_WIDEST[group];\n  int evenWidest=9 - oddWidest;\n  int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n  int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n  int tOdd=INSIDE_ODD_TOTAL_SUBSET[group];\n  int gSum=INSIDE_GSUM[group];\n  return new DataCharacter(vEven * tOdd + vOdd + gSum,checksumPortion);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 184,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3241,
        "startLineNumber" : 187,
        "startColumnNumber" : 31,
        "endLineNumber" : 281,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] counters=getDataCharacterCounters();\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  counters[4]=0;\n  counters[5]=0;\n  counters[6]=0;\n  counters[7]=0;\n  if (outsideChar) {\n    recordPatternInReverse(row,pattern.getStartEnd()[0],counters);\n  }\n else {\n    recordPattern(row,pattern.getStartEnd()[1] + 1,counters);\n    for (int i=0, j=counters.length - 1; i < j; i++, j--) {\n      int temp=counters[i];\n      counters[i]=counters[j];\n      counters[j]=temp;\n    }\n  }\n  int numModules=outsideChar ? 16 : 15;\n  float elementWidth=(float)count(counters) / (float)numModules;\n  int[] oddCounts=this.getOddCounts();\n  int[] evenCounts=this.getEvenCounts();\n  float[] oddRoundingErrors=this.getOddRoundingErrors();\n  float[] evenRoundingErrors=this.getEvenRoundingErrors();\n  for (int i=0; i < counters.length; i++) {\n    float value=(float)counters[i] / elementWidth;\n    int count=(int)(value + 0.5f);\n    if (count < 1) {\n      count=1;\n    }\n else     if (count > 8) {\n      count=8;\n    }\n    int offset=i >> 1;\n    if ((i & 0x01) == 0) {\n      oddCounts[offset]=count;\n      oddRoundingErrors[offset]=value - count;\n    }\n else {\n      evenCounts[offset]=count;\n      evenRoundingErrors[offset]=value - count;\n    }\n  }\n  adjustOddEvenCounts(outsideChar,numModules);\n  int oddSum=0;\n  int oddChecksumPortion=0;\n  for (int i=oddCounts.length - 1; i >= 0; i--) {\n    oddChecksumPortion*=9;\n    oddChecksumPortion+=oddCounts[i];\n    oddSum+=oddCounts[i];\n  }\n  int evenChecksumPortion=0;\n  int evenSum=0;\n  for (int i=evenCounts.length - 1; i >= 0; i--) {\n    evenChecksumPortion*=9;\n    evenChecksumPortion+=evenCounts[i];\n    evenSum+=evenCounts[i];\n  }\n  int checksumPortion=oddChecksumPortion + 3 * evenChecksumPortion;\n  if (outsideChar) {\n    if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(12 - oddSum) / 2;\n    int oddWidest=OUTSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n    int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n    int gSum=OUTSIDE_GSUM[group];\n    return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n  }\n else {\n    if ((evenSum & 0x01) != 0 || evenSum > 10 || evenSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(10 - evenSum) / 2;\n    int oddWidest=INSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n    int tOdd=INSIDE_ODD_TOTAL_SUBSET[group];\n    int gSum=INSIDE_GSUM[group];\n    return new DataCharacter(vEven * tOdd + vOdd + gSum,checksumPortion);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 561,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3373,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 281,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private DataCharacter decodeDataCharacter(BitArray row,FinderPattern pattern,boolean outsideChar) throws NotFoundException {\n  int[] counters=getDataCharacterCounters();\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  counters[4]=0;\n  counters[5]=0;\n  counters[6]=0;\n  counters[7]=0;\n  if (outsideChar) {\n    recordPatternInReverse(row,pattern.getStartEnd()[0],counters);\n  }\n else {\n    recordPattern(row,pattern.getStartEnd()[1] + 1,counters);\n    for (int i=0, j=counters.length - 1; i < j; i++, j--) {\n      int temp=counters[i];\n      counters[i]=counters[j];\n      counters[j]=temp;\n    }\n  }\n  int numModules=outsideChar ? 16 : 15;\n  float elementWidth=(float)count(counters) / (float)numModules;\n  int[] oddCounts=this.getOddCounts();\n  int[] evenCounts=this.getEvenCounts();\n  float[] oddRoundingErrors=this.getOddRoundingErrors();\n  float[] evenRoundingErrors=this.getEvenRoundingErrors();\n  for (int i=0; i < counters.length; i++) {\n    float value=(float)counters[i] / elementWidth;\n    int count=(int)(value + 0.5f);\n    if (count < 1) {\n      count=1;\n    }\n else     if (count > 8) {\n      count=8;\n    }\n    int offset=i >> 1;\n    if ((i & 0x01) == 0) {\n      oddCounts[offset]=count;\n      oddRoundingErrors[offset]=value - count;\n    }\n else {\n      evenCounts[offset]=count;\n      evenRoundingErrors[offset]=value - count;\n    }\n  }\n  adjustOddEvenCounts(outsideChar,numModules);\n  int oddSum=0;\n  int oddChecksumPortion=0;\n  for (int i=oddCounts.length - 1; i >= 0; i--) {\n    oddChecksumPortion*=9;\n    oddChecksumPortion+=oddCounts[i];\n    oddSum+=oddCounts[i];\n  }\n  int evenChecksumPortion=0;\n  int evenSum=0;\n  for (int i=evenCounts.length - 1; i >= 0; i--) {\n    evenChecksumPortion*=9;\n    evenChecksumPortion+=evenCounts[i];\n    evenSum+=evenCounts[i];\n  }\n  int checksumPortion=oddChecksumPortion + 3 * evenChecksumPortion;\n  if (outsideChar) {\n    if ((oddSum & 0x01) != 0 || oddSum > 12 || oddSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(12 - oddSum) / 2;\n    int oddWidest=OUTSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,false);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,true);\n    int tEven=OUTSIDE_EVEN_TOTAL_SUBSET[group];\n    int gSum=OUTSIDE_GSUM[group];\n    return new DataCharacter(vOdd * tEven + vEven + gSum,checksumPortion);\n  }\n else {\n    if ((evenSum & 0x01) != 0 || evenSum > 10 || evenSum < 4) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    int group=(10 - evenSum) / 2;\n    int oddWidest=INSIDE_ODD_WIDEST[group];\n    int evenWidest=9 - oddWidest;\n    int vOdd=RSSUtils.getRSSvalue(oddCounts,oddWidest,true);\n    int vEven=RSSUtils.getRSSvalue(evenCounts,evenWidest,false);\n    int tOdd=INSIDE_ODD_TOTAL_SUBSET[group];\n    int gSum=INSIDE_GSUM[group];\n    return new DataCharacter(vEven * tOdd + vOdd + gSum,checksumPortion);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 579,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 259,
        "startColumnNumber" : 6,
        "endLineNumber" : 259,
        "endColumnNumber" : 36
      },
      "nodeContext" : "int group=(12 - oddSum) / 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 256,
    "startColumnNumber" : 43,
    "endLineNumber" : 256,
    "endColumnNumber" : 45
  }, {
    "charLength" : 2,
    "startLineNumber" : 259,
    "startColumnNumber" : 19,
    "endLineNumber" : 259,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}