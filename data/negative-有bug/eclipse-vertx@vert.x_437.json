{
  "id" : 437,
  "expression" : "recording.execute(() -> {\n  Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n  logger.error(\"exception\",new NullPointerException());\n}\n)",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/core/logging/JULLogDelegateTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "recording.execute(() -> {\n  Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n  logger.error(\"exception\",new NullPointerException());\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 157,
      "startLineNumber" : 109,
      "startColumnNumber" : 13,
      "endLineNumber" : 112,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 22,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 6
      },
      "nodeContext" : "result=recording.execute(() -> {\n  Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n  logger.error(\"exception\",new NullPointerException());\n}\n)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 7
      },
      "nodeContext" : "result=recording.execute(() -> {\n  Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n  logger.error(\"exception\",new NullPointerException());\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2031,
        "startLineNumber" : 103,
        "startColumnNumber" : 26,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello\");\n  }\n);\n  assertTrue(result.contains(\"hello\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"exception\",new NullPointerException());\n  }\n);\n  assertTrue(result.contains(\"exception\"));\n  assertTrue(result.contains(\"java.lang.NullPointerException\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0} and {1}\",\"Paulo\",\"Julien\");\n  }\n);\n  assertTrue(result.contains(\"hello Paulo and Julien\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0}\",\"vert.x\");\n  }\n);\n  assertTrue(result.contains(\"hello vert.x\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0} - {1}\",\"vert.x\");\n  }\n);\n  assertTrue(result.contains(\"hello vert.x - {1}\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0}\",\"vert.x\",\"foo\");\n  }\n);\n  assertTrue(result.contains(\"hello vert.x\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"{0}, an exception has been thrown\",new IllegalStateException(),\"Luke\");\n  }\n);\n  assertTrue(result.contains(\"Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"{0}, an exception has been thrown\",\"Luke\",new IllegalStateException());\n  }\n);\n  assertTrue(result.contains(\"Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2073,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 153,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Ignore public void testError(){\n  String result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello\");\n  }\n);\n  assertTrue(result.contains(\"hello\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"exception\",new NullPointerException());\n  }\n);\n  assertTrue(result.contains(\"exception\"));\n  assertTrue(result.contains(\"java.lang.NullPointerException\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0} and {1}\",\"Paulo\",\"Julien\");\n  }\n);\n  assertTrue(result.contains(\"hello Paulo and Julien\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0}\",\"vert.x\");\n  }\n);\n  assertTrue(result.contains(\"hello vert.x\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0} - {1}\",\"vert.x\");\n  }\n);\n  assertTrue(result.contains(\"hello vert.x - {1}\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"hello {0}\",\"vert.x\",\"foo\");\n  }\n);\n  assertTrue(result.contains(\"hello vert.x\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"{0}, an exception has been thrown\",new IllegalStateException(),\"Luke\");\n  }\n);\n  assertTrue(result.contains(\"Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n  result=recording.execute(() -> {\n    Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n    logger.error(\"{0}, an exception has been thrown\",\"Luke\",new IllegalStateException());\n  }\n);\n  assertTrue(result.contains(\"Luke, an exception has been thrown\"));\n  assertTrue(result.contains(\"java.lang.IllegalStateException\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 7
      },
      "nodeContext" : "result=recording.execute(() -> {\n  Logger logger=LoggerFactory.getLogger(\"my-jul-logger\");\n  logger.error(\"exception\",new NullPointerException());\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 10
    },
    "tokenLength" : 11,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 157,
    "startLineNumber" : 109,
    "startColumnNumber" : 13,
    "endLineNumber" : 112,
    "endColumnNumber" : 6
  } ],
  "layoutRelationDataList" : [ ]
}