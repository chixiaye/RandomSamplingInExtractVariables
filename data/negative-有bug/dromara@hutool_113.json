{
  "id" : 113,
  "expression" : "CharsetUtil.CHARSET_UTF_8",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-crypto/src/test/java/cn/hutool/crypto/symmetric/SymmetricTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CharsetUtil.CHARSET_UTF_8",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 40,
      "startColumnNumber" : 52,
      "endLineNumber" : 40,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 40,
        "startColumnNumber" : 31,
        "endLineNumber" : 40,
        "endColumnNumber" : 78
      },
      "nodeContext" : "StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertEquals(content,StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assert.assertEquals(content,StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 26,
        "startColumnNumber" : 23,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String content=\"test中文\";\n  byte[] key=KeyUtil.generateKey(SymmetricAlgorithm.AES.getValue()).getEncoded();\n  SymmetricCrypto aes=new SymmetricCrypto(SymmetricAlgorithm.AES,key);\n  byte[] encrypt=aes.encrypt(content);\n  byte[] decrypt=aes.decrypt(encrypt);\n  Assert.assertEquals(content,StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8));\n  String encryptHex=aes.encryptHex(content);\n  String decryptStr=aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8);\n  Assert.assertEquals(content,decryptStr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 25,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void aesTest(){\n  String content=\"test中文\";\n  byte[] key=KeyUtil.generateKey(SymmetricAlgorithm.AES.getValue()).getEncoded();\n  SymmetricCrypto aes=new SymmetricCrypto(SymmetricAlgorithm.AES,key);\n  byte[] encrypt=aes.encrypt(content);\n  byte[] decrypt=aes.decrypt(encrypt);\n  Assert.assertEquals(content,StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8));\n  String encryptHex=aes.encryptHex(content);\n  String decryptStr=aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8);\n  Assert.assertEquals(content,decryptStr);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assert.assertEquals(content,StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.nio.charset.Charset"
  }, {
    "nodeContext" : "CharsetUtil.CHARSET_UTF_8",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 45,
      "startColumnNumber" : 49,
      "endLineNumber" : 45,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 45,
        "startColumnNumber" : 22,
        "endLineNumber" : 45,
        "endColumnNumber" : 75
      },
      "nodeContext" : "aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 45,
        "startColumnNumber" : 9,
        "endLineNumber" : 45,
        "endColumnNumber" : 75
      },
      "nodeContext" : "decryptStr=aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 76
      },
      "nodeContext" : "String decryptStr=aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 26,
        "startColumnNumber" : 23,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String content=\"test中文\";\n  byte[] key=KeyUtil.generateKey(SymmetricAlgorithm.AES.getValue()).getEncoded();\n  SymmetricCrypto aes=new SymmetricCrypto(SymmetricAlgorithm.AES,key);\n  byte[] encrypt=aes.encrypt(content);\n  byte[] decrypt=aes.decrypt(encrypt);\n  Assert.assertEquals(content,StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8));\n  String encryptHex=aes.encryptHex(content);\n  String decryptStr=aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8);\n  Assert.assertEquals(content,decryptStr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 25,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void aesTest(){\n  String content=\"test中文\";\n  byte[] key=KeyUtil.generateKey(SymmetricAlgorithm.AES.getValue()).getEncoded();\n  SymmetricCrypto aes=new SymmetricCrypto(SymmetricAlgorithm.AES,key);\n  byte[] encrypt=aes.encrypt(content);\n  byte[] decrypt=aes.decrypt(encrypt);\n  Assert.assertEquals(content,StrUtil.str(decrypt,CharsetUtil.CHARSET_UTF_8));\n  String encryptHex=aes.encryptHex(content);\n  String decryptStr=aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8);\n  Assert.assertEquals(content,decryptStr);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 76
      },
      "nodeContext" : "String decryptStr=aes.decryptStr(encryptHex,CharsetUtil.CHARSET_UTF_8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.nio.charset.Charset"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 40,
    "startColumnNumber" : 52,
    "endLineNumber" : 40,
    "endColumnNumber" : 77
  }, {
    "charLength" : 25,
    "startLineNumber" : 45,
    "startColumnNumber" : 49,
    "endLineNumber" : 45,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}