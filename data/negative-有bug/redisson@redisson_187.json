{
  "id" : 187,
  "expression" : "ch",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/client/handler/CommandsQueue.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 106,
      "startColumnNumber" : 24,
      "endLineNumber" : 106,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ch.pipeline()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 69
      },
      "nodeContext" : "ch.pipeline().get(CommandPubSubDecoder.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 113
      },
      "nodeContext" : "ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 114
      },
      "nodeContext" : "ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 105,
        "startColumnNumber" : 58,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Object channel : cd.getParams()) {\n  ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 104,
        "startColumnNumber" : 65,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (  Object channel : cd.getParams()) {\n    ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (CommandData<Object,Object> cd : pubSubOps) {\n  for (  Object channel : cd.getParams()) {\n    ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 103,
        "startColumnNumber" : 38,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  CommandData<Object,Object> cd : pubSubOps) {\n    for (    Object channel : cd.getParams()) {\n      ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!pubSubOps.isEmpty()) {\n  for (  CommandData<Object,Object> cd : pubSubOps) {\n    for (    Object channel : cd.getParams()) {\n      ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n    }\n  }\n}\n else {\n  ch.attr(CURRENT_COMMAND).set(data);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 100,
        "startColumnNumber" : 50,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  QueueCommand data=command.getCommand();\n  List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n  if (!pubSubOps.isEmpty()) {\n    for (    CommandData<Object,Object> cd : pubSubOps) {\n      for (      Object channel : cd.getParams()) {\n        ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n      }\n    }\n  }\n else {\n    ch.attr(CURRENT_COMMAND).set(data);\n  }\n  command.getChannelPromise().addListener(listener);\n  ch.writeAndFlush(data,command.getChannelPromise());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (command != null && command.trySend()) {\n  QueueCommand data=command.getCommand();\n  List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n  if (!pubSubOps.isEmpty()) {\n    for (    CommandData<Object,Object> cd : pubSubOps) {\n      for (      Object channel : cd.getParams()) {\n        ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n      }\n    }\n  }\n else {\n    ch.attr(CURRENT_COMMAND).set(data);\n  }\n  command.getChannelPromise().addListener(listener);\n  ch.writeAndFlush(data,command.getChannelPromise());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 98,
        "startColumnNumber" : 38,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  QueueCommandHolder command=queue.peek();\n  if (command != null && command.trySend()) {\n    QueueCommand data=command.getCommand();\n    List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n    if (!pubSubOps.isEmpty()) {\n      for (      CommandData<Object,Object> cd : pubSubOps) {\n        for (        Object channel : cd.getParams()) {\n          ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n        }\n      }\n    }\n else {\n      ch.attr(CURRENT_COMMAND).set(data);\n    }\n    command.getChannelPromise().addListener(listener);\n    ch.writeAndFlush(data,command.getChannelPromise());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void sendData(Channel ch){\n  QueueCommandHolder command=queue.peek();\n  if (command != null && command.trySend()) {\n    QueueCommand data=command.getCommand();\n    List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n    if (!pubSubOps.isEmpty()) {\n      for (      CommandData<Object,Object> cd : pubSubOps) {\n        for (        Object channel : cd.getParams()) {\n          ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n        }\n      }\n    }\n else {\n      ch.attr(CURRENT_COMMAND).set(data);\n    }\n    command.getChannelPromise().addListener(listener);\n    ch.writeAndFlush(data,command.getChannelPromise());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 106,
        "startColumnNumber" : 24,
        "endLineNumber" : 106,
        "endColumnNumber" : 114
      },
      "nodeContext" : "ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.redisson.client.handler.Channel"
  }, {
    "nodeContext" : "ch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 110,
      "startColumnNumber" : 16,
      "endLineNumber" : 110,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 110,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 40
      },
      "nodeContext" : "ch.attr(CURRENT_COMMAND)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 110,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 50
      },
      "nodeContext" : "ch.attr(CURRENT_COMMAND).set(data)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 110,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 51
      },
      "nodeContext" : "ch.attr(CURRENT_COMMAND).set(data);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 109,
        "startColumnNumber" : 19,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ch.attr(CURRENT_COMMAND).set(data);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!pubSubOps.isEmpty()) {\n  for (  CommandData<Object,Object> cd : pubSubOps) {\n    for (    Object channel : cd.getParams()) {\n      ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n    }\n  }\n}\n else {\n  ch.attr(CURRENT_COMMAND).set(data);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 100,
        "startColumnNumber" : 50,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  QueueCommand data=command.getCommand();\n  List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n  if (!pubSubOps.isEmpty()) {\n    for (    CommandData<Object,Object> cd : pubSubOps) {\n      for (      Object channel : cd.getParams()) {\n        ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n      }\n    }\n  }\n else {\n    ch.attr(CURRENT_COMMAND).set(data);\n  }\n  command.getChannelPromise().addListener(listener);\n  ch.writeAndFlush(data,command.getChannelPromise());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (command != null && command.trySend()) {\n  QueueCommand data=command.getCommand();\n  List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n  if (!pubSubOps.isEmpty()) {\n    for (    CommandData<Object,Object> cd : pubSubOps) {\n      for (      Object channel : cd.getParams()) {\n        ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n      }\n    }\n  }\n else {\n    ch.attr(CURRENT_COMMAND).set(data);\n  }\n  command.getChannelPromise().addListener(listener);\n  ch.writeAndFlush(data,command.getChannelPromise());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 98,
        "startColumnNumber" : 38,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  QueueCommandHolder command=queue.peek();\n  if (command != null && command.trySend()) {\n    QueueCommand data=command.getCommand();\n    List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n    if (!pubSubOps.isEmpty()) {\n      for (      CommandData<Object,Object> cd : pubSubOps) {\n        for (        Object channel : cd.getParams()) {\n          ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n        }\n      }\n    }\n else {\n      ch.attr(CURRENT_COMMAND).set(data);\n    }\n    command.getChannelPromise().addListener(listener);\n    ch.writeAndFlush(data,command.getChannelPromise());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void sendData(Channel ch){\n  QueueCommandHolder command=queue.peek();\n  if (command != null && command.trySend()) {\n    QueueCommand data=command.getCommand();\n    List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n    if (!pubSubOps.isEmpty()) {\n      for (      CommandData<Object,Object> cd : pubSubOps) {\n        for (        Object channel : cd.getParams()) {\n          ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n        }\n      }\n    }\n else {\n      ch.attr(CURRENT_COMMAND).set(data);\n    }\n    command.getChannelPromise().addListener(listener);\n    ch.writeAndFlush(data,command.getChannelPromise());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 110,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 51
      },
      "nodeContext" : "ch.attr(CURRENT_COMMAND).set(data);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.redisson.client.handler.Channel"
  }, {
    "nodeContext" : "ch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 114,
      "startColumnNumber" : 12,
      "endLineNumber" : 114,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 63
      },
      "nodeContext" : "ch.writeAndFlush(data,command.getChannelPromise())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ch.writeAndFlush(data,command.getChannelPromise());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 100,
        "startColumnNumber" : 50,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  QueueCommand data=command.getCommand();\n  List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n  if (!pubSubOps.isEmpty()) {\n    for (    CommandData<Object,Object> cd : pubSubOps) {\n      for (      Object channel : cd.getParams()) {\n        ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n      }\n    }\n  }\n else {\n    ch.attr(CURRENT_COMMAND).set(data);\n  }\n  command.getChannelPromise().addListener(listener);\n  ch.writeAndFlush(data,command.getChannelPromise());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (command != null && command.trySend()) {\n  QueueCommand data=command.getCommand();\n  List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n  if (!pubSubOps.isEmpty()) {\n    for (    CommandData<Object,Object> cd : pubSubOps) {\n      for (      Object channel : cd.getParams()) {\n        ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n      }\n    }\n  }\n else {\n    ch.attr(CURRENT_COMMAND).set(data);\n  }\n  command.getChannelPromise().addListener(listener);\n  ch.writeAndFlush(data,command.getChannelPromise());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 98,
        "startColumnNumber" : 38,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  QueueCommandHolder command=queue.peek();\n  if (command != null && command.trySend()) {\n    QueueCommand data=command.getCommand();\n    List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n    if (!pubSubOps.isEmpty()) {\n      for (      CommandData<Object,Object> cd : pubSubOps) {\n        for (        Object channel : cd.getParams()) {\n          ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n        }\n      }\n    }\n else {\n      ch.attr(CURRENT_COMMAND).set(data);\n    }\n    command.getChannelPromise().addListener(listener);\n    ch.writeAndFlush(data,command.getChannelPromise());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void sendData(Channel ch){\n  QueueCommandHolder command=queue.peek();\n  if (command != null && command.trySend()) {\n    QueueCommand data=command.getCommand();\n    List<CommandData<Object,Object>> pubSubOps=data.getPubSubOperations();\n    if (!pubSubOps.isEmpty()) {\n      for (      CommandData<Object,Object> cd : pubSubOps) {\n        for (        Object channel : cd.getParams()) {\n          ch.pipeline().get(CommandPubSubDecoder.class).addPubSubCommand((ChannelName)channel,cd);\n        }\n      }\n    }\n else {\n      ch.attr(CURRENT_COMMAND).set(data);\n    }\n    command.getChannelPromise().addListener(listener);\n    ch.writeAndFlush(data,command.getChannelPromise());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ch.writeAndFlush(data,command.getChannelPromise());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.redisson.client.handler.Channel"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 106,
    "startColumnNumber" : 24,
    "endLineNumber" : 106,
    "endColumnNumber" : 26
  }, {
    "charLength" : 2,
    "startLineNumber" : 110,
    "startColumnNumber" : 16,
    "endLineNumber" : 110,
    "endColumnNumber" : 18
  }, {
    "charLength" : 2,
    "startLineNumber" : 114,
    "startColumnNumber" : 12,
    "endLineNumber" : 114,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}