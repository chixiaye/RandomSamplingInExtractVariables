{
  "id" : 265,
  "expression" : "owner.getBuilds()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/tasks/Fingerprinter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "owner.getBuilds()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 210,
      "startColumnNumber" : 29,
      "endLineNumber" : 210,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 210,
        "startColumnNumber" : 20,
        "endLineNumber" : 210,
        "endColumnNumber" : 46
      },
      "nodeContext" : "builds=owner.getBuilds()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 47
      },
      "nodeContext" : "RunList builds=owner.getBuilds();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1709,
        "startLineNumber" : 209,
        "startColumnNumber" : 49,
        "endLineNumber" : 244,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RunList builds=owner.getBuilds();\n  Set<String> seenUpstreamProjects=new HashSet<>();\n  for (  Object build1 : builds) {\n    Run build=(Run)build1;\n    for (    FingerprintAction action : build.getActions(FingerprintAction.class)) {\n      for (      AbstractProject key : action.getDependencies().keySet()) {\n        if (key == owner) {\n          continue;\n        }\n        AbstractProject p=key;\n        if (key.getClass().getName().equals(\"hudson.matrix.MatrixConfiguration\")) {\n          p=key.getRootProject();\n        }\n        if (seenUpstreamProjects.contains(p.getName())) {\n          continue;\n        }\n        seenUpstreamProjects.add(p.getName());\n        graph.addDependency(new Dependency(p,owner){\n          @Override public boolean shouldTriggerBuild(          AbstractBuild build,          TaskListener listener,          List<Action> actions){\n            return false;\n          }\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 244,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (enableFingerprintsInDependencyGraph) {\n  RunList builds=owner.getBuilds();\n  Set<String> seenUpstreamProjects=new HashSet<>();\n  for (  Object build1 : builds) {\n    Run build=(Run)build1;\n    for (    FingerprintAction action : build.getActions(FingerprintAction.class)) {\n      for (      AbstractProject key : action.getDependencies().keySet()) {\n        if (key == owner) {\n          continue;\n        }\n        AbstractProject p=key;\n        if (key.getClass().getName().equals(\"hudson.matrix.MatrixConfiguration\")) {\n          p=key.getRootProject();\n        }\n        if (seenUpstreamProjects.contains(p.getName())) {\n          continue;\n        }\n        seenUpstreamProjects.add(p.getName());\n        graph.addDependency(new Dependency(p,owner){\n          @Override public boolean shouldTriggerBuild(          AbstractBuild build,          TaskListener listener,          List<Action> actions){\n            return false;\n          }\n        }\n);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 140,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1768,
        "startLineNumber" : 208,
        "startColumnNumber" : 83,
        "endLineNumber" : 245,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (enableFingerprintsInDependencyGraph) {\n    RunList builds=owner.getBuilds();\n    Set<String> seenUpstreamProjects=new HashSet<>();\n    for (    Object build1 : builds) {\n      Run build=(Run)build1;\n      for (      FingerprintAction action : build.getActions(FingerprintAction.class)) {\n        for (        AbstractProject key : action.getDependencies().keySet()) {\n          if (key == owner) {\n            continue;\n          }\n          AbstractProject p=key;\n          if (key.getClass().getName().equals(\"hudson.matrix.MatrixConfiguration\")) {\n            p=key.getRootProject();\n          }\n          if (seenUpstreamProjects.contains(p.getName())) {\n            continue;\n          }\n          seenUpstreamProjects.add(p.getName());\n          graph.addDependency(new Dependency(p,owner){\n            @Override public boolean shouldTriggerBuild(            AbstractBuild build,            TaskListener listener,            List<Action> actions){\n              return false;\n            }\n          }\n);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1847,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 245,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void buildDependencyGraph(AbstractProject owner,DependencyGraph graph){\n  if (enableFingerprintsInDependencyGraph) {\n    RunList builds=owner.getBuilds();\n    Set<String> seenUpstreamProjects=new HashSet<>();\n    for (    Object build1 : builds) {\n      Run build=(Run)build1;\n      for (      FingerprintAction action : build.getActions(FingerprintAction.class)) {\n        for (        AbstractProject key : action.getDependencies().keySet()) {\n          if (key == owner) {\n            continue;\n          }\n          AbstractProject p=key;\n          if (key.getClass().getName().equals(\"hudson.matrix.MatrixConfiguration\")) {\n            p=key.getRootProject();\n          }\n          if (seenUpstreamProjects.contains(p.getName())) {\n            continue;\n          }\n          seenUpstreamProjects.add(p.getName());\n          graph.addDependency(new Dependency(p,owner){\n            @Override public boolean shouldTriggerBuild(            AbstractBuild build,            TaskListener listener,            List<Action> actions){\n              return false;\n            }\n          }\n);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 47
      },
      "nodeContext" : "RunList builds=owner.getBuilds();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "hudson.util.RunList"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 210,
    "startColumnNumber" : 29,
    "endLineNumber" : 210,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}