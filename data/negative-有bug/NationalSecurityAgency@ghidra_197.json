{
  "id" : 197,
  "expression" : "referenceManager.getReferencesTo(address)",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/FileFormats/ghidra_scripts/RemoveAllOffcutReferencesScript.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "referenceManager.getReferencesTo(address)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 43,
      "startColumnNumber" : 40,
      "endLineNumber" : 43,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 43,
        "startColumnNumber" : 25,
        "endLineNumber" : 43,
        "endColumnNumber" : 81
      },
      "nodeContext" : "referencesTo=referenceManager.getReferencesTo(address)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 43,
        "startColumnNumber" : 7,
        "endLineNumber" : 43,
        "endColumnNumber" : 82
      },
      "nodeContext" : "ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 41,
        "startColumnNumber" : 52,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  monitor.setMessage(\"Removing offcut reference at \" + address);\n  ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n  while (referencesTo.hasNext()) {\n    if (monitor.isCancelled()) {\n      break;\n    }\n    Reference reference=referencesTo.next();\n    referenceManager.delete(reference);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 41,
        "startColumnNumber" : 5,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!codeUnit.getMinAddress().equals(address)) {\n  monitor.setMessage(\"Removing offcut reference at \" + address);\n  ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n  while (referencesTo.hasNext()) {\n    if (monitor.isCancelled()) {\n      break;\n    }\n    Reference reference=referencesTo.next();\n    referenceManager.delete(reference);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 433,
        "startLineNumber" : 40,
        "startColumnNumber" : 26,
        "endLineNumber" : 52,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (!codeUnit.getMinAddress().equals(address)) {\n    monitor.setMessage(\"Removing offcut reference at \" + address);\n    ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n    while (referencesTo.hasNext()) {\n      if (monitor.isCancelled()) {\n        break;\n      }\n      Reference reference=referencesTo.next();\n      referenceManager.delete(reference);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (codeUnit != null) {\n  if (!codeUnit.getMinAddress().equals(address)) {\n    monitor.setMessage(\"Removing offcut reference at \" + address);\n    ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n    while (referencesTo.hasNext()) {\n      if (monitor.isCancelled()) {\n        break;\n      }\n      Reference reference=referencesTo.next();\n      referenceManager.delete(reference);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 623,
        "startLineNumber" : 34,
        "startColumnNumber" : 29,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (monitor.isCancelled()) {\n    break;\n  }\n  Address address=iterator.next();\n  CodeUnit codeUnit=listing.getCodeUnitContaining(address);\n  if (codeUnit != null) {\n    if (!codeUnit.getMinAddress().equals(address)) {\n      monitor.setMessage(\"Removing offcut reference at \" + address);\n      ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n      while (referencesTo.hasNext()) {\n        if (monitor.isCancelled()) {\n          break;\n        }\n        Reference reference=referencesTo.next();\n        referenceManager.delete(reference);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (iterator.hasNext()) {\n  if (monitor.isCancelled()) {\n    break;\n  }\n  Address address=iterator.next();\n  CodeUnit codeUnit=listing.getCodeUnitContaining(address);\n  if (codeUnit != null) {\n    if (!codeUnit.getMinAddress().equals(address)) {\n      monitor.setMessage(\"Removing offcut reference at \" + address);\n      ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n      while (referencesTo.hasNext()) {\n        if (monitor.isCancelled()) {\n          break;\n        }\n        Reference reference=referencesTo.next();\n        referenceManager.delete(reference);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 82,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 904,
        "startLineNumber" : 30,
        "startColumnNumber" : 36,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Listing listing=currentProgram.getListing();\n  ReferenceManager referenceManager=currentProgram.getReferenceManager();\n  AddressIterator iterator=referenceManager.getReferenceDestinationIterator(currentProgram.getMinAddress(),true);\n  while (iterator.hasNext()) {\n    if (monitor.isCancelled()) {\n      break;\n    }\n    Address address=iterator.next();\n    CodeUnit codeUnit=listing.getCodeUnitContaining(address);\n    if (codeUnit != null) {\n      if (!codeUnit.getMinAddress().equals(address)) {\n        monitor.setMessage(\"Removing offcut reference at \" + address);\n        ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n        while (referencesTo.hasNext()) {\n          if (monitor.isCancelled()) {\n            break;\n          }\n          Reference reference=referencesTo.next();\n          referenceManager.delete(reference);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void run() throws Exception {\n  Listing listing=currentProgram.getListing();\n  ReferenceManager referenceManager=currentProgram.getReferenceManager();\n  AddressIterator iterator=referenceManager.getReferenceDestinationIterator(currentProgram.getMinAddress(),true);\n  while (iterator.hasNext()) {\n    if (monitor.isCancelled()) {\n      break;\n    }\n    Address address=iterator.next();\n    CodeUnit codeUnit=listing.getCodeUnitContaining(address);\n    if (codeUnit != null) {\n      if (!codeUnit.getMinAddress().equals(address)) {\n        monitor.setMessage(\"Removing offcut reference at \" + address);\n        ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n        while (referencesTo.hasNext()) {\n          if (monitor.isCancelled()) {\n            break;\n          }\n          Reference reference=referencesTo.next();\n          referenceManager.delete(reference);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 43,
        "startColumnNumber" : 7,
        "endLineNumber" : 43,
        "endColumnNumber" : 82
      },
      "nodeContext" : "ReferenceIterator referencesTo=referenceManager.getReferencesTo(address);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "ghidra.program.model.symbol.ReferenceIterator"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 43,
    "startColumnNumber" : 40,
    "endLineNumber" : 43,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}