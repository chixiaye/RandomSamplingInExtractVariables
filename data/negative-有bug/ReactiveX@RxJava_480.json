{
  "id" : 480,
  "expression" : "new DefaultObserver<Integer>(){\n  @Override public void onStart(){\n    request(3);\n  }\n  @Override public void onComplete(){\n  }\n  @Override public void onError(  Throwable e){\n  }\n  @Override public void onNext(  Integer t){\n  }\n}\n",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableSingleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DefaultObserver<Integer>(){\n  @Override public void onStart(){\n    request(3);\n  }\n  @Override public void onComplete(){\n  }\n  @Override public void onError(  Throwable e){\n  }\n  @Override public void onNext(  Integer t){\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 518,
      "startLineNumber" : 171,
      "startColumnNumber" : 27,
      "endLineNumber" : 191,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 47,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 18
      },
      "nodeContext" : "Flowable.just(1).doOnRequest(new LongConsumer(){\n  @Override public void accept(  long n){\n    requests.add(n);\n  }\n}\n).single().subscribe(new DefaultObserver<Integer>(){\n  @Override public void onStart(){\n    request(3);\n  }\n  @Override public void onComplete(){\n  }\n  @Override public void onError(  Throwable e){\n  }\n  @Override public void onNext(  Integer t){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 19
      },
      "nodeContext" : "Flowable.just(1).doOnRequest(new LongConsumer(){\n  @Override public void accept(  long n){\n    requests.add(n);\n  }\n}\n).single().subscribe(new DefaultObserver<Integer>(){\n  @Override public void onStart(){\n    request(3);\n  }\n  @Override public void onComplete(){\n  }\n  @Override public void onError(  Throwable e){\n  }\n  @Override public void onNext(  Integer t){\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 158,
        "startColumnNumber" : 70,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<Long> requests=new ArrayList<Long>();\n  Flowable.just(1).doOnRequest(new LongConsumer(){\n    @Override public void accept(    long n){\n      requests.add(n);\n    }\n  }\n).single().subscribe(new DefaultObserver<Integer>(){\n    @Override public void onStart(){\n      request(3);\n    }\n    @Override public void onComplete(){\n    }\n    @Override public void onError(    Throwable e){\n    }\n    @Override public void onNext(    Integer t){\n    }\n  }\n);\n  assertEquals(Arrays.asList(Long.MAX_VALUE),requests);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSingleDoesNotRequestMoreThanItNeedsIf3Requested(){\n  final List<Long> requests=new ArrayList<Long>();\n  Flowable.just(1).doOnRequest(new LongConsumer(){\n    @Override public void accept(    long n){\n      requests.add(n);\n    }\n  }\n).single().subscribe(new DefaultObserver<Integer>(){\n    @Override public void onStart(){\n      request(3);\n    }\n    @Override public void onComplete(){\n    }\n    @Override public void onError(    Throwable e){\n    }\n    @Override public void onNext(    Integer t){\n    }\n  }\n);\n  assertEquals(Arrays.asList(Long.MAX_VALUE),requests);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 160,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 18
      },
      "nodeContext" : "Flowable.just(1).doOnRequest(new LongConsumer(){\n  @Override public void accept(  long n){\n    requests.add(n);\n  }\n}\n).single().subscribe(new DefaultObserver<Integer>(){\n  @Override public void onStart(){\n    request(3);\n  }\n  @Override public void onComplete(){\n  }\n  @Override public void onError(  Throwable e){\n  }\n  @Override public void onNext(  Integer t){\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 76,
      "astHeight" : 10
    },
    "tokenLength" : 15,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 518,
    "startLineNumber" : 171,
    "startColumnNumber" : 27,
    "endLineNumber" : 191,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}