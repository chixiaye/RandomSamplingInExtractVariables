{
  "id" : 450,
  "expression" : "\"output\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamSplitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"output\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 138,
      "startColumnNumber" : 39,
      "endLineNumber" : 138,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 138,
        "startColumnNumber" : 21,
        "endLineNumber" : 138,
        "endColumnNumber" : 47
      },
      "nodeContext" : "outputTopicName=\"output\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 48
      },
      "nodeContext" : "final String outputTopicName=\"output\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 137,
        "startColumnNumber" : 55,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String outputTopicName=\"output\";\n  source.split().branch(isEven,Branched.withConsumer(ks -> ks.to(outputTopicName))).branch(isMultipleOfFive,Branched.withConsumer(ks -> ks.to(outputTopicName)));\n  builder.build();\n  withDriver(driver -> {\n    final TestOutputTopic<Integer,String> outputTopic=driver.createOutputTopic(outputTopicName,new IntegerDeserializer(),new StringDeserializer());\n    assertEquals(Arrays.asList(\"V0\",\"V2\",\"V4\",\"V5\",\"V6\"),outputTopic.readValuesToList());\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBranchingWithNoTerminalOperation(){\n  final String outputTopicName=\"output\";\n  source.split().branch(isEven,Branched.withConsumer(ks -> ks.to(outputTopicName))).branch(isMultipleOfFive,Branched.withConsumer(ks -> ks.to(outputTopicName)));\n  builder.build();\n  withDriver(driver -> {\n    final TestOutputTopic<Integer,String> outputTopic=driver.createOutputTopic(outputTopicName,new IntegerDeserializer(),new StringDeserializer());\n    assertEquals(Arrays.asList(\"V0\",\"V2\",\"V4\",\"V5\",\"V6\"),outputTopic.readValuesToList());\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 48
      },
      "nodeContext" : "final String outputTopicName=\"output\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 138,
    "startColumnNumber" : 39,
    "endLineNumber" : 138,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}