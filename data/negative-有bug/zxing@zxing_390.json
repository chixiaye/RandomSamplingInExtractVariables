{
  "id" : 390,
  "expression" : "productCode.substring(0,3)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/EANManufacturerOrgSupport.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "productCode.substring(0,3)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 38,
      "startColumnNumber" : 34,
      "endLineNumber" : 38,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 38,
        "startColumnNumber" : 17,
        "endLineNumber" : 38,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Integer.parseInt(productCode.substring(0,3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 62
      },
      "nodeContext" : "prefix=Integer.parseInt(productCode.substring(0,3))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 63
      },
      "nodeContext" : "int prefix=Integer.parseInt(productCode.substring(0,3));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 36,
        "startColumnNumber" : 53,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  initIfNeeded();\n  int prefix=Integer.parseInt(productCode.substring(0,3));\n  int max=ranges.size();\n  for (int i=0; i < max; i++) {\n    int[] range=ranges.get(i);\n    int start=range[0];\n    if (prefix < start) {\n      return null;\n    }\n    int end=range.length == 1 ? start : range[1];\n    if (prefix <= end) {\n      return countryIdentifiers.get(i);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "String lookupCountryIdentifier(String productCode){\n  initIfNeeded();\n  int prefix=Integer.parseInt(productCode.substring(0,3));\n  int max=ranges.size();\n  for (int i=0; i < max; i++) {\n    int[] range=ranges.get(i);\n    int start=range[0];\n    if (prefix < start) {\n      return null;\n    }\n    int end=range.length == 1 ? start : range[1];\n    if (prefix <= end) {\n      return countryIdentifiers.get(i);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 63
      },
      "nodeContext" : "int prefix=Integer.parseInt(productCode.substring(0,3));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 38,
    "startColumnNumber" : 34,
    "endLineNumber" : 38,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}