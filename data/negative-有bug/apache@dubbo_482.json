{
  "id" : 482,
  "expression" : "\"hello-worldd\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/buffer/HeapChannelBufferTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"hello-worldd\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 51,
      "startColumnNumber" : 35,
      "endLineNumber" : 51,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 51,
        "startColumnNumber" : 35,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"hello-worldd\".getBytes()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 51,
        "startColumnNumber" : 13,
        "endLineNumber" : 51,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new HeapChannelBuffer(\"hello-worldd\".getBytes())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 61
      },
      "nodeContext" : "b2=new HeapChannelBuffer(\"hello-worldd\".getBytes())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "b2=new HeapChannelBuffer(\"hello-worldd\".getBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 43,
        "startColumnNumber" : 33,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HeapChannelBuffer b1=new HeapChannelBuffer(\"hello-world\".getBytes());\n  HeapChannelBuffer b2=new HeapChannelBuffer(\"hello-world\".getBytes());\n  MatcherAssert.assertThat(b1.equals(b2),is(true));\n  MatcherAssert.assertThat(b1.hashCode(),is(b2.hashCode()));\n  b1=new HeapChannelBuffer(\"hello-world\".getBytes());\n  b2=new HeapChannelBuffer(\"hello-worldd\".getBytes());\n  MatcherAssert.assertThat(b1.equals(b2),is(false));\n  MatcherAssert.assertThat(b1.hashCode(),not(b2.hashCode()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testEqualsAndHashcode(){\n  HeapChannelBuffer b1=new HeapChannelBuffer(\"hello-world\".getBytes());\n  HeapChannelBuffer b2=new HeapChannelBuffer(\"hello-world\".getBytes());\n  MatcherAssert.assertThat(b1.equals(b2),is(true));\n  MatcherAssert.assertThat(b1.hashCode(),is(b2.hashCode()));\n  b1=new HeapChannelBuffer(\"hello-world\".getBytes());\n  b2=new HeapChannelBuffer(\"hello-worldd\".getBytes());\n  MatcherAssert.assertThat(b1.equals(b2),is(false));\n  MatcherAssert.assertThat(b1.hashCode(),not(b2.hashCode()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 62
      },
      "nodeContext" : "b2=new HeapChannelBuffer(\"hello-worldd\".getBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 51,
    "startColumnNumber" : 35,
    "endLineNumber" : 51,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}