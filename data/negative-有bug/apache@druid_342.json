{
  "id" : 342,
  "expression" : "deleted",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/ec2-extensions/src/test/java/org/apache/druid/indexing/overlord/autoscaling/ec2/EC2AutoScalerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "deleted",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 134,
      "startColumnNumber" : 24,
      "endLineNumber" : 134,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 134,
        "startColumnNumber" : 24,
        "endLineNumber" : 134,
        "endColumnNumber" : 44
      },
      "nodeContext" : "deleted.getNodeIds()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 134,
        "startColumnNumber" : 24,
        "endLineNumber" : 134,
        "endColumnNumber" : 51
      },
      "nodeContext" : "deleted.getNodeIds().size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertEquals(deleted.getNodeIds().size(),1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertEquals(deleted.getNodeIds().size(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1645,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  RunInstancesResult runInstancesResult=EasyMock.createMock(RunInstancesResult.class);\n  EC2AutoScaler autoScaler=new EC2AutoScaler(0,1,ENV_CONFIG,amazonEC2Client,managementConfig);\n  EasyMock.expect(amazonEC2Client.runInstances(EasyMock.anyObject(RunInstancesRequest.class))).andReturn(runInstancesResult);\n  EasyMock.expect(amazonEC2Client.describeInstances(EasyMock.anyObject(DescribeInstancesRequest.class))).andReturn(describeInstancesResult);\n  EasyMock.expect(amazonEC2Client.terminateInstances(EasyMock.anyObject(TerminateInstancesRequest.class))).andReturn(null);\n  EasyMock.replay(amazonEC2Client);\n  EasyMock.expect(runInstancesResult.getReservation()).andReturn(reservation).atLeastOnce();\n  EasyMock.replay(runInstancesResult);\n  EasyMock.expect(describeInstancesResult.getReservations()).andReturn(Collections.singletonList(reservation)).atLeastOnce();\n  EasyMock.replay(describeInstancesResult);\n  EasyMock.expect(reservation.getInstances()).andReturn(Collections.singletonList(instance)).atLeastOnce();\n  EasyMock.replay(reservation);\n  AutoScalingData created=autoScaler.provision();\n  Assert.assertEquals(created.getNodeIds().size(),1);\n  Assert.assertEquals(\"theInstance\",created.getNodeIds().get(0));\n  AutoScalingData deleted=autoScaler.terminate(Collections.singletonList(\"dummyIP\"));\n  Assert.assertEquals(deleted.getNodeIds().size(),1);\n  Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0));\n  EasyMock.verify(runInstancesResult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1679,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testScale(){\n  RunInstancesResult runInstancesResult=EasyMock.createMock(RunInstancesResult.class);\n  EC2AutoScaler autoScaler=new EC2AutoScaler(0,1,ENV_CONFIG,amazonEC2Client,managementConfig);\n  EasyMock.expect(amazonEC2Client.runInstances(EasyMock.anyObject(RunInstancesRequest.class))).andReturn(runInstancesResult);\n  EasyMock.expect(amazonEC2Client.describeInstances(EasyMock.anyObject(DescribeInstancesRequest.class))).andReturn(describeInstancesResult);\n  EasyMock.expect(amazonEC2Client.terminateInstances(EasyMock.anyObject(TerminateInstancesRequest.class))).andReturn(null);\n  EasyMock.replay(amazonEC2Client);\n  EasyMock.expect(runInstancesResult.getReservation()).andReturn(reservation).atLeastOnce();\n  EasyMock.replay(runInstancesResult);\n  EasyMock.expect(describeInstancesResult.getReservations()).andReturn(Collections.singletonList(reservation)).atLeastOnce();\n  EasyMock.replay(describeInstancesResult);\n  EasyMock.expect(reservation.getInstances()).andReturn(Collections.singletonList(instance)).atLeastOnce();\n  EasyMock.replay(reservation);\n  AutoScalingData created=autoScaler.provision();\n  Assert.assertEquals(created.getNodeIds().size(),1);\n  Assert.assertEquals(\"theInstance\",created.getNodeIds().get(0));\n  AutoScalingData deleted=autoScaler.terminate(Collections.singletonList(\"dummyIP\"));\n  Assert.assertEquals(deleted.getNodeIds().size(),1);\n  Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0));\n  EasyMock.verify(runInstancesResult);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertEquals(deleted.getNodeIds().size(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.indexing.overlord.autoscaling.AutoScalingData"
  }, {
    "nodeContext" : "deleted",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 135,
      "startColumnNumber" : 37,
      "endLineNumber" : 135,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 135,
        "startColumnNumber" : 37,
        "endLineNumber" : 135,
        "endColumnNumber" : 57
      },
      "nodeContext" : "deleted.getNodeIds()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 135,
        "startColumnNumber" : 37,
        "endLineNumber" : 135,
        "endColumnNumber" : 64
      },
      "nodeContext" : "deleted.getNodeIds().get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1645,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  RunInstancesResult runInstancesResult=EasyMock.createMock(RunInstancesResult.class);\n  EC2AutoScaler autoScaler=new EC2AutoScaler(0,1,ENV_CONFIG,amazonEC2Client,managementConfig);\n  EasyMock.expect(amazonEC2Client.runInstances(EasyMock.anyObject(RunInstancesRequest.class))).andReturn(runInstancesResult);\n  EasyMock.expect(amazonEC2Client.describeInstances(EasyMock.anyObject(DescribeInstancesRequest.class))).andReturn(describeInstancesResult);\n  EasyMock.expect(amazonEC2Client.terminateInstances(EasyMock.anyObject(TerminateInstancesRequest.class))).andReturn(null);\n  EasyMock.replay(amazonEC2Client);\n  EasyMock.expect(runInstancesResult.getReservation()).andReturn(reservation).atLeastOnce();\n  EasyMock.replay(runInstancesResult);\n  EasyMock.expect(describeInstancesResult.getReservations()).andReturn(Collections.singletonList(reservation)).atLeastOnce();\n  EasyMock.replay(describeInstancesResult);\n  EasyMock.expect(reservation.getInstances()).andReturn(Collections.singletonList(instance)).atLeastOnce();\n  EasyMock.replay(reservation);\n  AutoScalingData created=autoScaler.provision();\n  Assert.assertEquals(created.getNodeIds().size(),1);\n  Assert.assertEquals(\"theInstance\",created.getNodeIds().get(0));\n  AutoScalingData deleted=autoScaler.terminate(Collections.singletonList(\"dummyIP\"));\n  Assert.assertEquals(deleted.getNodeIds().size(),1);\n  Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0));\n  EasyMock.verify(runInstancesResult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1679,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testScale(){\n  RunInstancesResult runInstancesResult=EasyMock.createMock(RunInstancesResult.class);\n  EC2AutoScaler autoScaler=new EC2AutoScaler(0,1,ENV_CONFIG,amazonEC2Client,managementConfig);\n  EasyMock.expect(amazonEC2Client.runInstances(EasyMock.anyObject(RunInstancesRequest.class))).andReturn(runInstancesResult);\n  EasyMock.expect(amazonEC2Client.describeInstances(EasyMock.anyObject(DescribeInstancesRequest.class))).andReturn(describeInstancesResult);\n  EasyMock.expect(amazonEC2Client.terminateInstances(EasyMock.anyObject(TerminateInstancesRequest.class))).andReturn(null);\n  EasyMock.replay(amazonEC2Client);\n  EasyMock.expect(runInstancesResult.getReservation()).andReturn(reservation).atLeastOnce();\n  EasyMock.replay(runInstancesResult);\n  EasyMock.expect(describeInstancesResult.getReservations()).andReturn(Collections.singletonList(reservation)).atLeastOnce();\n  EasyMock.replay(describeInstancesResult);\n  EasyMock.expect(reservation.getInstances()).andReturn(Collections.singletonList(instance)).atLeastOnce();\n  EasyMock.replay(reservation);\n  AutoScalingData created=autoScaler.provision();\n  Assert.assertEquals(created.getNodeIds().size(),1);\n  Assert.assertEquals(\"theInstance\",created.getNodeIds().get(0));\n  AutoScalingData deleted=autoScaler.terminate(Collections.singletonList(\"dummyIP\"));\n  Assert.assertEquals(deleted.getNodeIds().size(),1);\n  Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0));\n  EasyMock.verify(runInstancesResult);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.assertEquals(INSTANCE_ID,deleted.getNodeIds().get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.indexing.overlord.autoscaling.AutoScalingData"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 134,
    "startColumnNumber" : 24,
    "endLineNumber" : 134,
    "endColumnNumber" : 31
  }, {
    "charLength" : 7,
    "startLineNumber" : 135,
    "startColumnNumber" : 37,
    "endLineNumber" : 135,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}