{
  "id" : 301,
  "expression" : "\"unknown command \"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-23/src/main/java/org/redisson/spring/data/connection/RedissonReactiveStreamCommands.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"unknown command \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 473,
      "startColumnNumber" : 47,
      "endLineNumber" : 473,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 473,
        "startColumnNumber" : 47,
        "endLineNumber" : 473,
        "endColumnNumber" : 87
      },
      "nodeContext" : "\"unknown command \" + command.getAction()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 473,
        "startColumnNumber" : 18,
        "endLineNumber" : 473,
        "endColumnNumber" : 88
      },
      "nodeContext" : "new IllegalArgumentException(\"unknown command \" + command.getAction())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 473,
        "startColumnNumber" : 12,
        "endLineNumber" : 473,
        "endColumnNumber" : 89
      },
      "nodeContext" : "throw new IllegalArgumentException(\"unknown command \" + command.getAction());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1586,
        "startLineNumber" : 447,
        "startColumnNumber" : 45,
        "endLineNumber" : 474,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notNull(command.getGroupName(),\"GroupName must not be null!\");\n  byte[] k=toByteArray(command.getKey());\n  if (command.getAction().equals(GroupCommand.GroupCommandAction.CREATE)) {\n    Assert.notNull(command.getReadOffset(),\"ReadOffset must not be null!\");\n    Mono<String> m=write(k,StringCodec.INSTANCE,XGROUP_STRING,\"CREATE\",k,command.getGroupName(),command.getReadOffset().getOffset(),\"MKSTREAM\");\n    return m.map(v -> new ReactiveRedisConnection.CommandResponse<>(command,v));\n  }\n  if (command.getAction().equals(GroupCommand.GroupCommandAction.DELETE_CONSUMER)) {\n    Assert.notNull(command.getConsumerName(),\"ConsumerName must not be null!\");\n    Mono<Long> m=write(k,StringCodec.INSTANCE,RedisCommands.XGROUP_LONG,\"DELCONSUMER\",k,command.getGroupName(),command.getConsumerName());\n    return m.map(v -> new ReactiveRedisConnection.CommandResponse<>(command,v > 0 ? \"OK\" : \"Error\"));\n  }\n  if (command.getAction().equals(GroupCommand.GroupCommandAction.DESTROY)) {\n    Mono<Long> m=write(k,StringCodec.INSTANCE,RedisCommands.XGROUP_LONG,\"DESTROY\",k,command.getGroupName());\n    return m.map(v -> new ReactiveRedisConnection.CommandResponse<>(command,v > 0 ? \"OK\" : \"Error\"));\n  }\n  throw new IllegalArgumentException(\"unknown command \" + command.getAction());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1597,
        "startLineNumber" : 447,
        "startColumnNumber" : 34,
        "endLineNumber" : 474,
        "endColumnNumber" : 9
      },
      "nodeContext" : "command -> {\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notNull(command.getGroupName(),\"GroupName must not be null!\");\n  byte[] k=toByteArray(command.getKey());\n  if (command.getAction().equals(GroupCommand.GroupCommandAction.CREATE)) {\n    Assert.notNull(command.getReadOffset(),\"ReadOffset must not be null!\");\n    Mono<String> m=write(k,StringCodec.INSTANCE,XGROUP_STRING,\"CREATE\",k,command.getGroupName(),command.getReadOffset().getOffset(),\"MKSTREAM\");\n    return m.map(v -> new ReactiveRedisConnection.CommandResponse<>(command,v));\n  }\n  if (command.getAction().equals(GroupCommand.GroupCommandAction.DELETE_CONSUMER)) {\n    Assert.notNull(command.getConsumerName(),\"ConsumerName must not be null!\");\n    Mono<Long> m=write(k,StringCodec.INSTANCE,RedisCommands.XGROUP_LONG,\"DELCONSUMER\",k,command.getGroupName(),command.getConsumerName());\n    return m.map(v -> new ReactiveRedisConnection.CommandResponse<>(command,v > 0 ? \"OK\" : \"Error\"));\n  }\n  if (command.getAction().equals(GroupCommand.GroupCommandAction.DESTROY)) {\n    Mono<Long> m=write(k,StringCodec.INSTANCE,RedisCommands.XGROUP_LONG,\"DESTROY\",k,command.getGroupName());\n    return m.map(v -> new ReactiveRedisConnection.CommandResponse<>(command,v > 0 ? \"OK\" : \"Error\"));\n  }\n  throw new IllegalArgumentException(\"unknown command \" + command.getAction());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 220,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 473,
        "startColumnNumber" : 12,
        "endLineNumber" : 473,
        "endColumnNumber" : 89
      },
      "nodeContext" : "throw new IllegalArgumentException(\"unknown command \" + command.getAction());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 473,
    "startColumnNumber" : 47,
    "endLineNumber" : 473,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}