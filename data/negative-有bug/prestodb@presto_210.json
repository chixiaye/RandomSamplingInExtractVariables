{
  "id" : 210,
  "expression" : "(int)(type.getScale() - sourceScale)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-orc/src/main/java/com/facebook/presto/orc/reader/DecimalBatchStreamReader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(int)(type.getScale() - sourceScale)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 128,
      "startColumnNumber" : 37,
      "endLineNumber" : 128,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 92
      },
      "nodeContext" : "rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 93
      },
      "nodeContext" : "rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 123,
        "startColumnNumber" : 21,
        "endLineNumber" : 130,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  decimalStream.nextLongDecimal(decimal);\n  rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n  type.writeSlice(builder,rescaledDecimal);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (type.isShort()) {\n  long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n  type.writeLong(builder,rescaledDecimal);\n}\n else {\n  Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  decimalStream.nextLongDecimal(decimal);\n  rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n  type.writeSlice(builder,rescaledDecimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 117,
        "startColumnNumber" : 52,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  long sourceScale=scaleStream.next();\n  if (type.isShort()) {\n    long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n    type.writeLong(builder,rescaledDecimal);\n  }\n else {\n    Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    decimalStream.nextLongDecimal(decimal);\n    rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n    type.writeSlice(builder,rescaledDecimal);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < nextBatchSize; i++) {\n  long sourceScale=scaleStream.next();\n  if (type.isShort()) {\n    long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n    type.writeLong(builder,rescaledDecimal);\n  }\n else {\n    Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    decimalStream.nextLongDecimal(decimal);\n    rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n    type.writeSlice(builder,rescaledDecimal);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1205,
        "startLineNumber" : 109,
        "startColumnNumber" : 35,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (decimalStream == null) {\n    throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but decimal stream is not present\");\n  }\n  if (scaleStream == null) {\n    throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but scale stream is not present\");\n  }\n  for (int i=0; i < nextBatchSize; i++) {\n    long sourceScale=scaleStream.next();\n    if (type.isShort()) {\n      long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n      type.writeLong(builder,rescaledDecimal);\n    }\n else {\n      Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      decimalStream.nextLongDecimal(decimal);\n      rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n      type.writeSlice(builder,rescaledDecimal);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2387,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (presentStream == null) {\n  if (decimalStream == null) {\n    throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but decimal stream is not present\");\n  }\n  if (scaleStream == null) {\n    throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but scale stream is not present\");\n  }\n  for (int i=0; i < nextBatchSize; i++) {\n    long sourceScale=scaleStream.next();\n    if (type.isShort()) {\n      long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n      type.writeLong(builder,rescaledDecimal);\n    }\n else {\n      Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      decimalStream.nextLongDecimal(decimal);\n      rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n      type.writeSlice(builder,rescaledDecimal);\n    }\n  }\n}\n else {\n  verify(decimalStream != null);\n  verify(scaleStream != null);\n  for (int i=0; i < nextBatchSize; i++) {\n    if (presentStream.nextBit()) {\n      long sourceScale=scaleStream.next();\n      if (type.isShort()) {\n        long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n        type.writeLong(builder,rescaledDecimal);\n      }\n else {\n        Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        decimalStream.nextLongDecimal(decimal);\n        rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n        type.writeSlice(builder,rescaledDecimal);\n      }\n    }\n else {\n      builder.appendNull();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 228,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2988,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!rowGroupOpen) {\n    openRowGroup();\n  }\n  seekToOffset();\n  if (decimalStream == null && scaleStream == null && presentStream != null) {\n    presentStream.skip(nextBatchSize);\n    Block nullValueBlock=RunLengthEncodedBlock.create(type,null,nextBatchSize);\n    readOffset=0;\n    nextBatchSize=0;\n    return nullValueBlock;\n  }\n  BlockBuilder builder=type.createBlockBuilder(null,nextBatchSize);\n  if (presentStream == null) {\n    if (decimalStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but decimal stream is not present\");\n    }\n    if (scaleStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but scale stream is not present\");\n    }\n    for (int i=0; i < nextBatchSize; i++) {\n      long sourceScale=scaleStream.next();\n      if (type.isShort()) {\n        long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n        type.writeLong(builder,rescaledDecimal);\n      }\n else {\n        Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        decimalStream.nextLongDecimal(decimal);\n        rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n        type.writeSlice(builder,rescaledDecimal);\n      }\n    }\n  }\n else {\n    verify(decimalStream != null);\n    verify(scaleStream != null);\n    for (int i=0; i < nextBatchSize; i++) {\n      if (presentStream.nextBit()) {\n        long sourceScale=scaleStream.next();\n        if (type.isShort()) {\n          long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n          type.writeLong(builder,rescaledDecimal);\n        }\n else {\n          Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          decimalStream.nextLongDecimal(decimal);\n          rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n          type.writeSlice(builder,rescaledDecimal);\n        }\n      }\n else {\n        builder.appendNull();\n      }\n    }\n  }\n  readOffset=0;\n  nextBatchSize=0;\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 300,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3062,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Block readBlock() throws IOException {\n  if (!rowGroupOpen) {\n    openRowGroup();\n  }\n  seekToOffset();\n  if (decimalStream == null && scaleStream == null && presentStream != null) {\n    presentStream.skip(nextBatchSize);\n    Block nullValueBlock=RunLengthEncodedBlock.create(type,null,nextBatchSize);\n    readOffset=0;\n    nextBatchSize=0;\n    return nullValueBlock;\n  }\n  BlockBuilder builder=type.createBlockBuilder(null,nextBatchSize);\n  if (presentStream == null) {\n    if (decimalStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but decimal stream is not present\");\n    }\n    if (scaleStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but scale stream is not present\");\n    }\n    for (int i=0; i < nextBatchSize; i++) {\n      long sourceScale=scaleStream.next();\n      if (type.isShort()) {\n        long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n        type.writeLong(builder,rescaledDecimal);\n      }\n else {\n        Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        decimalStream.nextLongDecimal(decimal);\n        rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n        type.writeSlice(builder,rescaledDecimal);\n      }\n    }\n  }\n else {\n    verify(decimalStream != null);\n    verify(scaleStream != null);\n    for (int i=0; i < nextBatchSize; i++) {\n      if (presentStream.nextBit()) {\n        long sourceScale=scaleStream.next();\n        if (type.isShort()) {\n          long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n          type.writeLong(builder,rescaledDecimal);\n        }\n else {\n          Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          decimalStream.nextLongDecimal(decimal);\n          rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n          type.writeSlice(builder,rescaledDecimal);\n        }\n      }\n else {\n        builder.appendNull();\n      }\n    }\n  }\n  readOffset=0;\n  nextBatchSize=0;\n  return builder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 93
      },
      "nodeContext" : "rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "int"
  }, {
    "nodeContext" : "(int)(type.getScale() - sourceScale)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 149,
      "startColumnNumber" : 41,
      "endLineNumber" : 149,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 96
      },
      "nodeContext" : "rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 97
      },
      "nodeContext" : "rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 144,
        "startColumnNumber" : 25,
        "endLineNumber" : 151,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  decimalStream.nextLongDecimal(decimal);\n  rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n  type.writeSlice(builder,rescaledDecimal);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 140,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (type.isShort()) {\n  long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n  type.writeLong(builder,rescaledDecimal);\n}\n else {\n  Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n  decimalStream.nextLongDecimal(decimal);\n  rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n  type.writeSlice(builder,rescaledDecimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 137,
        "startColumnNumber" : 45,
        "endLineNumber" : 152,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long sourceScale=scaleStream.next();\n  if (type.isShort()) {\n    long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n    type.writeLong(builder,rescaledDecimal);\n  }\n else {\n    Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    decimalStream.nextLongDecimal(decimal);\n    rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n    type.writeSlice(builder,rescaledDecimal);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 961,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (presentStream.nextBit()) {\n  long sourceScale=scaleStream.next();\n  if (type.isShort()) {\n    long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n    type.writeLong(builder,rescaledDecimal);\n  }\n else {\n    Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n    decimalStream.nextLongDecimal(decimal);\n    rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n    type.writeSlice(builder,rescaledDecimal);\n  }\n}\n else {\n  builder.appendNull();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 136,
        "startColumnNumber" : 52,
        "endLineNumber" : 156,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (presentStream.nextBit()) {\n    long sourceScale=scaleStream.next();\n    if (type.isShort()) {\n      long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n      type.writeLong(builder,rescaledDecimal);\n    }\n else {\n      Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      decimalStream.nextLongDecimal(decimal);\n      rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n      type.writeSlice(builder,rescaledDecimal);\n    }\n  }\n else {\n    builder.appendNull();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 156,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < nextBatchSize; i++) {\n  if (presentStream.nextBit()) {\n    long sourceScale=scaleStream.next();\n    if (type.isShort()) {\n      long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n      type.writeLong(builder,rescaledDecimal);\n    }\n else {\n      Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      decimalStream.nextLongDecimal(decimal);\n      rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n      type.writeSlice(builder,rescaledDecimal);\n    }\n  }\n else {\n    builder.appendNull();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1141,
        "startLineNumber" : 133,
        "startColumnNumber" : 13,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  verify(decimalStream != null);\n  verify(scaleStream != null);\n  for (int i=0; i < nextBatchSize; i++) {\n    if (presentStream.nextBit()) {\n      long sourceScale=scaleStream.next();\n      if (type.isShort()) {\n        long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n        type.writeLong(builder,rescaledDecimal);\n      }\n else {\n        Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        decimalStream.nextLongDecimal(decimal);\n        rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n        type.writeSlice(builder,rescaledDecimal);\n      }\n    }\n else {\n      builder.appendNull();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2387,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (presentStream == null) {\n  if (decimalStream == null) {\n    throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but decimal stream is not present\");\n  }\n  if (scaleStream == null) {\n    throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but scale stream is not present\");\n  }\n  for (int i=0; i < nextBatchSize; i++) {\n    long sourceScale=scaleStream.next();\n    if (type.isShort()) {\n      long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n      type.writeLong(builder,rescaledDecimal);\n    }\n else {\n      Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n      decimalStream.nextLongDecimal(decimal);\n      rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n      type.writeSlice(builder,rescaledDecimal);\n    }\n  }\n}\n else {\n  verify(decimalStream != null);\n  verify(scaleStream != null);\n  for (int i=0; i < nextBatchSize; i++) {\n    if (presentStream.nextBit()) {\n      long sourceScale=scaleStream.next();\n      if (type.isShort()) {\n        long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n        type.writeLong(builder,rescaledDecimal);\n      }\n else {\n        Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        decimalStream.nextLongDecimal(decimal);\n        rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n        type.writeSlice(builder,rescaledDecimal);\n      }\n    }\n else {\n      builder.appendNull();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 228,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2988,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!rowGroupOpen) {\n    openRowGroup();\n  }\n  seekToOffset();\n  if (decimalStream == null && scaleStream == null && presentStream != null) {\n    presentStream.skip(nextBatchSize);\n    Block nullValueBlock=RunLengthEncodedBlock.create(type,null,nextBatchSize);\n    readOffset=0;\n    nextBatchSize=0;\n    return nullValueBlock;\n  }\n  BlockBuilder builder=type.createBlockBuilder(null,nextBatchSize);\n  if (presentStream == null) {\n    if (decimalStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but decimal stream is not present\");\n    }\n    if (scaleStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but scale stream is not present\");\n    }\n    for (int i=0; i < nextBatchSize; i++) {\n      long sourceScale=scaleStream.next();\n      if (type.isShort()) {\n        long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n        type.writeLong(builder,rescaledDecimal);\n      }\n else {\n        Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        decimalStream.nextLongDecimal(decimal);\n        rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n        type.writeSlice(builder,rescaledDecimal);\n      }\n    }\n  }\n else {\n    verify(decimalStream != null);\n    verify(scaleStream != null);\n    for (int i=0; i < nextBatchSize; i++) {\n      if (presentStream.nextBit()) {\n        long sourceScale=scaleStream.next();\n        if (type.isShort()) {\n          long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n          type.writeLong(builder,rescaledDecimal);\n        }\n else {\n          Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          decimalStream.nextLongDecimal(decimal);\n          rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n          type.writeSlice(builder,rescaledDecimal);\n        }\n      }\n else {\n        builder.appendNull();\n      }\n    }\n  }\n  readOffset=0;\n  nextBatchSize=0;\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 300,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3062,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Block readBlock() throws IOException {\n  if (!rowGroupOpen) {\n    openRowGroup();\n  }\n  seekToOffset();\n  if (decimalStream == null && scaleStream == null && presentStream != null) {\n    presentStream.skip(nextBatchSize);\n    Block nullValueBlock=RunLengthEncodedBlock.create(type,null,nextBatchSize);\n    readOffset=0;\n    nextBatchSize=0;\n    return nullValueBlock;\n  }\n  BlockBuilder builder=type.createBlockBuilder(null,nextBatchSize);\n  if (presentStream == null) {\n    if (decimalStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but decimal stream is not present\");\n    }\n    if (scaleStream == null) {\n      throw new OrcCorruptionException(streamDescriptor.getOrcDataSourceId(),\"Value is not null but scale stream is not present\");\n    }\n    for (int i=0; i < nextBatchSize; i++) {\n      long sourceScale=scaleStream.next();\n      if (type.isShort()) {\n        long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n        type.writeLong(builder,rescaledDecimal);\n      }\n else {\n        Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n        decimalStream.nextLongDecimal(decimal);\n        rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n        type.writeSlice(builder,rescaledDecimal);\n      }\n    }\n  }\n else {\n    verify(decimalStream != null);\n    verify(scaleStream != null);\n    for (int i=0; i < nextBatchSize; i++) {\n      if (presentStream.nextBit()) {\n        long sourceScale=scaleStream.next();\n        if (type.isShort()) {\n          long rescaledDecimal=Decimals.rescale(decimalStream.nextLong(),(int)sourceScale,type.getScale());\n          type.writeLong(builder,rescaledDecimal);\n        }\n else {\n          Slice decimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          Slice rescaledDecimal=UnscaledDecimal128Arithmetic.unscaledDecimal();\n          decimalStream.nextLongDecimal(decimal);\n          rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n          type.writeSlice(builder,rescaledDecimal);\n        }\n      }\n else {\n        builder.appendNull();\n      }\n    }\n  }\n  readOffset=0;\n  nextBatchSize=0;\n  return builder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 149,
        "startColumnNumber" : 24,
        "endLineNumber" : 149,
        "endColumnNumber" : 97
      },
      "nodeContext" : "rescale(decimal,(int)(type.getScale() - sourceScale),rescaledDecimal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 128,
    "startColumnNumber" : 37,
    "endLineNumber" : 128,
    "endColumnNumber" : 74
  }, {
    "charLength" : 37,
    "startLineNumber" : 149,
    "startColumnNumber" : 41,
    "endLineNumber" : 149,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 9
  } ]
}