{
  "id" : 267,
  "expression" : "md.digest()",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/MD5.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "md.digest()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 133,
      "startColumnNumber" : 31,
      "endLineNumber" : 133,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 133,
        "startColumnNumber" : 19,
        "endLineNumber" : 133,
        "endColumnNumber" : 42
      },
      "nodeContext" : "hashValue=md.digest()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 43
      },
      "nodeContext" : "byte[] hashValue=md.digest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  long skipLen=is.skip(offset);\n  if (skipLen < offset) {\n    return null;\n  }\n  MessageDigest md=MessageDigest.getInstance(\"MD5\");\n  StringBuilder md5Str=new StringBuilder(32);\n  byte[] buf=new byte[bufLen];\n  int readCount=0;\n  int totalRead=0;\n  while ((readCount=is.read(buf)) != -1 && totalRead < length) {\n    if (totalRead + readCount <= length) {\n      md.update(buf,0,readCount);\n      totalRead+=readCount;\n    }\n else {\n      md.update(buf,0,length - totalRead);\n      totalRead=length;\n    }\n  }\n  if (extendBytes != null && extendBytes.length > 0) {\n    md.update(extendBytes);\n  }\n  byte[] hashValue=md.digest();\n  for (int i=0; i < hashValue.length; i++) {\n    md5Str.append(Integer.toString((hashValue[i] & 0xff) + 0x100,16).substring(1));\n  }\n  return md5Str.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  long skipLen=is.skip(offset);\n  if (skipLen < offset) {\n    return null;\n  }\n  MessageDigest md=MessageDigest.getInstance(\"MD5\");\n  StringBuilder md5Str=new StringBuilder(32);\n  byte[] buf=new byte[bufLen];\n  int readCount=0;\n  int totalRead=0;\n  while ((readCount=is.read(buf)) != -1 && totalRead < length) {\n    if (totalRead + readCount <= length) {\n      md.update(buf,0,readCount);\n      totalRead+=readCount;\n    }\n else {\n      md.update(buf,0,length - totalRead);\n      totalRead=length;\n    }\n  }\n  if (extendBytes != null && extendBytes.length > 0) {\n    md.update(extendBytes);\n  }\n  byte[] hashValue=md.digest();\n  for (int i=0; i < hashValue.length; i++) {\n    md5Str.append(Integer.toString((hashValue[i] & 0xff) + 0x100,16).substring(1));\n  }\n  return md5Str.toString();\n}\n catch (Exception e) {\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 174,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1317,
        "startLineNumber" : 103,
        "startColumnNumber" : 145,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (is == null || bufLen <= 0 || offset < 0 || length <= 0) {\n    return null;\n  }\n  try {\n    long skipLen=is.skip(offset);\n    if (skipLen < offset) {\n      return null;\n    }\n    MessageDigest md=MessageDigest.getInstance(\"MD5\");\n    StringBuilder md5Str=new StringBuilder(32);\n    byte[] buf=new byte[bufLen];\n    int readCount=0;\n    int totalRead=0;\n    while ((readCount=is.read(buf)) != -1 && totalRead < length) {\n      if (totalRead + readCount <= length) {\n        md.update(buf,0,readCount);\n        totalRead+=readCount;\n      }\n else {\n        md.update(buf,0,length - totalRead);\n        totalRead=length;\n      }\n    }\n    if (extendBytes != null && extendBytes.length > 0) {\n      md.update(extendBytes);\n    }\n    byte[] hashValue=md.digest();\n    for (int i=0; i < hashValue.length; i++) {\n      md5Str.append(Integer.toString((hashValue[i] & 0xff) + 0x100,16).substring(1));\n    }\n    return md5Str.toString();\n  }\n catch (  Exception e) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1791,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get the md5 for inputStream. This method cost less memory. It read bufLen bytes from the FileInputStream once.\n * @param is\n * @param bufLen\n * @param offset\n * @param length\n * @param extendBytes extend bytes which would be add to the end of input stream for MD5 calculating\n */\npublic static String getMD5ExtendBytes(final InputStream is,final int bufLen,final int offset,final int length,final byte[] extendBytes){\n  if (is == null || bufLen <= 0 || offset < 0 || length <= 0) {\n    return null;\n  }\n  try {\n    long skipLen=is.skip(offset);\n    if (skipLen < offset) {\n      return null;\n    }\n    MessageDigest md=MessageDigest.getInstance(\"MD5\");\n    StringBuilder md5Str=new StringBuilder(32);\n    byte[] buf=new byte[bufLen];\n    int readCount=0;\n    int totalRead=0;\n    while ((readCount=is.read(buf)) != -1 && totalRead < length) {\n      if (totalRead + readCount <= length) {\n        md.update(buf,0,readCount);\n        totalRead+=readCount;\n      }\n else {\n        md.update(buf,0,length - totalRead);\n        totalRead=length;\n      }\n    }\n    if (extendBytes != null && extendBytes.length > 0) {\n      md.update(extendBytes);\n    }\n    byte[] hashValue=md.digest();\n    for (int i=0; i < hashValue.length; i++) {\n      md5Str.append(Integer.toString((hashValue[i] & 0xff) + 0x100,16).substring(1));\n    }\n    return md5Str.toString();\n  }\n catch (  Exception e) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 43
      },
      "nodeContext" : "byte[] hashValue=md.digest();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 133,
    "startColumnNumber" : 31,
    "endLineNumber" : 133,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}