{
  "id" : 57,
  "expression" : "Math",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/main/java/io/netty/handler/codec/compression/Lz4Compressor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 179,
      "startColumnNumber" : 27,
      "endLineNumber" : 179,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 179,
        "startColumnNumber" : 27,
        "endLineNumber" : 179,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Math.max(0,compressionLevel - COMPRESSION_LEVEL_BASE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 81
      },
      "nodeContext" : "compressionLevel=Math.max(0,compressionLevel - COMPRESSION_LEVEL_BASE)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 82
      },
      "nodeContext" : "compressionLevel=Math.max(0,compressionLevel - COMPRESSION_LEVEL_BASE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 173,
        "startColumnNumber" : 55,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (blockSize < MIN_BLOCK_SIZE || blockSize > MAX_BLOCK_SIZE) {\n    throw new IllegalArgumentException(String.format(\"blockSize: %d (expected: %d-%d)\",blockSize,MIN_BLOCK_SIZE,MAX_BLOCK_SIZE));\n  }\n  int compressionLevel=32 - Integer.numberOfLeadingZeros(blockSize - 1);\n  compressionLevel=Math.max(0,compressionLevel - COMPRESSION_LEVEL_BASE);\n  return compressionLevel;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calculates compression level on the basis of block size.\n */\nprivate static int compressionLevel(int blockSize){\n  if (blockSize < MIN_BLOCK_SIZE || blockSize > MAX_BLOCK_SIZE) {\n    throw new IllegalArgumentException(String.format(\"blockSize: %d (expected: %d-%d)\",blockSize,MIN_BLOCK_SIZE,MAX_BLOCK_SIZE));\n  }\n  int compressionLevel=32 - Integer.numberOfLeadingZeros(blockSize - 1);\n  compressionLevel=Math.max(0,compressionLevel - COMPRESSION_LEVEL_BASE);\n  return compressionLevel;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 82
      },
      "nodeContext" : "compressionLevel=Math.max(0,compressionLevel - COMPRESSION_LEVEL_BASE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Math"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 179,
    "startColumnNumber" : 27,
    "endLineNumber" : 179,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}