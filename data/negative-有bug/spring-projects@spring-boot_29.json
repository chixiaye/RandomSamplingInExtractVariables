{
  "id" : 29,
  "expression" : "new IncludeFilter(this.includes)",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-tools/spring-boot-maven-plugin/src/main/java/org/springframework/boot/maven/AbstractDependencyFilterMojo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IncludeFilter(this.includes)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 117,
      "startColumnNumber" : 21,
      "endLineNumber" : 117,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 117,
        "startColumnNumber" : 3,
        "endLineNumber" : 117,
        "endColumnNumber" : 54
      },
      "nodeContext" : "filters.addFilter(new IncludeFilter(this.includes))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 117,
        "startColumnNumber" : 3,
        "endLineNumber" : 117,
        "endColumnNumber" : 55
      },
      "nodeContext" : "filters.addFilter(new IncludeFilter(this.includes));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 116,
        "startColumnNumber" : 57,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  filters.addFilter(new IncludeFilter(this.includes));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 118,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.includes != null && !this.includes.isEmpty()) {\n  filters.addFilter(new IncludeFilter(this.includes));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 107,
        "startColumnNumber" : 82,
        "endLineNumber" : 123,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FilterArtifacts filters=new FilterArtifacts();\n  for (  ArtifactsFilter additionalFilter : additionalFilters) {\n    filters.addFilter(additionalFilter);\n  }\n  filters.addFilter(new ArtifactIdFilter(\"\",cleanFilterConfig(this.excludeArtifactIds)));\n  filters.addFilter(new MatchingGroupIdFilter(cleanFilterConfig(this.excludeGroupIds)));\n  if (this.includes != null && !this.includes.isEmpty()) {\n    filters.addFilter(new IncludeFilter(this.includes));\n  }\n  if (this.excludes != null && !this.excludes.isEmpty()) {\n    filters.addFilter(new ExcludeFilter(this.excludes));\n  }\n  return filters;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 843,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 123,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Return artifact filters configured for this MOJO.\n * @param additionalFilters optional additional filters to apply\n * @return the filters\n */\nprotected final FilterArtifacts getFilters(ArtifactsFilter... additionalFilters){\n  FilterArtifacts filters=new FilterArtifacts();\n  for (  ArtifactsFilter additionalFilter : additionalFilters) {\n    filters.addFilter(additionalFilter);\n  }\n  filters.addFilter(new ArtifactIdFilter(\"\",cleanFilterConfig(this.excludeArtifactIds)));\n  filters.addFilter(new MatchingGroupIdFilter(cleanFilterConfig(this.excludeGroupIds)));\n  if (this.includes != null && !this.includes.isEmpty()) {\n    filters.addFilter(new IncludeFilter(this.includes));\n  }\n  if (this.excludes != null && !this.excludes.isEmpty()) {\n    filters.addFilter(new ExcludeFilter(this.excludes));\n  }\n  return filters;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 117,
        "startColumnNumber" : 3,
        "endLineNumber" : 117,
        "endColumnNumber" : 55
      },
      "nodeContext" : "filters.addFilter(new IncludeFilter(this.includes));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.springframework.boot.maven.IncludeFilter"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 117,
    "startColumnNumber" : 21,
    "endLineNumber" : 117,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}