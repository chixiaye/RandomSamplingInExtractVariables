{
  "id" : 239,
  "expression" : "(libraryClass.getAccessFlags() & (ClassConstants.ACC_INTERFACE | ClassConstants.ACC_ABSTRACT)) != 0",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/classfile/visitor/ConcreteClassDownTraveler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(libraryClass.getAccessFlags() & (ClassConstants.ACC_INTERFACE | ClassConstants.ACC_ABSTRACT)) != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 126,
      "startLineNumber" : 80,
      "startColumnNumber" : 12,
      "endLineNumber" : 82,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 15,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((libraryClass.getAccessFlags() & (ClassConstants.ACC_INTERFACE | ClassConstants.ACC_ABSTRACT)) != 0) {\n  Clazz[] subClasses=libraryClass.subClasses;\n  if (subClasses != null) {\n    for (int index=0; index < subClasses.length; index++) {\n      subClasses[index].accept(this);\n    }\n  }\n}\n else {\n  libraryClass.accept(classVisitor);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((libraryClass.getAccessFlags() & (ClassConstants.ACC_INTERFACE | ClassConstants.ACC_ABSTRACT)) != 0) {\n    Clazz[] subClasses=libraryClass.subClasses;\n    if (subClasses != null) {\n      for (int index=0; index < subClasses.length; index++) {\n        subClasses[index].accept(this);\n      }\n    }\n  }\n else {\n    libraryClass.accept(classVisitor);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitLibraryClass(LibraryClass libraryClass){\n  if ((libraryClass.getAccessFlags() & (ClassConstants.ACC_INTERFACE | ClassConstants.ACC_ABSTRACT)) != 0) {\n    Clazz[] subClasses=libraryClass.subClasses;\n    if (subClasses != null) {\n      for (int index=0; index < subClasses.length; index++) {\n        subClasses[index].accept(this);\n      }\n    }\n  }\n else {\n    libraryClass.accept(classVisitor);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((libraryClass.getAccessFlags() & (ClassConstants.ACC_INTERFACE | ClassConstants.ACC_ABSTRACT)) != 0) {\n  Clazz[] subClasses=libraryClass.subClasses;\n  if (subClasses != null) {\n    for (int index=0; index < subClasses.length; index++) {\n      subClasses[index].accept(this);\n    }\n  }\n}\n else {\n  libraryClass.accept(classVisitor);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    },
    "tokenLength" : 12,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 126,
    "startLineNumber" : 80,
    "startColumnNumber" : 12,
    "endLineNumber" : 82,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}