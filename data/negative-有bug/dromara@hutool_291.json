{
  "id" : 291,
  "expression" : "null",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/convert/impl/DateConverter.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 65,
      "startColumnNumber" : 15,
      "endLineNumber" : 65,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 65,
        "startColumnNumber" : 7,
        "endLineNumber" : 65,
        "endColumnNumber" : 19
      },
      "nodeContext" : "mills=null",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Long mills=null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 64,
        "startColumnNumber" : 56,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected java.util.Date convertInternal(Object value){\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Long mills=null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 77,
      "startColumnNumber" : 15,
      "endLineNumber" : 77,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 19
      },
      "nodeContext" : "date=null",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 77,
        "startColumnNumber" : 3,
        "endLineNumber" : 77,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Date date=null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof TemporalAccessor) {\n  return DateUtil.date((TemporalAccessor)value);\n}\n else {\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 69,
        "startColumnNumber" : 9,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof Number) {\n  mills=((Number)value).longValue();\n}\n else if (value instanceof TemporalAccessor) {\n  return DateUtil.date((TemporalAccessor)value);\n}\n else {\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof Calendar) {\n  mills=((Calendar)value).getTimeInMillis();\n}\n else if (value instanceof Number) {\n  mills=((Number)value).longValue();\n}\n else if (value instanceof TemporalAccessor) {\n  return DateUtil.date((TemporalAccessor)value);\n}\n else {\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 64,
        "startColumnNumber" : 56,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected java.util.Date convertInternal(Object value){\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 77,
        "startColumnNumber" : 3,
        "endLineNumber" : 77,
        "endColumnNumber" : 20
      },
      "nodeContext" : "Date date=null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 85,
      "startColumnNumber" : 6,
      "endLineNumber" : 85,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 18
      },
      "nodeContext" : "null != date",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 85,
        "startColumnNumber" : 3,
        "endLineNumber" : 87,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (null != date) {\n  mills=date.getTime();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 74,
        "startColumnNumber" : 9,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof TemporalAccessor) {\n  return DateUtil.date((TemporalAccessor)value);\n}\n else {\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 69,
        "startColumnNumber" : 9,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof Number) {\n  mills=((Number)value).longValue();\n}\n else if (value instanceof TemporalAccessor) {\n  return DateUtil.date((TemporalAccessor)value);\n}\n else {\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value instanceof Calendar) {\n  mills=((Calendar)value).getTimeInMillis();\n}\n else if (value instanceof Number) {\n  mills=((Number)value).longValue();\n}\n else if (value instanceof TemporalAccessor) {\n  return DateUtil.date((TemporalAccessor)value);\n}\n else {\n  final String valueStr=convertToStr(value);\n  Date date=null;\n  try {\n    date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n  }\n catch (  Exception e) {\n  }\n  if (null != date) {\n    mills=date.getTime();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 64,
        "startColumnNumber" : 56,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected java.util.Date convertInternal(Object value){\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 85,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 18
      },
      "nodeContext" : "null != date",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 90,
      "startColumnNumber" : 6,
      "endLineNumber" : 90,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 19
      },
      "nodeContext" : "null == mills",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null == mills) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 64,
        "startColumnNumber" : 56,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected java.util.Date convertInternal(Object value){\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 19
      },
      "nodeContext" : "null == mills",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 91,
      "startColumnNumber" : 10,
      "endLineNumber" : 91,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 91,
        "startColumnNumber" : 3,
        "endLineNumber" : 91,
        "endColumnNumber" : 15
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 90,
        "startColumnNumber" : 21,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null == mills) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 64,
        "startColumnNumber" : 56,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1386,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected java.util.Date convertInternal(Object value){\n  Long mills=null;\n  if (value instanceof Calendar) {\n    mills=((Calendar)value).getTimeInMillis();\n  }\n else   if (value instanceof Number) {\n    mills=((Number)value).longValue();\n  }\n else   if (value instanceof TemporalAccessor) {\n    return DateUtil.date((TemporalAccessor)value);\n  }\n else {\n    final String valueStr=convertToStr(value);\n    Date date=null;\n    try {\n      date=StrUtil.isBlank(this.format) ? DateUtil.parse(valueStr) : DateUtil.parse(valueStr,this.format);\n    }\n catch (    Exception e) {\n    }\n    if (null != date) {\n      mills=date.getTime();\n    }\n  }\n  if (null == mills) {\n    return null;\n  }\n  if (java.util.Date.class == targetType) {\n    return new java.util.Date(mills);\n  }\n  if (DateTime.class == targetType) {\n    return new DateTime(mills);\n  }\n else   if (java.sql.Date.class == targetType) {\n    return new java.sql.Date(mills);\n  }\n else   if (java.sql.Time.class == targetType) {\n    return new java.sql.Time(mills);\n  }\n else   if (java.sql.Timestamp.class == targetType) {\n    return new java.sql.Timestamp(mills);\n  }\n  throw new UnsupportedOperationException(StrUtil.format(\"Unsupport Date type: {}\",this.targetType.getName()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 91,
        "startColumnNumber" : 3,
        "endLineNumber" : 91,
        "endColumnNumber" : 15
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 65,
    "startColumnNumber" : 15,
    "endLineNumber" : 65,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 77,
    "startColumnNumber" : 15,
    "endLineNumber" : 77,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 85,
    "startColumnNumber" : 6,
    "endLineNumber" : 85,
    "endColumnNumber" : 10
  }, {
    "charLength" : 4,
    "startLineNumber" : 90,
    "startColumnNumber" : 6,
    "endLineNumber" : 90,
    "endColumnNumber" : 10
  }, {
    "charLength" : 4,
    "startLineNumber" : 91,
    "startColumnNumber" : 10,
    "endLineNumber" : 91,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}