{
  "id" : 178,
  "expression" : "\"two\"",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/ReadersWritersTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"two\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 95,
      "startColumnNumber" : 29,
      "endLineNumber" : 95,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 95,
        "endColumnNumber" : 35
      },
      "nodeContext" : "gson.toJson(\"two\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 95,
        "startColumnNumber" : 17,
        "endLineNumber" : 95,
        "endColumnNumber" : 49
      },
      "nodeContext" : "gson.toJson(\"two\").toCharArray()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 50
      },
      "nodeContext" : "writer.write(gson.toJson(\"two\").toCharArray())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 51
      },
      "nodeContext" : "writer.write(gson.toJson(\"two\").toCharArray());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 91,
        "startColumnNumber" : 59,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=new Gson();\n  CharArrayWriter writer=new CharArrayWriter();\n  writer.write(gson.toJson(\"one\").toCharArray());\n  writer.write(gson.toJson(\"two\").toCharArray());\n  CharArrayReader reader=new CharArrayReader(writer.toCharArray());\n  JsonStreamParser parser=new JsonStreamParser(reader);\n  String actualOne=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"one\",actualOne);\n  String actualTwo=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"two\",actualTwo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testReadWriteTwoStrings() throws IOException {\n  Gson gson=new Gson();\n  CharArrayWriter writer=new CharArrayWriter();\n  writer.write(gson.toJson(\"one\").toCharArray());\n  writer.write(gson.toJson(\"two\").toCharArray());\n  CharArrayReader reader=new CharArrayReader(writer.toCharArray());\n  JsonStreamParser parser=new JsonStreamParser(reader);\n  String actualOne=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"one\",actualOne);\n  String actualTwo=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"two\",actualTwo);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 51
      },
      "nodeContext" : "writer.write(gson.toJson(\"two\").toCharArray());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"two\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 101,
      "startColumnNumber" : 17,
      "endLineNumber" : 101,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(\"two\",actualTwo)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(\"two\",actualTwo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 91,
        "startColumnNumber" : 59,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=new Gson();\n  CharArrayWriter writer=new CharArrayWriter();\n  writer.write(gson.toJson(\"one\").toCharArray());\n  writer.write(gson.toJson(\"two\").toCharArray());\n  CharArrayReader reader=new CharArrayReader(writer.toCharArray());\n  JsonStreamParser parser=new JsonStreamParser(reader);\n  String actualOne=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"one\",actualOne);\n  String actualTwo=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"two\",actualTwo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testReadWriteTwoStrings() throws IOException {\n  Gson gson=new Gson();\n  CharArrayWriter writer=new CharArrayWriter();\n  writer.write(gson.toJson(\"one\").toCharArray());\n  writer.write(gson.toJson(\"two\").toCharArray());\n  CharArrayReader reader=new CharArrayReader(writer.toCharArray());\n  JsonStreamParser parser=new JsonStreamParser(reader);\n  String actualOne=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"one\",actualOne);\n  String actualTwo=gson.fromJson(parser.next(),String.class);\n  assertEquals(\"two\",actualTwo);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertEquals(\"two\",actualTwo);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 95,
    "startColumnNumber" : 29,
    "endLineNumber" : 95,
    "endColumnNumber" : 34
  }, {
    "charLength" : 5,
    "startLineNumber" : 101,
    "startColumnNumber" : 17,
    "endLineNumber" : 101,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}