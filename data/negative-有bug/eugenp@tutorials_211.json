{
  "id" : 211,
  "expression" : "i.intValue() % 2 == 0",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-streams-3/src/test/java/com/baeldung/streams/conditional/StreamForEachIfElseUnitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i.intValue() % 2 == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 18,
      "startColumnNumber" : 20,
      "endLineNumber" : 18,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 18,
        "startColumnNumber" : 16,
        "endLineNumber" : 22,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i.intValue() % 2 == 0) {\n  Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n}\n else {\n  Assert.assertTrue(i.intValue() + \" is not odd\",i.intValue() % 2 != 0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 17,
        "startColumnNumber" : 26,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i.intValue() % 2 == 0) {\n    Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n  }\n else {\n    Assert.assertTrue(i.intValue() + \" is not odd\",i.intValue() % 2 != 0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 17,
        "startColumnNumber" : 21,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "i -> {\n  if (i.intValue() % 2 == 0) {\n    Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n  }\n else {\n    Assert.assertTrue(i.intValue() + \" is not odd\",i.intValue() % 2 != 0);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 46,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 18,
        "startColumnNumber" : 16,
        "endLineNumber" : 22,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i.intValue() % 2 == 0) {\n  Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n}\n else {\n  Assert.assertTrue(i.intValue() + \" is not odd\",i.intValue() % 2 != 0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    },
    "tokenLength" : 6,
    "type" : "boolean"
  }, {
    "nodeContext" : "i.intValue() % 2 == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 19,
      "startColumnNumber" : 69,
      "endLineNumber" : 19,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 19,
        "startColumnNumber" : 20,
        "endLineNumber" : 19,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 19,
        "startColumnNumber" : 20,
        "endLineNumber" : 19,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 18,
        "startColumnNumber" : 43,
        "endLineNumber" : 20,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 18,
        "startColumnNumber" : 16,
        "endLineNumber" : 22,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i.intValue() % 2 == 0) {\n  Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n}\n else {\n  Assert.assertTrue(i.intValue() + \" is not odd\",i.intValue() % 2 != 0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 17,
        "startColumnNumber" : 26,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i.intValue() % 2 == 0) {\n    Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n  }\n else {\n    Assert.assertTrue(i.intValue() + \" is not odd\",i.intValue() % 2 != 0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 17,
        "startColumnNumber" : 21,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "i -> {\n  if (i.intValue() % 2 == 0) {\n    Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n  }\n else {\n    Assert.assertTrue(i.intValue() + \" is not odd\",i.intValue() % 2 != 0);\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 46,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 19,
        "startColumnNumber" : 20,
        "endLineNumber" : 19,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertTrue(i.intValue() + \" is not even\",i.intValue() % 2 == 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 18,
    "startColumnNumber" : 20,
    "endLineNumber" : 18,
    "endColumnNumber" : 41
  }, {
    "charLength" : 21,
    "startLineNumber" : 19,
    "startColumnNumber" : 69,
    "endLineNumber" : 19,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}