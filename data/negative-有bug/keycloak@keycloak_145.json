{
  "id" : 145,
  "expression" : "factories.values()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/services/DefaultKeycloakSessionFactory.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "factories.values()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 239,
      "startColumnNumber" : 38,
      "endLineNumber" : 239,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 239,
        "startColumnNumber" : 38,
        "endLineNumber" : 239,
        "endColumnNumber" : 67
      },
      "nodeContext" : "factories.values().iterator()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 239,
        "startColumnNumber" : 38,
        "endLineNumber" : 239,
        "endColumnNumber" : 74
      },
      "nodeContext" : "factories.values().iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 239,
        "startColumnNumber" : 38,
        "endLineNumber" : 239,
        "endColumnNumber" : 82
      },
      "nodeContext" : "factories.values().iterator().next().getId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 239,
        "endColumnNumber" : 82
      },
      "nodeContext" : "defaultProvider=factories.values().iterator().next().getId()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 239,
        "endColumnNumber" : 83
      },
      "nodeContext" : "defaultProvider=factories.values().iterator().next().getId();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 238,
        "startColumnNumber" : 64,
        "endLineNumber" : 240,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  defaultProvider=factories.values().iterator().next().getId();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 238,
        "startColumnNumber" : 16,
        "endLineNumber" : 240,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (factories != null && factories.size() == 1) {\n  defaultProvider=factories.values().iterator().next().getId();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 236,
        "startColumnNumber" : 19,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n  if (factories != null && factories.size() == 1) {\n    defaultProvider=factories.values().iterator().next().getId();\n  }\n  if (defaultProvider == null) {\n    Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n    if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n      defaultProvider=highestPriority.get().getId();\n    }\n  }\n  if (defaultProvider == null && factories.containsKey(\"default\")) {\n    defaultProvider=\"default\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 232,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (defaultProvider != null) {\n  if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n    throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n  }\n}\n else {\n  Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n  if (factories != null && factories.size() == 1) {\n    defaultProvider=factories.values().iterator().next().getId();\n  }\n  if (defaultProvider == null) {\n    Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n    if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n      defaultProvider=highestPriority.get().getId();\n    }\n  }\n  if (defaultProvider == null && factories.containsKey(\"default\")) {\n    defaultProvider=\"default\";\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1538,
        "startLineNumber" : 230,
        "startColumnNumber" : 29,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String defaultProvider=Config.getProvider(spi.getName());\n  if (defaultProvider != null) {\n    if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n      throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n    }\n  }\n else {\n    Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n    if (factories != null && factories.size() == 1) {\n      defaultProvider=factories.values().iterator().next().getId();\n    }\n    if (defaultProvider == null) {\n      Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n      if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n        defaultProvider=highestPriority.get().getId();\n      }\n    }\n    if (defaultProvider == null && factories.containsKey(\"default\")) {\n      defaultProvider=\"default\";\n    }\n  }\n  if (defaultProvider != null) {\n    this.provider.put(spi.getProviderClass(),defaultProvider);\n    logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n  }\n else {\n    logger.debugv(\"No default provider for {0}\",spi.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1559,
        "startLineNumber" : 230,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Spi spi : spis) {\n  String defaultProvider=Config.getProvider(spi.getName());\n  if (defaultProvider != null) {\n    if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n      throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n    }\n  }\n else {\n    Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n    if (factories != null && factories.size() == 1) {\n      defaultProvider=factories.values().iterator().next().getId();\n    }\n    if (defaultProvider == null) {\n      Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n      if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n        defaultProvider=highestPriority.get().getId();\n      }\n    }\n    if (defaultProvider == null && factories.containsKey(\"default\")) {\n      defaultProvider=\"default\";\n    }\n  }\n  if (defaultProvider != null) {\n    this.provider.put(spi.getProviderClass(),defaultProvider);\n    logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n  }\n else {\n    logger.debugv(\"No default provider for {0}\",spi.getName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1662,
        "startLineNumber" : 226,
        "startColumnNumber" : 35,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  provider.clear();\n  for (  Spi spi : spis) {\n    String defaultProvider=Config.getProvider(spi.getName());\n    if (defaultProvider != null) {\n      if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n        throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n      }\n    }\n else {\n      Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n      if (factories != null && factories.size() == 1) {\n        defaultProvider=factories.values().iterator().next().getId();\n      }\n      if (defaultProvider == null) {\n        Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n        if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n          defaultProvider=highestPriority.get().getId();\n        }\n      }\n      if (defaultProvider == null && factories.containsKey(\"default\")) {\n        defaultProvider=\"default\";\n      }\n    }\n    if (defaultProvider != null) {\n      this.provider.put(spi.getProviderClass(),defaultProvider);\n      logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n    }\n else {\n      logger.debugv(\"No default provider for {0}\",spi.getName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1693,
        "startLineNumber" : 226,
        "startColumnNumber" : 4,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void checkProvider(){\n  provider.clear();\n  for (  Spi spi : spis) {\n    String defaultProvider=Config.getProvider(spi.getName());\n    if (defaultProvider != null) {\n      if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n        throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n      }\n    }\n else {\n      Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n      if (factories != null && factories.size() == 1) {\n        defaultProvider=factories.values().iterator().next().getId();\n      }\n      if (defaultProvider == null) {\n        Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n        if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n          defaultProvider=highestPriority.get().getId();\n        }\n      }\n      if (defaultProvider == null && factories.containsKey(\"default\")) {\n        defaultProvider=\"default\";\n      }\n    }\n    if (defaultProvider != null) {\n      this.provider.put(spi.getProviderClass(),defaultProvider);\n      logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n    }\n else {\n      logger.debugv(\"No default provider for {0}\",spi.getName());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 239,
        "startColumnNumber" : 20,
        "endLineNumber" : 239,
        "endColumnNumber" : 83
      },
      "nodeContext" : "defaultProvider=factories.values().iterator().next().getId();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<org.keycloak.provider.ProviderFactory>"
  }, {
    "nodeContext" : "factories.values()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 243,
      "startColumnNumber" : 64,
      "endLineNumber" : 243,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 243,
        "startColumnNumber" : 64,
        "endLineNumber" : 243,
        "endColumnNumber" : 91
      },
      "nodeContext" : "factories.values().stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 243,
        "startColumnNumber" : 64,
        "endLineNumber" : 243,
        "endColumnNumber" : 141
      },
      "nodeContext" : "factories.values().stream().max(Comparator.comparing(ProviderFactory::order))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 243,
        "startColumnNumber" : 46,
        "endLineNumber" : 243,
        "endColumnNumber" : 141
      },
      "nodeContext" : "highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 243,
        "startColumnNumber" : 20,
        "endLineNumber" : 243,
        "endColumnNumber" : 142
      },
      "nodeContext" : "Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 242,
        "startColumnNumber" : 45,
        "endLineNumber" : 247,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n  if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n    defaultProvider=highestPriority.get().getId();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 242,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (defaultProvider == null) {\n  Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n  if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n    defaultProvider=highestPriority.get().getId();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 236,
        "startColumnNumber" : 19,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n  if (factories != null && factories.size() == 1) {\n    defaultProvider=factories.values().iterator().next().getId();\n  }\n  if (defaultProvider == null) {\n    Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n    if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n      defaultProvider=highestPriority.get().getId();\n    }\n  }\n  if (defaultProvider == null && factories.containsKey(\"default\")) {\n    defaultProvider=\"default\";\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 232,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (defaultProvider != null) {\n  if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n    throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n  }\n}\n else {\n  Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n  if (factories != null && factories.size() == 1) {\n    defaultProvider=factories.values().iterator().next().getId();\n  }\n  if (defaultProvider == null) {\n    Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n    if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n      defaultProvider=highestPriority.get().getId();\n    }\n  }\n  if (defaultProvider == null && factories.containsKey(\"default\")) {\n    defaultProvider=\"default\";\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 127,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1538,
        "startLineNumber" : 230,
        "startColumnNumber" : 29,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String defaultProvider=Config.getProvider(spi.getName());\n  if (defaultProvider != null) {\n    if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n      throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n    }\n  }\n else {\n    Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n    if (factories != null && factories.size() == 1) {\n      defaultProvider=factories.values().iterator().next().getId();\n    }\n    if (defaultProvider == null) {\n      Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n      if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n        defaultProvider=highestPriority.get().getId();\n      }\n    }\n    if (defaultProvider == null && factories.containsKey(\"default\")) {\n      defaultProvider=\"default\";\n    }\n  }\n  if (defaultProvider != null) {\n    this.provider.put(spi.getProviderClass(),defaultProvider);\n    logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n  }\n else {\n    logger.debugv(\"No default provider for {0}\",spi.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1559,
        "startLineNumber" : 230,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Spi spi : spis) {\n  String defaultProvider=Config.getProvider(spi.getName());\n  if (defaultProvider != null) {\n    if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n      throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n    }\n  }\n else {\n    Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n    if (factories != null && factories.size() == 1) {\n      defaultProvider=factories.values().iterator().next().getId();\n    }\n    if (defaultProvider == null) {\n      Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n      if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n        defaultProvider=highestPriority.get().getId();\n      }\n    }\n    if (defaultProvider == null && factories.containsKey(\"default\")) {\n      defaultProvider=\"default\";\n    }\n  }\n  if (defaultProvider != null) {\n    this.provider.put(spi.getProviderClass(),defaultProvider);\n    logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n  }\n else {\n    logger.debugv(\"No default provider for {0}\",spi.getName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1662,
        "startLineNumber" : 226,
        "startColumnNumber" : 35,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  provider.clear();\n  for (  Spi spi : spis) {\n    String defaultProvider=Config.getProvider(spi.getName());\n    if (defaultProvider != null) {\n      if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n        throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n      }\n    }\n else {\n      Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n      if (factories != null && factories.size() == 1) {\n        defaultProvider=factories.values().iterator().next().getId();\n      }\n      if (defaultProvider == null) {\n        Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n        if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n          defaultProvider=highestPriority.get().getId();\n        }\n      }\n      if (defaultProvider == null && factories.containsKey(\"default\")) {\n        defaultProvider=\"default\";\n      }\n    }\n    if (defaultProvider != null) {\n      this.provider.put(spi.getProviderClass(),defaultProvider);\n      logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n    }\n else {\n      logger.debugv(\"No default provider for {0}\",spi.getName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1693,
        "startLineNumber" : 226,
        "startColumnNumber" : 4,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void checkProvider(){\n  provider.clear();\n  for (  Spi spi : spis) {\n    String defaultProvider=Config.getProvider(spi.getName());\n    if (defaultProvider != null) {\n      if (getProviderFactory(spi.getProviderClass(),defaultProvider) == null) {\n        throw new RuntimeException(\"Failed to find provider \" + defaultProvider + \" for \"+ spi.getName());\n      }\n    }\n else {\n      Map<String,ProviderFactory> factories=factoriesMap.get(spi.getProviderClass());\n      if (factories != null && factories.size() == 1) {\n        defaultProvider=factories.values().iterator().next().getId();\n      }\n      if (defaultProvider == null) {\n        Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n        if (highestPriority.isPresent() && highestPriority.get().order() > 0) {\n          defaultProvider=highestPriority.get().getId();\n        }\n      }\n      if (defaultProvider == null && factories.containsKey(\"default\")) {\n        defaultProvider=\"default\";\n      }\n    }\n    if (defaultProvider != null) {\n      this.provider.put(spi.getProviderClass(),defaultProvider);\n      logger.debugv(\"Set default provider for {0} to {1}\",spi.getName(),defaultProvider);\n    }\n else {\n      logger.debugv(\"No default provider for {0}\",spi.getName());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 243,
        "startColumnNumber" : 20,
        "endLineNumber" : 243,
        "endColumnNumber" : 142
      },
      "nodeContext" : "Optional<ProviderFactory> highestPriority=factories.values().stream().max(Comparator.comparing(ProviderFactory::order));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.util.Collection<org.keycloak.provider.ProviderFactory>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 239,
    "startColumnNumber" : 38,
    "endLineNumber" : 239,
    "endColumnNumber" : 56
  }, {
    "charLength" : 18,
    "startLineNumber" : 243,
    "startColumnNumber" : 64,
    "endLineNumber" : 243,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}