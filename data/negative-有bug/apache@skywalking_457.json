{
  "id" : 457,
  "expression" : "StringUtil::isNotEmpty",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/query/LogQueryService.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StringUtil::isNotEmpty",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 74,
      "startColumnNumber" : 57,
      "endLineNumber" : 74,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 73,
        "startColumnNumber" : 32,
        "endLineNumber" : 74,
        "endColumnNumber" : 80
      },
      "nodeContext" : "keywordsOfContent.stream().filter(StringUtil::isNotEmpty)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 73,
        "startColumnNumber" : 32,
        "endLineNumber" : 75,
        "endColumnNumber" : 78
      },
      "nodeContext" : "keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 78
      },
      "nodeContext" : "keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 79
      },
      "nodeContext" : "keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 72,
        "startColumnNumber" : 40,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (nonNull(keywordsOfContent)) {\n  keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2026,
        "startLineNumber" : 69,
        "startColumnNumber" : 86,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PaginationUtils.Page page=PaginationUtils.INSTANCE.exchange(paging);\n  if (nonNull(keywordsOfContent)) {\n    keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  if (nonNull(excludingKeywordsOfContent)) {\n    excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  Logs logs=getLogQueryDAO().queryLogs(serviceId,serviceInstanceId,endpointId,endpointName,relatedTrace,queryOrder,page.getFrom(),page.getLimit(),startTB,endTB,tags,keywordsOfContent,excludingKeywordsOfContent);\n  logs.getLogs().forEach(log -> {\n    if (StringUtil.isNotEmpty(log.getServiceId())) {\n      final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition=IDManager.ServiceID.analysisId(log.getServiceId());\n      log.setServiceName(serviceIDDefinition.getName());\n    }\n    if (StringUtil.isNotEmpty(log.getServiceInstanceId())) {\n      final IDManager.ServiceInstanceID.InstanceIDDefinition instanceIDDefinition=IDManager.ServiceInstanceID.analysisId(log.getServiceInstanceId());\n      log.setServiceInstanceName(instanceIDDefinition.getName());\n    }\n  }\n);\n  return logs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2641,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Logs queryLogs(String serviceId,String serviceInstanceId,String endpointId,String endpointName,TraceScopeCondition relatedTrace,Pagination paging,Order queryOrder,final long startTB,final long endTB,final List<Tag> tags,List<String> keywordsOfContent,List<String> excludingKeywordsOfContent) throws IOException {\n  PaginationUtils.Page page=PaginationUtils.INSTANCE.exchange(paging);\n  if (nonNull(keywordsOfContent)) {\n    keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  if (nonNull(excludingKeywordsOfContent)) {\n    excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  Logs logs=getLogQueryDAO().queryLogs(serviceId,serviceInstanceId,endpointId,endpointName,relatedTrace,queryOrder,page.getFrom(),page.getLimit(),startTB,endTB,tags,keywordsOfContent,excludingKeywordsOfContent);\n  logs.getLogs().forEach(log -> {\n    if (StringUtil.isNotEmpty(log.getServiceId())) {\n      final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition=IDManager.ServiceID.analysisId(log.getServiceId());\n      log.setServiceName(serviceIDDefinition.getName());\n    }\n    if (StringUtil.isNotEmpty(log.getServiceInstanceId())) {\n      final IDManager.ServiceInstanceID.InstanceIDDefinition instanceIDDefinition=IDManager.ServiceInstanceID.analysisId(log.getServiceInstanceId());\n      log.setServiceInstanceName(instanceIDDefinition.getName());\n    }\n  }\n);\n  return logs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 73,
        "startColumnNumber" : 32,
        "endLineNumber" : 74,
        "endColumnNumber" : 80
      },
      "nodeContext" : "keywordsOfContent.stream().filter(StringUtil::isNotEmpty)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Predicate<? super java.lang.String>"
  }, {
    "nodeContext" : "StringUtil::isNotEmpty",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 79,
      "startColumnNumber" : 75,
      "endLineNumber" : 79,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 78,
        "startColumnNumber" : 41,
        "endLineNumber" : 79,
        "endColumnNumber" : 98
      },
      "nodeContext" : "excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 78,
        "startColumnNumber" : 41,
        "endLineNumber" : 80,
        "endColumnNumber" : 96
      },
      "nodeContext" : "excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 96
      },
      "nodeContext" : "excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 97
      },
      "nodeContext" : "excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 77,
        "startColumnNumber" : 49,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (nonNull(excludingKeywordsOfContent)) {\n  excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2026,
        "startLineNumber" : 69,
        "startColumnNumber" : 86,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PaginationUtils.Page page=PaginationUtils.INSTANCE.exchange(paging);\n  if (nonNull(keywordsOfContent)) {\n    keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  if (nonNull(excludingKeywordsOfContent)) {\n    excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  Logs logs=getLogQueryDAO().queryLogs(serviceId,serviceInstanceId,endpointId,endpointName,relatedTrace,queryOrder,page.getFrom(),page.getLimit(),startTB,endTB,tags,keywordsOfContent,excludingKeywordsOfContent);\n  logs.getLogs().forEach(log -> {\n    if (StringUtil.isNotEmpty(log.getServiceId())) {\n      final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition=IDManager.ServiceID.analysisId(log.getServiceId());\n      log.setServiceName(serviceIDDefinition.getName());\n    }\n    if (StringUtil.isNotEmpty(log.getServiceInstanceId())) {\n      final IDManager.ServiceInstanceID.InstanceIDDefinition instanceIDDefinition=IDManager.ServiceInstanceID.analysisId(log.getServiceInstanceId());\n      log.setServiceInstanceName(instanceIDDefinition.getName());\n    }\n  }\n);\n  return logs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2641,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Logs queryLogs(String serviceId,String serviceInstanceId,String endpointId,String endpointName,TraceScopeCondition relatedTrace,Pagination paging,Order queryOrder,final long startTB,final long endTB,final List<Tag> tags,List<String> keywordsOfContent,List<String> excludingKeywordsOfContent) throws IOException {\n  PaginationUtils.Page page=PaginationUtils.INSTANCE.exchange(paging);\n  if (nonNull(keywordsOfContent)) {\n    keywordsOfContent=keywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  if (nonNull(excludingKeywordsOfContent)) {\n    excludingKeywordsOfContent=excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty).collect(Collectors.toList());\n  }\n  Logs logs=getLogQueryDAO().queryLogs(serviceId,serviceInstanceId,endpointId,endpointName,relatedTrace,queryOrder,page.getFrom(),page.getLimit(),startTB,endTB,tags,keywordsOfContent,excludingKeywordsOfContent);\n  logs.getLogs().forEach(log -> {\n    if (StringUtil.isNotEmpty(log.getServiceId())) {\n      final IDManager.ServiceID.ServiceIDDefinition serviceIDDefinition=IDManager.ServiceID.analysisId(log.getServiceId());\n      log.setServiceName(serviceIDDefinition.getName());\n    }\n    if (StringUtil.isNotEmpty(log.getServiceInstanceId())) {\n      final IDManager.ServiceInstanceID.InstanceIDDefinition instanceIDDefinition=IDManager.ServiceInstanceID.analysisId(log.getServiceInstanceId());\n      log.setServiceInstanceName(instanceIDDefinition.getName());\n    }\n  }\n);\n  return logs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 78,
        "startColumnNumber" : 41,
        "endLineNumber" : 79,
        "endColumnNumber" : 98
      },
      "nodeContext" : "excludingKeywordsOfContent.stream().filter(StringUtil::isNotEmpty)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Predicate<? super java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 74,
    "startColumnNumber" : 57,
    "endLineNumber" : 74,
    "endColumnNumber" : 79
  }, {
    "charLength" : 22,
    "startLineNumber" : 79,
    "startColumnNumber" : 75,
    "endLineNumber" : 79,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}