{
  "id" : 162,
  "expression" : "i",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/fibonacciheap/FibonacciHeapTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 98,
      "startColumnNumber" : 20,
      "endLineNumber" : 98,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 98,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 1000; i++) {\n  Integer number=r.nextInt(10000);\n  expected.add(number);\n  queue.add(number);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 94,
        "startColumnNumber" : 52,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Random r=new Random(System.currentTimeMillis());\n  final List<Integer> expected=new ArrayList<Integer>();\n  for (int i=0; i < 1000; i++) {\n    Integer number=r.nextInt(10000);\n    expected.add(number);\n    queue.add(number);\n  }\n  sort(expected);\n  for (  Integer integer : expected) {\n    Integer i=queue.poll();\n    assertThat(i).isEqualTo(integer);\n  }\n  assertThat(queue.isEmpty()).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 93,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void returnsOrderedItemsFromRandomInsert(){\n  final Random r=new Random(System.currentTimeMillis());\n  final List<Integer> expected=new ArrayList<Integer>();\n  for (int i=0; i < 1000; i++) {\n    Integer number=r.nextInt(10000);\n    expected.add(number);\n    queue.add(number);\n  }\n  sort(expected);\n  for (  Integer integer : expected) {\n    Integer i=queue.poll();\n    assertThat(i).isEqualTo(integer);\n  }\n  assertThat(queue.isEmpty()).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 98,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 107,
      "startColumnNumber" : 17,
      "endLineNumber" : 107,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 19
      },
      "nodeContext" : "assertThat(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertThat(i).isEqualTo(integer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertThat(i).isEqualTo(integer);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 105,
        "startColumnNumber" : 37,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Integer i=queue.poll();\n  assertThat(i).isEqualTo(integer);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Integer integer : expected) {\n  Integer i=queue.poll();\n  assertThat(i).isEqualTo(integer);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 94,
        "startColumnNumber" : 52,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Random r=new Random(System.currentTimeMillis());\n  final List<Integer> expected=new ArrayList<Integer>();\n  for (int i=0; i < 1000; i++) {\n    Integer number=r.nextInt(10000);\n    expected.add(number);\n    queue.add(number);\n  }\n  sort(expected);\n  for (  Integer integer : expected) {\n    Integer i=queue.poll();\n    assertThat(i).isEqualTo(integer);\n  }\n  assertThat(queue.isEmpty()).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 93,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void returnsOrderedItemsFromRandomInsert(){\n  final Random r=new Random(System.currentTimeMillis());\n  final List<Integer> expected=new ArrayList<Integer>();\n  for (int i=0; i < 1000; i++) {\n    Integer number=r.nextInt(10000);\n    expected.add(number);\n    queue.add(number);\n  }\n  sort(expected);\n  for (  Integer integer : expected) {\n    Integer i=queue.poll();\n    assertThat(i).isEqualTo(integer);\n  }\n  assertThat(queue.isEmpty()).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertThat(i).isEqualTo(integer);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 98,
    "startColumnNumber" : 20,
    "endLineNumber" : 98,
    "endColumnNumber" : 21
  }, {
    "charLength" : 1,
    "startLineNumber" : 107,
    "startColumnNumber" : 17,
    "endLineNumber" : 107,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}