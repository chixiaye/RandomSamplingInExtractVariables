{
  "id" : 424,
  "expression" : "SUCCESS",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-socks/src/main/java/io/netty/handler/codec/socksx/v4/Socks4ClientDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SUCCESS",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 67,
      "startColumnNumber" : 17,
      "endLineNumber" : 67,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 25
      },
      "nodeContext" : "case SUCCESS:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1242,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (state) {\ncase START:{\n    if (in.readableBytes() < 8) {\n      return;\n    }\n    final int version=in.readUnsignedByte();\n    if (version != 0) {\n      throw new DecoderException(\"unsupported reply version: \" + version + \" (expected: 0)\");\n    }\n    final Socks4CommandStatus status=Socks4CommandStatus.valueOf(in.readByte());\n    final int dstPort=in.readUnsignedShort();\n    final String dstAddr=NetUtil.intToIpAddress(in.readInt());\n    ctx.fireChannelRead(new DefaultSocks4CommandResponse(status,dstAddr,dstPort));\n    state=State.SUCCESS;\n  }\ncase SUCCESS:{\n  int readableBytes=actualReadableBytes();\n  if (readableBytes > 0) {\n    ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n  }\n  break;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1268,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (state) {\ncase START:{\n      if (in.readableBytes() < 8) {\n        return;\n      }\n      final int version=in.readUnsignedByte();\n      if (version != 0) {\n        throw new DecoderException(\"unsupported reply version: \" + version + \" (expected: 0)\");\n      }\n      final Socks4CommandStatus status=Socks4CommandStatus.valueOf(in.readByte());\n      final int dstPort=in.readUnsignedShort();\n      final String dstAddr=NetUtil.intToIpAddress(in.readInt());\n      ctx.fireChannelRead(new DefaultSocks4CommandResponse(status,dstAddr,dstPort));\n      state=State.SUCCESS;\n    }\ncase SUCCESS:{\n    int readableBytes=actualReadableBytes();\n    if (readableBytes > 0) {\n      ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n    }\n    break;\n  }\ncase FAILURE:{\n  in.skipBytes(actualReadableBytes());\n  break;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1332,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\nswitch (state) {\ncase START:{\n      if (in.readableBytes() < 8) {\n        return;\n      }\n      final int version=in.readUnsignedByte();\n      if (version != 0) {\n        throw new DecoderException(\"unsupported reply version: \" + version + \" (expected: 0)\");\n      }\n      final Socks4CommandStatus status=Socks4CommandStatus.valueOf(in.readByte());\n      final int dstPort=in.readUnsignedShort();\n      final String dstAddr=NetUtil.intToIpAddress(in.readInt());\n      ctx.fireChannelRead(new DefaultSocks4CommandResponse(status,dstAddr,dstPort));\n      state=State.SUCCESS;\n    }\ncase SUCCESS:{\n    int readableBytes=actualReadableBytes();\n    if (readableBytes > 0) {\n      ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n    }\n    break;\n  }\ncase FAILURE:{\n  in.skipBytes(actualReadableBytes());\n  break;\n}\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 46,
        "startColumnNumber" : 82,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\nswitch (state) {\ncase START:{\n        if (in.readableBytes() < 8) {\n          return;\n        }\n        final int version=in.readUnsignedByte();\n        if (version != 0) {\n          throw new DecoderException(\"unsupported reply version: \" + version + \" (expected: 0)\");\n        }\n        final Socks4CommandStatus status=Socks4CommandStatus.valueOf(in.readByte());\n        final int dstPort=in.readUnsignedShort();\n        final String dstAddr=NetUtil.intToIpAddress(in.readInt());\n        ctx.fireChannelRead(new DefaultSocks4CommandResponse(status,dstAddr,dstPort));\n        state=State.SUCCESS;\n      }\ncase SUCCESS:{\n      int readableBytes=actualReadableBytes();\n      if (readableBytes > 0) {\n        ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n      }\n      break;\n    }\ncase FAILURE:{\n    in.skipBytes(actualReadableBytes());\n    break;\n  }\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void decode(ChannelHandlerContext ctx,ByteBuf in) throws Exception {\n  try {\nswitch (state) {\ncase START:{\n        if (in.readableBytes() < 8) {\n          return;\n        }\n        final int version=in.readUnsignedByte();\n        if (version != 0) {\n          throw new DecoderException(\"unsupported reply version: \" + version + \" (expected: 0)\");\n        }\n        final Socks4CommandStatus status=Socks4CommandStatus.valueOf(in.readByte());\n        final int dstPort=in.readUnsignedShort();\n        final String dstAddr=NetUtil.intToIpAddress(in.readInt());\n        ctx.fireChannelRead(new DefaultSocks4CommandResponse(status,dstAddr,dstPort));\n        state=State.SUCCESS;\n      }\ncase SUCCESS:{\n      int readableBytes=actualReadableBytes();\n      if (readableBytes > 0) {\n        ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n      }\n      break;\n    }\ncase FAILURE:{\n    in.skipBytes(actualReadableBytes());\n    break;\n  }\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 25
      },
      "nodeContext" : "case SUCCESS:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.socksx.v4.Socks4ClientDecoder.State"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 67,
    "startColumnNumber" : 17,
    "endLineNumber" : 67,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}