{
  "id" : 259,
  "expression" : "\"0\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/segment/filter/BoundFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 93,
      "startColumnNumber" : 51,
      "endLineNumber" : 93,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 93,
        "startColumnNumber" : 34,
        "endLineNumber" : 93,
        "endColumnNumber" : 90
      },
      "nodeContext" : "ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertFilterMatches(filter,ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertFilterMatches(filter,ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 92,
        "startColumnNumber" : 42,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertFilterMatches(filter,ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (BoundDimFilter filter : filters) {\n  assertFilterMatches(filter,ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<BoundDimFilter> filters=ImmutableList.of(new BoundDimFilter(\"dim0\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim0\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"dim1\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim1\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"dim2\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim2\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"dim3\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim3\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC));\n  for (  BoundDimFilter filter : filters) {\n    assertFilterMatches(filter,ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testLexicographicMatchEverything(){\n  final List<BoundDimFilter> filters=ImmutableList.of(new BoundDimFilter(\"dim0\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim0\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"dim1\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim1\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"dim2\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim2\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"dim3\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC),new BoundDimFilter(\"vdim3\",null,\"z\",false,false,false,null,StringComparators.LEXICOGRAPHIC));\n  for (  BoundDimFilter filter : filters) {\n    assertFilterMatches(filter,ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertFilterMatches(filter,ImmutableList.of(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 93,
    "startColumnNumber" : 51,
    "endLineNumber" : 93,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}