{
  "id" : 344,
  "expression" : "new JadxRuntimeException(\"Unknown container type: \" + container.getClass())",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ReturnVisitor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new JadxRuntimeException(\"Unknown container type: \" + container.getClass())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 75,
      "startLineNumber" : 119,
      "startColumnNumber" : 10,
      "endLineNumber" : 119,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new JadxRuntimeException(\"Unknown container type: \" + container.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 118,
        "startColumnNumber" : 10,
        "endLineNumber" : 120,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  throw new JadxRuntimeException(\"Unknown container type: \" + container.getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 110,
        "startColumnNumber" : 10,
        "endLineNumber" : 120,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (container instanceof IRegion) {\n  IRegion region=(IRegion)container;\n  for (  IContainer block : region.getSubBlocks()) {\n    if (!isEmpty(block)) {\n      return false;\n    }\n  }\n  return true;\n}\n else {\n  throw new JadxRuntimeException(\"Unknown container type: \" + container.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 107,
        "startColumnNumber" : 3,
        "endLineNumber" : 120,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (container instanceof IBlock) {\n  IBlock block=(IBlock)container;\n  return block.getInstructions().isEmpty() || block.contains(AFlag.RETURN);\n}\n else if (container instanceof IRegion) {\n  IRegion region=(IRegion)container;\n  for (  IContainer block : region.getSubBlocks()) {\n    if (!isEmpty(block)) {\n      return false;\n    }\n  }\n  return true;\n}\n else {\n  throw new JadxRuntimeException(\"Unknown container type: \" + container.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 106,
        "startColumnNumber" : 55,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (container instanceof IBlock) {\n    IBlock block=(IBlock)container;\n    return block.getInstructions().isEmpty() || block.contains(AFlag.RETURN);\n  }\n else   if (container instanceof IRegion) {\n    IRegion region=(IRegion)container;\n    for (    IContainer block : region.getSubBlocks()) {\n      if (!isEmpty(block)) {\n        return false;\n      }\n    }\n    return true;\n  }\n else {\n    throw new JadxRuntimeException(\"Unknown container type: \" + container.getClass());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Check if container not contains instructions, don't count one 'return' instruction (it will be removed later).\n */\nprivate static boolean isEmpty(IContainer container){\n  if (container instanceof IBlock) {\n    IBlock block=(IBlock)container;\n    return block.getInstructions().isEmpty() || block.contains(AFlag.RETURN);\n  }\n else   if (container instanceof IRegion) {\n    IRegion region=(IRegion)container;\n    for (    IContainer block : region.getSubBlocks()) {\n      if (!isEmpty(block)) {\n        return false;\n      }\n    }\n    return true;\n  }\n else {\n    throw new JadxRuntimeException(\"Unknown container type: \" + container.getClass());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new JadxRuntimeException(\"Unknown container type: \" + container.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "jadx.core.utils.exceptions.JadxRuntimeException"
  } ],
  "positionList" : [ {
    "charLength" : 75,
    "startLineNumber" : 119,
    "startColumnNumber" : 10,
    "endLineNumber" : 119,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}