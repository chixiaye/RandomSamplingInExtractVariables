{
  "id" : 134,
  "expression" : "discoveryResult",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/test/java/com/netflix/zuul/filters/endpoint/ProxyEndpointTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "discoveryResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 81,
      "startColumnNumber" : 63,
      "endLineNumber" : 81,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 79
      },
      "nodeContext" : "proxyEndpoint.handleOriginNonSuccessResponse(response,discoveryResult)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 80
      },
      "nodeContext" : "proxyEndpoint.handleOriginNonSuccessResponse(response,discoveryResult);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 66,
        "startColumnNumber" : 47,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(\"Hello There\",new String(request.getBody()));\n  request.getBodyContents().forEach((b) -> b.content().readerIndex(b.content().capacity()));\n  HttpResponse response=mock(HttpResponse.class);\n  when(response.status()).thenReturn(new HttpResponseStatus(503,\"Retry\"));\n  InstanceInfo instanceInfo=InstanceInfo.Builder.newBuilder().setAppName(\"app\").setHostName(\"localhost\").setPort(443).build();\n  DiscoveryResult discoveryResult=DiscoveryResult.from(instanceInfo,true);\n  proxyEndpoint.handleOriginNonSuccessResponse(response,discoveryResult);\n  assertEquals(\"Hello There\",new String(request.getBody()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 975,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRetryWillResetBodyReader(){\n  assertEquals(\"Hello There\",new String(request.getBody()));\n  request.getBodyContents().forEach((b) -> b.content().readerIndex(b.content().capacity()));\n  HttpResponse response=mock(HttpResponse.class);\n  when(response.status()).thenReturn(new HttpResponseStatus(503,\"Retry\"));\n  InstanceInfo instanceInfo=InstanceInfo.Builder.newBuilder().setAppName(\"app\").setHostName(\"localhost\").setPort(443).build();\n  DiscoveryResult discoveryResult=DiscoveryResult.from(instanceInfo,true);\n  proxyEndpoint.handleOriginNonSuccessResponse(response,discoveryResult);\n  assertEquals(\"Hello There\",new String(request.getBody()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 80
      },
      "nodeContext" : "proxyEndpoint.handleOriginNonSuccessResponse(response,discoveryResult);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.filters.endpoint.DiscoveryResult"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 81,
    "startColumnNumber" : 63,
    "endLineNumber" : 81,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}