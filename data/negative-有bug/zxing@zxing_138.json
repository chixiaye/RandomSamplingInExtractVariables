{
  "id" : 138,
  "expression" : "y + 5",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/qrcode/encoder/MaskUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "y + 5",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 96,
      "startColumnNumber" : 18,
      "endLineNumber" : 96,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 24
      },
      "nodeContext" : "array[y + 5]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 27
      },
      "nodeContext" : "array[y + 5][x]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 32
      },
      "nodeContext" : "array[y + 5][x] == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 32
      },
      "nodeContext" : "y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 32
      },
      "nodeContext" : "y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 93
      },
      "nodeContext" : "y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 94,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))) {\n  numPenalties++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 99,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 77,
        "startColumnNumber" : 38,
        "endLineNumber" : 101,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  byte[] arrayY=array[y];\n  if (x + 6 < width && arrayY[x] == 1 && arrayY[x + 1] == 0 && arrayY[x + 2] == 1 && arrayY[x + 3] == 1 && arrayY[x + 4] == 1 && arrayY[x + 5] == 0 && arrayY[x + 6] == 1 && (isWhiteHorizontal(arrayY,x - 4,x) || isWhiteHorizontal(arrayY,x + 7,x + 11))) {\n    numPenalties++;\n  }\n  if (y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))) {\n    numPenalties++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int x=0; x < width; x++) {\n  byte[] arrayY=array[y];\n  if (x + 6 < width && arrayY[x] == 1 && arrayY[x + 1] == 0 && arrayY[x + 2] == 1 && arrayY[x + 3] == 1 && arrayY[x + 4] == 1 && arrayY[x + 5] == 0 && arrayY[x + 6] == 1 && (isWhiteHorizontal(arrayY,x - 4,x) || isWhiteHorizontal(arrayY,x + 7,x + 11))) {\n    numPenalties++;\n  }\n  if (y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))) {\n    numPenalties++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 203,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 76,
        "startColumnNumber" : 37,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int x=0; x < width; x++) {\n    byte[] arrayY=array[y];\n    if (x + 6 < width && arrayY[x] == 1 && arrayY[x + 1] == 0 && arrayY[x + 2] == 1 && arrayY[x + 3] == 1 && arrayY[x + 4] == 1 && arrayY[x + 5] == 0 && arrayY[x + 6] == 1 && (isWhiteHorizontal(arrayY,x - 4,x) || isWhiteHorizontal(arrayY,x + 7,x + 11))) {\n      numPenalties++;\n    }\n    if (y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))) {\n      numPenalties++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  for (int x=0; x < width; x++) {\n    byte[] arrayY=array[y];\n    if (x + 6 < width && arrayY[x] == 1 && arrayY[x + 1] == 0 && arrayY[x + 2] == 1 && arrayY[x + 3] == 1 && arrayY[x + 4] == 1 && arrayY[x + 5] == 0 && arrayY[x + 6] == 1 && (isWhiteHorizontal(arrayY,x - 4,x) || isWhiteHorizontal(arrayY,x + 7,x + 11))) {\n      numPenalties++;\n    }\n    if (y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))) {\n      numPenalties++;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 215,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 71,
        "startColumnNumber" : 54,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int numPenalties=0;\n  byte[][] array=matrix.getArray();\n  int width=matrix.getWidth();\n  int height=matrix.getHeight();\n  for (int y=0; y < height; y++) {\n    for (int x=0; x < width; x++) {\n      byte[] arrayY=array[y];\n      if (x + 6 < width && arrayY[x] == 1 && arrayY[x + 1] == 0 && arrayY[x + 2] == 1 && arrayY[x + 3] == 1 && arrayY[x + 4] == 1 && arrayY[x + 5] == 0 && arrayY[x + 6] == 1 && (isWhiteHorizontal(arrayY,x - 4,x) || isWhiteHorizontal(arrayY,x + 7,x + 11))) {\n        numPenalties++;\n      }\n      if (y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))) {\n        numPenalties++;\n      }\n    }\n  }\n  return numPenalties * N3;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 249,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1500,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Apply mask penalty rule 3 and return the penalty. Find consecutive runs of 1:1:3:1:1:4 starting with black, or 4:1:1:3:1:1 starting with white, and give penalty to them.  If we find patterns like 000010111010000, we give penalty once.\n */\nstatic int applyMaskPenaltyRule3(ByteMatrix matrix){\n  int numPenalties=0;\n  byte[][] array=matrix.getArray();\n  int width=matrix.getWidth();\n  int height=matrix.getHeight();\n  for (int y=0; y < height; y++) {\n    for (int x=0; x < width; x++) {\n      byte[] arrayY=array[y];\n      if (x + 6 < width && arrayY[x] == 1 && arrayY[x + 1] == 0 && arrayY[x + 2] == 1 && arrayY[x + 3] == 1 && arrayY[x + 4] == 1 && arrayY[x + 5] == 0 && arrayY[x + 6] == 1 && (isWhiteHorizontal(arrayY,x - 4,x) || isWhiteHorizontal(arrayY,x + 7,x + 11))) {\n        numPenalties++;\n      }\n      if (y + 6 < height && array[y][x] == 1 && array[y + 1][x] == 0 && array[y + 2][x] == 1 && array[y + 3][x] == 1 && array[y + 4][x] == 1 && array[y + 5][x] == 0 && array[y + 6][x] == 1 && (isWhiteVertical(array,x,y - 4,y) || isWhiteVertical(array,x,y + 7,y + 11))) {\n        numPenalties++;\n      }\n    }\n  }\n  return numPenalties * N3;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 258,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 32
      },
      "nodeContext" : "array[y + 5][x] == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 96,
    "startColumnNumber" : 18,
    "endLineNumber" : 96,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}