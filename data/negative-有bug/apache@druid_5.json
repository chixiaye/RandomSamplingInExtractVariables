{
  "id" : 5,
  "expression" : "selector.nameLookupPossibleInAdvance()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/segment/filter/ValueMatchers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "selector.nameLookupPossibleInAdvance()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 313,
      "startColumnNumber" : 76,
      "endLineNumber" : 313,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 313,
        "startColumnNumber" : 15,
        "endLineNumber" : 313,
        "endColumnNumber" : 114
      },
      "nodeContext" : "!hasMultipleValues && selector.getValueCardinality() == 1 && selector.nameLookupPossibleInAdvance()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 313,
        "startColumnNumber" : 11,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!hasMultipleValues && selector.getValueCardinality() == 1 && selector.nameLookupPossibleInAdvance()) {\n  return predicate.apply(selector.lookupName(0));\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 309,
        "startColumnNumber" : 4,
        "endLineNumber" : 318,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (selector.getValueCardinality() == 0) {\n  return predicate.apply(null);\n}\n else if (!hasMultipleValues && selector.getValueCardinality() == 1 && selector.nameLookupPossibleInAdvance()) {\n  return predicate.apply(selector.lookupName(0));\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 308,
        "startColumnNumber" : 2,
        "endLineNumber" : 319,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (selector.getValueCardinality() == 0) {\n    return predicate.apply(null);\n  }\n else   if (!hasMultipleValues && selector.getValueCardinality() == 1 && selector.nameLookupPossibleInAdvance()) {\n    return predicate.apply(selector.lookupName(0));\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1211,
        "startLineNumber" : 291,
        "startColumnNumber" : 2,
        "endLineNumber" : 319,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * If applying  {@code predicate} to {@code selector} would always return a constant, returns that constant.Otherwise, returns null. This method would have been private, except it's also used by {@link org.apache.druid.query.filter.vector.SingleValueStringVectorValueMatcher}.\n * @param selector          string selector\n * @param hasMultipleValues whether the selector *might* have multiple values\n * @param predicate         predicate to apply\n */\n@Nullable public static Boolean toBooleanIfPossible(final DimensionDictionarySelector selector,final boolean hasMultipleValues,final Predicate<String> predicate){\n  if (selector.getValueCardinality() == 0) {\n    return predicate.apply(null);\n  }\n else   if (!hasMultipleValues && selector.getValueCardinality() == 1 && selector.nameLookupPossibleInAdvance()) {\n    return predicate.apply(selector.lookupName(0));\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 313,
        "startColumnNumber" : 15,
        "endLineNumber" : 313,
        "endColumnNumber" : 114
      },
      "nodeContext" : "!hasMultipleValues && selector.getValueCardinality() == 1 && selector.nameLookupPossibleInAdvance()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 313,
    "startColumnNumber" : 76,
    "endLineNumber" : 313,
    "endColumnNumber" : 114
  } ],
  "layoutRelationDataList" : [ ]
}