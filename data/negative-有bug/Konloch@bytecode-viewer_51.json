{
  "id" : 51,
  "expression" : "BytecodeViewer",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/resources/importing/impl/XAPKResourceImporter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BytecodeViewer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 73,
      "startColumnNumber" : 2,
      "endLineNumber" : 73,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 23
      },
      "nodeContext" : "BytecodeViewer.viewer",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 41
      },
      "nodeContext" : "BytecodeViewer.viewer.clearBusyStatus()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 42
      },
      "nodeContext" : "BytecodeViewer.viewer.clearBusyStatus();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean open(File file) throws Exception {\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 42
      },
      "nodeContext" : "BytecodeViewer.viewer.clearBusyStatus();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.BytecodeViewer"
  }, {
    "nodeContext" : "BytecodeViewer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 77,
      "startColumnNumber" : 2,
      "endLineNumber" : 77,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 22
      },
      "nodeContext" : "BytecodeViewer.files",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 37
      },
      "nodeContext" : "BytecodeViewer.files.add(container)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "BytecodeViewer.files.add(container);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean open(File file) throws Exception {\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  Configuration.silenceExceptionGUI++;\n  try (java.util.zip.ZipFile zipFile=new java.util.zip.ZipFile(file)){\n    Enumeration<? extends ZipEntry> entries=zipFile.entries();\n    while (entries.hasMoreElements()) {\n      final ZipEntry entry=entries.nextElement();\n      final String fileName=entry.getName();\n      if (entry.isDirectory())       continue;\n      if (fileName.endsWith(\".apk\")) {\n        File tempFile=new File(tempDirectory + fs + \"temp\"+ MiscUtils.randomString(32)+ fs+ entry);\n        tempFile.getParentFile().mkdirs();\n        try (InputStream in=zipFile.getInputStream(entry);OutputStream out=new FileOutputStream(tempFile)){\n          IOUtils.copy(in,out);\n        }\n         Import.APK.getImporter().open(tempFile);\n      }\n else {\n        byte[] bytes;\n        try (InputStream in=zipFile.getInputStream(entry)){\n          bytes=IOUtils.toByteArray(in);\n        }\n         allDirectoryFiles.put(fileName,bytes);\n      }\n    }\n  }\n   Configuration.silenceExceptionGUI--;\n  BytecodeViewer.viewer.clearBusyStatus();\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 38
      },
      "nodeContext" : "BytecodeViewer.files.add(container);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "the.bytecode.club.bytecodeviewer.BytecodeViewer"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 73,
    "startColumnNumber" : 2,
    "endLineNumber" : 73,
    "endColumnNumber" : 16
  }, {
    "charLength" : 14,
    "startLineNumber" : 77,
    "startColumnNumber" : 2,
    "endLineNumber" : 77,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}