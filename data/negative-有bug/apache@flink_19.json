{
  "id" : 19,
  "expression" : "this.size++",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-runtime/src/main/java/org/apache/flink/table/runtime/util/collections/IntHashSet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.size++",
    "nodeType" : "PostfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 69,
      "startColumnNumber" : 12,
      "endLineNumber" : 69,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.size++ >= this.maxFill",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.size++ >= this.maxFill) {\n  this.rehash(OptimizableHashSet.arraySize(this.size + 1,this.f));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 43,
        "startColumnNumber" : 36,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (k == 0) {\n    if (this.containsZero) {\n      return false;\n    }\n    this.containsZero=true;\n  }\n else {\n    int[] key=this.key;\n    int pos;\n    int curr;\n    if ((curr=key[pos=MurmurHashUtil.fmix(k) & this.mask]) != 0) {\n      if (curr == k) {\n        return false;\n      }\n      while ((curr=key[pos=pos + 1 & this.mask]) != 0) {\n        if (curr == k) {\n          return false;\n        }\n      }\n    }\n    key[pos]=k;\n  }\n  if (this.size++ >= this.maxFill) {\n    this.rehash(OptimizableHashSet.arraySize(this.size + 1,this.f));\n  }\n  if (k < min) {\n    min=k;\n  }\n  if (k > max) {\n    max=k;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 939,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public boolean add(final int k){\n  if (k == 0) {\n    if (this.containsZero) {\n      return false;\n    }\n    this.containsZero=true;\n  }\n else {\n    int[] key=this.key;\n    int pos;\n    int curr;\n    if ((curr=key[pos=MurmurHashUtil.fmix(k) & this.mask]) != 0) {\n      if (curr == k) {\n        return false;\n      }\n      while ((curr=key[pos=pos + 1 & this.mask]) != 0) {\n        if (curr == k) {\n          return false;\n        }\n      }\n    }\n    key[pos]=k;\n  }\n  if (this.size++ >= this.maxFill) {\n    this.rehash(OptimizableHashSet.arraySize(this.size + 1,this.f));\n  }\n  if (k < min) {\n    min=k;\n  }\n  if (k > max) {\n    max=k;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.size++ >= this.maxFill",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 69,
    "startColumnNumber" : 12,
    "endLineNumber" : 69,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}