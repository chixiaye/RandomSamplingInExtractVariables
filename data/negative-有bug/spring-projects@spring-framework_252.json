{
  "id" : 252,
  "expression" : "exception",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/test/java/org/springframework/web/method/annotation/ExceptionHandlerMethodResolverTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 45,
      "startColumnNumber" : 59,
      "endLineNumber" : 45,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 45,
        "startColumnNumber" : 36,
        "endLineNumber" : 45,
        "endColumnNumber" : 69
      },
      "nodeContext" : "resolver.resolveMethod(exception)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 45,
        "startColumnNumber" : 36,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "resolver.resolveMethod(exception).getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertEquals(\"handleIOException\",resolver.resolveMethod(exception).getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(\"handleIOException\",resolver.resolveMethod(exception).getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 42,
        "startColumnNumber" : 43,
        "endLineNumber" : 46,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ExceptionHandlerMethodResolver resolver=new ExceptionHandlerMethodResolver(ExceptionController.class);\n  IOException exception=new IOException();\n  assertEquals(\"handleIOException\",resolver.resolveMethod(exception).getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 41,
        "startColumnNumber" : 1,
        "endLineNumber" : 46,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void resolveMethodFromAnnotation(){\n  ExceptionHandlerMethodResolver resolver=new ExceptionHandlerMethodResolver(ExceptionController.class);\n  IOException exception=new IOException();\n  assertEquals(\"handleIOException\",resolver.resolveMethod(exception).getName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 36,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(\"handleIOException\",resolver.resolveMethod(exception).getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 45,
    "startColumnNumber" : 59,
    "endLineNumber" : 45,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}