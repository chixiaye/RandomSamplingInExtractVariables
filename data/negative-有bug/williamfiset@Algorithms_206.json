{
  "id" : 206,
  "expression" : "graph[from]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/MinCostMaxFlowJohnsons.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "graph[from]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 50,
      "startColumnNumber" : 23,
      "endLineNumber" : 50,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge edge : graph[from]) {\n  if (edge.remainingCapacity() > 0) {\n    edge.cost+=dist[from] - dist[edge.to];\n  }\n else {\n    edge.cost=0;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 49,
        "startColumnNumber" : 41,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Edge edge : graph[from]) {\n    if (edge.remainingCapacity() > 0) {\n      edge.cost+=dist[from] - dist[edge.to];\n    }\n else {\n      edge.cost=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int from=0; from < n; from++) {\n  for (  Edge edge : graph[from]) {\n    if (edge.remainingCapacity() > 0) {\n      edge.cost+=dist[from] - dist[edge.to];\n    }\n else {\n      edge.cost=0;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 48,
        "startColumnNumber" : 44,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int from=0; from < n; from++) {\n    for (    Edge edge : graph[from]) {\n      if (edge.remainingCapacity() > 0) {\n        edge.cost+=dist[from] - dist[edge.to];\n      }\n else {\n        edge.cost=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void adjustEdgeCosts(long[] dist){\n  for (int from=0; from < n; from++) {\n    for (    Edge edge : graph[from]) {\n      if (edge.remainingCapacity() > 0) {\n        edge.cost+=dist[from] - dist[edge.to];\n      }\n else {\n        edge.cost=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge edge : graph[from]) {\n  if (edge.remainingCapacity() > 0) {\n    edge.cost+=dist[from] - dist[edge.to];\n  }\n else {\n    edge.cost=0;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    },
    "tokenLength" : 2,
    "type" : "java.util.List<com.williamfiset.algorithms.graphtheory.networkflow.NetworkFlowSolverBase.Edge>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 50,
    "startColumnNumber" : 23,
    "endLineNumber" : 50,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}