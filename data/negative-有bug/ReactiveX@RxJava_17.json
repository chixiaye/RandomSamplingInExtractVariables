{
  "id" : 17,
  "expression" : "\"<T, Flowable<U>>\"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/rxjava3/validators/NonNullMethodTypeArgumentCheck.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"<T, Flowable<U>>\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 111,
      "startColumnNumber" : 92,
      "endLineNumber" : 111,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 111,
        "startColumnNumber" : 73,
        "endLineNumber" : 111,
        "endColumnNumber" : 111
      },
      "nodeContext" : "parseTypeArguments(\"<T, Flowable<U>>\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"Flowable<U>\")),parseTypeArguments(\"<T, Flowable<U>>\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 113
      },
      "nodeContext" : "assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"Flowable<U>\")),parseTypeArguments(\"<T, Flowable<U>>\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 108,
        "startColumnNumber" : 37,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\")),parseTypeArguments(\"<T>\"));\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"U\")),parseTypeArguments(\"<T, U>\"));\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"Flowable<U>\")),parseTypeArguments(\"<T, Flowable<U>>\"));\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"Flowable<U, V>\")),parseTypeArguments(\"<T, Flowable<U, V>>\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void parseTypeArguments(){\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\")),parseTypeArguments(\"<T>\"));\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"U\")),parseTypeArguments(\"<T, U>\"));\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"Flowable<U>\")),parseTypeArguments(\"<T, Flowable<U>>\"));\n  assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"Flowable<U, V>\")),parseTypeArguments(\"<T, Flowable<U, V>>\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 113
      },
      "nodeContext" : "assertEquals(new ArrayList<>(Arrays.asList(\"T\",\"Flowable<U>\")),parseTypeArguments(\"<T, Flowable<U>>\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 111,
    "startColumnNumber" : 92,
    "endLineNumber" : 111,
    "endColumnNumber" : 110
  } ],
  "layoutRelationDataList" : [ ]
}