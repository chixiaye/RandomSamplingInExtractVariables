{
  "id" : 419,
  "expression" : "Collections",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-sql-parser/shardingsphere-sql-parser-statement/src/main/java/org/apache/shardingsphere/sql/parser/sql/common/util/SubqueryExtractUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 66,
      "startColumnNumber" : 19,
      "endLineNumber" : 66,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 66,
        "startColumnNumber" : 19,
        "endLineNumber" : 66,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Collections.emptyList()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return Collections.emptyList();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 65,
        "startColumnNumber" : 75,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return Collections.emptyList();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null == projections || projections.getProjections().isEmpty()) {\n  return Collections.emptyList();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 64,
        "startColumnNumber" : 120,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == projections || projections.getProjections().isEmpty()) {\n    return Collections.emptyList();\n  }\n  Collection<SubquerySegment> result=new LinkedList<>();\n  for (  ProjectionSegment each : projections.getProjections()) {\n    if (!(each instanceof SubqueryProjectionSegment)) {\n      continue;\n    }\n    SubquerySegment subquery=((SubqueryProjectionSegment)each).getSubquery();\n    subquery.setSubqueryType(SubqueryType.PROJECTION_SUBQUERY);\n    result.add(subquery);\n    result.addAll(getSubquerySegments(subquery.getSelect()));\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 791,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Collection<SubquerySegment> getSubquerySegmentsFromProjections(final ProjectionsSegment projections){\n  if (null == projections || projections.getProjections().isEmpty()) {\n    return Collections.emptyList();\n  }\n  Collection<SubquerySegment> result=new LinkedList<>();\n  for (  ProjectionSegment each : projections.getProjections()) {\n    if (!(each instanceof SubqueryProjectionSegment)) {\n      continue;\n    }\n    SubquerySegment subquery=((SubqueryProjectionSegment)each).getSubquery();\n    subquery.setSubqueryType(SubqueryType.PROJECTION_SUBQUERY);\n    result.add(subquery);\n    result.addAll(getSubquerySegments(subquery.getSelect()));\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 43
      },
      "nodeContext" : "return Collections.emptyList();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 66,
    "startColumnNumber" : 19,
    "endLineNumber" : 66,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}