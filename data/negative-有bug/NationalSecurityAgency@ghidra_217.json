{
  "id" : 217,
  "expression" : "status",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/Generic/src/main/java/ghidra/util/prop/PropertySet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "status",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 199,
      "startColumnNumber" : 9,
      "endLineNumber" : 199,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 199,
        "startColumnNumber" : 2,
        "endLineNumber" : 199,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return status;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 148,
        "startColumnNumber" : 63,
        "endLineNumber" : 200,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  boolean status=false;\n  while (start <= end) {\n    long pageID=getPageID(start);\n    short offset=getPageOffset(start);\n    PropertyPage page=getPage(pageID);\n    if (page == null) {\n      long nextPageId=propertyPageIndex.getNext(pageID);\n      if (nextPageId < 0) {\n        break;\n      }\n      start=nextPageId << numPageBits;\n      continue;\n    }\n    if (offset == 0 && (pageSize + start) <= end) {\n      this.numProperties-=page.getSize();\n      ht.remove(pageID);\n      propertyPageIndex.remove(pageID);\n      status=true;\n      long nextPageId=propertyPageIndex.getNext(pageID);\n      start=nextPageId << numPageBits;\n    }\n else {\n      for (; offset < pageSize && start <= end; offset++, start++) {\n        status|=removeFromPage(page,pageID,offset);\n      }\n    }\n  }\n  return status;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1661,
        "startLineNumber" : 141,
        "startColumnNumber" : 1,
        "endLineNumber" : 200,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes all property values within a given range.\n * @param start begin range\n * @param end end range, inclusive\n * @return true if any property value was removed; returnfalse otherwise.\n */\npublic synchronized boolean removeRange(long start,long end){\n  boolean status=false;\n  while (start <= end) {\n    long pageID=getPageID(start);\n    short offset=getPageOffset(start);\n    PropertyPage page=getPage(pageID);\n    if (page == null) {\n      long nextPageId=propertyPageIndex.getNext(pageID);\n      if (nextPageId < 0) {\n        break;\n      }\n      start=nextPageId << numPageBits;\n      continue;\n    }\n    if (offset == 0 && (pageSize + start) <= end) {\n      this.numProperties-=page.getSize();\n      ht.remove(pageID);\n      propertyPageIndex.remove(pageID);\n      status=true;\n      long nextPageId=propertyPageIndex.getNext(pageID);\n      start=nextPageId << numPageBits;\n    }\n else {\n      for (; offset < pageSize && start <= end; offset++, start++) {\n        status|=removeFromPage(page,pageID,offset);\n      }\n    }\n  }\n  return status;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 199,
        "startColumnNumber" : 2,
        "endLineNumber" : 199,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return status;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 199,
    "startColumnNumber" : 9,
    "endLineNumber" : 199,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}