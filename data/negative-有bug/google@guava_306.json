{
  "id" : 306,
  "expression" : "h << 13",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/hash/Striped64.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "h << 13",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 234,
      "startColumnNumber" : 13,
      "endLineNumber" : 234,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 20
      },
      "nodeContext" : "h^=h << 13",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "h^=h << 13;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1597,
        "startLineNumber" : 195,
        "startColumnNumber" : 55,
        "endLineNumber" : 238,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if ((a=as[(n - 1) & h]) == null) {\n    if (busy == 0) {\n      Cell r=new Cell(x);\n      if (busy == 0 && casBusy()) {\n        boolean created=false;\n        try {\n          Cell[] rs;\n          int m, j;\n          if ((rs=cells) != null && (m=rs.length) > 0 && rs[j=(m - 1) & h] == null) {\n            rs[j]=r;\n            created=true;\n          }\n        }\n  finally {\n          busy=0;\n        }\n        if (created)         break;\n        continue;\n      }\n    }\n    collide=false;\n  }\n else   if (!wasUncontended)   wasUncontended=true;\n else   if (a.cas(v=a.value,fn(v,x)))   break;\n else   if (n >= NCPU || cells != as)   collide=false;\n else   if (!collide)   collide=true;\n else   if (busy == 0 && casBusy()) {\n    try {\n      if (cells == as) {\n        Cell[] rs=new Cell[n << 1];\n        for (int i=0; i < n; ++i)         rs[i]=as[i];\n        cells=rs;\n      }\n    }\n  finally {\n      busy=0;\n    }\n    collide=false;\n    continue;\n  }\n  h^=h << 13;\n  h^=h >>> 17;\n  h^=h << 5;\n  hc[0]=h;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 195,
        "startColumnNumber" : 6,
        "endLineNumber" : 251,
        "endColumnNumber" : 52
      },
      "nodeContext" : "if ((as=cells) != null && (n=as.length) > 0) {\n  if ((a=as[(n - 1) & h]) == null) {\n    if (busy == 0) {\n      Cell r=new Cell(x);\n      if (busy == 0 && casBusy()) {\n        boolean created=false;\n        try {\n          Cell[] rs;\n          int m, j;\n          if ((rs=cells) != null && (m=rs.length) > 0 && rs[j=(m - 1) & h] == null) {\n            rs[j]=r;\n            created=true;\n          }\n        }\n  finally {\n          busy=0;\n        }\n        if (created)         break;\n        continue;\n      }\n    }\n    collide=false;\n  }\n else   if (!wasUncontended)   wasUncontended=true;\n else   if (a.cas(v=a.value,fn(v,x)))   break;\n else   if (n >= NCPU || cells != as)   collide=false;\n else   if (!collide)   collide=true;\n else   if (busy == 0 && casBusy()) {\n    try {\n      if (cells == as) {\n        Cell[] rs=new Cell[n << 1];\n        for (int i=0; i < n; ++i)         rs[i]=as[i];\n        cells=rs;\n      }\n    }\n  finally {\n      busy=0;\n    }\n    collide=false;\n    continue;\n  }\n  h^=h << 13;\n  h^=h >>> 17;\n  h^=h << 5;\n  hc[0]=h;\n}\n else if (busy == 0 && cells == as && casBusy()) {\n  boolean init=false;\n  try {\n    if (cells == as) {\n      Cell[] rs=new Cell[2];\n      rs[h & 1]=new Cell(x);\n      cells=rs;\n      init=true;\n    }\n  }\n  finally {\n    busy=0;\n  }\n  if (init)   break;\n}\n else if (casBase(v=base,fn(v,x))) break;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 329,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2170,
        "startLineNumber" : 190,
        "startColumnNumber" : 15,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Cell[] as;\n  Cell a;\n  int n;\n  long v;\n  if ((as=cells) != null && (n=as.length) > 0) {\n    if ((a=as[(n - 1) & h]) == null) {\n      if (busy == 0) {\n        Cell r=new Cell(x);\n        if (busy == 0 && casBusy()) {\n          boolean created=false;\n          try {\n            Cell[] rs;\n            int m, j;\n            if ((rs=cells) != null && (m=rs.length) > 0 && rs[j=(m - 1) & h] == null) {\n              rs[j]=r;\n              created=true;\n            }\n          }\n  finally {\n            busy=0;\n          }\n          if (created)           break;\n          continue;\n        }\n      }\n      collide=false;\n    }\n else     if (!wasUncontended)     wasUncontended=true;\n else     if (a.cas(v=a.value,fn(v,x)))     break;\n else     if (n >= NCPU || cells != as)     collide=false;\n else     if (!collide)     collide=true;\n else     if (busy == 0 && casBusy()) {\n      try {\n        if (cells == as) {\n          Cell[] rs=new Cell[n << 1];\n          for (int i=0; i < n; ++i)           rs[i]=as[i];\n          cells=rs;\n        }\n      }\n  finally {\n        busy=0;\n      }\n      collide=false;\n      continue;\n    }\n    h^=h << 13;\n    h^=h >>> 17;\n    h^=h << 5;\n    hc[0]=h;\n  }\n else   if (busy == 0 && cells == as && casBusy()) {\n    boolean init=false;\n    try {\n      if (cells == as) {\n        Cell[] rs=new Cell[2];\n        rs[h & 1]=new Cell(x);\n        cells=rs;\n        init=true;\n      }\n    }\n  finally {\n      busy=0;\n    }\n    if (init)     break;\n  }\n else   if (casBase(v=base,fn(v,x)))   break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 350,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (; ; ) {\n  Cell[] as;\n  Cell a;\n  int n;\n  long v;\n  if ((as=cells) != null && (n=as.length) > 0) {\n    if ((a=as[(n - 1) & h]) == null) {\n      if (busy == 0) {\n        Cell r=new Cell(x);\n        if (busy == 0 && casBusy()) {\n          boolean created=false;\n          try {\n            Cell[] rs;\n            int m, j;\n            if ((rs=cells) != null && (m=rs.length) > 0 && rs[j=(m - 1) & h] == null) {\n              rs[j]=r;\n              created=true;\n            }\n          }\n  finally {\n            busy=0;\n          }\n          if (created)           break;\n          continue;\n        }\n      }\n      collide=false;\n    }\n else     if (!wasUncontended)     wasUncontended=true;\n else     if (a.cas(v=a.value,fn(v,x)))     break;\n else     if (n >= NCPU || cells != as)     collide=false;\n else     if (!collide)     collide=true;\n else     if (busy == 0 && casBusy()) {\n      try {\n        if (cells == as) {\n          Cell[] rs=new Cell[n << 1];\n          for (int i=0; i < n; ++i)           rs[i]=as[i];\n          cells=rs;\n        }\n      }\n  finally {\n        busy=0;\n      }\n      collide=false;\n      continue;\n    }\n    h^=h << 13;\n    h^=h >>> 17;\n    h^=h << 5;\n    hc[0]=h;\n  }\n else   if (busy == 0 && cells == as && casBusy()) {\n    boolean init=false;\n    try {\n      if (cells == as) {\n        Cell[] rs=new Cell[2];\n        rs[h & 1]=new Cell(x);\n        cells=rs;\n        init=true;\n      }\n    }\n  finally {\n      busy=0;\n    }\n    if (init)     break;\n  }\n else   if (casBase(v=base,fn(v,x)))   break;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 351,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2484,
        "startLineNumber" : 182,
        "startColumnNumber" : 81,
        "endLineNumber" : 253,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int h;\n  if (hc == null) {\n    threadHashCode.set(hc=new int[1]);\n    int r=rng.nextInt();\n    h=hc[0]=(r == 0) ? 1 : r;\n  }\n else   h=hc[0];\n  boolean collide=false;\n  for (; ; ) {\n    Cell[] as;\n    Cell a;\n    int n;\n    long v;\n    if ((as=cells) != null && (n=as.length) > 0) {\n      if ((a=as[(n - 1) & h]) == null) {\n        if (busy == 0) {\n          Cell r=new Cell(x);\n          if (busy == 0 && casBusy()) {\n            boolean created=false;\n            try {\n              Cell[] rs;\n              int m, j;\n              if ((rs=cells) != null && (m=rs.length) > 0 && rs[j=(m - 1) & h] == null) {\n                rs[j]=r;\n                created=true;\n              }\n            }\n  finally {\n              busy=0;\n            }\n            if (created)             break;\n            continue;\n          }\n        }\n        collide=false;\n      }\n else       if (!wasUncontended)       wasUncontended=true;\n else       if (a.cas(v=a.value,fn(v,x)))       break;\n else       if (n >= NCPU || cells != as)       collide=false;\n else       if (!collide)       collide=true;\n else       if (busy == 0 && casBusy()) {\n        try {\n          if (cells == as) {\n            Cell[] rs=new Cell[n << 1];\n            for (int i=0; i < n; ++i)             rs[i]=as[i];\n            cells=rs;\n          }\n        }\n  finally {\n          busy=0;\n        }\n        collide=false;\n        continue;\n      }\n      h^=h << 13;\n      h^=h >>> 17;\n      h^=h << 5;\n      hc[0]=h;\n    }\n else     if (busy == 0 && cells == as && casBusy()) {\n      boolean init=false;\n      try {\n        if (cells == as) {\n          Cell[] rs=new Cell[2];\n          rs[h & 1]=new Cell(x);\n          cells=rs;\n          init=true;\n        }\n      }\n  finally {\n        busy=0;\n      }\n      if (init)       break;\n    }\n else     if (casBase(v=base,fn(v,x)))     break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 404,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2966,
        "startLineNumber" : 173,
        "startColumnNumber" : 2,
        "endLineNumber" : 253,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Handles cases of updates involving initialization, resizing, creating new Cells, and/or contention. See above for explanation. This method suffers the usual non-modularity problems of optimistic retry code, relying on rechecked sets of reads.\n * @param x the value\n * @param hc the hash code holder\n * @param wasUncontended false if CAS failed before call\n */\nfinal void retryUpdate(long x,@CheckForNull int[] hc,boolean wasUncontended){\n  int h;\n  if (hc == null) {\n    threadHashCode.set(hc=new int[1]);\n    int r=rng.nextInt();\n    h=hc[0]=(r == 0) ? 1 : r;\n  }\n else   h=hc[0];\n  boolean collide=false;\n  for (; ; ) {\n    Cell[] as;\n    Cell a;\n    int n;\n    long v;\n    if ((as=cells) != null && (n=as.length) > 0) {\n      if ((a=as[(n - 1) & h]) == null) {\n        if (busy == 0) {\n          Cell r=new Cell(x);\n          if (busy == 0 && casBusy()) {\n            boolean created=false;\n            try {\n              Cell[] rs;\n              int m, j;\n              if ((rs=cells) != null && (m=rs.length) > 0 && rs[j=(m - 1) & h] == null) {\n                rs[j]=r;\n                created=true;\n              }\n            }\n  finally {\n              busy=0;\n            }\n            if (created)             break;\n            continue;\n          }\n        }\n        collide=false;\n      }\n else       if (!wasUncontended)       wasUncontended=true;\n else       if (a.cas(v=a.value,fn(v,x)))       break;\n else       if (n >= NCPU || cells != as)       collide=false;\n else       if (!collide)       collide=true;\n else       if (busy == 0 && casBusy()) {\n        try {\n          if (cells == as) {\n            Cell[] rs=new Cell[n << 1];\n            for (int i=0; i < n; ++i)             rs[i]=as[i];\n            cells=rs;\n          }\n        }\n  finally {\n          busy=0;\n        }\n        collide=false;\n        continue;\n      }\n      h^=h << 13;\n      h^=h >>> 17;\n      h^=h << 5;\n      hc[0]=h;\n    }\n else     if (busy == 0 && cells == as && casBusy()) {\n      boolean init=false;\n      try {\n        if (cells == as) {\n          Cell[] rs=new Cell[2];\n          rs[h & 1]=new Cell(x);\n          cells=rs;\n          init=true;\n        }\n      }\n  finally {\n        busy=0;\n      }\n      if (init)       break;\n    }\n else     if (casBase(v=base,fn(v,x)))     break;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 422,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 21
      },
      "nodeContext" : "h^=h << 13;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 234,
    "startColumnNumber" : 13,
    "endLineNumber" : 234,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}