{
  "id" : 463,
  "expression" : "msg",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/example/src/main/java/io/netty/example/http/upload/HttpUploadClientHandler.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "msg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 36,
      "startColumnNumber" : 12,
      "endLineNumber" : 36,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 39
      },
      "nodeContext" : "msg instanceof HttpResponse",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.err.println(\"STATUS: \" + response.status());\n  System.err.println(\"VERSION: \" + response.protocolVersion());\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.err.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n  }\n  if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n    readingChunks=true;\n    System.err.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.err.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 35,
        "startColumnNumber" : 75,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void messageReceived(ChannelHandlerContext ctx,HttpObject msg){\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 39
      },
      "nodeContext" : "msg instanceof HttpResponse",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.http.HttpObject"
  }, {
    "nodeContext" : "msg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 37,
      "startColumnNumber" : 51,
      "endLineNumber" : 37,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 37,
        "startColumnNumber" : 36,
        "endLineNumber" : 37,
        "endColumnNumber" : 54
      },
      "nodeContext" : "(HttpResponse)msg",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 37,
        "startColumnNumber" : 25,
        "endLineNumber" : 37,
        "endColumnNumber" : 54
      },
      "nodeContext" : "response=(HttpResponse)msg",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 55
      },
      "nodeContext" : "HttpResponse response=(HttpResponse)msg;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 36,
        "startColumnNumber" : 41,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.err.println(\"STATUS: \" + response.status());\n  System.err.println(\"VERSION: \" + response.protocolVersion());\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.err.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n  }\n  if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n    readingChunks=true;\n    System.err.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.err.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.err.println(\"STATUS: \" + response.status());\n  System.err.println(\"VERSION: \" + response.protocolVersion());\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.err.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n  }\n  if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n    readingChunks=true;\n    System.err.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.err.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 35,
        "startColumnNumber" : 75,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void messageReceived(ChannelHandlerContext ctx,HttpObject msg){\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 55
      },
      "nodeContext" : "HttpResponse response=(HttpResponse)msg;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.http.HttpObject"
  }, {
    "nodeContext" : "msg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 57,
      "startColumnNumber" : 12,
      "endLineNumber" : 57,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 38
      },
      "nodeContext" : "msg instanceof HttpContent",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpContent) {\n  HttpContent chunk=(HttpContent)msg;\n  System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n  if (chunk instanceof LastHttpContent) {\n    if (readingChunks) {\n      System.err.println(\"} END OF CHUNKED CONTENT\");\n    }\n else {\n      System.err.println(\"} END OF CONTENT\");\n    }\n    readingChunks=false;\n  }\n else {\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 35,
        "startColumnNumber" : 75,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void messageReceived(ChannelHandlerContext ctx,HttpObject msg){\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 38
      },
      "nodeContext" : "msg instanceof HttpContent",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.http.HttpObject"
  }, {
    "nodeContext" : "msg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 58,
      "startColumnNumber" : 46,
      "endLineNumber" : 58,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 58,
        "startColumnNumber" : 32,
        "endLineNumber" : 58,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(HttpContent)msg",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 58,
        "endColumnNumber" : 49
      },
      "nodeContext" : "chunk=(HttpContent)msg",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 50
      },
      "nodeContext" : "HttpContent chunk=(HttpContent)msg;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 57,
        "startColumnNumber" : 40,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpContent chunk=(HttpContent)msg;\n  System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n  if (chunk instanceof LastHttpContent) {\n    if (readingChunks) {\n      System.err.println(\"} END OF CHUNKED CONTENT\");\n    }\n else {\n      System.err.println(\"} END OF CONTENT\");\n    }\n    readingChunks=false;\n  }\n else {\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpContent) {\n  HttpContent chunk=(HttpContent)msg;\n  System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n  if (chunk instanceof LastHttpContent) {\n    if (readingChunks) {\n      System.err.println(\"} END OF CHUNKED CONTENT\");\n    }\n else {\n      System.err.println(\"} END OF CONTENT\");\n    }\n    readingChunks=false;\n  }\n else {\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 35,
        "startColumnNumber" : 75,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void messageReceived(ChannelHandlerContext ctx,HttpObject msg){\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.err.println(\"STATUS: \" + response.status());\n    System.err.println(\"VERSION: \" + response.protocolVersion());\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.err.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n    }\n    if (response.status().code() == 200 && HttpUtil.isTransferEncodingChunked(response)) {\n      readingChunks=true;\n      System.err.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.err.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent chunk=(HttpContent)msg;\n    System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    if (chunk instanceof LastHttpContent) {\n      if (readingChunks) {\n        System.err.println(\"} END OF CHUNKED CONTENT\");\n      }\n else {\n        System.err.println(\"} END OF CONTENT\");\n      }\n      readingChunks=false;\n    }\n else {\n      System.err.println(chunk.content().toString(CharsetUtil.UTF_8));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 50
      },
      "nodeContext" : "HttpContent chunk=(HttpContent)msg;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.netty.handler.codec.http.HttpObject"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 36,
    "startColumnNumber" : 12,
    "endLineNumber" : 36,
    "endColumnNumber" : 15
  }, {
    "charLength" : 3,
    "startLineNumber" : 37,
    "startColumnNumber" : 51,
    "endLineNumber" : 37,
    "endColumnNumber" : 54
  }, {
    "charLength" : 3,
    "startLineNumber" : 57,
    "startColumnNumber" : 12,
    "endLineNumber" : 57,
    "endColumnNumber" : 15
  }, {
    "charLength" : 3,
    "startLineNumber" : 58,
    "startColumnNumber" : 46,
    "endLineNumber" : 58,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}