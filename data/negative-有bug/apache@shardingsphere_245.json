{
  "id" : 245,
  "expression" : "null",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dal/impl/CloneStatementAssert.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 44,
      "startColumnNumber" : 12,
      "endLineNumber" : 44,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 47
      },
      "nodeContext" : "null != expected.getDataDirectory()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getDataDirectory()) {\n  assertThat(assertContext.getText(\"Actual data directory does not match: \"),actual.getCloneActionSegment().getCloneDir(),is(expected.getDataDirectory().getLocation()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 43,
        "startColumnNumber" : 147,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null != expected.getDataDirectory()) {\n    assertThat(assertContext.getText(\"Actual data directory does not match: \"),actual.getCloneActionSegment().getCloneDir(),is(expected.getDataDirectory().getLocation()));\n  }\n  if (null != expected.getInstance()) {\n    CloneInstanceSegment instance=actual.getCloneActionSegment().getCloneInstance();\n    assertThat(assertContext.getText(\"Actual instance hostname does not match: \"),instance.getHostName(),is(expected.getInstance().getHostname()));\n    assertThat(assertContext.getText(\"Actual instance username does not match: \"),instance.getUserName(),is(expected.getInstance().getUsername()));\n    assertThat(assertContext.getText(\"Actual instance port does not match: \"),instance.getPort(),is(expected.getInstance().getPort()));\n    assertThat(assertContext.getText(\"Actual instance password does not match: \"),instance.getPassword(),is(expected.getInstance().getPassword()));\n    assertThat(assertContext.getText(\"Actual instance SSL requirement does not match: \"),instance.isSslRequired(),is(expected.getInstance().isSslRequired()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert clone statement is correct with expected clone statement test case.\n * @param assertContext assert context\n * @param actual actual clone statement\n * @param expected expected clone statement test case\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final MySQLCloneStatement actual,final CloneStatementTestCase expected){\n  if (null != expected.getDataDirectory()) {\n    assertThat(assertContext.getText(\"Actual data directory does not match: \"),actual.getCloneActionSegment().getCloneDir(),is(expected.getDataDirectory().getLocation()));\n  }\n  if (null != expected.getInstance()) {\n    CloneInstanceSegment instance=actual.getCloneActionSegment().getCloneInstance();\n    assertThat(assertContext.getText(\"Actual instance hostname does not match: \"),instance.getHostName(),is(expected.getInstance().getHostname()));\n    assertThat(assertContext.getText(\"Actual instance username does not match: \"),instance.getUserName(),is(expected.getInstance().getUsername()));\n    assertThat(assertContext.getText(\"Actual instance port does not match: \"),instance.getPort(),is(expected.getInstance().getPort()));\n    assertThat(assertContext.getText(\"Actual instance password does not match: \"),instance.getPassword(),is(expected.getInstance().getPassword()));\n    assertThat(assertContext.getText(\"Actual instance SSL requirement does not match: \"),instance.isSslRequired(),is(expected.getInstance().isSslRequired()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 47
      },
      "nodeContext" : "null != expected.getDataDirectory()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 47,
      "startColumnNumber" : 12,
      "endLineNumber" : 47,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 42
      },
      "nodeContext" : "null != expected.getInstance()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 931,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getInstance()) {\n  CloneInstanceSegment instance=actual.getCloneActionSegment().getCloneInstance();\n  assertThat(assertContext.getText(\"Actual instance hostname does not match: \"),instance.getHostName(),is(expected.getInstance().getHostname()));\n  assertThat(assertContext.getText(\"Actual instance username does not match: \"),instance.getUserName(),is(expected.getInstance().getUsername()));\n  assertThat(assertContext.getText(\"Actual instance port does not match: \"),instance.getPort(),is(expected.getInstance().getPort()));\n  assertThat(assertContext.getText(\"Actual instance password does not match: \"),instance.getPassword(),is(expected.getInstance().getPassword()));\n  assertThat(assertContext.getText(\"Actual instance SSL requirement does not match: \"),instance.isSslRequired(),is(expected.getInstance().isSslRequired()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 43,
        "startColumnNumber" : 147,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null != expected.getDataDirectory()) {\n    assertThat(assertContext.getText(\"Actual data directory does not match: \"),actual.getCloneActionSegment().getCloneDir(),is(expected.getDataDirectory().getLocation()));\n  }\n  if (null != expected.getInstance()) {\n    CloneInstanceSegment instance=actual.getCloneActionSegment().getCloneInstance();\n    assertThat(assertContext.getText(\"Actual instance hostname does not match: \"),instance.getHostName(),is(expected.getInstance().getHostname()));\n    assertThat(assertContext.getText(\"Actual instance username does not match: \"),instance.getUserName(),is(expected.getInstance().getUsername()));\n    assertThat(assertContext.getText(\"Actual instance port does not match: \"),instance.getPort(),is(expected.getInstance().getPort()));\n    assertThat(assertContext.getText(\"Actual instance password does not match: \"),instance.getPassword(),is(expected.getInstance().getPassword()));\n    assertThat(assertContext.getText(\"Actual instance SSL requirement does not match: \"),instance.isSslRequired(),is(expected.getInstance().isSslRequired()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert clone statement is correct with expected clone statement test case.\n * @param assertContext assert context\n * @param actual actual clone statement\n * @param expected expected clone statement test case\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final MySQLCloneStatement actual,final CloneStatementTestCase expected){\n  if (null != expected.getDataDirectory()) {\n    assertThat(assertContext.getText(\"Actual data directory does not match: \"),actual.getCloneActionSegment().getCloneDir(),is(expected.getDataDirectory().getLocation()));\n  }\n  if (null != expected.getInstance()) {\n    CloneInstanceSegment instance=actual.getCloneActionSegment().getCloneInstance();\n    assertThat(assertContext.getText(\"Actual instance hostname does not match: \"),instance.getHostName(),is(expected.getInstance().getHostname()));\n    assertThat(assertContext.getText(\"Actual instance username does not match: \"),instance.getUserName(),is(expected.getInstance().getUsername()));\n    assertThat(assertContext.getText(\"Actual instance port does not match: \"),instance.getPort(),is(expected.getInstance().getPort()));\n    assertThat(assertContext.getText(\"Actual instance password does not match: \"),instance.getPassword(),is(expected.getInstance().getPassword()));\n    assertThat(assertContext.getText(\"Actual instance SSL requirement does not match: \"),instance.isSslRequired(),is(expected.getInstance().isSslRequired()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 42
      },
      "nodeContext" : "null != expected.getInstance()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 44,
    "startColumnNumber" : 12,
    "endLineNumber" : 44,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 47,
    "startColumnNumber" : 12,
    "endLineNumber" : 47,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}