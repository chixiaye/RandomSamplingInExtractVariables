{
  "id" : 409,
  "expression" : "\",\"",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/impls/PostgreServerExtensionBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\",\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 239,
      "startColumnNumber" : 50,
      "endLineNumber" : 239,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 239,
        "startColumnNumber" : 39,
        "endLineNumber" : 239,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ddl.append(\",\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 239,
        "startColumnNumber" : 39,
        "endLineNumber" : 239,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ddl.append(\",\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 239,
        "startColumnNumber" : 28,
        "endLineNumber" : 239,
        "endColumnNumber" : 55
      },
      "nodeContext" : "if (i > 0) ddl.append(\",\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 238,
        "startColumnNumber" : 69,
        "endLineNumber" : 241,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (i > 0)   ddl.append(\",\");\n  ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 238,
        "startColumnNumber" : 24,
        "endLineNumber" : 241,
        "endColumnNumber" : 25
      },
      "nodeContext" : "for (int i=0; i < superTables.size(); i++) {\n  if (i > 0)   ddl.append(\",\");\n  ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 236,
        "startColumnNumber" : 88,
        "endLineNumber" : 243,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  ddl.append(\"\\nINHERITS (\");\n  for (int i=0; i < superTables.size(); i++) {\n    if (i > 0)     ddl.append(\",\");\n    ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n  }\n  ddl.append(\")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 236,
        "startColumnNumber" : 20,
        "endLineNumber" : 243,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n  ddl.append(\"\\nINHERITS (\");\n  for (int i=0; i < superTables.size(); i++) {\n    if (i > 0)     ddl.append(\",\");\n    ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n  }\n  ddl.append(\")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 234,
        "startColumnNumber" : 20,
        "endLineNumber" : 244,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n  if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n    ddl.append(\"\\nINHERITS (\");\n    for (int i=0; i < superTables.size(); i++) {\n      if (i > 0)       ddl.append(\",\");\n      ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n    }\n    ddl.append(\")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 234,
        "startColumnNumber" : 16,
        "endLineNumber" : 246,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n  if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n    ddl.append(\"\\nINHERITS (\");\n    for (int i=0; i < superTables.size(); i++) {\n      if (i > 0)       ddl.append(\",\");\n      ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n    }\n    ddl.append(\")\");\n  }\n}\n catch (DBException e) {\n  log.error(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 86,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 895,
        "startLineNumber" : 233,
        "startColumnNumber" : 24,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n    if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n      ddl.append(\"\\nINHERITS (\");\n      for (int i=0; i < superTables.size(); i++) {\n        if (i > 0)         ddl.append(\",\");\n        ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n      }\n      ddl.append(\")\");\n    }\n  }\n catch (  DBException e) {\n    log.error(e);\n  }\n  if (!CommonUtils.isEmpty(table.getPartitionKey())) {\n    ddl.append(\"\\nPARTITION BY \").append(table.getPartitionKey());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 233,
        "startColumnNumber" : 12,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!alter) {\n  try {\n    final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n    if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n      ddl.append(\"\\nINHERITS (\");\n      for (int i=0; i < superTables.size(); i++) {\n        if (i > 0)         ddl.append(\",\");\n        ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n      }\n      ddl.append(\")\");\n    }\n  }\n catch (  DBException e) {\n    log.error(e);\n  }\n  if (!CommonUtils.isEmpty(table.getPartitionKey())) {\n    ddl.append(\"\\nPARTITION BY \").append(table.getPartitionKey());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1182,
        "startLineNumber" : 231,
        "startColumnNumber" : 47,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  PostgreTable table=(PostgreTable)tableBase;\n  if (!alter) {\n    try {\n      final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n      if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n        ddl.append(\"\\nINHERITS (\");\n        for (int i=0; i < superTables.size(); i++) {\n          if (i > 0)           ddl.append(\",\");\n          ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n        }\n        ddl.append(\")\");\n      }\n    }\n catch (    DBException e) {\n      log.error(e);\n    }\n    if (!CommonUtils.isEmpty(table.getPartitionKey())) {\n      ddl.append(\"\\nPARTITION BY \").append(table.getPartitionKey());\n    }\n  }\n  if (tableBase instanceof PostgreTablePartition && !alter) {\n    ddl.append(((PostgreTablePartition)tableBase).getPartitionExpression());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1221,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tableBase instanceof PostgreTable) {\n  PostgreTable table=(PostgreTable)tableBase;\n  if (!alter) {\n    try {\n      final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n      if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n        ddl.append(\"\\nINHERITS (\");\n        for (int i=0; i < superTables.size(); i++) {\n          if (i > 0)           ddl.append(\",\");\n          ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n        }\n        ddl.append(\")\");\n      }\n    }\n catch (    DBException e) {\n      log.error(e);\n    }\n    if (!CommonUtils.isEmpty(table.getPartitionKey())) {\n      ddl.append(\"\\nPARTITION BY \").append(table.getPartitionKey());\n    }\n  }\n  if (tableBase instanceof PostgreTablePartition && !alter) {\n    ddl.append(((PostgreTablePartition)tableBase).getPartitionExpression());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 144,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3323,
        "startLineNumber" : 229,
        "startColumnNumber" : 107,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder ddl=new StringBuilder();\n  if (tableBase instanceof PostgreTable) {\n    PostgreTable table=(PostgreTable)tableBase;\n    if (!alter) {\n      try {\n        final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n        if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n          ddl.append(\"\\nINHERITS (\");\n          for (int i=0; i < superTables.size(); i++) {\n            if (i > 0)             ddl.append(\",\");\n            ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n          }\n          ddl.append(\")\");\n        }\n      }\n catch (      DBException e) {\n        log.error(e);\n      }\n      if (!CommonUtils.isEmpty(table.getPartitionKey())) {\n        ddl.append(\"\\nPARTITION BY \").append(table.getPartitionKey());\n      }\n    }\n    if (tableBase instanceof PostgreTablePartition && !alter) {\n      ddl.append(((PostgreTablePartition)tableBase).getPartitionExpression());\n    }\n  }\n  if (tableBase instanceof PostgreTableRegular) {\n    PostgreTableRegular table=(PostgreTableRegular)tableBase;\n    try {\n      if (!alter) {\n        ddl.append(createWithClause(table,tableBase));\n      }\n      boolean hasOtherSpecs=false;\n      if (table.isTablespaceSpecified()) {\n        PostgreTablespace tablespace=table.getTablespace(monitor);\n        if (tablespace != null) {\n          if (!alter) {\n            ddl.append(\"\\nTABLESPACE \").append(tablespace.getName());\n          }\n          hasOtherSpecs=true;\n        }\n      }\n      if (!alter && hasOtherSpecs) {\n        ddl.append(\"\\n\");\n      }\n    }\n catch (    DBException e) {\n      log.error(e);\n    }\n  }\n else   if (tableBase instanceof PostgreTableForeign) {\n    PostgreTableForeign table=(PostgreTableForeign)tableBase;\n    try {\n      String foreignServerName=table.getForeignServerName();\n      if (CommonUtils.isEmpty(foreignServerName)) {\n        PostgreForeignServer foreignServer=table.getForeignServer(monitor);\n        if (foreignServer != null) {\n          foreignServerName=DBUtils.getQuotedIdentifier(foreignServer);\n        }\n      }\n      if (foreignServerName != null) {\n        ddl.append(\"\\nSERVER \").append(foreignServerName);\n      }\n      String[] foreignOptions=table.getForeignOptions(monitor);\n      if (!ArrayUtils.isEmpty(foreignOptions)) {\n        ddl.append(\"\\nOPTIONS \").append(PostgreUtils.getOptionsString(foreignOptions));\n      }\n    }\n catch (    DBException e) {\n      log.error(e);\n    }\n  }\n  tableBase.appendTableModifiers(monitor,ddl);\n  return ddl.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 361,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3440,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String getTableModifiers(DBRProgressMonitor monitor,PostgreTableBase tableBase,boolean alter){\n  StringBuilder ddl=new StringBuilder();\n  if (tableBase instanceof PostgreTable) {\n    PostgreTable table=(PostgreTable)tableBase;\n    if (!alter) {\n      try {\n        final List<PostgreTableInheritance> superTables=table.getSuperInheritance(monitor);\n        if (!CommonUtils.isEmpty(superTables) && !tableBase.isPartition()) {\n          ddl.append(\"\\nINHERITS (\");\n          for (int i=0; i < superTables.size(); i++) {\n            if (i > 0)             ddl.append(\",\");\n            ddl.append(superTables.get(i).getAssociatedEntity().getFullyQualifiedName(DBPEvaluationContext.DDL));\n          }\n          ddl.append(\")\");\n        }\n      }\n catch (      DBException e) {\n        log.error(e);\n      }\n      if (!CommonUtils.isEmpty(table.getPartitionKey())) {\n        ddl.append(\"\\nPARTITION BY \").append(table.getPartitionKey());\n      }\n    }\n    if (tableBase instanceof PostgreTablePartition && !alter) {\n      ddl.append(((PostgreTablePartition)tableBase).getPartitionExpression());\n    }\n  }\n  if (tableBase instanceof PostgreTableRegular) {\n    PostgreTableRegular table=(PostgreTableRegular)tableBase;\n    try {\n      if (!alter) {\n        ddl.append(createWithClause(table,tableBase));\n      }\n      boolean hasOtherSpecs=false;\n      if (table.isTablespaceSpecified()) {\n        PostgreTablespace tablespace=table.getTablespace(monitor);\n        if (tablespace != null) {\n          if (!alter) {\n            ddl.append(\"\\nTABLESPACE \").append(tablespace.getName());\n          }\n          hasOtherSpecs=true;\n        }\n      }\n      if (!alter && hasOtherSpecs) {\n        ddl.append(\"\\n\");\n      }\n    }\n catch (    DBException e) {\n      log.error(e);\n    }\n  }\n else   if (tableBase instanceof PostgreTableForeign) {\n    PostgreTableForeign table=(PostgreTableForeign)tableBase;\n    try {\n      String foreignServerName=table.getForeignServerName();\n      if (CommonUtils.isEmpty(foreignServerName)) {\n        PostgreForeignServer foreignServer=table.getForeignServer(monitor);\n        if (foreignServer != null) {\n          foreignServerName=DBUtils.getQuotedIdentifier(foreignServer);\n        }\n      }\n      if (foreignServerName != null) {\n        ddl.append(\"\\nSERVER \").append(foreignServerName);\n      }\n      String[] foreignOptions=table.getForeignOptions(monitor);\n      if (!ArrayUtils.isEmpty(foreignOptions)) {\n        ddl.append(\"\\nOPTIONS \").append(PostgreUtils.getOptionsString(foreignOptions));\n      }\n    }\n catch (    DBException e) {\n      log.error(e);\n    }\n  }\n  tableBase.appendTableModifiers(monitor,ddl);\n  return ddl.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 379,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 239,
        "startColumnNumber" : 28,
        "endLineNumber" : 239,
        "endColumnNumber" : 55
      },
      "nodeContext" : "if (i > 0) ddl.append(\",\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 239,
    "startColumnNumber" : 50,
    "endLineNumber" : 239,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}