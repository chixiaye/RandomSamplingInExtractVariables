{
  "id" : 132,
  "expression" : "offset + 1",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/types/ShortValue.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offset + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 130,
      "startColumnNumber" : 23,
      "endLineNumber" : 130,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 59
      },
      "nodeContext" : "target.put(offset + 1,(byte)((value) & 0xff))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 60
      },
      "nodeContext" : "target.put(offset + 1,(byte)((value) & 0xff));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 125,
        "startColumnNumber" : 22,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (len == 2) {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n}\n else if (len <= 0) {\n}\n else if (len == 1) {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n}\n else {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n  for (int i=2; i < len; i++) {\n    target.put(offset + i,(byte)0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 819,
        "startLineNumber" : 124,
        "startColumnNumber" : 77,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (len == 2) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n  }\n else   if (len <= 0) {\n  }\n else   if (len == 1) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n  }\n else {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n    for (int i=2; i < len; i++) {\n      target.put(offset + i,(byte)0);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void copyNormalizedKey(MemorySegment target,int offset,int len){\n  if (len == 2) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n  }\n else   if (len <= 0) {\n  }\n else   if (len == 1) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n  }\n else {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n    for (int i=2; i < len; i++) {\n      target.put(offset + i,(byte)0);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 60
      },
      "nodeContext" : "target.put(offset + 1,(byte)((value) & 0xff));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "offset + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 140,
      "startColumnNumber" : 23,
      "endLineNumber" : 140,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 59
      },
      "nodeContext" : "target.put(offset + 1,(byte)((value) & 0xff))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 60
      },
      "nodeContext" : "target.put(offset + 1,(byte)((value) & 0xff));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 136,
        "startColumnNumber" : 15,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n  for (int i=2; i < len; i++) {\n    target.put(offset + i,(byte)0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 491,
        "startLineNumber" : 132,
        "startColumnNumber" : 15,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (len == 1) {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n}\n else {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n  for (int i=2; i < len; i++) {\n    target.put(offset + i,(byte)0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 131,
        "startColumnNumber" : 15,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (len <= 0) {\n}\n else if (len == 1) {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n}\n else {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n  for (int i=2; i < len; i++) {\n    target.put(offset + i,(byte)0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (len == 2) {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n}\n else if (len <= 0) {\n}\n else if (len == 1) {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n}\n else {\n  int highByte=((value >>> 8) & 0xff);\n  highByte-=Byte.MIN_VALUE;\n  target.put(offset,(byte)highByte);\n  target.put(offset + 1,(byte)((value) & 0xff));\n  for (int i=2; i < len; i++) {\n    target.put(offset + i,(byte)0);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 819,
        "startLineNumber" : 124,
        "startColumnNumber" : 77,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (len == 2) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n  }\n else   if (len <= 0) {\n  }\n else   if (len == 1) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n  }\n else {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n    for (int i=2; i < len; i++) {\n      target.put(offset + i,(byte)0);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void copyNormalizedKey(MemorySegment target,int offset,int len){\n  if (len == 2) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n  }\n else   if (len <= 0) {\n  }\n else   if (len == 1) {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n  }\n else {\n    int highByte=((value >>> 8) & 0xff);\n    highByte-=Byte.MIN_VALUE;\n    target.put(offset,(byte)highByte);\n    target.put(offset + 1,(byte)((value) & 0xff));\n    for (int i=2; i < len; i++) {\n      target.put(offset + i,(byte)0);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 60
      },
      "nodeContext" : "target.put(offset + 1,(byte)((value) & 0xff));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 130,
    "startColumnNumber" : 23,
    "endLineNumber" : 130,
    "endColumnNumber" : 33
  }, {
    "charLength" : 10,
    "startLineNumber" : 140,
    "startColumnNumber" : 23,
    "endLineNumber" : 140,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}