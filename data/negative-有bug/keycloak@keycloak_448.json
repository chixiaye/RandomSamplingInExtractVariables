{
  "id" : 448,
  "expression" : "\"        req.onreadystatechange = function () {\"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/main/java/org/keycloak/testsuite/util/javascript/XMLHttpRequest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"        req.onreadystatechange = function () {\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 68,
      "startColumnNumber" : 24,
      "endLineNumber" : 68,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 73,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"var callback = arguments[arguments.length - 1];\" + \"var req = new XMLHttpRequest();\" + \"        req.open('\" + method + \"', '\"+ url+ \"', true);\"+ getHeadersString()+ \"        req.onreadystatechange = function () {\"+ \"            if (req.readyState == 4) {\"+ \"                callback({\\\"status\\\" : req.status, \\\"responseHeaders\\\" : req.getAllResponseHeaders(), \\\"res\\\" : req.response})\"+ \"            }\"+ \"        };\"+ \"        req.send(\"+ content+ \");\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 64,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 60
      },
      "nodeContext" : "requestCode=\"var callback = arguments[arguments.length - 1];\" + \"var req = new XMLHttpRequest();\" + \"        req.open('\" + method + \"', '\"+ url+ \"', true);\"+ getHeadersString()+ \"        req.onreadystatechange = function () {\"+ \"            if (req.readyState == 4) {\"+ \"                callback({\\\"status\\\" : req.status, \\\"responseHeaders\\\" : req.getAllResponseHeaders(), \\\"res\\\" : req.response})\"+ \"            }\"+ \"        };\"+ \"        req.send(\"+ content+ \");\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 61
      },
      "nodeContext" : "String requestCode=\"var callback = arguments[arguments.length - 1];\" + \"var req = new XMLHttpRequest();\" + \"        req.open('\" + method + \"', '\"+ url+ \"', true);\"+ getHeadersString()+ \"        req.onreadystatechange = function () {\"+ \"            if (req.readyState == 4) {\"+ \"                callback({\\\"status\\\" : req.status, \\\"responseHeaders\\\" : req.getAllResponseHeaders(), \\\"res\\\" : req.response})\"+ \"            }\"+ \"        };\"+ \"        req.send(\"+ content+ \");\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 63,
        "startColumnNumber" : 67,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String requestCode=\"var callback = arguments[arguments.length - 1];\" + \"var req = new XMLHttpRequest();\" + \"        req.open('\" + method + \"', '\"+ url+ \"', true);\"+ getHeadersString()+ \"        req.onreadystatechange = function () {\"+ \"            if (req.readyState == 4) {\"+ \"                callback({\\\"status\\\" : req.status, \\\"responseHeaders\\\" : req.getAllResponseHeaders(), \\\"res\\\" : req.response})\"+ \"            }\"+ \"        };\"+ \"        req.send(\"+ content+ \");\";\n  return (Map<String,Object>)jsExecutor.executeAsyncScript(requestCode);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 863,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Map<String,Object> send(JavascriptExecutor jsExecutor){\n  String requestCode=\"var callback = arguments[arguments.length - 1];\" + \"var req = new XMLHttpRequest();\" + \"        req.open('\" + method + \"', '\"+ url+ \"', true);\"+ getHeadersString()+ \"        req.onreadystatechange = function () {\"+ \"            if (req.readyState == 4) {\"+ \"                callback({\\\"status\\\" : req.status, \\\"responseHeaders\\\" : req.getAllResponseHeaders(), \\\"res\\\" : req.response})\"+ \"            }\"+ \"        };\"+ \"        req.send(\"+ content+ \");\";\n  return (Map<String,Object>)jsExecutor.executeAsyncScript(requestCode);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 73,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"var callback = arguments[arguments.length - 1];\" + \"var req = new XMLHttpRequest();\" + \"        req.open('\" + method + \"', '\"+ url+ \"', true);\"+ getHeadersString()+ \"        req.onreadystatechange = function () {\"+ \"            if (req.readyState == 4) {\"+ \"                callback({\\\"status\\\" : req.status, \\\"responseHeaders\\\" : req.getAllResponseHeaders(), \\\"res\\\" : req.response})\"+ \"            }\"+ \"        };\"+ \"        req.send(\"+ content+ \");\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 68,
    "startColumnNumber" : 24,
    "endLineNumber" : 68,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}