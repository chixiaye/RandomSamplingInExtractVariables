{
  "id" : 307,
  "expression" : "null",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/helpers/FileUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 31,
      "startColumnNumber" : 25,
      "endLineNumber" : 31,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 31,
        "startColumnNumber" : 11,
        "endLineNumber" : 31,
        "endColumnNumber" : 29
      },
      "nodeContext" : "parentFile != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (parentFile != null) {\n  if (base.equals(parentFile)) {\n    return true;\n  }\n  parentFile=parentFile.getParentFile();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 22,
        "startColumnNumber" : 62,
        "endLineNumber" : 38,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    base=base.getCanonicalFile();\n    child=child.getCanonicalFile();\n  }\n catch (  IOException e) {\n    return false;\n  }\n  File parentFile=child;\n  while (parentFile != null) {\n    if (base.equals(parentFile)) {\n      return true;\n    }\n    parentFile=parentFile.getParentFile();\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 15,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Checks, whether the child directory is a subdirectory of the base directory.\n * @param base  the base directory.\n * @param child the suspected child directory.\n * @return true, if the child is a subdirectory of the base directory.\n */\npublic static boolean isSubDirectory(File base,File child){\n  try {\n    base=base.getCanonicalFile();\n    child=child.getCanonicalFile();\n  }\n catch (  IOException e) {\n    return false;\n  }\n  File parentFile=child;\n  while (parentFile != null) {\n    if (base.equals(parentFile)) {\n      return true;\n    }\n    parentFile=parentFile.getParentFile();\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 31,
        "startColumnNumber" : 11,
        "endLineNumber" : 31,
        "endColumnNumber" : 29
      },
      "nodeContext" : "parentFile != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 31,
    "startColumnNumber" : 25,
    "endLineNumber" : 31,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}