{
  "id" : 183,
  "expression" : "ex",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/image/json/JsonToImageTranslator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 133,
      "startColumnNumber" : 91,
      "endLineNumber" : 133,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 132,
        "startColumnNumber" : 14,
        "endLineNumber" : 133,
        "endColumnNumber" : 94
      },
      "nodeContext" : "new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 95
      },
      "nodeContext" : "throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 131,
        "startColumnNumber" : 42,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (DateTimeParseException ex) {\n  throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  imageBuilder.setCreated(Instant.parse(containerConfigurationTemplate.getCreated()));\n}\n catch (DateTimeParseException ex) {\n  throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 128,
        "startColumnNumber" : 61,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    imageBuilder.setCreated(Instant.parse(containerConfigurationTemplate.getCreated()));\n  }\n catch (  DateTimeParseException ex) {\n    throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (containerConfigurationTemplate.getCreated() != null) {\n  try {\n    imageBuilder.setCreated(Instant.parse(containerConfigurationTemplate.getCreated()));\n  }\n catch (  DateTimeParseException ex) {\n    throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2643,
        "startLineNumber" : 98,
        "startColumnNumber" : 51,
        "endLineNumber" : 162,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<ReferenceNoDiffIdLayer> layers=new ArrayList<>();\n  for (  BuildableManifestTemplate.ContentDescriptorTemplate layerObjectTemplate : manifestTemplate.getLayers()) {\n    if (layerObjectTemplate.getDigest() == null) {\n      throw new IllegalArgumentException(\"All layers in the manifest template must have digest set\");\n    }\n    layers.add(new ReferenceNoDiffIdLayer(new BlobDescriptor(layerObjectTemplate.getSize(),layerObjectTemplate.getDigest())));\n  }\n  List<DescriptorDigest> diffIds=containerConfigurationTemplate.getDiffIds();\n  if (layers.size() != diffIds.size()) {\n    throw new LayerCountMismatchException(\"Mismatch between image manifest and container configuration\");\n  }\n  Image.Builder<Layer> imageBuilder=Image.builder();\n  for (int layerIndex=0; layerIndex < layers.size(); layerIndex++) {\n    ReferenceNoDiffIdLayer noDiffIdLayer=layers.get(layerIndex);\n    DescriptorDigest diffId=diffIds.get(layerIndex);\n    imageBuilder.addLayer(new ReferenceLayer(noDiffIdLayer.getBlobDescriptor(),diffId));\n  }\n  if (containerConfigurationTemplate.getCreated() != null) {\n    try {\n      imageBuilder.setCreated(Instant.parse(containerConfigurationTemplate.getCreated()));\n    }\n catch (    DateTimeParseException ex) {\n      throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n    }\n  }\n  if (containerConfigurationTemplate.getContainerEntrypoint() != null) {\n    imageBuilder.setEntrypoint(containerConfigurationTemplate.getContainerEntrypoint());\n  }\n  if (containerConfigurationTemplate.getContainerCmd() != null) {\n    imageBuilder.setJavaArguments(containerConfigurationTemplate.getContainerCmd());\n  }\n  if (containerConfigurationTemplate.getContainerExposedPorts() != null) {\n    imageBuilder.setExposedPorts(portMapToList(containerConfigurationTemplate.getContainerExposedPorts()));\n  }\n  if (containerConfigurationTemplate.getContainerEnvironment() != null) {\n    for (    String environmentVariable : containerConfigurationTemplate.getContainerEnvironment()) {\n      Matcher matcher=ENVIRONMENT_PATTERN.matcher(environmentVariable);\n      if (!matcher.matches()) {\n        throw new BadContainerConfigurationFormatException(\"Invalid environment variable definition: \" + environmentVariable);\n      }\n      imageBuilder.setEnvironmentVariable(matcher.group(\"name\"),matcher.group(\"value\"));\n    }\n  }\n  return imageBuilder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3655,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 162,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Translates  {@link BuildableManifestTemplate} to {@link Image}. Uses the corresponding  {@link ContainerConfigurationTemplate} to get the layer diff IDs.\n * @param manifestTemplate the template containing the image layers.\n * @param containerConfigurationTemplate the template containing the diff IDs and containerconfiguration properties.\n * @return the translated {@link Image}.\n * @throws LayerCountMismatchException if the manifest and configuration contain conflicting layerinformation.\n * @throws LayerPropertyNotFoundException if adding image layers fails.\n * @throws BadContainerConfigurationFormatException if the container configuration is in a badformat\n */\npublic static Image<Layer> toImage(BuildableManifestTemplate manifestTemplate,ContainerConfigurationTemplate containerConfigurationTemplate) throws LayerCountMismatchException, LayerPropertyNotFoundException, BadContainerConfigurationFormatException {\n  List<ReferenceNoDiffIdLayer> layers=new ArrayList<>();\n  for (  BuildableManifestTemplate.ContentDescriptorTemplate layerObjectTemplate : manifestTemplate.getLayers()) {\n    if (layerObjectTemplate.getDigest() == null) {\n      throw new IllegalArgumentException(\"All layers in the manifest template must have digest set\");\n    }\n    layers.add(new ReferenceNoDiffIdLayer(new BlobDescriptor(layerObjectTemplate.getSize(),layerObjectTemplate.getDigest())));\n  }\n  List<DescriptorDigest> diffIds=containerConfigurationTemplate.getDiffIds();\n  if (layers.size() != diffIds.size()) {\n    throw new LayerCountMismatchException(\"Mismatch between image manifest and container configuration\");\n  }\n  Image.Builder<Layer> imageBuilder=Image.builder();\n  for (int layerIndex=0; layerIndex < layers.size(); layerIndex++) {\n    ReferenceNoDiffIdLayer noDiffIdLayer=layers.get(layerIndex);\n    DescriptorDigest diffId=diffIds.get(layerIndex);\n    imageBuilder.addLayer(new ReferenceLayer(noDiffIdLayer.getBlobDescriptor(),diffId));\n  }\n  if (containerConfigurationTemplate.getCreated() != null) {\n    try {\n      imageBuilder.setCreated(Instant.parse(containerConfigurationTemplate.getCreated()));\n    }\n catch (    DateTimeParseException ex) {\n      throw new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex);\n    }\n  }\n  if (containerConfigurationTemplate.getContainerEntrypoint() != null) {\n    imageBuilder.setEntrypoint(containerConfigurationTemplate.getContainerEntrypoint());\n  }\n  if (containerConfigurationTemplate.getContainerCmd() != null) {\n    imageBuilder.setJavaArguments(containerConfigurationTemplate.getContainerCmd());\n  }\n  if (containerConfigurationTemplate.getContainerExposedPorts() != null) {\n    imageBuilder.setExposedPorts(portMapToList(containerConfigurationTemplate.getContainerExposedPorts()));\n  }\n  if (containerConfigurationTemplate.getContainerEnvironment() != null) {\n    for (    String environmentVariable : containerConfigurationTemplate.getContainerEnvironment()) {\n      Matcher matcher=ENVIRONMENT_PATTERN.matcher(environmentVariable);\n      if (!matcher.matches()) {\n        throw new BadContainerConfigurationFormatException(\"Invalid environment variable definition: \" + environmentVariable);\n      }\n      imageBuilder.setEnvironmentVariable(matcher.group(\"name\"),matcher.group(\"value\"));\n    }\n  }\n  return imageBuilder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 132,
        "startColumnNumber" : 14,
        "endLineNumber" : 133,
        "endColumnNumber" : 94
      },
      "nodeContext" : "new BadContainerConfigurationFormatException(\"Invalid image creation time: \" + containerConfigurationTemplate.getCreated(),ex)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.time.format.DateTimeParseException"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 133,
    "startColumnNumber" : 91,
    "endLineNumber" : 133,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}