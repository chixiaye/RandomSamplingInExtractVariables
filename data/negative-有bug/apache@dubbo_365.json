{
  "id" : 365,
  "expression" : "DecimalFormat.getIntegerInstance()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-registry/dubbo-registry-api/src/test/java/org/apache/dubbo/registry/PerformanceUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DecimalFormat.getIntegerInstance()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 63,
      "startColumnNumber" : 37,
      "endLineNumber" : 63,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 63,
        "startColumnNumber" : 37,
        "endLineNumber" : 63,
        "endColumnNumber" : 114
      },
      "nodeContext" : "DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 123
      },
      "nodeContext" : "\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 124
      },
      "nodeContext" : "environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 125
      },
      "nodeContext" : "environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 878,
        "startLineNumber" : 58,
        "startColumnNumber" : 48,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> environment=new ArrayList<String>();\n  environment.add(\"OS: \" + System.getProperty(\"os.name\") + \" \"+ System.getProperty(\"os.version\")+ \" \"+ System.getProperty(\"os.arch\",\"\"));\n  environment.add(\"CPU: \" + Runtime.getRuntime().availableProcessors() + \" cores\");\n  environment.add(\"JVM: \" + System.getProperty(\"java.vm.name\") + \" \"+ System.getProperty(\"java.runtime.version\"));\n  environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\");\n  NetworkInterface ni=PerformanceUtils.getNetworkInterface();\n  if (ni != null) {\n    environment.add(\"Network: \" + ni.getDisplayName());\n  }\n  return environment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static List<String> getEnvironment(){\n  List<String> environment=new ArrayList<String>();\n  environment.add(\"OS: \" + System.getProperty(\"os.name\") + \" \"+ System.getProperty(\"os.version\")+ \" \"+ System.getProperty(\"os.arch\",\"\"));\n  environment.add(\"CPU: \" + Runtime.getRuntime().availableProcessors() + \" cores\");\n  environment.add(\"JVM: \" + System.getProperty(\"java.vm.name\") + \" \"+ System.getProperty(\"java.runtime.version\"));\n  environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\");\n  NetworkInterface ni=PerformanceUtils.getNetworkInterface();\n  if (ni != null) {\n    environment.add(\"Network: \" + ni.getDisplayName());\n  }\n  return environment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 63,
        "startColumnNumber" : 37,
        "endLineNumber" : 63,
        "endColumnNumber" : 114
      },
      "nodeContext" : "DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.text.NumberFormat"
  }, {
    "nodeContext" : "DecimalFormat.getIntegerInstance()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 64,
      "startColumnNumber" : 36,
      "endLineNumber" : 64,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 64,
        "startColumnNumber" : 36,
        "endLineNumber" : 64,
        "endColumnNumber" : 111
      },
      "nodeContext" : "DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 123
      },
      "nodeContext" : "\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 124
      },
      "nodeContext" : "environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 125
      },
      "nodeContext" : "environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 878,
        "startLineNumber" : 58,
        "startColumnNumber" : 48,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> environment=new ArrayList<String>();\n  environment.add(\"OS: \" + System.getProperty(\"os.name\") + \" \"+ System.getProperty(\"os.version\")+ \" \"+ System.getProperty(\"os.arch\",\"\"));\n  environment.add(\"CPU: \" + Runtime.getRuntime().availableProcessors() + \" cores\");\n  environment.add(\"JVM: \" + System.getProperty(\"java.vm.name\") + \" \"+ System.getProperty(\"java.runtime.version\"));\n  environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\");\n  NetworkInterface ni=PerformanceUtils.getNetworkInterface();\n  if (ni != null) {\n    environment.add(\"Network: \" + ni.getDisplayName());\n  }\n  return environment;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static List<String> getEnvironment(){\n  List<String> environment=new ArrayList<String>();\n  environment.add(\"OS: \" + System.getProperty(\"os.name\") + \" \"+ System.getProperty(\"os.version\")+ \" \"+ System.getProperty(\"os.arch\",\"\"));\n  environment.add(\"CPU: \" + Runtime.getRuntime().availableProcessors() + \" cores\");\n  environment.add(\"JVM: \" + System.getProperty(\"java.vm.name\") + \" \"+ System.getProperty(\"java.runtime.version\"));\n  environment.add(\"Memory: \" + DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().totalMemory()) + \" bytes (Max: \"+ DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())+ \" bytes)\");\n  NetworkInterface ni=PerformanceUtils.getNetworkInterface();\n  if (ni != null) {\n    environment.add(\"Network: \" + ni.getDisplayName());\n  }\n  return environment;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 64,
        "startColumnNumber" : 36,
        "endLineNumber" : 64,
        "endColumnNumber" : 111
      },
      "nodeContext" : "DecimalFormat.getIntegerInstance().format(Runtime.getRuntime().maxMemory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.text.NumberFormat"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 63,
    "startColumnNumber" : 37,
    "endLineNumber" : 63,
    "endColumnNumber" : 71
  }, {
    "charLength" : 34,
    "startLineNumber" : 64,
    "startColumnNumber" : 36,
    "endLineNumber" : 64,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}