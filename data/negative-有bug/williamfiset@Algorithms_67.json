{
  "id" : 67,
  "expression" : "r > n",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/other/CombinationsWithRepetition.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "r > n",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 60,
      "startColumnNumber" : 8,
      "endLineNumber" : 60,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 68
      },
      "nodeContext" : "if (r > n) throw new IllegalArgumentException(\"r must be <= n\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 56,
        "startColumnNumber" : 83,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (sequence == null)   return;\n  final int n=sequence.length;\n  if (r > n)   throw new IllegalArgumentException(\"r must be <= n\");\n  if (k > r)   throw new IllegalArgumentException(\"k must be <= r\");\n  int[] usedCount=new int[sequence.length];\n  combinationsWithRepetition(sequence,usedCount,0,r,k);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void printCombinationsWithRepetition(int[] sequence,int r,int k){\n  if (sequence == null)   return;\n  final int n=sequence.length;\n  if (r > n)   throw new IllegalArgumentException(\"r must be <= n\");\n  if (k > r)   throw new IllegalArgumentException(\"k must be <= r\");\n  int[] usedCount=new int[sequence.length];\n  combinationsWithRepetition(sequence,usedCount,0,r,k);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 68
      },
      "nodeContext" : "if (r > n) throw new IllegalArgumentException(\"r must be <= n\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 60,
    "startColumnNumber" : 8,
    "endLineNumber" : 60,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ ]
}