{
  "id" : 217,
  "expression" : "hit",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/defense/ForceProjector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 165,
      "startColumnNumber" : 15,
      "endLineNumber" : 165,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 165,
        "startColumnNumber" : 15,
        "endLineNumber" : 165,
        "endColumnNumber" : 23
      },
      "nodeContext" : "hit > 0f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (hit > 0f) {\n  hit-=1f / 5f * Time.delta;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1741,
        "startLineNumber" : 127,
        "startColumnNumber" : 32,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean phaseValid=consumes.get(ConsumeType.item).valid(this);\n  phaseHeat=Mathf.lerpDelta(phaseHeat,Mathf.num(phaseValid),0.1f);\n  if (phaseValid && !broken && timer(timerUse,phaseUseTime)&& efficiency() > 0) {\n    consume();\n  }\n  radscl=Mathf.lerpDelta(radscl,broken ? 0f : warmup,0.05f);\n  if (Mathf.chanceDelta(buildup / shieldHealth * 0.1f)) {\n    Fx.reactorsmoke.at(x + Mathf.range(tilesize / 2f),y + Mathf.range(tilesize / 2f));\n  }\n  warmup=Mathf.lerpDelta(warmup,efficiency(),0.1f);\n  if (buildup > 0) {\n    float scale=!broken ? cooldownNormal : cooldownBrokenBase;\n    ConsumeLiquidFilter cons=consumes.get(ConsumeType.liquid);\n    if (cons.valid(this)) {\n      cons.update(this);\n      scale*=(cooldownLiquid * (1f + (liquids.current().heatCapacity - 0.4f) * 0.9f));\n    }\n    buildup-=delta() * scale;\n  }\n  if (broken && buildup <= 0) {\n    broken=false;\n  }\n  if (buildup >= shieldHealth + phaseShieldBoost * phaseHeat && !broken) {\n    broken=true;\n    buildup=shieldHealth;\n    Fx.shieldBreak.at(x,y,realRadius(),team.color);\n  }\n  if (hit > 0f) {\n    hit-=1f / 5f * Time.delta;\n  }\n  float realRadius=realRadius();\n  if (realRadius > 0 && !broken) {\n    paramEntity=this;\n    Groups.bullet.intersect(x - realRadius,y - realRadius,realRadius * 2f,realRadius * 2f,shieldConsumer);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void updateTile(){\n  boolean phaseValid=consumes.get(ConsumeType.item).valid(this);\n  phaseHeat=Mathf.lerpDelta(phaseHeat,Mathf.num(phaseValid),0.1f);\n  if (phaseValid && !broken && timer(timerUse,phaseUseTime)&& efficiency() > 0) {\n    consume();\n  }\n  radscl=Mathf.lerpDelta(radscl,broken ? 0f : warmup,0.05f);\n  if (Mathf.chanceDelta(buildup / shieldHealth * 0.1f)) {\n    Fx.reactorsmoke.at(x + Mathf.range(tilesize / 2f),y + Mathf.range(tilesize / 2f));\n  }\n  warmup=Mathf.lerpDelta(warmup,efficiency(),0.1f);\n  if (buildup > 0) {\n    float scale=!broken ? cooldownNormal : cooldownBrokenBase;\n    ConsumeLiquidFilter cons=consumes.get(ConsumeType.liquid);\n    if (cons.valid(this)) {\n      cons.update(this);\n      scale*=(cooldownLiquid * (1f + (liquids.current().heatCapacity - 0.4f) * 0.9f));\n    }\n    buildup-=delta() * scale;\n  }\n  if (broken && buildup <= 0) {\n    broken=false;\n  }\n  if (buildup >= shieldHealth + phaseShieldBoost * phaseHeat && !broken) {\n    broken=true;\n    buildup=shieldHealth;\n    Fx.shieldBreak.at(x,y,realRadius(),team.color);\n  }\n  if (hit > 0f) {\n    hit-=1f / 5f * Time.delta;\n  }\n  float realRadius=realRadius();\n  if (realRadius > 0 && !broken) {\n    paramEntity=this;\n    Groups.bullet.intersect(x - realRadius,y - realRadius,realRadius * 2f,realRadius * 2f,shieldConsumer);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 261,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 165,
        "startColumnNumber" : 15,
        "endLineNumber" : 165,
        "endColumnNumber" : 23
      },
      "nodeContext" : "hit > 0f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 165,
    "startColumnNumber" : 15,
    "endLineNumber" : 165,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}