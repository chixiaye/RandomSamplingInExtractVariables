{
  "id" : 364,
  "expression" : "Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Integer item){\n    return Observable.just((Object)(item + 1));\n  }\n}\n,new Function<Throwable,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Throwable e){\n    return Observable.error(e);\n  }\n}\n,new Supplier<Observable<Object>>(){\n  @Override public Observable<Object> get(){\n    return Observable.never();\n  }\n}\n)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableMapNotificationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Integer item){\n    return Observable.just((Object)(item + 1));\n  }\n}\n,new Function<Throwable,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Throwable e){\n    return Observable.error(e);\n  }\n}\n,new Supplier<Observable<Object>>(){\n  @Override public Observable<Object> get(){\n    return Observable.never();\n  }\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 817,
      "startLineNumber" : 26,
      "startColumnNumber" : 8,
      "endLineNumber" : 46,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 101,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 23
      },
      "nodeContext" : "Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Integer item){\n    return Observable.just((Object)(item + 1));\n  }\n}\n,new Function<Throwable,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Throwable e){\n    return Observable.error(e);\n  }\n}\n,new Supplier<Observable<Object>>(){\n  @Override public Observable<Object> get(){\n    return Observable.never();\n  }\n}\n).subscribe(ts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 24
      },
      "nodeContext" : "Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Integer item){\n    return Observable.just((Object)(item + 1));\n  }\n}\n,new Function<Throwable,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Throwable e){\n    return Observable.error(e);\n  }\n}\n,new Supplier<Observable<Object>>(){\n  @Override public Observable<Object> get(){\n    return Observable.never();\n  }\n}\n).subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 105,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 24,
        "startColumnNumber" : 27,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestObserver<Object> ts=new TestObserver<Object>();\n  Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){\n    @Override public Observable<Object> apply(    Integer item){\n      return Observable.just((Object)(item + 1));\n    }\n  }\n,new Function<Throwable,Observable<Object>>(){\n    @Override public Observable<Object> apply(    Throwable e){\n      return Observable.error(e);\n    }\n  }\n,new Supplier<Observable<Object>>(){\n    @Override public Observable<Object> get(){\n      return Observable.never();\n    }\n  }\n).subscribe(ts);\n  ts.assertNoErrors();\n  ts.assertNotComplete();\n  ts.assertValue(2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testJust(){\n  TestObserver<Object> ts=new TestObserver<Object>();\n  Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){\n    @Override public Observable<Object> apply(    Integer item){\n      return Observable.just((Object)(item + 1));\n    }\n  }\n,new Function<Throwable,Observable<Object>>(){\n    @Override public Observable<Object> apply(    Throwable e){\n      return Observable.error(e);\n    }\n  }\n,new Supplier<Observable<Object>>(){\n    @Override public Observable<Object> get(){\n      return Observable.never();\n    }\n  }\n).subscribe(ts);\n  ts.assertNoErrors();\n  ts.assertNotComplete();\n  ts.assertValue(2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 24
      },
      "nodeContext" : "Observable.just(1).flatMap(new Function<Integer,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Integer item){\n    return Observable.just((Object)(item + 1));\n  }\n}\n,new Function<Throwable,Observable<Object>>(){\n  @Override public Observable<Object> apply(  Throwable e){\n    return Observable.error(e);\n  }\n}\n,new Supplier<Observable<Object>>(){\n  @Override public Observable<Object> get(){\n    return Observable.never();\n  }\n}\n).subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 105,
      "astHeight" : 13
    },
    "tokenLength" : 33,
    "type" : "io.reactivex.Observable<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 817,
    "startLineNumber" : 26,
    "startColumnNumber" : 8,
    "endLineNumber" : 46,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}