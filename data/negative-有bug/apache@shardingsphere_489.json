{
  "id" : 489,
  "expression" : "YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type)",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-kernel/shardingsphere-data-pipeline/shardingsphere-data-pipeline-core/src/main/java/org/apache/shardingsphere/data/pipeline/scenario/rulealtered/RuleAlteredJobWorker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 188,
      "startColumnNumber" : 43,
      "endLineNumber" : 188,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 188,
        "startColumnNumber" : 32,
        "endLineNumber" : 188,
        "endColumnNumber" : 86
      },
      "nodeContext" : "detector=YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 188,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 87
      },
      "nodeContext" : "RuleAlteredDetector detector=YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 186,
        "startColumnNumber" : 165,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String type=(null != each.getLeft() ? each.getLeft() : each.getRight()).getClass().getName();\n  RuleAlteredDetector detector=YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type);\n  if (null == detector) {\n    continue;\n  }\n  boolean ruleAltered=detector.isRuleAltered(each.getLeft(),each.getRight());\n  log.info(\"type={}, ruleAltered={}\",type,ruleAltered);\n  if (ruleAltered) {\n    alteredRuleYamlClassNames.add(type);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Pair<YamlRuleConfiguration,YamlRuleConfiguration> each : groupSourceTargetRuleConfigsByType(sourceRootConfig.getRules(),targetRootConfig.getRules())) {\n  String type=(null != each.getLeft() ? each.getLeft() : each.getRight()).getClass().getName();\n  RuleAlteredDetector detector=YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type);\n  if (null == detector) {\n    continue;\n  }\n  boolean ruleAltered=detector.isRuleAltered(each.getLeft(),each.getRight());\n  log.info(\"type={}, ruleAltered={}\",type,ruleAltered);\n  if (ruleAltered) {\n    alteredRuleYamlClassNames.add(type);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1807,
        "startLineNumber" : 182,
        "startColumnNumber" : 86,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  YamlRootConfiguration sourceRootConfig=getYamlRootConfiguration(event.getSchemaName(),event.getSourceDataSource(),event.getSourceRule());\n  YamlRootConfiguration targetRootConfig=getYamlRootConfiguration(event.getSchemaName(),event.getTargetDataSource(),event.getTargetRule());\n  Set<String> alteredRuleYamlClassNames=new LinkedHashSet<>();\n  for (  Pair<YamlRuleConfiguration,YamlRuleConfiguration> each : groupSourceTargetRuleConfigsByType(sourceRootConfig.getRules(),targetRootConfig.getRules())) {\n    String type=(null != each.getLeft() ? each.getLeft() : each.getRight()).getClass().getName();\n    RuleAlteredDetector detector=YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type);\n    if (null == detector) {\n      continue;\n    }\n    boolean ruleAltered=detector.isRuleAltered(each.getLeft(),each.getRight());\n    log.info(\"type={}, ruleAltered={}\",type,ruleAltered);\n    if (ruleAltered) {\n      alteredRuleYamlClassNames.add(type);\n    }\n  }\n  if (alteredRuleYamlClassNames.isEmpty()) {\n    log.error(\"no altered rule\");\n    throw new PipelineJobCreationException(\"no altered rule\");\n  }\n  if (alteredRuleYamlClassNames.size() > 1) {\n    log.error(\"more than 1 rule altered\");\n    throw new PipelineJobCreationException(\"more than 1 rule altered\");\n  }\n  WorkflowConfiguration workflowConfig=new WorkflowConfiguration(event.getSchemaName(),new ArrayList<>(alteredRuleYamlClassNames),event.getRuleCacheId());\n  PipelineConfiguration pipelineConfig=getPipelineConfiguration(sourceRootConfig,targetRootConfig);\n  return Optional.of(new JobConfiguration(workflowConfig,pipelineConfig));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1889,
        "startLineNumber" : 182,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Optional<JobConfiguration> createJobConfig(final StartScalingEvent event){\n  YamlRootConfiguration sourceRootConfig=getYamlRootConfiguration(event.getSchemaName(),event.getSourceDataSource(),event.getSourceRule());\n  YamlRootConfiguration targetRootConfig=getYamlRootConfiguration(event.getSchemaName(),event.getTargetDataSource(),event.getTargetRule());\n  Set<String> alteredRuleYamlClassNames=new LinkedHashSet<>();\n  for (  Pair<YamlRuleConfiguration,YamlRuleConfiguration> each : groupSourceTargetRuleConfigsByType(sourceRootConfig.getRules(),targetRootConfig.getRules())) {\n    String type=(null != each.getLeft() ? each.getLeft() : each.getRight()).getClass().getName();\n    RuleAlteredDetector detector=YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type);\n    if (null == detector) {\n      continue;\n    }\n    boolean ruleAltered=detector.isRuleAltered(each.getLeft(),each.getRight());\n    log.info(\"type={}, ruleAltered={}\",type,ruleAltered);\n    if (ruleAltered) {\n      alteredRuleYamlClassNames.add(type);\n    }\n  }\n  if (alteredRuleYamlClassNames.isEmpty()) {\n    log.error(\"no altered rule\");\n    throw new PipelineJobCreationException(\"no altered rule\");\n  }\n  if (alteredRuleYamlClassNames.size() > 1) {\n    log.error(\"more than 1 rule altered\");\n    throw new PipelineJobCreationException(\"more than 1 rule altered\");\n  }\n  WorkflowConfiguration workflowConfig=new WorkflowConfiguration(event.getSchemaName(),new ArrayList<>(alteredRuleYamlClassNames),event.getRuleCacheId());\n  PipelineConfiguration pipelineConfig=getPipelineConfiguration(sourceRootConfig,targetRootConfig);\n  return Optional.of(new JobConfiguration(workflowConfig,pipelineConfig));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 188,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 87
      },
      "nodeContext" : "RuleAlteredDetector detector=YAML_RULE_CLASS_NAME_DETECTOR_MAP.get(type);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "org.apache.shardingsphere.data.pipeline.spi.rulealtered.RuleAlteredDetector"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 188,
    "startColumnNumber" : 43,
    "endLineNumber" : 188,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}