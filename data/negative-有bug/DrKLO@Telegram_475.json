{
  "id" : 475,
  "expression" : "Uri",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedLinkCell.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Uri",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 253,
      "startColumnNumber" : 38,
      "endLineNumber" : 253,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 253,
        "startColumnNumber" : 38,
        "endLineNumber" : 253,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Uri.parse(title)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 253,
        "startColumnNumber" : 32,
        "endLineNumber" : 253,
        "endColumnNumber" : 54
      },
      "nodeContext" : "uri=Uri.parse(title)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 253,
        "startColumnNumber" : 28,
        "endLineNumber" : 253,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Uri uri=Uri.parse(title);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 251,
        "startColumnNumber" : 66,
        "endLineNumber" : 269,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  title=link;\n  Uri uri=Uri.parse(title);\n  title=uri.getHost();\n  if (title == null) {\n    title=link;\n  }\n  int index;\n  if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n    title=title.substring(0,index);\n    if ((index=title.lastIndexOf('.')) >= 0) {\n      title=title.substring(index + 1);\n    }\n    title=title.substring(0,1).toUpperCase() + title.substring(1);\n  }\n  if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n    description=message.messageOwner.message;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1068,
        "startLineNumber" : 251,
        "startColumnNumber" : 24,
        "endLineNumber" : 269,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (title == null || title.length() == 0) {\n  title=link;\n  Uri uri=Uri.parse(title);\n  title=uri.getHost();\n  if (title == null) {\n    title=link;\n  }\n  int index;\n  if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n    title=title.substring(0,index);\n    if ((index=title.lastIndexOf('.')) >= 0) {\n      title=title.substring(index + 1);\n    }\n    title=title.substring(0,1).toUpperCase() + title.substring(1);\n  }\n  if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n    description=message.messageOwner.message;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 245,
        "startColumnNumber" : 120,
        "endLineNumber" : 270,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (entity instanceof TLRPC.TL_messageEntityUrl) {\n    link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n  }\n else {\n    link=entity.url;\n  }\n  if (title == null || title.length() == 0) {\n    title=link;\n    Uri uri=Uri.parse(title);\n    title=uri.getHost();\n    if (title == null) {\n      title=link;\n    }\n    int index;\n    if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n      title=title.substring(0,index);\n      if ((index=title.lastIndexOf('.')) >= 0) {\n        title=title.substring(index + 1);\n      }\n      title=title.substring(0,1).toUpperCase() + title.substring(1);\n    }\n    if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n      description=message.messageOwner.message;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2165,
        "startLineNumber" : 245,
        "startColumnNumber" : 20,
        "endLineNumber" : 278,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n  if (entity instanceof TLRPC.TL_messageEntityUrl) {\n    link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n  }\n else {\n    link=entity.url;\n  }\n  if (title == null || title.length() == 0) {\n    title=link;\n    Uri uri=Uri.parse(title);\n    title=uri.getHost();\n    if (title == null) {\n      title=link;\n    }\n    int index;\n    if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n      title=title.substring(0,index);\n      if ((index=title.lastIndexOf('.')) >= 0) {\n        title=title.substring(index + 1);\n      }\n      title=title.substring(0,1).toUpperCase() + title.substring(1);\n    }\n    if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n      description=message.messageOwner.message;\n    }\n  }\n}\n else if (entity instanceof TLRPC.TL_messageEntityEmail) {\n  if (title == null || title.length() == 0) {\n    link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n    title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n    if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n      description=message.messageOwner.message;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 266,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2609,
        "startLineNumber" : 243,
        "startColumnNumber" : 20,
        "endLineNumber" : 286,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String link=null;\n  if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n    if (entity instanceof TLRPC.TL_messageEntityUrl) {\n      link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n    }\n else {\n      link=entity.url;\n    }\n    if (title == null || title.length() == 0) {\n      title=link;\n      Uri uri=Uri.parse(title);\n      title=uri.getHost();\n      if (title == null) {\n        title=link;\n      }\n      int index;\n      if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n        title=title.substring(0,index);\n        if ((index=title.lastIndexOf('.')) >= 0) {\n          title=title.substring(index + 1);\n        }\n        title=title.substring(0,1).toUpperCase() + title.substring(1);\n      }\n      if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n        description=message.messageOwner.message;\n      }\n    }\n  }\n else   if (entity instanceof TLRPC.TL_messageEntityEmail) {\n    if (title == null || title.length() == 0) {\n      link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n      title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n      if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n        description=message.messageOwner.message;\n      }\n    }\n  }\n  if (link != null) {\n    if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n      links.add(\"http://\" + link);\n    }\n else {\n      links.add(link);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2687,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 288,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  String link=null;\n  if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n    if (entity instanceof TLRPC.TL_messageEntityUrl) {\n      link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n    }\n else {\n      link=entity.url;\n    }\n    if (title == null || title.length() == 0) {\n      title=link;\n      Uri uri=Uri.parse(title);\n      title=uri.getHost();\n      if (title == null) {\n        title=link;\n      }\n      int index;\n      if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n        title=title.substring(0,index);\n        if ((index=title.lastIndexOf('.')) >= 0) {\n          title=title.substring(index + 1);\n        }\n        title=title.substring(0,1).toUpperCase() + title.substring(1);\n      }\n      if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n        description=message.messageOwner.message;\n      }\n    }\n  }\n else   if (entity instanceof TLRPC.TL_messageEntityEmail) {\n    if (title == null || title.length() == 0) {\n      link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n      title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n      if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n        description=message.messageOwner.message;\n      }\n    }\n  }\n  if (link != null) {\n    if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n      links.add(\"http://\" + link);\n    }\n else {\n      links.add(link);\n    }\n  }\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 328,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 3655,
        "startLineNumber" : 227,
        "startColumnNumber" : 75,
        "endLineNumber" : 289,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  TLRPC.MessageEntity entity=message.messageOwner.entities.get(a);\n  if (entity.length <= 0 || entity.offset < 0 || entity.offset >= message.messageOwner.message.length()) {\n    continue;\n  }\n else   if (entity.offset + entity.length > message.messageOwner.message.length()) {\n    entity.length=message.messageOwner.message.length() - entity.offset;\n  }\n  if (a == 0 && webPageLink != null && !(entity.offset == 0 && entity.length == message.messageOwner.message.length())) {\n    if (message.messageOwner.entities.size() == 1) {\n      if (description == null) {\n        description2=message.messageOwner.message;\n      }\n    }\n else {\n      description2=message.messageOwner.message;\n    }\n  }\n  try {\n    String link=null;\n    if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n      if (entity instanceof TLRPC.TL_messageEntityUrl) {\n        link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n      }\n else {\n        link=entity.url;\n      }\n      if (title == null || title.length() == 0) {\n        title=link;\n        Uri uri=Uri.parse(title);\n        title=uri.getHost();\n        if (title == null) {\n          title=link;\n        }\n        int index;\n        if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n          title=title.substring(0,index);\n          if ((index=title.lastIndexOf('.')) >= 0) {\n            title=title.substring(index + 1);\n          }\n          title=title.substring(0,1).toUpperCase() + title.substring(1);\n        }\n        if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n          description=message.messageOwner.message;\n        }\n      }\n    }\n else     if (entity instanceof TLRPC.TL_messageEntityEmail) {\n      if (title == null || title.length() == 0) {\n        link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n        title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n        if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n          description=message.messageOwner.message;\n        }\n      }\n    }\n    if (link != null) {\n      if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n        links.add(\"http://\" + link);\n      }\n else {\n        links.add(link);\n      }\n    }\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 465,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3718,
        "startLineNumber" : 227,
        "startColumnNumber" : 12,
        "endLineNumber" : 289,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0; a < message.messageOwner.entities.size(); a++) {\n  TLRPC.MessageEntity entity=message.messageOwner.entities.get(a);\n  if (entity.length <= 0 || entity.offset < 0 || entity.offset >= message.messageOwner.message.length()) {\n    continue;\n  }\n else   if (entity.offset + entity.length > message.messageOwner.message.length()) {\n    entity.length=message.messageOwner.message.length() - entity.offset;\n  }\n  if (a == 0 && webPageLink != null && !(entity.offset == 0 && entity.length == message.messageOwner.message.length())) {\n    if (message.messageOwner.entities.size() == 1) {\n      if (description == null) {\n        description2=message.messageOwner.message;\n      }\n    }\n else {\n      description2=message.messageOwner.message;\n    }\n  }\n  try {\n    String link=null;\n    if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n      if (entity instanceof TLRPC.TL_messageEntityUrl) {\n        link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n      }\n else {\n        link=entity.url;\n      }\n      if (title == null || title.length() == 0) {\n        title=link;\n        Uri uri=Uri.parse(title);\n        title=uri.getHost();\n        if (title == null) {\n          title=link;\n        }\n        int index;\n        if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n          title=title.substring(0,index);\n          if ((index=title.lastIndexOf('.')) >= 0) {\n            title=title.substring(index + 1);\n          }\n          title=title.substring(0,1).toUpperCase() + title.substring(1);\n        }\n        if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n          description=message.messageOwner.message;\n        }\n      }\n    }\n else     if (entity instanceof TLRPC.TL_messageEntityEmail) {\n      if (title == null || title.length() == 0) {\n        link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n        title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n        if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n          description=message.messageOwner.message;\n        }\n      }\n    }\n    if (link != null) {\n      if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n        links.add(\"http://\" + link);\n      }\n else {\n        links.add(link);\n      }\n    }\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 482,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3742,
        "startLineNumber" : 226,
        "startColumnNumber" : 73,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int a=0; a < message.messageOwner.entities.size(); a++) {\n    TLRPC.MessageEntity entity=message.messageOwner.entities.get(a);\n    if (entity.length <= 0 || entity.offset < 0 || entity.offset >= message.messageOwner.message.length()) {\n      continue;\n    }\n else     if (entity.offset + entity.length > message.messageOwner.message.length()) {\n      entity.length=message.messageOwner.message.length() - entity.offset;\n    }\n    if (a == 0 && webPageLink != null && !(entity.offset == 0 && entity.length == message.messageOwner.message.length())) {\n      if (message.messageOwner.entities.size() == 1) {\n        if (description == null) {\n          description2=message.messageOwner.message;\n        }\n      }\n else {\n        description2=message.messageOwner.message;\n      }\n    }\n    try {\n      String link=null;\n      if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n        if (entity instanceof TLRPC.TL_messageEntityUrl) {\n          link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n        }\n else {\n          link=entity.url;\n        }\n        if (title == null || title.length() == 0) {\n          title=link;\n          Uri uri=Uri.parse(title);\n          title=uri.getHost();\n          if (title == null) {\n            title=link;\n          }\n          int index;\n          if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n            title=title.substring(0,index);\n            if ((index=title.lastIndexOf('.')) >= 0) {\n              title=title.substring(index + 1);\n            }\n            title=title.substring(0,1).toUpperCase() + title.substring(1);\n          }\n          if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n            description=message.messageOwner.message;\n          }\n        }\n      }\n else       if (entity instanceof TLRPC.TL_messageEntityEmail) {\n        if (title == null || title.length() == 0) {\n          link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n          title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n          if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n            description=message.messageOwner.message;\n          }\n        }\n      }\n      if (link != null) {\n        if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n          links.add(\"http://\" + link);\n        }\n else {\n          links.add(link);\n        }\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 483,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3807,
        "startLineNumber" : 226,
        "startColumnNumber" : 8,
        "endLineNumber" : 290,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (message != null && !message.messageOwner.entities.isEmpty()) {\n  for (int a=0; a < message.messageOwner.entities.size(); a++) {\n    TLRPC.MessageEntity entity=message.messageOwner.entities.get(a);\n    if (entity.length <= 0 || entity.offset < 0 || entity.offset >= message.messageOwner.message.length()) {\n      continue;\n    }\n else     if (entity.offset + entity.length > message.messageOwner.message.length()) {\n      entity.length=message.messageOwner.message.length() - entity.offset;\n    }\n    if (a == 0 && webPageLink != null && !(entity.offset == 0 && entity.length == message.messageOwner.message.length())) {\n      if (message.messageOwner.entities.size() == 1) {\n        if (description == null) {\n          description2=message.messageOwner.message;\n        }\n      }\n else {\n        description2=message.messageOwner.message;\n      }\n    }\n    try {\n      String link=null;\n      if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n        if (entity instanceof TLRPC.TL_messageEntityUrl) {\n          link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n        }\n else {\n          link=entity.url;\n        }\n        if (title == null || title.length() == 0) {\n          title=link;\n          Uri uri=Uri.parse(title);\n          title=uri.getHost();\n          if (title == null) {\n            title=link;\n          }\n          int index;\n          if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n            title=title.substring(0,index);\n            if ((index=title.lastIndexOf('.')) >= 0) {\n              title=title.substring(index + 1);\n            }\n            title=title.substring(0,1).toUpperCase() + title.substring(1);\n          }\n          if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n            description=message.messageOwner.message;\n          }\n        }\n      }\n else       if (entity instanceof TLRPC.TL_messageEntityEmail) {\n        if (title == null || title.length() == 0) {\n          link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n          title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n          if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n            description=message.messageOwner.message;\n          }\n        }\n      }\n      if (link != null) {\n        if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n          links.add(\"http://\" + link);\n        }\n else {\n          links.add(link);\n        }\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 496,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 13339,
        "startLineNumber" : 196,
        "startColumnNumber" : 74,
        "endLineNumber" : 441,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  drawLinkImageView=false;\n  descriptionLayout=null;\n  titleLayout=null;\n  descriptionLayout2=null;\n  captionLayout=null;\n  linkLayout.clear();\n  links.clear();\n  int maxWidth=MeasureSpec.getSize(widthMeasureSpec) - AndroidUtilities.dp(AndroidUtilities.leftBaseline) - AndroidUtilities.dp(8);\n  String title=null;\n  String description=null;\n  String description2=null;\n  String webPageLink=null;\n  boolean hasPhoto=false;\n  if (message.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && message.messageOwner.media.webpage instanceof TLRPC.TL_webPage) {\n    TLRPC.WebPage webPage=message.messageOwner.media.webpage;\n    if (message.photoThumbs == null && webPage.photo != null) {\n      message.generateThumbs(true);\n    }\n    hasPhoto=webPage.photo != null && message.photoThumbs != null;\n    title=webPage.title;\n    if (title == null) {\n      title=webPage.site_name;\n    }\n    description=webPage.description;\n    webPageLink=webPage.url;\n  }\n  if (message != null && !message.messageOwner.entities.isEmpty()) {\n    for (int a=0; a < message.messageOwner.entities.size(); a++) {\n      TLRPC.MessageEntity entity=message.messageOwner.entities.get(a);\n      if (entity.length <= 0 || entity.offset < 0 || entity.offset >= message.messageOwner.message.length()) {\n        continue;\n      }\n else       if (entity.offset + entity.length > message.messageOwner.message.length()) {\n        entity.length=message.messageOwner.message.length() - entity.offset;\n      }\n      if (a == 0 && webPageLink != null && !(entity.offset == 0 && entity.length == message.messageOwner.message.length())) {\n        if (message.messageOwner.entities.size() == 1) {\n          if (description == null) {\n            description2=message.messageOwner.message;\n          }\n        }\n else {\n          description2=message.messageOwner.message;\n        }\n      }\n      try {\n        String link=null;\n        if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n          if (entity instanceof TLRPC.TL_messageEntityUrl) {\n            link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n          }\n else {\n            link=entity.url;\n          }\n          if (title == null || title.length() == 0) {\n            title=link;\n            Uri uri=Uri.parse(title);\n            title=uri.getHost();\n            if (title == null) {\n              title=link;\n            }\n            int index;\n            if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n              title=title.substring(0,index);\n              if ((index=title.lastIndexOf('.')) >= 0) {\n                title=title.substring(index + 1);\n              }\n              title=title.substring(0,1).toUpperCase() + title.substring(1);\n            }\n            if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n              description=message.messageOwner.message;\n            }\n          }\n        }\n else         if (entity instanceof TLRPC.TL_messageEntityEmail) {\n          if (title == null || title.length() == 0) {\n            link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n            title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n            if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n              description=message.messageOwner.message;\n            }\n          }\n        }\n        if (link != null) {\n          if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n            links.add(\"http://\" + link);\n          }\n else {\n            links.add(link);\n          }\n        }\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n    }\n  }\n  if (webPageLink != null && links.isEmpty()) {\n    links.add(webPageLink);\n  }\n  int dateWidth=0;\n  if (viewType == VIEW_TYPE_GLOBAL_SEARCH) {\n    String str=LocaleController.stringForMessageListDate(message.messageOwner.date);\n    int width=(int)Math.ceil(description2TextPaint.measureText(str));\n    dateLayout=ChatMessageCell.generateStaticLayout(str,description2TextPaint,width,width,0,1);\n    dateLayoutX=maxWidth - width - AndroidUtilities.dp(8);\n    dateWidth=width + AndroidUtilities.dp(12);\n  }\n  if (title != null) {\n    try {\n      CharSequence titleFinal=title;\n      CharSequence titleH=AndroidUtilities.highlightText(titleFinal,message.highlightedWords);\n      if (titleH != null) {\n        titleFinal=titleH;\n      }\n      titleLayout=ChatMessageCell.generateStaticLayout(titleFinal,titleTextPaint,maxWidth - dateWidth - AndroidUtilities.dp(4),maxWidth - dateWidth - AndroidUtilities.dp(4),0,3);\n      if (titleLayout.getLineCount() > 0) {\n        descriptionY=titleY + titleLayout.getLineBottom(titleLayout.getLineCount() - 1) + AndroidUtilities.dp(4);\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    letterDrawable.setTitle(title);\n  }\n  description2Y=descriptionY;\n  int desctiptionLines=Math.max(1,4 - (titleLayout != null ? titleLayout.getLineCount() : 0));\n  if (viewType == VIEW_TYPE_GLOBAL_SEARCH) {\n    description=null;\n    description2=null;\n  }\n  if (description != null) {\n    try {\n      descriptionLayout=ChatMessageCell.generateStaticLayout(description,descriptionTextPaint,maxWidth,maxWidth,0,desctiptionLines);\n      if (descriptionLayout.getLineCount() > 0) {\n        description2Y=descriptionY + descriptionLayout.getLineBottom(descriptionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n  if (description2 != null) {\n    try {\n      descriptionLayout2=ChatMessageCell.generateStaticLayout(description2,descriptionTextPaint,maxWidth,maxWidth,0,desctiptionLines);\n      if (descriptionLayout != null) {\n        description2Y+=AndroidUtilities.dp(10);\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n  if (message != null && !TextUtils.isEmpty(message.messageOwner.message)) {\n    CharSequence caption=Emoji.replaceEmoji(message.messageOwner.message.replace(\"\\n\",\" \").replaceAll(\" +\",\" \").trim(),Theme.chat_msgTextPaint.getFontMetricsInt(),AndroidUtilities.dp(20),false);\n    CharSequence sequence=AndroidUtilities.highlightText(caption,message.highlightedWords);\n    if (sequence != null) {\n      sequence=TextUtils.ellipsize(AndroidUtilities.ellipsizeCenterEnd(sequence,message.highlightedWords.get(0),maxWidth,captionTextPaint,130),captionTextPaint,maxWidth,TextUtils.TruncateAt.END);\n      captionLayout=new StaticLayout(sequence,captionTextPaint,maxWidth + AndroidUtilities.dp(4),Layout.Alignment.ALIGN_NORMAL,1.0f,0.0f,false);\n    }\n  }\n  if (captionLayout != null) {\n    captionY=descriptionY;\n    descriptionY+=captionLayout.getLineBottom(captionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n    description2Y=descriptionY;\n  }\n  if (!links.isEmpty()) {\n    for (int a=0; a < links.size(); a++) {\n      try {\n        String link=links.get(a);\n        int width=(int)Math.ceil(descriptionTextPaint.measureText(link));\n        CharSequence linkFinal=TextUtils.ellipsize(link.replace('\\n',' '),descriptionTextPaint,Math.min(width,maxWidth),TextUtils.TruncateAt.MIDDLE);\n        StaticLayout layout=new StaticLayout(linkFinal,descriptionTextPaint,maxWidth,Layout.Alignment.ALIGN_NORMAL,1.0f,0.0f,false);\n        linkY=description2Y;\n        if (descriptionLayout2 != null && descriptionLayout2.getLineCount() != 0) {\n          linkY+=descriptionLayout2.getLineBottom(descriptionLayout2.getLineCount() - 1) + AndroidUtilities.dp(5);\n        }\n        linkLayout.add(layout);\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n    }\n  }\n  int maxPhotoWidth=AndroidUtilities.dp(52);\n  int x=LocaleController.isRTL ? MeasureSpec.getSize(widthMeasureSpec) - AndroidUtilities.dp(10) - maxPhotoWidth : AndroidUtilities.dp(10);\n  letterDrawable.setBounds(x,AndroidUtilities.dp(11),x + maxPhotoWidth,AndroidUtilities.dp(63));\n  if (hasPhoto) {\n    TLRPC.PhotoSize currentPhotoObject=FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs,maxPhotoWidth,true);\n    TLRPC.PhotoSize currentPhotoObjectThumb=FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs,80);\n    if (currentPhotoObjectThumb == currentPhotoObject) {\n      currentPhotoObjectThumb=null;\n    }\n    currentPhotoObject.size=-1;\n    if (currentPhotoObjectThumb != null) {\n      currentPhotoObjectThumb.size=-1;\n    }\n    linkImageView.setImageCoords(x,AndroidUtilities.dp(11),maxPhotoWidth,maxPhotoWidth);\n    String fileName=FileLoader.getAttachFileName(currentPhotoObject);\n    String filter=String.format(Locale.US,\"%d_%d\",maxPhotoWidth,maxPhotoWidth);\n    String thumbFilter=String.format(Locale.US,\"%d_%d_b\",maxPhotoWidth,maxPhotoWidth);\n    linkImageView.setImage(ImageLocation.getForObject(currentPhotoObject,message.photoThumbsObject),filter,ImageLocation.getForObject(currentPhotoObjectThumb,message.photoThumbsObject),thumbFilter,0,null,message,0);\n    drawLinkImageView=true;\n  }\n  if (viewType == VIEW_TYPE_GLOBAL_SEARCH) {\n    fromInfoLayout=ChatMessageCell.generateStaticLayout(FilteredSearchView.createFromInfoString(message),description2TextPaint,maxWidth,maxWidth,0,desctiptionLines);\n  }\n  int height=0;\n  if (titleLayout != null && titleLayout.getLineCount() != 0) {\n    height+=titleLayout.getLineBottom(titleLayout.getLineCount() - 1) + AndroidUtilities.dp(4);\n  }\n  if (captionLayout != null && captionLayout.getLineCount() != 0) {\n    height+=captionLayout.getLineBottom(captionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n  }\n  if (descriptionLayout != null && descriptionLayout.getLineCount() != 0) {\n    height+=descriptionLayout.getLineBottom(descriptionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n  }\n  if (descriptionLayout2 != null && descriptionLayout2.getLineCount() != 0) {\n    height+=descriptionLayout2.getLineBottom(descriptionLayout2.getLineCount() - 1) + AndroidUtilities.dp(5);\n    if (descriptionLayout != null) {\n      height+=AndroidUtilities.dp(10);\n    }\n  }\n  int linksHeight=0;\n  for (int a=0; a < linkLayout.size(); a++) {\n    StaticLayout layout=linkLayout.get(a);\n    if (layout.getLineCount() > 0) {\n      linksHeight+=layout.getLineBottom(layout.getLineCount() - 1);\n    }\n  }\n  height+=linksHeight;\n  if (fromInfoLayout != null) {\n    fromInfoLayoutY=linkY + linksHeight + AndroidUtilities.dp(5);\n    height+=fromInfoLayout.getLineBottom(fromInfoLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n  }\n  checkBox.measure(MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(24),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(24),MeasureSpec.EXACTLY));\n  setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec),Math.max(AndroidUtilities.dp(76),height + AndroidUtilities.dp(17)) + (needDivider ? 1 : 0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1718,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 13459,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 441,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressLint(\"DrawAllocation\") @Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  drawLinkImageView=false;\n  descriptionLayout=null;\n  titleLayout=null;\n  descriptionLayout2=null;\n  captionLayout=null;\n  linkLayout.clear();\n  links.clear();\n  int maxWidth=MeasureSpec.getSize(widthMeasureSpec) - AndroidUtilities.dp(AndroidUtilities.leftBaseline) - AndroidUtilities.dp(8);\n  String title=null;\n  String description=null;\n  String description2=null;\n  String webPageLink=null;\n  boolean hasPhoto=false;\n  if (message.messageOwner.media instanceof TLRPC.TL_messageMediaWebPage && message.messageOwner.media.webpage instanceof TLRPC.TL_webPage) {\n    TLRPC.WebPage webPage=message.messageOwner.media.webpage;\n    if (message.photoThumbs == null && webPage.photo != null) {\n      message.generateThumbs(true);\n    }\n    hasPhoto=webPage.photo != null && message.photoThumbs != null;\n    title=webPage.title;\n    if (title == null) {\n      title=webPage.site_name;\n    }\n    description=webPage.description;\n    webPageLink=webPage.url;\n  }\n  if (message != null && !message.messageOwner.entities.isEmpty()) {\n    for (int a=0; a < message.messageOwner.entities.size(); a++) {\n      TLRPC.MessageEntity entity=message.messageOwner.entities.get(a);\n      if (entity.length <= 0 || entity.offset < 0 || entity.offset >= message.messageOwner.message.length()) {\n        continue;\n      }\n else       if (entity.offset + entity.length > message.messageOwner.message.length()) {\n        entity.length=message.messageOwner.message.length() - entity.offset;\n      }\n      if (a == 0 && webPageLink != null && !(entity.offset == 0 && entity.length == message.messageOwner.message.length())) {\n        if (message.messageOwner.entities.size() == 1) {\n          if (description == null) {\n            description2=message.messageOwner.message;\n          }\n        }\n else {\n          description2=message.messageOwner.message;\n        }\n      }\n      try {\n        String link=null;\n        if (entity instanceof TLRPC.TL_messageEntityTextUrl || entity instanceof TLRPC.TL_messageEntityUrl) {\n          if (entity instanceof TLRPC.TL_messageEntityUrl) {\n            link=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n          }\n else {\n            link=entity.url;\n          }\n          if (title == null || title.length() == 0) {\n            title=link;\n            Uri uri=Uri.parse(title);\n            title=uri.getHost();\n            if (title == null) {\n              title=link;\n            }\n            int index;\n            if (title != null && (index=title.lastIndexOf('.')) >= 0) {\n              title=title.substring(0,index);\n              if ((index=title.lastIndexOf('.')) >= 0) {\n                title=title.substring(index + 1);\n              }\n              title=title.substring(0,1).toUpperCase() + title.substring(1);\n            }\n            if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n              description=message.messageOwner.message;\n            }\n          }\n        }\n else         if (entity instanceof TLRPC.TL_messageEntityEmail) {\n          if (title == null || title.length() == 0) {\n            link=\"mailto:\" + message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n            title=message.messageOwner.message.substring(entity.offset,entity.offset + entity.length);\n            if (entity.offset != 0 || entity.length != message.messageOwner.message.length()) {\n              description=message.messageOwner.message;\n            }\n          }\n        }\n        if (link != null) {\n          if (!link.contains(\"://\") && link.toLowerCase().indexOf(\"http\") != 0 && link.toLowerCase().indexOf(\"mailto\") != 0) {\n            links.add(\"http://\" + link);\n          }\n else {\n            links.add(link);\n          }\n        }\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n    }\n  }\n  if (webPageLink != null && links.isEmpty()) {\n    links.add(webPageLink);\n  }\n  int dateWidth=0;\n  if (viewType == VIEW_TYPE_GLOBAL_SEARCH) {\n    String str=LocaleController.stringForMessageListDate(message.messageOwner.date);\n    int width=(int)Math.ceil(description2TextPaint.measureText(str));\n    dateLayout=ChatMessageCell.generateStaticLayout(str,description2TextPaint,width,width,0,1);\n    dateLayoutX=maxWidth - width - AndroidUtilities.dp(8);\n    dateWidth=width + AndroidUtilities.dp(12);\n  }\n  if (title != null) {\n    try {\n      CharSequence titleFinal=title;\n      CharSequence titleH=AndroidUtilities.highlightText(titleFinal,message.highlightedWords);\n      if (titleH != null) {\n        titleFinal=titleH;\n      }\n      titleLayout=ChatMessageCell.generateStaticLayout(titleFinal,titleTextPaint,maxWidth - dateWidth - AndroidUtilities.dp(4),maxWidth - dateWidth - AndroidUtilities.dp(4),0,3);\n      if (titleLayout.getLineCount() > 0) {\n        descriptionY=titleY + titleLayout.getLineBottom(titleLayout.getLineCount() - 1) + AndroidUtilities.dp(4);\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    letterDrawable.setTitle(title);\n  }\n  description2Y=descriptionY;\n  int desctiptionLines=Math.max(1,4 - (titleLayout != null ? titleLayout.getLineCount() : 0));\n  if (viewType == VIEW_TYPE_GLOBAL_SEARCH) {\n    description=null;\n    description2=null;\n  }\n  if (description != null) {\n    try {\n      descriptionLayout=ChatMessageCell.generateStaticLayout(description,descriptionTextPaint,maxWidth,maxWidth,0,desctiptionLines);\n      if (descriptionLayout.getLineCount() > 0) {\n        description2Y=descriptionY + descriptionLayout.getLineBottom(descriptionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n  if (description2 != null) {\n    try {\n      descriptionLayout2=ChatMessageCell.generateStaticLayout(description2,descriptionTextPaint,maxWidth,maxWidth,0,desctiptionLines);\n      if (descriptionLayout != null) {\n        description2Y+=AndroidUtilities.dp(10);\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n  if (message != null && !TextUtils.isEmpty(message.messageOwner.message)) {\n    CharSequence caption=Emoji.replaceEmoji(message.messageOwner.message.replace(\"\\n\",\" \").replaceAll(\" +\",\" \").trim(),Theme.chat_msgTextPaint.getFontMetricsInt(),AndroidUtilities.dp(20),false);\n    CharSequence sequence=AndroidUtilities.highlightText(caption,message.highlightedWords);\n    if (sequence != null) {\n      sequence=TextUtils.ellipsize(AndroidUtilities.ellipsizeCenterEnd(sequence,message.highlightedWords.get(0),maxWidth,captionTextPaint,130),captionTextPaint,maxWidth,TextUtils.TruncateAt.END);\n      captionLayout=new StaticLayout(sequence,captionTextPaint,maxWidth + AndroidUtilities.dp(4),Layout.Alignment.ALIGN_NORMAL,1.0f,0.0f,false);\n    }\n  }\n  if (captionLayout != null) {\n    captionY=descriptionY;\n    descriptionY+=captionLayout.getLineBottom(captionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n    description2Y=descriptionY;\n  }\n  if (!links.isEmpty()) {\n    for (int a=0; a < links.size(); a++) {\n      try {\n        String link=links.get(a);\n        int width=(int)Math.ceil(descriptionTextPaint.measureText(link));\n        CharSequence linkFinal=TextUtils.ellipsize(link.replace('\\n',' '),descriptionTextPaint,Math.min(width,maxWidth),TextUtils.TruncateAt.MIDDLE);\n        StaticLayout layout=new StaticLayout(linkFinal,descriptionTextPaint,maxWidth,Layout.Alignment.ALIGN_NORMAL,1.0f,0.0f,false);\n        linkY=description2Y;\n        if (descriptionLayout2 != null && descriptionLayout2.getLineCount() != 0) {\n          linkY+=descriptionLayout2.getLineBottom(descriptionLayout2.getLineCount() - 1) + AndroidUtilities.dp(5);\n        }\n        linkLayout.add(layout);\n      }\n catch (      Exception e) {\n        FileLog.e(e);\n      }\n    }\n  }\n  int maxPhotoWidth=AndroidUtilities.dp(52);\n  int x=LocaleController.isRTL ? MeasureSpec.getSize(widthMeasureSpec) - AndroidUtilities.dp(10) - maxPhotoWidth : AndroidUtilities.dp(10);\n  letterDrawable.setBounds(x,AndroidUtilities.dp(11),x + maxPhotoWidth,AndroidUtilities.dp(63));\n  if (hasPhoto) {\n    TLRPC.PhotoSize currentPhotoObject=FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs,maxPhotoWidth,true);\n    TLRPC.PhotoSize currentPhotoObjectThumb=FileLoader.getClosestPhotoSizeWithSize(message.photoThumbs,80);\n    if (currentPhotoObjectThumb == currentPhotoObject) {\n      currentPhotoObjectThumb=null;\n    }\n    currentPhotoObject.size=-1;\n    if (currentPhotoObjectThumb != null) {\n      currentPhotoObjectThumb.size=-1;\n    }\n    linkImageView.setImageCoords(x,AndroidUtilities.dp(11),maxPhotoWidth,maxPhotoWidth);\n    String fileName=FileLoader.getAttachFileName(currentPhotoObject);\n    String filter=String.format(Locale.US,\"%d_%d\",maxPhotoWidth,maxPhotoWidth);\n    String thumbFilter=String.format(Locale.US,\"%d_%d_b\",maxPhotoWidth,maxPhotoWidth);\n    linkImageView.setImage(ImageLocation.getForObject(currentPhotoObject,message.photoThumbsObject),filter,ImageLocation.getForObject(currentPhotoObjectThumb,message.photoThumbsObject),thumbFilter,0,null,message,0);\n    drawLinkImageView=true;\n  }\n  if (viewType == VIEW_TYPE_GLOBAL_SEARCH) {\n    fromInfoLayout=ChatMessageCell.generateStaticLayout(FilteredSearchView.createFromInfoString(message),description2TextPaint,maxWidth,maxWidth,0,desctiptionLines);\n  }\n  int height=0;\n  if (titleLayout != null && titleLayout.getLineCount() != 0) {\n    height+=titleLayout.getLineBottom(titleLayout.getLineCount() - 1) + AndroidUtilities.dp(4);\n  }\n  if (captionLayout != null && captionLayout.getLineCount() != 0) {\n    height+=captionLayout.getLineBottom(captionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n  }\n  if (descriptionLayout != null && descriptionLayout.getLineCount() != 0) {\n    height+=descriptionLayout.getLineBottom(descriptionLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n  }\n  if (descriptionLayout2 != null && descriptionLayout2.getLineCount() != 0) {\n    height+=descriptionLayout2.getLineBottom(descriptionLayout2.getLineCount() - 1) + AndroidUtilities.dp(5);\n    if (descriptionLayout != null) {\n      height+=AndroidUtilities.dp(10);\n    }\n  }\n  int linksHeight=0;\n  for (int a=0; a < linkLayout.size(); a++) {\n    StaticLayout layout=linkLayout.get(a);\n    if (layout.getLineCount() > 0) {\n      linksHeight+=layout.getLineBottom(layout.getLineCount() - 1);\n    }\n  }\n  height+=linksHeight;\n  if (fromInfoLayout != null) {\n    fromInfoLayoutY=linkY + linksHeight + AndroidUtilities.dp(5);\n    height+=fromInfoLayout.getLineBottom(fromInfoLayout.getLineCount() - 1) + AndroidUtilities.dp(5);\n  }\n  checkBox.measure(MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(24),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(24),MeasureSpec.EXACTLY));\n  setMeasuredDimension(MeasureSpec.getSize(widthMeasureSpec),Math.max(AndroidUtilities.dp(76),height + AndroidUtilities.dp(17)) + (needDivider ? 1 : 0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1733,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 253,
        "startColumnNumber" : 28,
        "endLineNumber" : 253,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Uri uri=Uri.parse(title);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 253,
    "startColumnNumber" : 38,
    "endLineNumber" : 253,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}