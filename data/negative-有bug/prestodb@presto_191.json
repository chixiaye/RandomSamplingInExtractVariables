{
  "id" : 191,
  "expression" : "BIGINT",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-product-tests/src/main/java/com/facebook/presto/tests/hive/TestAllDatatypesFromHiveConnector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BIGINT",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 260,
      "startColumnNumber" : 16,
      "endLineNumber" : 260,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 258,
        "startColumnNumber" : 8,
        "endLineNumber" : 271,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertThat(queryResult).hasColumns(INTEGER,BIGINT,REAL,DOUBLE,DECIMAL,DECIMAL,TIMESTAMP,DATE,VARCHAR,VARCHAR,CHAR,BOOLEAN,VARBINARY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 258,
        "startColumnNumber" : 8,
        "endLineNumber" : 271,
        "endColumnNumber" : 27
      },
      "nodeContext" : "assertThat(queryResult).hasColumns(INTEGER,BIGINT,REAL,DOUBLE,DECIMAL,DECIMAL,TIMESTAMP,DATE,VARCHAR,VARCHAR,CHAR,BOOLEAN,VARBINARY);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2643,
        "startLineNumber" : 222,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String tableName=mutableTableInstanceOf(ALL_HIVE_SIMPLE_TYPES_AVRO).getNameInDatabase();\n  onHive().executeQuery(format(\"INSERT INTO %s VALUES(\" + \"2147483647,\" + \"9223372036854775807,\"+ \"123.345,\"+ \"234.567,\"+ \"346,\"+ \"345.67800,\"+ \"'\" + Timestamp.valueOf(LocalDateTime.of(2015,5,10,12,15,35,123_000_000)).toString() + \"',\"+ \"'\"+ Date.valueOf(\"2015-05-10\")+ \"',\"+ \"'ala ma kota',\"+ \"'ala ma kot',\"+ \"'ala ma    ',\"+ \"true,\"+ \"'kot binarny'\"+ \")\",tableName));\n  assertThat(query(\"SHOW COLUMNS FROM \" + tableName).project(1,2)).containsExactly(row(\"c_int\",\"integer\"),row(\"c_bigint\",\"bigint\"),row(\"c_float\",\"real\"),row(\"c_double\",\"double\"),row(\"c_decimal\",\"decimal(10,0)\"),row(\"c_decimal_w_params\",\"decimal(10,5)\"),row(\"c_timestamp\",\"timestamp\"),row(\"c_date\",\"date\"),row(\"c_string\",\"varchar\"),row(\"c_varchar\",\"varchar(10)\"),row(\"c_char\",\"char(10)\"),row(\"c_boolean\",\"boolean\"),row(\"c_binary\",\"varbinary\"));\n  QueryResult queryResult=query(\"SELECT * FROM \" + tableName);\n  assertThat(queryResult).hasColumns(INTEGER,BIGINT,REAL,DOUBLE,DECIMAL,DECIMAL,TIMESTAMP,DATE,VARCHAR,VARCHAR,CHAR,BOOLEAN,VARBINARY);\n  assertThat(queryResult).containsOnly(row(2147483647,9223372036854775807L,123.345f,234.567,new BigDecimal(\"346\"),new BigDecimal(\"345.67800\"),Timestamp.valueOf(LocalDateTime.of(2015,5,10,12,15,35,123_000_000)),Date.valueOf(\"2015-05-10\"),\"ala ma kota\",\"ala ma kot\",\"ala ma    \",true,\"kot binarny\".getBytes()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2772,
        "startLineNumber" : 219,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Requires(AvroRequirements.class) @Test(groups={JDBC,SKIP_ON_CDH,AVRO}) public void testSelectAllDatatypesAvro(){\n  String tableName=mutableTableInstanceOf(ALL_HIVE_SIMPLE_TYPES_AVRO).getNameInDatabase();\n  onHive().executeQuery(format(\"INSERT INTO %s VALUES(\" + \"2147483647,\" + \"9223372036854775807,\"+ \"123.345,\"+ \"234.567,\"+ \"346,\"+ \"345.67800,\"+ \"'\" + Timestamp.valueOf(LocalDateTime.of(2015,5,10,12,15,35,123_000_000)).toString() + \"',\"+ \"'\"+ Date.valueOf(\"2015-05-10\")+ \"',\"+ \"'ala ma kota',\"+ \"'ala ma kot',\"+ \"'ala ma    ',\"+ \"true,\"+ \"'kot binarny'\"+ \")\",tableName));\n  assertThat(query(\"SHOW COLUMNS FROM \" + tableName).project(1,2)).containsExactly(row(\"c_int\",\"integer\"),row(\"c_bigint\",\"bigint\"),row(\"c_float\",\"real\"),row(\"c_double\",\"double\"),row(\"c_decimal\",\"decimal(10,0)\"),row(\"c_decimal_w_params\",\"decimal(10,5)\"),row(\"c_timestamp\",\"timestamp\"),row(\"c_date\",\"date\"),row(\"c_string\",\"varchar\"),row(\"c_varchar\",\"varchar(10)\"),row(\"c_char\",\"char(10)\"),row(\"c_boolean\",\"boolean\"),row(\"c_binary\",\"varbinary\"));\n  QueryResult queryResult=query(\"SELECT * FROM \" + tableName);\n  assertThat(queryResult).hasColumns(INTEGER,BIGINT,REAL,DOUBLE,DECIMAL,DECIMAL,TIMESTAMP,DATE,VARCHAR,VARCHAR,CHAR,BOOLEAN,VARBINARY);\n  assertThat(queryResult).containsOnly(row(2147483647,9223372036854775807L,123.345f,234.567,new BigDecimal(\"346\"),new BigDecimal(\"345.67800\"),Timestamp.valueOf(LocalDateTime.of(2015,5,10,12,15,35,123_000_000)),Date.valueOf(\"2015-05-10\"),\"ala ma kota\",\"ala ma kot\",\"ala ma    \",true,\"kot binarny\".getBytes()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 258,
        "startColumnNumber" : 8,
        "endLineNumber" : 271,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertThat(queryResult).hasColumns(INTEGER,BIGINT,REAL,DOUBLE,DECIMAL,DECIMAL,TIMESTAMP,DATE,VARCHAR,VARCHAR,CHAR,BOOLEAN,VARBINARY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.sql.JDBCType"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 260,
    "startColumnNumber" : 16,
    "endLineNumber" : 260,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}