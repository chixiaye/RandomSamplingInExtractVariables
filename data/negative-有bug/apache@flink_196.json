{
  "id" : 196,
  "expression" : "semProps.getForwardingTargetFields(0,0).size() == 0",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-java/src/test/java/org/apache/flink/api/java/operator/JoinOperatorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "semProps.getForwardingTargetFields(0,0).size() == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 1096,
      "startColumnNumber" : 19,
      "endLineNumber" : 1096,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 1096,
        "startColumnNumber" : 8,
        "endLineNumber" : 1096,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertTrue(semProps.getForwardingTargetFields(0,0).size() == 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 1096,
        "startColumnNumber" : 8,
        "endLineNumber" : 1096,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertTrue(semProps.getForwardingTargetFields(0,0).size() == 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2532,
        "startLineNumber" : 1080,
        "startColumnNumber" : 52,
        "endLineNumber" : 1125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  DataSet<Tuple5<Integer,Long,String,Long,Integer>> tupleDs1=env.fromCollection(emptyTupleData,tupleTypeInfo);\n  DataSet<Tuple5<Integer,Long,String,Long,Integer>> tupleDs2=env.fromCollection(emptyTupleData,tupleTypeInfo);\n  JoinOperator<?,?,?> joinOp=tupleDs1.join(tupleDs2).where(new DummyTestKeySelector()).equalTo(new DummyTestKeySelector()).with(new DummyTestJoinFunction1());\n  SemanticProperties semProps=joinOp.getSemanticProperties();\n  assertTrue(semProps.getForwardingTargetFields(0,0).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,1).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,2).size() == 1);\n  assertTrue(semProps.getForwardingTargetFields(0,2).contains(4));\n  assertTrue(semProps.getForwardingTargetFields(0,3).size() == 2);\n  assertTrue(semProps.getForwardingTargetFields(0,3).contains(1));\n  assertTrue(semProps.getForwardingTargetFields(0,3).contains(3));\n  assertTrue(semProps.getForwardingTargetFields(0,4).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,5).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,6).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,0).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,1).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,2).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,3).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,4).size() == 1);\n  assertTrue(semProps.getForwardingTargetFields(1,4).contains(2));\n  assertTrue(semProps.getForwardingTargetFields(1,5).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,6).size() == 1);\n  assertTrue(semProps.getForwardingTargetFields(1,6).contains(0));\n  assertTrue(semProps.getReadFields(0).size() == 3);\n  assertTrue(semProps.getReadFields(0).contains(2));\n  assertTrue(semProps.getReadFields(0).contains(4));\n  assertTrue(semProps.getReadFields(0).contains(6));\n  assertTrue(semProps.getReadFields(1).size() == 2);\n  assertTrue(semProps.getReadFields(1).contains(3));\n  assertTrue(semProps.getReadFields(1).contains(5));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 389,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2590,
        "startLineNumber" : 1079,
        "startColumnNumber" : 4,
        "endLineNumber" : 1125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSemanticPropsWithKeySelector1(){\n  final ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  DataSet<Tuple5<Integer,Long,String,Long,Integer>> tupleDs1=env.fromCollection(emptyTupleData,tupleTypeInfo);\n  DataSet<Tuple5<Integer,Long,String,Long,Integer>> tupleDs2=env.fromCollection(emptyTupleData,tupleTypeInfo);\n  JoinOperator<?,?,?> joinOp=tupleDs1.join(tupleDs2).where(new DummyTestKeySelector()).equalTo(new DummyTestKeySelector()).with(new DummyTestJoinFunction1());\n  SemanticProperties semProps=joinOp.getSemanticProperties();\n  assertTrue(semProps.getForwardingTargetFields(0,0).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,1).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,2).size() == 1);\n  assertTrue(semProps.getForwardingTargetFields(0,2).contains(4));\n  assertTrue(semProps.getForwardingTargetFields(0,3).size() == 2);\n  assertTrue(semProps.getForwardingTargetFields(0,3).contains(1));\n  assertTrue(semProps.getForwardingTargetFields(0,3).contains(3));\n  assertTrue(semProps.getForwardingTargetFields(0,4).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,5).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(0,6).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,0).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,1).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,2).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,3).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,4).size() == 1);\n  assertTrue(semProps.getForwardingTargetFields(1,4).contains(2));\n  assertTrue(semProps.getForwardingTargetFields(1,5).size() == 0);\n  assertTrue(semProps.getForwardingTargetFields(1,6).size() == 1);\n  assertTrue(semProps.getForwardingTargetFields(1,6).contains(0));\n  assertTrue(semProps.getReadFields(0).size() == 3);\n  assertTrue(semProps.getReadFields(0).contains(2));\n  assertTrue(semProps.getReadFields(0).contains(4));\n  assertTrue(semProps.getReadFields(0).contains(6));\n  assertTrue(semProps.getReadFields(1).size() == 2);\n  assertTrue(semProps.getReadFields(1).contains(3));\n  assertTrue(semProps.getReadFields(1).contains(5));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 395,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 1096,
        "startColumnNumber" : 8,
        "endLineNumber" : 1096,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertTrue(semProps.getForwardingTargetFields(0,0).size() == 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 1096,
    "startColumnNumber" : 19,
    "endLineNumber" : 1096,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}