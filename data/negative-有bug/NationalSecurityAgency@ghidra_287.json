{
  "id" : 287,
  "expression" : "currentAndList",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/Docking/src/main/java/docking/widgets/table/columnfilter/ColumnBasedTableFilter.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "currentAndList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 84,
      "startColumnNumber" : 25,
      "endLineNumber" : 84,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 40
      },
      "nodeContext" : "localOrList.addAndList(currentAndList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 41
      },
      "nodeContext" : "localOrList.addAndList(currentAndList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Organizes the list of constraint sets into groups that will first be \"ANDed\" together, then those \"AND\" groups will be \"ORed\" together.\n * @return the list of \"AND\" groups that will be \"ORed\" together.\n */\nprivate OrList buildOrList(){\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 41
      },
      "nodeContext" : "localOrList.addAndList(currentAndList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>.AndList"
  }, {
    "nodeContext" : "currentAndList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 85,
      "startColumnNumber" : 2,
      "endLineNumber" : 85,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 56
      },
      "nodeContext" : "currentAndList.addConstraintSet(constraintSets.get(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 57
      },
      "nodeContext" : "currentAndList.addConstraintSet(constraintSets.get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Organizes the list of constraint sets into groups that will first be \"ANDed\" together, then those \"AND\" groups will be \"ORed\" together.\n * @return the list of \"AND\" groups that will be \"ORed\" together.\n */\nprivate OrList buildOrList(){\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 57
      },
      "nodeContext" : "currentAndList.addConstraintSet(constraintSets.get(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>.AndList"
  }, {
    "nodeContext" : "currentAndList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 92,
      "startColumnNumber" : 27,
      "endLineNumber" : 92,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 42
      },
      "nodeContext" : "localOrList.addAndList(currentAndList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 43
      },
      "nodeContext" : "localOrList.addAndList(currentAndList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 90,
        "startColumnNumber" : 69,
        "endLineNumber" : 93,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 90,
        "startColumnNumber" : 3,
        "endLineNumber" : 93,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n  currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 87,
        "startColumnNumber" : 50,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n  if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n    currentAndList=new AndList();\n    localOrList.addAndList(currentAndList);\n  }\n  currentAndList.addConstraintSet(columnConstraintSet);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=1; i < constraintSets.size(); i++) {\n  ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n  if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n    currentAndList=new AndList();\n    localOrList.addAndList(currentAndList);\n  }\n  currentAndList.addConstraintSet(columnConstraintSet);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Organizes the list of constraint sets into groups that will first be \"ANDed\" together, then those \"AND\" groups will be \"ORed\" together.\n * @return the list of \"AND\" groups that will be \"ORed\" together.\n */\nprivate OrList buildOrList(){\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 43
      },
      "nodeContext" : "localOrList.addAndList(currentAndList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>.AndList"
  }, {
    "nodeContext" : "currentAndList",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 94,
      "startColumnNumber" : 3,
      "endLineNumber" : 94,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 94,
        "endColumnNumber" : 55
      },
      "nodeContext" : "currentAndList.addConstraintSet(columnConstraintSet)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "currentAndList.addConstraintSet(columnConstraintSet);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 87,
        "startColumnNumber" : 50,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n  if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n    currentAndList=new AndList();\n    localOrList.addAndList(currentAndList);\n  }\n  currentAndList.addConstraintSet(columnConstraintSet);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=1; i < constraintSets.size(); i++) {\n  ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n  if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n    currentAndList=new AndList();\n    localOrList.addAndList(currentAndList);\n  }\n  currentAndList.addConstraintSet(columnConstraintSet);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Organizes the list of constraint sets into groups that will first be \"ANDed\" together, then those \"AND\" groups will be \"ORed\" together.\n * @return the list of \"AND\" groups that will be \"ORed\" together.\n */\nprivate OrList buildOrList(){\n  OrList localOrList=new OrList();\n  if (constraintSets.isEmpty()) {\n    return localOrList;\n  }\n  AndList currentAndList=new AndList();\n  localOrList.addAndList(currentAndList);\n  currentAndList.addConstraintSet(constraintSets.get(0));\n  for (int i=1; i < constraintSets.size(); i++) {\n    ColumnConstraintSet<R,?> columnConstraintSet=constraintSets.get(i);\n    if (columnConstraintSet.getLogicOperation() == LogicOperation.OR) {\n      currentAndList=new AndList();\n      localOrList.addAndList(currentAndList);\n    }\n    currentAndList.addConstraintSet(columnConstraintSet);\n  }\n  return localOrList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "currentAndList.addConstraintSet(columnConstraintSet);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "docking.widgets.table.columnfilter.ColumnBasedTableFilter<R>.AndList"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 84,
    "startColumnNumber" : 25,
    "endLineNumber" : 84,
    "endColumnNumber" : 39
  }, {
    "charLength" : 14,
    "startLineNumber" : 85,
    "startColumnNumber" : 2,
    "endLineNumber" : 85,
    "endColumnNumber" : 16
  }, {
    "charLength" : 14,
    "startLineNumber" : 92,
    "startColumnNumber" : 27,
    "endLineNumber" : 92,
    "endColumnNumber" : 41
  }, {
    "charLength" : 14,
    "startLineNumber" : 94,
    "startColumnNumber" : 3,
    "endLineNumber" : 94,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}