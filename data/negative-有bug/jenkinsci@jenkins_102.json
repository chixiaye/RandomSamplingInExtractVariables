{
  "id" : 102,
  "expression" : "loc.toString()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/security/ClassFilterImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "loc.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 275,
      "startColumnNumber" : 19,
      "endLineNumber" : 275,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 275,
        "startColumnNumber" : 15,
        "endLineNumber" : 275,
        "endColumnNumber" : 33
      },
      "nodeContext" : "r=loc.toString()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 275,
        "startColumnNumber" : 8,
        "endLineNumber" : 275,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String r=loc.toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 266,
        "startColumnNumber" : 72,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CodeSource cs=c.getProtectionDomain().getCodeSource();\n  if (cs == null) {\n    return null;\n  }\n  URL loc=cs.getLocation();\n  if (loc == null) {\n    return null;\n  }\n  String r=loc.toString();\n  if (r.endsWith(\".class\")) {\n    String suffix=c.getName().replace('.','/') + \".class\";\n    if (r.endsWith(suffix)) {\n      r=r.substring(0,r.length() - suffix.length());\n    }\n  }\n  if (r.startsWith(\"jar:file:/\") && r.endsWith(\".jar!/\")) {\n    r=r.substring(4,r.length() - 2);\n  }\n  return r;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 258,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tries to determine what JAR file a given class was loaded from. The location is an opaque string suitable only for comparison to others. Similar to  {@link Which#jarFile(Class)} but potentially faster, and more tolerant of unknown URL formats.\n * @param c some class\n * @return something typically like {@code file:/â€¦/plugins/structs/WEB-INF/lib/structs-1.10.jar}; or null for classes in the Java Platform, some generated classes, etc.\n */\nprivate static @CheckForNull String codeSource(@NonNull Class<?> c){\n  CodeSource cs=c.getProtectionDomain().getCodeSource();\n  if (cs == null) {\n    return null;\n  }\n  URL loc=cs.getLocation();\n  if (loc == null) {\n    return null;\n  }\n  String r=loc.toString();\n  if (r.endsWith(\".class\")) {\n    String suffix=c.getName().replace('.','/') + \".class\";\n    if (r.endsWith(suffix)) {\n      r=r.substring(0,r.length() - suffix.length());\n    }\n  }\n  if (r.startsWith(\"jar:file:/\") && r.endsWith(\".jar!/\")) {\n    r=r.substring(4,r.length() - 2);\n  }\n  return r;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 275,
        "startColumnNumber" : 8,
        "endLineNumber" : 275,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String r=loc.toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 275,
    "startColumnNumber" : 19,
    "endLineNumber" : 275,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}