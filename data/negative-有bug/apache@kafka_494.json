{
  "id" : 494,
  "expression" : "ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8)))",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/network/NetworkTestUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8)))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 94,
      "startLineNumber" : 73,
      "startColumnNumber" : 44,
      "endLineNumber" : 73,
      "endColumnNumber" : 138
    },
    "astNodeNumber" : 15,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 73,
        "startColumnNumber" : 22,
        "endLineNumber" : 73,
        "endColumnNumber" : 139
      },
      "nodeContext" : "new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8))))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 140
      },
      "nodeContext" : "selector.send(new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8)))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 141
      },
      "nodeContext" : "selector.send(new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8)))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 132,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  waitForChannelReady(selector,node);\n  String prefix=TestUtils.randomString(minMessageSize);\n  int requests=0;\n  int responses=0;\n  selector.send(new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8)))));\n  requests++;\n  while (responses < messageCount) {\n    selector.poll(0L);\n    assertEquals(0,selector.disconnected().size(),\"No disconnects should have occurred .\" + selector.disconnected());\n    for (    NetworkReceive receive : selector.completedReceives()) {\n      assertEquals(prefix + \"-\" + responses,new String(Utils.toArray(receive.payload()),StandardCharsets.UTF_8));\n      responses++;\n    }\n    for (int i=0; i < selector.completedSends().size() && requests < messageCount && selector.isChannelReady(node); i++, requests++) {\n      selector.send(new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-\" + requests).getBytes()))));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1213,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void checkClientConnection(Selector selector,String node,int minMessageSize,int messageCount) throws Exception {\n  waitForChannelReady(selector,node);\n  String prefix=TestUtils.randomString(minMessageSize);\n  int requests=0;\n  int responses=0;\n  selector.send(new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8)))));\n  requests++;\n  while (responses < messageCount) {\n    selector.poll(0L);\n    assertEquals(0,selector.disconnected().size(),\"No disconnects should have occurred .\" + selector.disconnected());\n    for (    NetworkReceive receive : selector.completedReceives()) {\n      assertEquals(prefix + \"-\" + responses,new String(Utils.toArray(receive.payload()),StandardCharsets.UTF_8));\n      responses++;\n    }\n    for (int i=0; i < selector.completedSends().size() && requests < messageCount && selector.isChannelReady(node); i++, requests++) {\n      selector.send(new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-\" + requests).getBytes()))));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 141
      },
      "nodeContext" : "selector.send(new NetworkSend(node,ByteBufferSend.sizePrefixed(ByteBuffer.wrap((prefix + \"-0\").getBytes(StandardCharsets.UTF_8)))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    },
    "tokenLength" : 11,
    "type" : "org.apache.kafka.common.network.ByteBufferSend"
  } ],
  "positionList" : [ {
    "charLength" : 94,
    "startLineNumber" : 73,
    "startColumnNumber" : 44,
    "endLineNumber" : 73,
    "endColumnNumber" : 138
  } ],
  "layoutRelationDataList" : [ ]
}