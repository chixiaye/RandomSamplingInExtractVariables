{
  "id" : 228,
  "expression" : "parameter",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parameter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 210,
      "startColumnNumber" : 16,
      "endLineNumber" : 210,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 210,
        "startColumnNumber" : 16,
        "endLineNumber" : 210,
        "endColumnNumber" : 37
      },
      "nodeContext" : "parameter.getSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 210,
        "startColumnNumber" : 16,
        "endLineNumber" : 210,
        "endColumnNumber" : 45
      },
      "nodeContext" : "parameter.getSchema() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 212,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (parameter.getSchema() == null) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 209,
        "startColumnNumber" : 47,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Parameter parameter : parameters) {\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2376,
        "startLineNumber" : 203,
        "startColumnNumber" : 90,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2642,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Flatten inline models in parameters\n * @param openAPI target spec\n * @param pathname target pathname\n * @param operation target operation\n */\nprivate void flattenParameters(OpenAPI openAPI,String pathname,Operation operation){\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 210,
        "startColumnNumber" : 16,
        "endLineNumber" : 210,
        "endColumnNumber" : 45
      },
      "nodeContext" : "parameter.getSchema() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.Parameter"
  }, {
    "nodeContext" : "parameter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 214,
      "startColumnNumber" : 27,
      "endLineNumber" : 214,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 214,
        "startColumnNumber" : 27,
        "endLineNumber" : 214,
        "endColumnNumber" : 48
      },
      "nodeContext" : "parameter.getSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 214,
        "endColumnNumber" : 48
      },
      "nodeContext" : "model=parameter.getSchema()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 214,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Schema model=parameter.getSchema();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 209,
        "startColumnNumber" : 47,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Parameter parameter : parameters) {\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2376,
        "startLineNumber" : 203,
        "startColumnNumber" : 90,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2642,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Flatten inline models in parameters\n * @param openAPI target spec\n * @param pathname target pathname\n * @param operation target operation\n */\nprivate void flattenParameters(OpenAPI openAPI,String pathname,Operation operation){\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 214,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Schema model=parameter.getSchema();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.Parameter"
  }, {
    "nodeContext" : "parameter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 220,
      "startColumnNumber" : 76,
      "endLineNumber" : 220,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 220,
        "startColumnNumber" : 76,
        "endLineNumber" : 220,
        "endColumnNumber" : 95
      },
      "nodeContext" : "parameter.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 220,
        "startColumnNumber" : 43,
        "endLineNumber" : 220,
        "endColumnNumber" : 96
      },
      "nodeContext" : "resolveModelName(obj.getTitle(),parameter.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 220,
        "startColumnNumber" : 31,
        "endLineNumber" : 220,
        "endColumnNumber" : 96
      },
      "nodeContext" : "modelName=resolveModelName(obj.getTitle(),parameter.getName())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 220,
        "startColumnNumber" : 24,
        "endLineNumber" : 220,
        "endColumnNumber" : 97
      },
      "nodeContext" : "String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 218,
        "startColumnNumber" : 87,
        "endLineNumber" : 225,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  flattenProperties(openAPI,obj.getProperties(),pathname);\n  String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n  parameter.$ref(modelName);\n  addGenerated(modelName,model);\n  openAPI.getComponents().addSchemas(modelName,model);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 218,
        "startColumnNumber" : 20,
        "endLineNumber" : 225,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n  flattenProperties(openAPI,obj.getProperties(),pathname);\n  String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n  parameter.$ref(modelName);\n  addGenerated(modelName,model);\n  openAPI.getComponents().addSchemas(modelName,model);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 217,
        "startColumnNumber" : 77,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n    flattenProperties(openAPI,obj.getProperties(),pathname);\n    String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n    parameter.$ref(modelName);\n    addGenerated(modelName,model);\n    openAPI.getComponents().addSchemas(modelName,model);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 217,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (obj.getType() == null || \"object\".equals(obj.getType())) {\n  if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n    flattenProperties(openAPI,obj.getProperties(),pathname);\n    String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n    parameter.$ref(modelName);\n    addGenerated(modelName,model);\n    openAPI.getComponents().addSchemas(modelName,model);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 215,
        "startColumnNumber" : 47,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Schema obj=model;\n  if (obj.getType() == null || \"object\".equals(obj.getType())) {\n    if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n      flattenProperties(openAPI,obj.getProperties(),pathname);\n      String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n      parameter.$ref(modelName);\n      addGenerated(modelName,model);\n      openAPI.getComponents().addSchemas(modelName,model);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2028,
        "startLineNumber" : 215,
        "startColumnNumber" : 12,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (model instanceof ObjectSchema) {\n  Schema obj=model;\n  if (obj.getType() == null || \"object\".equals(obj.getType())) {\n    if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n      flattenProperties(openAPI,obj.getProperties(),pathname);\n      String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n      parameter.$ref(modelName);\n      addGenerated(modelName,model);\n      openAPI.getComponents().addSchemas(modelName,model);\n    }\n  }\n}\n else if (model instanceof ArraySchema) {\n  ArraySchema am=(ArraySchema)model;\n  Schema inner=am.getItems();\n  if (inner instanceof ObjectSchema) {\n    ObjectSchema op=(ObjectSchema)inner;\n    if (op.getProperties() != null && op.getProperties().size() > 0) {\n      flattenProperties(openAPI,op.getProperties(),pathname);\n      String modelName=resolveModelName(op.getTitle(),parameter.getName());\n      Schema innerModel=modelFromProperty(openAPI,op,modelName);\n      String existing=matchGenerated(innerModel);\n      if (existing != null) {\n        Schema schema=new Schema().$ref(existing);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n      }\n else {\n        Schema schema=new Schema().$ref(modelName);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n        addGenerated(modelName,innerModel);\n        openAPI.getComponents().addSchemas(modelName,innerModel);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 237,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 209,
        "startColumnNumber" : 47,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Parameter parameter : parameters) {\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2376,
        "startLineNumber" : 203,
        "startColumnNumber" : 90,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2642,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Flatten inline models in parameters\n * @param openAPI target spec\n * @param pathname target pathname\n * @param operation target operation\n */\nprivate void flattenParameters(OpenAPI openAPI,String pathname,Operation operation){\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 220,
        "startColumnNumber" : 24,
        "endLineNumber" : 220,
        "endColumnNumber" : 97
      },
      "nodeContext" : "String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.Parameter"
  }, {
    "nodeContext" : "parameter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 222,
      "startColumnNumber" : 24,
      "endLineNumber" : 222,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 222,
        "startColumnNumber" : 24,
        "endLineNumber" : 222,
        "endColumnNumber" : 49
      },
      "nodeContext" : "parameter.$ref(modelName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 222,
        "startColumnNumber" : 24,
        "endLineNumber" : 222,
        "endColumnNumber" : 50
      },
      "nodeContext" : "parameter.$ref(modelName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 218,
        "startColumnNumber" : 87,
        "endLineNumber" : 225,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  flattenProperties(openAPI,obj.getProperties(),pathname);\n  String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n  parameter.$ref(modelName);\n  addGenerated(modelName,model);\n  openAPI.getComponents().addSchemas(modelName,model);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 218,
        "startColumnNumber" : 20,
        "endLineNumber" : 225,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n  flattenProperties(openAPI,obj.getProperties(),pathname);\n  String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n  parameter.$ref(modelName);\n  addGenerated(modelName,model);\n  openAPI.getComponents().addSchemas(modelName,model);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 217,
        "startColumnNumber" : 77,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n    flattenProperties(openAPI,obj.getProperties(),pathname);\n    String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n    parameter.$ref(modelName);\n    addGenerated(modelName,model);\n    openAPI.getComponents().addSchemas(modelName,model);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 217,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (obj.getType() == null || \"object\".equals(obj.getType())) {\n  if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n    flattenProperties(openAPI,obj.getProperties(),pathname);\n    String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n    parameter.$ref(modelName);\n    addGenerated(modelName,model);\n    openAPI.getComponents().addSchemas(modelName,model);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 215,
        "startColumnNumber" : 47,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Schema obj=model;\n  if (obj.getType() == null || \"object\".equals(obj.getType())) {\n    if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n      flattenProperties(openAPI,obj.getProperties(),pathname);\n      String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n      parameter.$ref(modelName);\n      addGenerated(modelName,model);\n      openAPI.getComponents().addSchemas(modelName,model);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2028,
        "startLineNumber" : 215,
        "startColumnNumber" : 12,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (model instanceof ObjectSchema) {\n  Schema obj=model;\n  if (obj.getType() == null || \"object\".equals(obj.getType())) {\n    if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n      flattenProperties(openAPI,obj.getProperties(),pathname);\n      String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n      parameter.$ref(modelName);\n      addGenerated(modelName,model);\n      openAPI.getComponents().addSchemas(modelName,model);\n    }\n  }\n}\n else if (model instanceof ArraySchema) {\n  ArraySchema am=(ArraySchema)model;\n  Schema inner=am.getItems();\n  if (inner instanceof ObjectSchema) {\n    ObjectSchema op=(ObjectSchema)inner;\n    if (op.getProperties() != null && op.getProperties().size() > 0) {\n      flattenProperties(openAPI,op.getProperties(),pathname);\n      String modelName=resolveModelName(op.getTitle(),parameter.getName());\n      Schema innerModel=modelFromProperty(openAPI,op,modelName);\n      String existing=matchGenerated(innerModel);\n      if (existing != null) {\n        Schema schema=new Schema().$ref(existing);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n      }\n else {\n        Schema schema=new Schema().$ref(modelName);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n        addGenerated(modelName,innerModel);\n        openAPI.getComponents().addSchemas(modelName,innerModel);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 237,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 209,
        "startColumnNumber" : 47,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Parameter parameter : parameters) {\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2376,
        "startLineNumber" : 203,
        "startColumnNumber" : 90,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2642,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Flatten inline models in parameters\n * @param openAPI target spec\n * @param pathname target pathname\n * @param operation target operation\n */\nprivate void flattenParameters(OpenAPI openAPI,String pathname,Operation operation){\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 222,
        "startColumnNumber" : 24,
        "endLineNumber" : 222,
        "endColumnNumber" : 50
      },
      "nodeContext" : "parameter.$ref(modelName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.Parameter"
  }, {
    "nodeContext" : "parameter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 234,
      "startColumnNumber" : 75,
      "endLineNumber" : 234,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 234,
        "startColumnNumber" : 75,
        "endLineNumber" : 234,
        "endColumnNumber" : 94
      },
      "nodeContext" : "parameter.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 234,
        "startColumnNumber" : 43,
        "endLineNumber" : 234,
        "endColumnNumber" : 95
      },
      "nodeContext" : "resolveModelName(op.getTitle(),parameter.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 234,
        "startColumnNumber" : 31,
        "endLineNumber" : 234,
        "endColumnNumber" : 95
      },
      "nodeContext" : "modelName=resolveModelName(op.getTitle(),parameter.getName())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 234,
        "startColumnNumber" : 24,
        "endLineNumber" : 234,
        "endColumnNumber" : 96
      },
      "nodeContext" : "String modelName=resolveModelName(op.getTitle(),parameter.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 232,
        "startColumnNumber" : 85,
        "endLineNumber" : 248,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  flattenProperties(openAPI,op.getProperties(),pathname);\n  String modelName=resolveModelName(op.getTitle(),parameter.getName());\n  Schema innerModel=modelFromProperty(openAPI,op,modelName);\n  String existing=matchGenerated(innerModel);\n  if (existing != null) {\n    Schema schema=new Schema().$ref(existing);\n    schema.setRequired(op.getRequired());\n    am.setItems(schema);\n  }\n else {\n    Schema schema=new Schema().$ref(modelName);\n    schema.setRequired(op.getRequired());\n    am.setItems(schema);\n    addGenerated(modelName,innerModel);\n    openAPI.getComponents().addSchemas(modelName,innerModel);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1060,
        "startLineNumber" : 232,
        "startColumnNumber" : 20,
        "endLineNumber" : 248,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (op.getProperties() != null && op.getProperties().size() > 0) {\n  flattenProperties(openAPI,op.getProperties(),pathname);\n  String modelName=resolveModelName(op.getTitle(),parameter.getName());\n  Schema innerModel=modelFromProperty(openAPI,op,modelName);\n  String existing=matchGenerated(innerModel);\n  if (existing != null) {\n    Schema schema=new Schema().$ref(existing);\n    schema.setRequired(op.getRequired());\n    am.setItems(schema);\n  }\n else {\n    Schema schema=new Schema().$ref(modelName);\n    schema.setRequired(op.getRequired());\n    am.setItems(schema);\n    addGenerated(modelName,innerModel);\n    openAPI.getComponents().addSchemas(modelName,innerModel);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 230,
        "startColumnNumber" : 51,
        "endLineNumber" : 249,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ObjectSchema op=(ObjectSchema)inner;\n  if (op.getProperties() != null && op.getProperties().size() > 0) {\n    flattenProperties(openAPI,op.getProperties(),pathname);\n    String modelName=resolveModelName(op.getTitle(),parameter.getName());\n    Schema innerModel=modelFromProperty(openAPI,op,modelName);\n    String existing=matchGenerated(innerModel);\n    if (existing != null) {\n      Schema schema=new Schema().$ref(existing);\n      schema.setRequired(op.getRequired());\n      am.setItems(schema);\n    }\n else {\n      Schema schema=new Schema().$ref(modelName);\n      schema.setRequired(op.getRequired());\n      am.setItems(schema);\n      addGenerated(modelName,innerModel);\n      openAPI.getComponents().addSchemas(modelName,innerModel);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 230,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (inner instanceof ObjectSchema) {\n  ObjectSchema op=(ObjectSchema)inner;\n  if (op.getProperties() != null && op.getProperties().size() > 0) {\n    flattenProperties(openAPI,op.getProperties(),pathname);\n    String modelName=resolveModelName(op.getTitle(),parameter.getName());\n    Schema innerModel=modelFromProperty(openAPI,op,modelName);\n    String existing=matchGenerated(innerModel);\n    if (existing != null) {\n      Schema schema=new Schema().$ref(existing);\n      schema.setRequired(op.getRequired());\n      am.setItems(schema);\n    }\n else {\n      Schema schema=new Schema().$ref(modelName);\n      schema.setRequired(op.getRequired());\n      am.setItems(schema);\n      addGenerated(modelName,innerModel);\n      openAPI.getComponents().addSchemas(modelName,innerModel);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 227,
        "startColumnNumber" : 53,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ArraySchema am=(ArraySchema)model;\n  Schema inner=am.getItems();\n  if (inner instanceof ObjectSchema) {\n    ObjectSchema op=(ObjectSchema)inner;\n    if (op.getProperties() != null && op.getProperties().size() > 0) {\n      flattenProperties(openAPI,op.getProperties(),pathname);\n      String modelName=resolveModelName(op.getTitle(),parameter.getName());\n      Schema innerModel=modelFromProperty(openAPI,op,modelName);\n      String existing=matchGenerated(innerModel);\n      if (existing != null) {\n        Schema schema=new Schema().$ref(existing);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n      }\n else {\n        Schema schema=new Schema().$ref(modelName);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n        addGenerated(modelName,innerModel);\n        openAPI.getComponents().addSchemas(modelName,innerModel);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 227,
        "startColumnNumber" : 19,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (model instanceof ArraySchema) {\n  ArraySchema am=(ArraySchema)model;\n  Schema inner=am.getItems();\n  if (inner instanceof ObjectSchema) {\n    ObjectSchema op=(ObjectSchema)inner;\n    if (op.getProperties() != null && op.getProperties().size() > 0) {\n      flattenProperties(openAPI,op.getProperties(),pathname);\n      String modelName=resolveModelName(op.getTitle(),parameter.getName());\n      Schema innerModel=modelFromProperty(openAPI,op,modelName);\n      String existing=matchGenerated(innerModel);\n      if (existing != null) {\n        Schema schema=new Schema().$ref(existing);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n      }\n else {\n        Schema schema=new Schema().$ref(modelName);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n        addGenerated(modelName,innerModel);\n        openAPI.getComponents().addSchemas(modelName,innerModel);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 157,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2028,
        "startLineNumber" : 215,
        "startColumnNumber" : 12,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (model instanceof ObjectSchema) {\n  Schema obj=model;\n  if (obj.getType() == null || \"object\".equals(obj.getType())) {\n    if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n      flattenProperties(openAPI,obj.getProperties(),pathname);\n      String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n      parameter.$ref(modelName);\n      addGenerated(modelName,model);\n      openAPI.getComponents().addSchemas(modelName,model);\n    }\n  }\n}\n else if (model instanceof ArraySchema) {\n  ArraySchema am=(ArraySchema)model;\n  Schema inner=am.getItems();\n  if (inner instanceof ObjectSchema) {\n    ObjectSchema op=(ObjectSchema)inner;\n    if (op.getProperties() != null && op.getProperties().size() > 0) {\n      flattenProperties(openAPI,op.getProperties(),pathname);\n      String modelName=resolveModelName(op.getTitle(),parameter.getName());\n      Schema innerModel=modelFromProperty(openAPI,op,modelName);\n      String existing=matchGenerated(innerModel);\n      if (existing != null) {\n        Schema schema=new Schema().$ref(existing);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n      }\n else {\n        Schema schema=new Schema().$ref(modelName);\n        schema.setRequired(op.getRequired());\n        am.setItems(schema);\n        addGenerated(modelName,innerModel);\n        openAPI.getComponents().addSchemas(modelName,innerModel);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 237,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 209,
        "startColumnNumber" : 47,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Parameter parameter : parameters) {\n  if (parameter.getSchema() == null) {\n    continue;\n  }\n  Schema model=parameter.getSchema();\n  if (model instanceof ObjectSchema) {\n    Schema obj=model;\n    if (obj.getType() == null || \"object\".equals(obj.getType())) {\n      if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n        flattenProperties(openAPI,obj.getProperties(),pathname);\n        String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n        parameter.$ref(modelName);\n        addGenerated(modelName,model);\n        openAPI.getComponents().addSchemas(modelName,model);\n      }\n    }\n  }\n else   if (model instanceof ArraySchema) {\n    ArraySchema am=(ArraySchema)model;\n    Schema inner=am.getItems();\n    if (inner instanceof ObjectSchema) {\n      ObjectSchema op=(ObjectSchema)inner;\n      if (op.getProperties() != null && op.getProperties().size() > 0) {\n        flattenProperties(openAPI,op.getProperties(),pathname);\n        String modelName=resolveModelName(op.getTitle(),parameter.getName());\n        Schema innerModel=modelFromProperty(openAPI,op,modelName);\n        String existing=matchGenerated(innerModel);\n        if (existing != null) {\n          Schema schema=new Schema().$ref(existing);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n        }\n else {\n          Schema schema=new Schema().$ref(modelName);\n          schema.setRequired(op.getRequired());\n          am.setItems(schema);\n          addGenerated(modelName,innerModel);\n          openAPI.getComponents().addSchemas(modelName,innerModel);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2376,
        "startLineNumber" : 203,
        "startColumnNumber" : 90,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2642,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 252,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Flatten inline models in parameters\n * @param openAPI target spec\n * @param pathname target pathname\n * @param operation target operation\n */\nprivate void flattenParameters(OpenAPI openAPI,String pathname,Operation operation){\n  List<Parameter> parameters=operation.getParameters();\n  if (parameters == null) {\n    return;\n  }\n  for (  Parameter parameter : parameters) {\n    if (parameter.getSchema() == null) {\n      continue;\n    }\n    Schema model=parameter.getSchema();\n    if (model instanceof ObjectSchema) {\n      Schema obj=model;\n      if (obj.getType() == null || \"object\".equals(obj.getType())) {\n        if (obj.getProperties() != null && obj.getProperties().size() > 0) {\n          flattenProperties(openAPI,obj.getProperties(),pathname);\n          String modelName=resolveModelName(obj.getTitle(),parameter.getName());\n          parameter.$ref(modelName);\n          addGenerated(modelName,model);\n          openAPI.getComponents().addSchemas(modelName,model);\n        }\n      }\n    }\n else     if (model instanceof ArraySchema) {\n      ArraySchema am=(ArraySchema)model;\n      Schema inner=am.getItems();\n      if (inner instanceof ObjectSchema) {\n        ObjectSchema op=(ObjectSchema)inner;\n        if (op.getProperties() != null && op.getProperties().size() > 0) {\n          flattenProperties(openAPI,op.getProperties(),pathname);\n          String modelName=resolveModelName(op.getTitle(),parameter.getName());\n          Schema innerModel=modelFromProperty(openAPI,op,modelName);\n          String existing=matchGenerated(innerModel);\n          if (existing != null) {\n            Schema schema=new Schema().$ref(existing);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n          }\n else {\n            Schema schema=new Schema().$ref(modelName);\n            schema.setRequired(op.getRequired());\n            am.setItems(schema);\n            addGenerated(modelName,innerModel);\n            openAPI.getComponents().addSchemas(modelName,innerModel);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 234,
        "startColumnNumber" : 24,
        "endLineNumber" : 234,
        "endColumnNumber" : 96
      },
      "nodeContext" : "String modelName=resolveModelName(op.getTitle(),parameter.getName());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.Parameter"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 210,
    "startColumnNumber" : 16,
    "endLineNumber" : 210,
    "endColumnNumber" : 25
  }, {
    "charLength" : 9,
    "startLineNumber" : 214,
    "startColumnNumber" : 27,
    "endLineNumber" : 214,
    "endColumnNumber" : 36
  }, {
    "charLength" : 9,
    "startLineNumber" : 220,
    "startColumnNumber" : 76,
    "endLineNumber" : 220,
    "endColumnNumber" : 85
  }, {
    "charLength" : 9,
    "startLineNumber" : 222,
    "startColumnNumber" : 24,
    "endLineNumber" : 222,
    "endColumnNumber" : 33
  }, {
    "charLength" : 9,
    "startLineNumber" : 234,
    "startColumnNumber" : 75,
    "endLineNumber" : 234,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 10
  } ]
}