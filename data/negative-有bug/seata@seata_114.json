{
  "id" : 114,
  "expression" : "SQLUndoLog",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/test/java/io/seata/rm/datasource/undo/UndoExecutorTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SQLUndoLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 94,
      "startColumnNumber" : 8,
      "endLineNumber" : 94,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "SQLUndoLog.setTableName(\"my_test_table\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "SQLUndoLog.setTableName(\"my_test_table\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "SQLUndoLog.setTableName(\"my_test_table\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.seata.rm.datasource.undo.SQLUndoLog"
  }, {
    "nodeContext" : "SQLUndoLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 95,
      "startColumnNumber" : 8,
      "endLineNumber" : 95,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 45
      },
      "nodeContext" : "SQLUndoLog.setSqlType(SQLType.UPDATE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 46
      },
      "nodeContext" : "SQLUndoLog.setSqlType(SQLType.UPDATE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 46
      },
      "nodeContext" : "SQLUndoLog.setSqlType(SQLType.UPDATE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.seata.rm.datasource.undo.SQLUndoLog"
  }, {
    "nodeContext" : "SQLUndoLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 147,
      "startColumnNumber" : 8,
      "endLineNumber" : 147,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 46
      },
      "nodeContext" : "SQLUndoLog.setBeforeImage(beforeImage)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 47
      },
      "nodeContext" : "SQLUndoLog.setBeforeImage(beforeImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 147,
        "endColumnNumber" : 47
      },
      "nodeContext" : "SQLUndoLog.setBeforeImage(beforeImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.seata.rm.datasource.undo.SQLUndoLog"
  }, {
    "nodeContext" : "SQLUndoLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 148,
      "startColumnNumber" : 8,
      "endLineNumber" : 148,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 44
      },
      "nodeContext" : "SQLUndoLog.setAfterImage(afterImage)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 45
      },
      "nodeContext" : "SQLUndoLog.setAfterImage(afterImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 45
      },
      "nodeContext" : "SQLUndoLog.setAfterImage(afterImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.seata.rm.datasource.undo.SQLUndoLog"
  }, {
    "nodeContext" : "SQLUndoLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 150,
      "startColumnNumber" : 97,
      "endLineNumber" : 150,
      "endColumnNumber" : 107
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 150,
        "startColumnNumber" : 40,
        "endLineNumber" : 150,
        "endColumnNumber" : 108
      },
      "nodeContext" : "UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 150,
        "startColumnNumber" : 29,
        "endLineNumber" : 150,
        "endColumnNumber" : 108
      },
      "nodeContext" : "executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 150,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 109
      },
      "nodeContext" : "AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 150,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 109
      },
      "nodeContext" : "AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.seata.rm.datasource.undo.SQLUndoLog"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 94,
    "startColumnNumber" : 8,
    "endLineNumber" : 94,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 95,
    "startColumnNumber" : 8,
    "endLineNumber" : 95,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 147,
    "startColumnNumber" : 8,
    "endLineNumber" : 147,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 148,
    "startColumnNumber" : 8,
    "endLineNumber" : 148,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 150,
    "startColumnNumber" : 97,
    "endLineNumber" : 150,
    "endColumnNumber" : 107
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}