{
  "id" : 180,
  "expression" : "new IllegalArgumentException(e.getCause())",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/cli/converters/FromBasedConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalArgumentException(e.getCause())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 82,
      "startColumnNumber" : 14,
      "endLineNumber" : 82,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "throw new IllegalArgumentException(e.getCause());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 81,
        "startColumnNumber" : 32,
        "endLineNumber" : 83,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(e.getCause());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 81,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (e.getCause() != null) {\n  throw new IllegalArgumentException(e.getCause());\n}\n else {\n  throw new IllegalArgumentException(e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 80,
        "startColumnNumber" : 67,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (e.getCause() != null) {\n    throw new IllegalArgumentException(e.getCause());\n  }\n else {\n    throw new IllegalArgumentException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 80,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IllegalAccessException|InvocationTargetException e) {\n  if (e.getCause() != null) {\n    throw new IllegalArgumentException(e.getCause());\n  }\n else {\n    throw new IllegalArgumentException(e);\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return clazz.cast(method.invoke(null,input));\n}\n catch (IllegalAccessException|InvocationTargetException e) {\n  if (e.getCause() != null) {\n    throw new IllegalArgumentException(e.getCause());\n  }\n else {\n    throw new IllegalArgumentException(e);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 77,
        "startColumnNumber" : 68,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    return clazz.cast(method.invoke(null,input));\n  }\n catch (  IllegalAccessException|InvocationTargetException e) {\n    if (e.getCause() != null) {\n      throw new IllegalArgumentException(e.getCause());\n    }\n else {\n      throw new IllegalArgumentException(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given input to an object by using the 'from' method. Notice that the method may receive a  {@literal null} value.\n * @param input the input, can be {@literal null}\n * @return the instance of T\n * @throws IllegalArgumentException if the instance of T cannot be created from the input.\n */\n@Override public T fromString(String input) throws IllegalArgumentException {\n  try {\n    return clazz.cast(method.invoke(null,input));\n  }\n catch (  IllegalAccessException|InvocationTargetException e) {\n    if (e.getCause() != null) {\n      throw new IllegalArgumentException(e.getCause());\n    }\n else {\n      throw new IllegalArgumentException(e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "throw new IllegalArgumentException(e.getCause());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.IllegalArgumentException"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 82,
    "startColumnNumber" : 14,
    "endLineNumber" : 82,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}