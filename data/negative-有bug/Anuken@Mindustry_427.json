{
  "id" : 427,
  "expression" : "state.rules.defaultTeam.core().storageCapacity",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/type/Sector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "state.rules.defaultTeam.core().storageCapacity",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 172,
      "startColumnNumber" : 26,
      "endLineNumber" : 172,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 172,
        "startColumnNumber" : 20,
        "endLineNumber" : 172,
        "endColumnNumber" : 72
      },
      "nodeContext" : "cap=state.rules.defaultTeam.core().storageCapacity",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 172,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 73
      },
      "nodeContext" : "int cap=state.rules.defaultTeam.core().storageCapacity;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 170,
        "startColumnNumber" : 54,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ItemModule storage=state.rules.defaultTeam.items();\n  int cap=state.rules.defaultTeam.core().storageCapacity;\n  items.each((item,amount) -> storage.add(item,Math.min(cap - storage.get(item),amount)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 170,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (state.rules.defaultTeam.core() != null) {\n  ItemModule storage=state.rules.defaultTeam.items();\n  int cap=state.rules.defaultTeam.core().storageCapacity;\n  items.each((item,amount) -> storage.add(item,Math.min(cap - storage.get(item),amount)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 169,
        "startColumnNumber" : 27,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (state.rules.defaultTeam.core() != null) {\n    ItemModule storage=state.rules.defaultTeam.items();\n    int cap=state.rules.defaultTeam.core().storageCapacity;\n    items.each((item,amount) -> storage.add(item,Math.min(cap - storage.get(item),amount)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 169,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isBeingPlayed()) {\n  if (state.rules.defaultTeam.core() != null) {\n    ItemModule storage=state.rules.defaultTeam.items();\n    int cap=state.rules.defaultTeam.core().storageCapacity;\n    items.each((item,amount) -> storage.add(item,Math.min(cap - storage.get(item),amount)));\n  }\n}\n else if (hasBase()) {\n  items.each((item,amount) -> info.items.add(item,Math.min(info.storageCapacity - info.items.get(item),amount)));\n  info.items.checkNegative();\n  saveInfo();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 589,
        "startLineNumber" : 167,
        "startColumnNumber" : 39,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isBeingPlayed()) {\n    if (state.rules.defaultTeam.core() != null) {\n      ItemModule storage=state.rules.defaultTeam.items();\n      int cap=state.rules.defaultTeam.core().storageCapacity;\n      items.each((item,amount) -> storage.add(item,Math.min(cap - storage.get(item),amount)));\n    }\n  }\n else   if (hasBase()) {\n    items.each((item,amount) -> info.items.add(item,Math.min(info.storageCapacity - info.items.get(item),amount)));\n    info.items.checkNegative();\n    saveInfo();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void addItems(ItemSeq items){\n  if (isBeingPlayed()) {\n    if (state.rules.defaultTeam.core() != null) {\n      ItemModule storage=state.rules.defaultTeam.items();\n      int cap=state.rules.defaultTeam.core().storageCapacity;\n      items.each((item,amount) -> storage.add(item,Math.min(cap - storage.get(item),amount)));\n    }\n  }\n else   if (hasBase()) {\n    items.each((item,amount) -> info.items.add(item,Math.min(info.storageCapacity - info.items.get(item),amount)));\n    info.items.checkNegative();\n    saveInfo();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 172,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 73
      },
      "nodeContext" : "int cap=state.rules.defaultTeam.core().storageCapacity;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 172,
    "startColumnNumber" : 26,
    "endLineNumber" : 172,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}