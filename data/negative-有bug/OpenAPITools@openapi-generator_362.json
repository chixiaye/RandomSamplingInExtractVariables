{
  "id" : 362,
  "expression" : "Shape.class",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/client/petstore/java/okhttp-gson-nextgen/src/main/java/org/openapitools/client/model/Shape.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Shape.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 70,
      "startColumnNumber" : 17,
      "endLineNumber" : 70,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 70,
        "startColumnNumber" : 17,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Shape.class.isAssignableFrom(type.getRawType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "!Shape.class.isAssignableFrom(type.getRawType())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!Shape.class.isAssignableFrom(type.getRawType())) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3879,
        "startLineNumber" : 69,
        "startColumnNumber" : 71,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!Shape.class.isAssignableFrom(type.getRawType())) {\n    return null;\n  }\n  final TypeAdapter<JsonElement> elementAdapter=gson.getAdapter(JsonElement.class);\n  final TypeAdapter<Quadrilateral> adapterQuadrilateral=gson.getDelegateAdapter(this,TypeToken.get(Quadrilateral.class));\n  final TypeAdapter<Triangle> adapterTriangle=gson.getDelegateAdapter(this,TypeToken.get(Triangle.class));\n  return (TypeAdapter<T>)new TypeAdapter<Shape>(){\n    @Override public void write(    JsonWriter out,    Shape value) throws IOException {\n      if (value == null || value.getActualInstance() == null) {\n        elementAdapter.write(out,null);\n        return;\n      }\n      if (value.getActualInstance() instanceof Quadrilateral) {\n        JsonObject obj=adapterQuadrilateral.toJsonTree((Quadrilateral)value.getActualInstance()).getAsJsonObject();\n        elementAdapter.write(out,obj);\n        return;\n      }\n      if (value.getActualInstance() instanceof Triangle) {\n        JsonObject obj=adapterTriangle.toJsonTree((Triangle)value.getActualInstance()).getAsJsonObject();\n        elementAdapter.write(out,obj);\n        return;\n      }\n      throw new IOException(\"Failed to serialize as the type doesn't match oneOf schemas: Quadrilateral, Triangle\");\n    }\n    @Override public Shape read(    JsonReader in) throws IOException {\n      Object deserialized=null;\n      JsonObject jsonObject=elementAdapter.read(in).getAsJsonObject();\n      int match=0;\n      TypeAdapter actualAdapter=elementAdapter;\n      try {\n        Quadrilateral.validateJsonObject(jsonObject);\n        actualAdapter=adapterQuadrilateral;\n        match++;\n        log.log(Level.FINER,\"Input data matches schema 'Quadrilateral'\");\n      }\n catch (      Exception e) {\n        log.log(Level.FINER,\"Input data does not match schema 'Quadrilateral'\",e);\n      }\n      try {\n        Triangle.validateJsonObject(jsonObject);\n        actualAdapter=adapterTriangle;\n        match++;\n        log.log(Level.FINER,\"Input data matches schema 'Triangle'\");\n      }\n catch (      Exception e) {\n        log.log(Level.FINER,\"Input data does not match schema 'Triangle'\",e);\n      }\n      if (match == 1) {\n        Shape ret=new Shape();\n        ret.setActualInstance(actualAdapter.fromJsonTree(jsonObject));\n        return ret;\n      }\n      throw new IOException(String.format(\"Failed deserialization for Shape: %d classes match result, expected 1. JSON: %s\",match,jsonObject.toString()));\n    }\n  }\n.nullSafe();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3999,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public <T>TypeAdapter<T> create(Gson gson,TypeToken<T> type){\n  if (!Shape.class.isAssignableFrom(type.getRawType())) {\n    return null;\n  }\n  final TypeAdapter<JsonElement> elementAdapter=gson.getAdapter(JsonElement.class);\n  final TypeAdapter<Quadrilateral> adapterQuadrilateral=gson.getDelegateAdapter(this,TypeToken.get(Quadrilateral.class));\n  final TypeAdapter<Triangle> adapterTriangle=gson.getDelegateAdapter(this,TypeToken.get(Triangle.class));\n  return (TypeAdapter<T>)new TypeAdapter<Shape>(){\n    @Override public void write(    JsonWriter out,    Shape value) throws IOException {\n      if (value == null || value.getActualInstance() == null) {\n        elementAdapter.write(out,null);\n        return;\n      }\n      if (value.getActualInstance() instanceof Quadrilateral) {\n        JsonObject obj=adapterQuadrilateral.toJsonTree((Quadrilateral)value.getActualInstance()).getAsJsonObject();\n        elementAdapter.write(out,obj);\n        return;\n      }\n      if (value.getActualInstance() instanceof Triangle) {\n        JsonObject obj=adapterTriangle.toJsonTree((Triangle)value.getActualInstance()).getAsJsonObject();\n        elementAdapter.write(out,obj);\n        return;\n      }\n      throw new IOException(\"Failed to serialize as the type doesn't match oneOf schemas: Quadrilateral, Triangle\");\n    }\n    @Override public Shape read(    JsonReader in) throws IOException {\n      Object deserialized=null;\n      JsonObject jsonObject=elementAdapter.read(in).getAsJsonObject();\n      int match=0;\n      TypeAdapter actualAdapter=elementAdapter;\n      try {\n        Quadrilateral.validateJsonObject(jsonObject);\n        actualAdapter=adapterQuadrilateral;\n        match++;\n        log.log(Level.FINER,\"Input data matches schema 'Quadrilateral'\");\n      }\n catch (      Exception e) {\n        log.log(Level.FINER,\"Input data does not match schema 'Quadrilateral'\",e);\n      }\n      try {\n        Triangle.validateJsonObject(jsonObject);\n        actualAdapter=adapterTriangle;\n        match++;\n        log.log(Level.FINER,\"Input data matches schema 'Triangle'\");\n      }\n catch (      Exception e) {\n        log.log(Level.FINER,\"Input data does not match schema 'Triangle'\",e);\n      }\n      if (match == 1) {\n        Shape ret=new Shape();\n        ret.setActualInstance(actualAdapter.fromJsonTree(jsonObject));\n        return ret;\n      }\n      throw new IOException(String.format(\"Failed deserialization for Shape: %d classes match result, expected 1. JSON: %s\",match,jsonObject.toString()));\n    }\n  }\n.nullSafe();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 362,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "!Shape.class.isAssignableFrom(type.getRawType())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.openapitools.client.model.Shape>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 70,
    "startColumnNumber" : 17,
    "endLineNumber" : 70,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}