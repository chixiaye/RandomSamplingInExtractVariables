{
  "id" : 50,
  "expression" : "Character",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/strings/Alphabetical.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Character",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 28,
      "startColumnNumber" : 17,
      "endLineNumber" : 28,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 28,
        "startColumnNumber" : 17,
        "endLineNumber" : 28,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Character.isLetter(s.charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 28,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 48
      },
      "nodeContext" : "!Character.isLetter(s.charAt(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 28,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 85
      },
      "nodeContext" : "!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 27,
        "startColumnNumber" : 49,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < s.length() - 1; ++i) {\n  if (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))) {\n    return false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 25,
        "startColumnNumber" : 51,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  s=s.toLowerCase();\n  for (int i=0; i < s.length() - 1; ++i) {\n    if (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Check if a string is alphabetical order or not\n * @param s a string\n * @return {@code true} if given string is alphabetical order, otherwise{@code false}\n */\npublic static boolean isAlphabetical(String s){\n  s=s.toLowerCase();\n  for (int i=0; i < s.length() - 1; ++i) {\n    if (!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 28,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 85
      },
      "nodeContext" : "!Character.isLetter(s.charAt(i)) || !(s.charAt(i) <= s.charAt(i + 1))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 28,
    "startColumnNumber" : 17,
    "endLineNumber" : 28,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}