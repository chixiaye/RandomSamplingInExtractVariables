{
  "id" : 307,
  "expression" : "detectionResultColumn",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/pdf417/decoder/PDF417ScanningDecoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "detectionResultColumn",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 103,
      "startColumnNumber" : 62,
      "endLineNumber" : 103,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 84
      },
      "nodeContext" : "detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 85
      },
      "nodeContext" : "detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 91,
        "startColumnNumber" : 99,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n  if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n    continue;\n  }\n  DetectionResultColumn detectionResultColumn;\n  if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n    detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n  }\n else {\n    detectionResultColumn=new DetectionResultColumn(boundingBox);\n  }\n  detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n  int startColumn=-1;\n  int previousStartColumn=startColumn;\n  for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n    startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n    if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n      if (previousStartColumn == -1) {\n        continue;\n      }\n      startColumn=previousStartColumn;\n    }\n    Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n    if (codeword != null) {\n      detectionResultColumn.setCodeword(imageRow,codeword);\n      previousStartColumn=startColumn;\n      minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n      maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1931,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int barcodeColumnCount=1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n  int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n  if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n    continue;\n  }\n  DetectionResultColumn detectionResultColumn;\n  if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n    detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n  }\n else {\n    detectionResultColumn=new DetectionResultColumn(boundingBox);\n  }\n  detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n  int startColumn=-1;\n  int previousStartColumn=startColumn;\n  for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n    startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n    if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n      if (previousStartColumn == -1) {\n        continue;\n      }\n      startColumn=previousStartColumn;\n    }\n    Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n    if (codeword != null) {\n      detectionResultColumn.setCodeword(imageRow,codeword);\n      previousStartColumn=startColumn;\n      minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n      maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 181,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3565,
        "startLineNumber" : 59,
        "startColumnNumber" : 67,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BoundingBox boundingBox=new BoundingBox(image,imageTopLeft,imageBottomLeft,imageTopRight,imageBottomRight);\n  DetectionResultRowIndicatorColumn leftRowIndicatorColumn=null;\n  DetectionResultRowIndicatorColumn rightRowIndicatorColumn=null;\n  DetectionResult detectionResult;\n  for (boolean firstPass=true; ; firstPass=false) {\n    if (imageTopLeft != null) {\n      leftRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopLeft,true,minCodewordWidth,maxCodewordWidth);\n    }\n    if (imageTopRight != null) {\n      rightRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopRight,false,minCodewordWidth,maxCodewordWidth);\n    }\n    detectionResult=merge(leftRowIndicatorColumn,rightRowIndicatorColumn);\n    if (detectionResult == null) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    BoundingBox resultBox=detectionResult.getBoundingBox();\n    if (firstPass && resultBox != null && (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {\n      boundingBox=resultBox;\n    }\n else {\n      break;\n    }\n  }\n  detectionResult.setBoundingBox(boundingBox);\n  int maxBarcodeColumn=detectionResult.getBarcodeColumnCount() + 1;\n  detectionResult.setDetectionResultColumn(0,leftRowIndicatorColumn);\n  detectionResult.setDetectionResultColumn(maxBarcodeColumn,rightRowIndicatorColumn);\n  boolean leftToRight=leftRowIndicatorColumn != null;\n  for (int barcodeColumnCount=1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n    int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n    if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n      continue;\n    }\n    DetectionResultColumn detectionResultColumn;\n    if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n      detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n    }\n else {\n      detectionResultColumn=new DetectionResultColumn(boundingBox);\n    }\n    detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n    int startColumn=-1;\n    int previousStartColumn=startColumn;\n    for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n      startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n      if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n        if (previousStartColumn == -1) {\n          continue;\n        }\n        startColumn=previousStartColumn;\n      }\n      Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n      if (codeword != null) {\n        detectionResultColumn.setCodeword(imageRow,codeword);\n        previousStartColumn=startColumn;\n        minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n        maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n      }\n    }\n  }\n  return createDecoderResult(detectionResult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 345,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4069,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static DecoderResult decode(BitMatrix image,ResultPoint imageTopLeft,ResultPoint imageBottomLeft,ResultPoint imageTopRight,ResultPoint imageBottomRight,int minCodewordWidth,int maxCodewordWidth) throws NotFoundException, FormatException, ChecksumException {\n  BoundingBox boundingBox=new BoundingBox(image,imageTopLeft,imageBottomLeft,imageTopRight,imageBottomRight);\n  DetectionResultRowIndicatorColumn leftRowIndicatorColumn=null;\n  DetectionResultRowIndicatorColumn rightRowIndicatorColumn=null;\n  DetectionResult detectionResult;\n  for (boolean firstPass=true; ; firstPass=false) {\n    if (imageTopLeft != null) {\n      leftRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopLeft,true,minCodewordWidth,maxCodewordWidth);\n    }\n    if (imageTopRight != null) {\n      rightRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopRight,false,minCodewordWidth,maxCodewordWidth);\n    }\n    detectionResult=merge(leftRowIndicatorColumn,rightRowIndicatorColumn);\n    if (detectionResult == null) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    BoundingBox resultBox=detectionResult.getBoundingBox();\n    if (firstPass && resultBox != null && (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {\n      boundingBox=resultBox;\n    }\n else {\n      break;\n    }\n  }\n  detectionResult.setBoundingBox(boundingBox);\n  int maxBarcodeColumn=detectionResult.getBarcodeColumnCount() + 1;\n  detectionResult.setDetectionResultColumn(0,leftRowIndicatorColumn);\n  detectionResult.setDetectionResultColumn(maxBarcodeColumn,rightRowIndicatorColumn);\n  boolean leftToRight=leftRowIndicatorColumn != null;\n  for (int barcodeColumnCount=1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n    int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n    if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n      continue;\n    }\n    DetectionResultColumn detectionResultColumn;\n    if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n      detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n    }\n else {\n      detectionResultColumn=new DetectionResultColumn(boundingBox);\n    }\n    detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n    int startColumn=-1;\n    int previousStartColumn=startColumn;\n    for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n      startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n      if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n        if (previousStartColumn == -1) {\n          continue;\n        }\n        startColumn=previousStartColumn;\n      }\n      Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n      if (codeword != null) {\n        detectionResultColumn.setCodeword(imageRow,codeword);\n        previousStartColumn=startColumn;\n        minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n        maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n      }\n    }\n  }\n  return createDecoderResult(detectionResult);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 383,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 103,
        "endColumnNumber" : 85
      },
      "nodeContext" : "detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.pdf417.decoder.DetectionResultColumn"
  }, {
    "nodeContext" : "detectionResultColumn",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 118,
      "startColumnNumber" : 10,
      "endLineNumber" : 118,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 118,
        "startColumnNumber" : 10,
        "endLineNumber" : 118,
        "endColumnNumber" : 63
      },
      "nodeContext" : "detectionResultColumn.setCodeword(imageRow,codeword)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 118,
        "startColumnNumber" : 10,
        "endLineNumber" : 118,
        "endColumnNumber" : 64
      },
      "nodeContext" : "detectionResultColumn.setCodeword(imageRow,codeword);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 117,
        "startColumnNumber" : 30,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  detectionResultColumn.setCodeword(imageRow,codeword);\n  previousStartColumn=startColumn;\n  minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n  maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (codeword != null) {\n  detectionResultColumn.setCodeword(imageRow,codeword);\n  previousStartColumn=startColumn;\n  minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n  maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 107,
        "startColumnNumber" : 96,
        "endLineNumber" : 123,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n  if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n    if (previousStartColumn == -1) {\n      continue;\n    }\n    startColumn=previousStartColumn;\n  }\n  Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n  if (codeword != null) {\n    detectionResultColumn.setCodeword(imageRow,codeword);\n    previousStartColumn=startColumn;\n    minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n    maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n  startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n  if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n    if (previousStartColumn == -1) {\n      continue;\n    }\n    startColumn=previousStartColumn;\n  }\n  Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n  if (codeword != null) {\n    detectionResultColumn.setCodeword(imageRow,codeword);\n    previousStartColumn=startColumn;\n    minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n    maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1836,
        "startLineNumber" : 91,
        "startColumnNumber" : 99,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n  if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n    continue;\n  }\n  DetectionResultColumn detectionResultColumn;\n  if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n    detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n  }\n else {\n    detectionResultColumn=new DetectionResultColumn(boundingBox);\n  }\n  detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n  int startColumn=-1;\n  int previousStartColumn=startColumn;\n  for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n    startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n    if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n      if (previousStartColumn == -1) {\n        continue;\n      }\n      startColumn=previousStartColumn;\n    }\n    Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n    if (codeword != null) {\n      detectionResultColumn.setCodeword(imageRow,codeword);\n      previousStartColumn=startColumn;\n      minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n      maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1931,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int barcodeColumnCount=1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n  int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n  if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n    continue;\n  }\n  DetectionResultColumn detectionResultColumn;\n  if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n    detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n  }\n else {\n    detectionResultColumn=new DetectionResultColumn(boundingBox);\n  }\n  detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n  int startColumn=-1;\n  int previousStartColumn=startColumn;\n  for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n    startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n    if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n      if (previousStartColumn == -1) {\n        continue;\n      }\n      startColumn=previousStartColumn;\n    }\n    Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n    if (codeword != null) {\n      detectionResultColumn.setCodeword(imageRow,codeword);\n      previousStartColumn=startColumn;\n      minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n      maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 181,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3565,
        "startLineNumber" : 59,
        "startColumnNumber" : 67,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BoundingBox boundingBox=new BoundingBox(image,imageTopLeft,imageBottomLeft,imageTopRight,imageBottomRight);\n  DetectionResultRowIndicatorColumn leftRowIndicatorColumn=null;\n  DetectionResultRowIndicatorColumn rightRowIndicatorColumn=null;\n  DetectionResult detectionResult;\n  for (boolean firstPass=true; ; firstPass=false) {\n    if (imageTopLeft != null) {\n      leftRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopLeft,true,minCodewordWidth,maxCodewordWidth);\n    }\n    if (imageTopRight != null) {\n      rightRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopRight,false,minCodewordWidth,maxCodewordWidth);\n    }\n    detectionResult=merge(leftRowIndicatorColumn,rightRowIndicatorColumn);\n    if (detectionResult == null) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    BoundingBox resultBox=detectionResult.getBoundingBox();\n    if (firstPass && resultBox != null && (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {\n      boundingBox=resultBox;\n    }\n else {\n      break;\n    }\n  }\n  detectionResult.setBoundingBox(boundingBox);\n  int maxBarcodeColumn=detectionResult.getBarcodeColumnCount() + 1;\n  detectionResult.setDetectionResultColumn(0,leftRowIndicatorColumn);\n  detectionResult.setDetectionResultColumn(maxBarcodeColumn,rightRowIndicatorColumn);\n  boolean leftToRight=leftRowIndicatorColumn != null;\n  for (int barcodeColumnCount=1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n    int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n    if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n      continue;\n    }\n    DetectionResultColumn detectionResultColumn;\n    if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n      detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n    }\n else {\n      detectionResultColumn=new DetectionResultColumn(boundingBox);\n    }\n    detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n    int startColumn=-1;\n    int previousStartColumn=startColumn;\n    for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n      startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n      if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n        if (previousStartColumn == -1) {\n          continue;\n        }\n        startColumn=previousStartColumn;\n      }\n      Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n      if (codeword != null) {\n        detectionResultColumn.setCodeword(imageRow,codeword);\n        previousStartColumn=startColumn;\n        minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n        maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n      }\n    }\n  }\n  return createDecoderResult(detectionResult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 345,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4069,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static DecoderResult decode(BitMatrix image,ResultPoint imageTopLeft,ResultPoint imageBottomLeft,ResultPoint imageTopRight,ResultPoint imageBottomRight,int minCodewordWidth,int maxCodewordWidth) throws NotFoundException, FormatException, ChecksumException {\n  BoundingBox boundingBox=new BoundingBox(image,imageTopLeft,imageBottomLeft,imageTopRight,imageBottomRight);\n  DetectionResultRowIndicatorColumn leftRowIndicatorColumn=null;\n  DetectionResultRowIndicatorColumn rightRowIndicatorColumn=null;\n  DetectionResult detectionResult;\n  for (boolean firstPass=true; ; firstPass=false) {\n    if (imageTopLeft != null) {\n      leftRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopLeft,true,minCodewordWidth,maxCodewordWidth);\n    }\n    if (imageTopRight != null) {\n      rightRowIndicatorColumn=getRowIndicatorColumn(image,boundingBox,imageTopRight,false,minCodewordWidth,maxCodewordWidth);\n    }\n    detectionResult=merge(leftRowIndicatorColumn,rightRowIndicatorColumn);\n    if (detectionResult == null) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    BoundingBox resultBox=detectionResult.getBoundingBox();\n    if (firstPass && resultBox != null && (resultBox.getMinY() < boundingBox.getMinY() || resultBox.getMaxY() > boundingBox.getMaxY())) {\n      boundingBox=resultBox;\n    }\n else {\n      break;\n    }\n  }\n  detectionResult.setBoundingBox(boundingBox);\n  int maxBarcodeColumn=detectionResult.getBarcodeColumnCount() + 1;\n  detectionResult.setDetectionResultColumn(0,leftRowIndicatorColumn);\n  detectionResult.setDetectionResultColumn(maxBarcodeColumn,rightRowIndicatorColumn);\n  boolean leftToRight=leftRowIndicatorColumn != null;\n  for (int barcodeColumnCount=1; barcodeColumnCount <= maxBarcodeColumn; barcodeColumnCount++) {\n    int barcodeColumn=leftToRight ? barcodeColumnCount : maxBarcodeColumn - barcodeColumnCount;\n    if (detectionResult.getDetectionResultColumn(barcodeColumn) != null) {\n      continue;\n    }\n    DetectionResultColumn detectionResultColumn;\n    if (barcodeColumn == 0 || barcodeColumn == maxBarcodeColumn) {\n      detectionResultColumn=new DetectionResultRowIndicatorColumn(boundingBox,barcodeColumn == 0);\n    }\n else {\n      detectionResultColumn=new DetectionResultColumn(boundingBox);\n    }\n    detectionResult.setDetectionResultColumn(barcodeColumn,detectionResultColumn);\n    int startColumn=-1;\n    int previousStartColumn=startColumn;\n    for (int imageRow=boundingBox.getMinY(); imageRow <= boundingBox.getMaxY(); imageRow++) {\n      startColumn=getStartColumn(detectionResult,barcodeColumn,imageRow,leftToRight);\n      if (startColumn < 0 || startColumn > boundingBox.getMaxX()) {\n        if (previousStartColumn == -1) {\n          continue;\n        }\n        startColumn=previousStartColumn;\n      }\n      Codeword codeword=detectCodeword(image,boundingBox.getMinX(),boundingBox.getMaxX(),leftToRight,startColumn,imageRow,minCodewordWidth,maxCodewordWidth);\n      if (codeword != null) {\n        detectionResultColumn.setCodeword(imageRow,codeword);\n        previousStartColumn=startColumn;\n        minCodewordWidth=Math.min(minCodewordWidth,codeword.getWidth());\n        maxCodewordWidth=Math.max(maxCodewordWidth,codeword.getWidth());\n      }\n    }\n  }\n  return createDecoderResult(detectionResult);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 383,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 118,
        "startColumnNumber" : 10,
        "endLineNumber" : 118,
        "endColumnNumber" : 64
      },
      "nodeContext" : "detectionResultColumn.setCodeword(imageRow,codeword);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.zxing.pdf417.decoder.DetectionResultColumn"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 103,
    "startColumnNumber" : 62,
    "endLineNumber" : 103,
    "endColumnNumber" : 83
  }, {
    "charLength" : 21,
    "startLineNumber" : 118,
    "startColumnNumber" : 10,
    "endLineNumber" : 118,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}