{
  "id" : 118,
  "expression" : "\"Response must include generic type (e.g., Response<String>)\\n\"",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/kotlin-test/src/test/java/retrofit2/KotlinSuspendRawTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Response must include generic type (e.g., Response<String>)\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 63,
      "startLineNumber" : 50,
      "startColumnNumber" : 14,
      "endLineNumber" : 50,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 50,
        "startColumnNumber" : 14,
        "endLineNumber" : 51,
        "endColumnNumber" : 49
      },
      "nodeContext" : "\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(e).hasMessage(\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 48,
        "startColumnNumber" : 6,
        "endLineNumber" : 51,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertThat(e).hasMessage(\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 47,
        "startColumnNumber" : 41,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(e).hasMessage(\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 47,
        "startColumnNumber" : 6,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IllegalArgumentException e) {\n  assertThat(e).hasMessage(\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  service.body(null);\n  fail();\n}\n catch (IllegalArgumentException e) {\n  assertThat(e).hasMessage(\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 40,
        "startColumnNumber" : 20,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Retrofit retrofit=new Retrofit.Builder().baseUrl(server.url(\"/\")).build();\n  Service service=retrofit.create(Service.class);\n  try {\n    service.body(null);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n    assertThat(e).hasMessage(\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void raw(){\n  Retrofit retrofit=new Retrofit.Builder().baseUrl(server.url(\"/\")).build();\n  Service service=retrofit.create(Service.class);\n  try {\n    service.body(null);\n    fail();\n  }\n catch (  IllegalArgumentException e) {\n    assertThat(e).hasMessage(\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 50,
        "startColumnNumber" : 14,
        "endLineNumber" : 51,
        "endColumnNumber" : 49
      },
      "nodeContext" : "\"Response must include generic type (e.g., Response<String>)\\n\" + \"    for method Service.body\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 9,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 63,
    "startLineNumber" : 50,
    "startColumnNumber" : 14,
    "endLineNumber" : 50,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}