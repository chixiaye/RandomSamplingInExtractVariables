{
  "id" : 177,
  "expression" : "new ExcelCellFormatter()",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/apache-poi/src/test/java/com/baeldung/poi/excel/ExcelCellFormatterUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ExcelCellFormatter()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 37,
      "startColumnNumber" : 39,
      "endLineNumber" : 37,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 37,
        "startColumnNumber" : 27,
        "endLineNumber" : 37,
        "endColumnNumber" : 63
      },
      "nodeContext" : "formatter=new ExcelCellFormatter()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ExcelCellFormatter formatter=new ExcelCellFormatter();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 32,
        "startColumnNumber" : 98,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Workbook workbook=new XSSFWorkbook(fileLocation);\n  Sheet sheet=workbook.getSheetAt(0);\n  Row row=sheet.getRow(0);\n  ExcelCellFormatter formatter=new ExcelCellFormatter();\n  assertEquals(\"String Test\",formatter.getCellStringValue(row.getCell(STRING_CELL_INDEX)));\n  workbook.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenStringCell_whenGetCellStringValue_thenReturnStringValue() throws IOException {\n  Workbook workbook=new XSSFWorkbook(fileLocation);\n  Sheet sheet=workbook.getSheetAt(0);\n  Row row=sheet.getRow(0);\n  ExcelCellFormatter formatter=new ExcelCellFormatter();\n  assertEquals(\"String Test\",formatter.getCellStringValue(row.getCell(STRING_CELL_INDEX)));\n  workbook.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ExcelCellFormatter formatter=new ExcelCellFormatter();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.baeldung.poi.excel.ExcelCellFormatter"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 37,
    "startColumnNumber" : 39,
    "endLineNumber" : 37,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}