{
  "id" : 15,
  "expression" : "topicBasedRlmm()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "topicBasedRlmm()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 122,
      "startColumnNumber" : 8,
      "endLineNumber" : 122,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 105
      },
      "nodeContext" : "topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 106
      },
      "nodeContext" : "topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 76,
        "startColumnNumber" : 59,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String leaderTopic=\"new-leader\";\n  HashMap<Object,Seq<Object>> assignedLeaderTopicReplicas=new HashMap<>();\n  List<Object> leaderTopicReplicas=new ArrayList<>();\n  leaderTopicReplicas.add(0);\n  leaderTopicReplicas.add(1);\n  leaderTopicReplicas.add(2);\n  assignedLeaderTopicReplicas.put(0,JavaConverters.asScalaBuffer(leaderTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(leaderTopic,JavaConverters.mapAsScalaMap(assignedLeaderTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  String followerTopic=\"new-follower\";\n  HashMap<Object,Seq<Object>> assignedFollowerTopicReplicas=new HashMap<>();\n  List<Object> followerTopicReplicas=new ArrayList<>();\n  followerTopicReplicas.add(1);\n  followerTopicReplicas.add(2);\n  followerTopicReplicas.add(0);\n  assignedFollowerTopicReplicas.put(0,JavaConverters.asScalaBuffer(followerTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(followerTopic,JavaConverters.mapAsScalaMap(assignedFollowerTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  final TopicIdPartition newLeaderTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(leaderTopic,0));\n  final TopicIdPartition newFollowerTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(followerTopic,0));\n  RemoteLogSegmentMetadata leaderSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newLeaderTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(leaderSegmentMetadata).get());\n  RemoteLogSegmentMetadata followerSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newFollowerTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(followerSegmentMetadata).get());\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition));\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition));\n  topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition));\n  waitUntilConsumerCatchesup(newLeaderTopicIdPartition,newFollowerTopicIdPartition,30_000L);\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 332,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4232,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNewPartitionUpdates() throws Exception {\n  String leaderTopic=\"new-leader\";\n  HashMap<Object,Seq<Object>> assignedLeaderTopicReplicas=new HashMap<>();\n  List<Object> leaderTopicReplicas=new ArrayList<>();\n  leaderTopicReplicas.add(0);\n  leaderTopicReplicas.add(1);\n  leaderTopicReplicas.add(2);\n  assignedLeaderTopicReplicas.put(0,JavaConverters.asScalaBuffer(leaderTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(leaderTopic,JavaConverters.mapAsScalaMap(assignedLeaderTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  String followerTopic=\"new-follower\";\n  HashMap<Object,Seq<Object>> assignedFollowerTopicReplicas=new HashMap<>();\n  List<Object> followerTopicReplicas=new ArrayList<>();\n  followerTopicReplicas.add(1);\n  followerTopicReplicas.add(2);\n  followerTopicReplicas.add(0);\n  assignedFollowerTopicReplicas.put(0,JavaConverters.asScalaBuffer(followerTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(followerTopic,JavaConverters.mapAsScalaMap(assignedFollowerTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  final TopicIdPartition newLeaderTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(leaderTopic,0));\n  final TopicIdPartition newFollowerTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(followerTopic,0));\n  RemoteLogSegmentMetadata leaderSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newLeaderTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(leaderSegmentMetadata).get());\n  RemoteLogSegmentMetadata followerSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newFollowerTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(followerSegmentMetadata).get());\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition));\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition));\n  topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition));\n  waitUntilConsumerCatchesup(newLeaderTopicIdPartition,newFollowerTopicIdPartition,30_000L);\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 340,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 105
      },
      "nodeContext" : "topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.server.log.remote.metadata.storage.TopicBasedRemoteLogMetadataManager"
  }, {
    "nodeContext" : "topicBasedRlmm()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 129,
      "startColumnNumber" : 30,
      "endLineNumber" : 129,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 129,
        "startColumnNumber" : 30,
        "endLineNumber" : 129,
        "endColumnNumber" : 95
      },
      "nodeContext" : "topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 129,
        "startColumnNumber" : 30,
        "endLineNumber" : 129,
        "endColumnNumber" : 105
      },
      "nodeContext" : "topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 106
      },
      "nodeContext" : "Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 76,
        "startColumnNumber" : 59,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String leaderTopic=\"new-leader\";\n  HashMap<Object,Seq<Object>> assignedLeaderTopicReplicas=new HashMap<>();\n  List<Object> leaderTopicReplicas=new ArrayList<>();\n  leaderTopicReplicas.add(0);\n  leaderTopicReplicas.add(1);\n  leaderTopicReplicas.add(2);\n  assignedLeaderTopicReplicas.put(0,JavaConverters.asScalaBuffer(leaderTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(leaderTopic,JavaConverters.mapAsScalaMap(assignedLeaderTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  String followerTopic=\"new-follower\";\n  HashMap<Object,Seq<Object>> assignedFollowerTopicReplicas=new HashMap<>();\n  List<Object> followerTopicReplicas=new ArrayList<>();\n  followerTopicReplicas.add(1);\n  followerTopicReplicas.add(2);\n  followerTopicReplicas.add(0);\n  assignedFollowerTopicReplicas.put(0,JavaConverters.asScalaBuffer(followerTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(followerTopic,JavaConverters.mapAsScalaMap(assignedFollowerTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  final TopicIdPartition newLeaderTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(leaderTopic,0));\n  final TopicIdPartition newFollowerTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(followerTopic,0));\n  RemoteLogSegmentMetadata leaderSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newLeaderTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(leaderSegmentMetadata).get());\n  RemoteLogSegmentMetadata followerSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newFollowerTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(followerSegmentMetadata).get());\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition));\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition));\n  topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition));\n  waitUntilConsumerCatchesup(newLeaderTopicIdPartition,newFollowerTopicIdPartition,30_000L);\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 332,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4232,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNewPartitionUpdates() throws Exception {\n  String leaderTopic=\"new-leader\";\n  HashMap<Object,Seq<Object>> assignedLeaderTopicReplicas=new HashMap<>();\n  List<Object> leaderTopicReplicas=new ArrayList<>();\n  leaderTopicReplicas.add(0);\n  leaderTopicReplicas.add(1);\n  leaderTopicReplicas.add(2);\n  assignedLeaderTopicReplicas.put(0,JavaConverters.asScalaBuffer(leaderTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(leaderTopic,JavaConverters.mapAsScalaMap(assignedLeaderTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  String followerTopic=\"new-follower\";\n  HashMap<Object,Seq<Object>> assignedFollowerTopicReplicas=new HashMap<>();\n  List<Object> followerTopicReplicas=new ArrayList<>();\n  followerTopicReplicas.add(1);\n  followerTopicReplicas.add(2);\n  followerTopicReplicas.add(0);\n  assignedFollowerTopicReplicas.put(0,JavaConverters.asScalaBuffer(followerTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(followerTopic,JavaConverters.mapAsScalaMap(assignedFollowerTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  final TopicIdPartition newLeaderTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(leaderTopic,0));\n  final TopicIdPartition newFollowerTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(followerTopic,0));\n  RemoteLogSegmentMetadata leaderSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newLeaderTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(leaderSegmentMetadata).get());\n  RemoteLogSegmentMetadata followerSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newFollowerTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(followerSegmentMetadata).get());\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition));\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition));\n  topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition));\n  waitUntilConsumerCatchesup(newLeaderTopicIdPartition,newFollowerTopicIdPartition,30_000L);\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 340,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.server.log.remote.metadata.storage.TopicBasedRemoteLogMetadataManager"
  }, {
    "nodeContext" : "topicBasedRlmm()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 130,
      "startColumnNumber" : 30,
      "endLineNumber" : 130,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 130,
        "startColumnNumber" : 30,
        "endLineNumber" : 130,
        "endColumnNumber" : 97
      },
      "nodeContext" : "topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 130,
        "startColumnNumber" : 30,
        "endLineNumber" : 130,
        "endColumnNumber" : 107
      },
      "nodeContext" : "topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 76,
        "startColumnNumber" : 59,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String leaderTopic=\"new-leader\";\n  HashMap<Object,Seq<Object>> assignedLeaderTopicReplicas=new HashMap<>();\n  List<Object> leaderTopicReplicas=new ArrayList<>();\n  leaderTopicReplicas.add(0);\n  leaderTopicReplicas.add(1);\n  leaderTopicReplicas.add(2);\n  assignedLeaderTopicReplicas.put(0,JavaConverters.asScalaBuffer(leaderTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(leaderTopic,JavaConverters.mapAsScalaMap(assignedLeaderTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  String followerTopic=\"new-follower\";\n  HashMap<Object,Seq<Object>> assignedFollowerTopicReplicas=new HashMap<>();\n  List<Object> followerTopicReplicas=new ArrayList<>();\n  followerTopicReplicas.add(1);\n  followerTopicReplicas.add(2);\n  followerTopicReplicas.add(0);\n  assignedFollowerTopicReplicas.put(0,JavaConverters.asScalaBuffer(followerTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(followerTopic,JavaConverters.mapAsScalaMap(assignedFollowerTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  final TopicIdPartition newLeaderTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(leaderTopic,0));\n  final TopicIdPartition newFollowerTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(followerTopic,0));\n  RemoteLogSegmentMetadata leaderSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newLeaderTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(leaderSegmentMetadata).get());\n  RemoteLogSegmentMetadata followerSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newFollowerTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(followerSegmentMetadata).get());\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition));\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition));\n  topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition));\n  waitUntilConsumerCatchesup(newLeaderTopicIdPartition,newFollowerTopicIdPartition,30_000L);\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 332,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4232,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNewPartitionUpdates() throws Exception {\n  String leaderTopic=\"new-leader\";\n  HashMap<Object,Seq<Object>> assignedLeaderTopicReplicas=new HashMap<>();\n  List<Object> leaderTopicReplicas=new ArrayList<>();\n  leaderTopicReplicas.add(0);\n  leaderTopicReplicas.add(1);\n  leaderTopicReplicas.add(2);\n  assignedLeaderTopicReplicas.put(0,JavaConverters.asScalaBuffer(leaderTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(leaderTopic,JavaConverters.mapAsScalaMap(assignedLeaderTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  String followerTopic=\"new-follower\";\n  HashMap<Object,Seq<Object>> assignedFollowerTopicReplicas=new HashMap<>();\n  List<Object> followerTopicReplicas=new ArrayList<>();\n  followerTopicReplicas.add(1);\n  followerTopicReplicas.add(2);\n  followerTopicReplicas.add(0);\n  assignedFollowerTopicReplicas.put(0,JavaConverters.asScalaBuffer(followerTopicReplicas));\n  remoteLogMetadataManagerHarness.createTopicWithAssignment(followerTopic,JavaConverters.mapAsScalaMap(assignedFollowerTopicReplicas),remoteLogMetadataManagerHarness.listenerName());\n  final TopicIdPartition newLeaderTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(leaderTopic,0));\n  final TopicIdPartition newFollowerTopicIdPartition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(followerTopic,0));\n  RemoteLogSegmentMetadata leaderSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newLeaderTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(leaderSegmentMetadata).get());\n  RemoteLogSegmentMetadata followerSegmentMetadata=new RemoteLogSegmentMetadata(new RemoteLogSegmentId(newFollowerTopicIdPartition,Uuid.randomUuid()),0,100,-1L,0,time.milliseconds(),SEG_SIZE,Collections.singletonMap(0,0L));\n  Assertions.assertThrows(Exception.class,() -> topicBasedRlmm().addRemoteLogSegmentMetadata(followerSegmentMetadata).get());\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition));\n  Assertions.assertThrows(RemoteResourceNotFoundException.class,() -> topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition));\n  topicBasedRlmm().onPartitionLeadershipChanges(Collections.singleton(newLeaderTopicIdPartition),Collections.singleton(newFollowerTopicIdPartition));\n  waitUntilConsumerCatchesup(newLeaderTopicIdPartition,newFollowerTopicIdPartition,30_000L);\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newLeaderTopicIdPartition).hasNext());\n  Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 340,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Assertions.assertTrue(topicBasedRlmm().listRemoteLogSegments(newFollowerTopicIdPartition).hasNext());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.server.log.remote.metadata.storage.TopicBasedRemoteLogMetadataManager"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 122,
    "startColumnNumber" : 8,
    "endLineNumber" : 122,
    "endColumnNumber" : 24
  }, {
    "charLength" : 16,
    "startLineNumber" : 129,
    "startColumnNumber" : 30,
    "endLineNumber" : 129,
    "endColumnNumber" : 46
  }, {
    "charLength" : 16,
    "startLineNumber" : 130,
    "startColumnNumber" : 30,
    "endLineNumber" : 130,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}