{
  "id" : 149,
  "expression" : "arr[k]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/ModularLinearAlgebra.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arr[k]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 19,
      "startColumnNumber" : 14,
      "endLineNumber" : 19,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 19,
        "startColumnNumber" : 14,
        "endLineNumber" : 19,
        "endColumnNumber" : 23
      },
      "nodeContext" : "arr[k][i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 19,
        "startColumnNumber" : 14,
        "endLineNumber" : 19,
        "endColumnNumber" : 28
      },
      "nodeContext" : "arr[k][i] != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 19,
        "startColumnNumber" : 10,
        "endLineNumber" : 24,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (arr[k][i] != 0) {\n  int[] t=arr[r];\n  arr[r]=arr[k];\n  arr[k]=t;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 18,
        "startColumnNumber" : 40,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (arr[k][i] != 0) {\n    int[] t=arr[r];\n    arr[r]=arr[k];\n    arr[k]=t;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int k=r + 1; k < n; k++) {\n  if (arr[k][i] != 0) {\n    int[] t=arr[r];\n    arr[r]=arr[k];\n    arr[k]=t;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 17,
        "startColumnNumber" : 26,
        "endLineNumber" : 26,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (int k=r + 1; k < n; k++) {\n    if (arr[k][i] != 0) {\n      int[] t=arr[r];\n      arr[r]=arr[k];\n      arr[k]=t;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 17,
        "startColumnNumber" : 6,
        "endLineNumber" : 26,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (arr[r][i] == 0) {\n  for (int k=r + 1; k < n; k++) {\n    if (arr[k][i] != 0) {\n      int[] t=arr[r];\n      arr[r]=arr[k];\n      arr[k]=t;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 16,
        "startColumnNumber" : 45,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (arr[r][i] == 0) {\n    for (int k=r + 1; k < n; k++) {\n      if (arr[k][i] != 0) {\n        int[] t=arr[r];\n        arr[r]=arr[k];\n        arr[k]=t;\n        break;\n      }\n    }\n  }\n  if (arr[r][i] == 0) {\n    continue;\n  }\n  int inverse=inv[arr[r][i]];\n  for (int k=i; k < m; k++)   arr[r][k]=(arr[r][k] * inverse) % prime;\n  for (int j=0; j < n; j++) {\n    int c=arr[j][i];\n    if (j == r || c == 0)     continue;\n    arr[j][i]=0;\n    for (int k=i + 1; k < m; k++)     arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n  }\n  r++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < m - 1 && r < n; i++) {\n  if (arr[r][i] == 0) {\n    for (int k=r + 1; k < n; k++) {\n      if (arr[k][i] != 0) {\n        int[] t=arr[r];\n        arr[r]=arr[k];\n        arr[k]=t;\n        break;\n      }\n    }\n  }\n  if (arr[r][i] == 0) {\n    continue;\n  }\n  int inverse=inv[arr[r][i]];\n  for (int k=i; k < m; k++)   arr[r][k]=(arr[r][k] * inverse) % prime;\n  for (int j=0; j < n; j++) {\n    int c=arr[j][i];\n    if (j == r || c == 0)     continue;\n    arr[j][i]=0;\n    for (int k=i + 1; k < m; k++)     arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n  }\n  r++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 204,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 13,
        "startColumnNumber" : 54,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=arr.length, m=arr[0].length;\n  int r=0;\n  for (int i=0; i < m - 1 && r < n; i++) {\n    if (arr[r][i] == 0) {\n      for (int k=r + 1; k < n; k++) {\n        if (arr[k][i] != 0) {\n          int[] t=arr[r];\n          arr[r]=arr[k];\n          arr[k]=t;\n          break;\n        }\n      }\n    }\n    if (arr[r][i] == 0) {\n      continue;\n    }\n    int inverse=inv[arr[r][i]];\n    for (int k=i; k < m; k++)     arr[r][k]=(arr[r][k] * inverse) % prime;\n    for (int j=0; j < n; j++) {\n      int c=arr[j][i];\n      if (j == r || c == 0)       continue;\n      arr[j][i]=0;\n      for (int k=i + 1; k < m; k++)       arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n    }\n    r++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void rref(int[][] arr,int prime,int[] inv){\n  int n=arr.length, m=arr[0].length;\n  int r=0;\n  for (int i=0; i < m - 1 && r < n; i++) {\n    if (arr[r][i] == 0) {\n      for (int k=r + 1; k < n; k++) {\n        if (arr[k][i] != 0) {\n          int[] t=arr[r];\n          arr[r]=arr[k];\n          arr[k]=t;\n          break;\n        }\n      }\n    }\n    if (arr[r][i] == 0) {\n      continue;\n    }\n    int inverse=inv[arr[r][i]];\n    for (int k=i; k < m; k++)     arr[r][k]=(arr[r][k] * inverse) % prime;\n    for (int j=0; j < n; j++) {\n      int c=arr[j][i];\n      if (j == r || c == 0)       continue;\n      arr[j][i]=0;\n      for (int k=i + 1; k < m; k++)       arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n    }\n    r++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 19,
        "startColumnNumber" : 14,
        "endLineNumber" : 19,
        "endColumnNumber" : 28
      },
      "nodeContext" : "arr[k][i] != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int[]"
  }, {
    "nodeContext" : "arr[k]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 21,
      "startColumnNumber" : 21,
      "endLineNumber" : 21,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 27
      },
      "nodeContext" : "arr[r]=arr[k]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 28
      },
      "nodeContext" : "arr[r]=arr[k];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 19,
        "startColumnNumber" : 30,
        "endLineNumber" : 24,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  int[] t=arr[r];\n  arr[r]=arr[k];\n  arr[k]=t;\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 19,
        "startColumnNumber" : 10,
        "endLineNumber" : 24,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (arr[k][i] != 0) {\n  int[] t=arr[r];\n  arr[r]=arr[k];\n  arr[k]=t;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 18,
        "startColumnNumber" : 40,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (arr[k][i] != 0) {\n    int[] t=arr[r];\n    arr[r]=arr[k];\n    arr[k]=t;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int k=r + 1; k < n; k++) {\n  if (arr[k][i] != 0) {\n    int[] t=arr[r];\n    arr[r]=arr[k];\n    arr[k]=t;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 17,
        "startColumnNumber" : 26,
        "endLineNumber" : 26,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  for (int k=r + 1; k < n; k++) {\n    if (arr[k][i] != 0) {\n      int[] t=arr[r];\n      arr[r]=arr[k];\n      arr[k]=t;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 17,
        "startColumnNumber" : 6,
        "endLineNumber" : 26,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (arr[r][i] == 0) {\n  for (int k=r + 1; k < n; k++) {\n    if (arr[k][i] != 0) {\n      int[] t=arr[r];\n      arr[r]=arr[k];\n      arr[k]=t;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 16,
        "startColumnNumber" : 45,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (arr[r][i] == 0) {\n    for (int k=r + 1; k < n; k++) {\n      if (arr[k][i] != 0) {\n        int[] t=arr[r];\n        arr[r]=arr[k];\n        arr[k]=t;\n        break;\n      }\n    }\n  }\n  if (arr[r][i] == 0) {\n    continue;\n  }\n  int inverse=inv[arr[r][i]];\n  for (int k=i; k < m; k++)   arr[r][k]=(arr[r][k] * inverse) % prime;\n  for (int j=0; j < n; j++) {\n    int c=arr[j][i];\n    if (j == r || c == 0)     continue;\n    arr[j][i]=0;\n    for (int k=i + 1; k < m; k++)     arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n  }\n  r++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < m - 1 && r < n; i++) {\n  if (arr[r][i] == 0) {\n    for (int k=r + 1; k < n; k++) {\n      if (arr[k][i] != 0) {\n        int[] t=arr[r];\n        arr[r]=arr[k];\n        arr[k]=t;\n        break;\n      }\n    }\n  }\n  if (arr[r][i] == 0) {\n    continue;\n  }\n  int inverse=inv[arr[r][i]];\n  for (int k=i; k < m; k++)   arr[r][k]=(arr[r][k] * inverse) % prime;\n  for (int j=0; j < n; j++) {\n    int c=arr[j][i];\n    if (j == r || c == 0)     continue;\n    arr[j][i]=0;\n    for (int k=i + 1; k < m; k++)     arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n  }\n  r++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 204,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 13,
        "startColumnNumber" : 54,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=arr.length, m=arr[0].length;\n  int r=0;\n  for (int i=0; i < m - 1 && r < n; i++) {\n    if (arr[r][i] == 0) {\n      for (int k=r + 1; k < n; k++) {\n        if (arr[k][i] != 0) {\n          int[] t=arr[r];\n          arr[r]=arr[k];\n          arr[k]=t;\n          break;\n        }\n      }\n    }\n    if (arr[r][i] == 0) {\n      continue;\n    }\n    int inverse=inv[arr[r][i]];\n    for (int k=i; k < m; k++)     arr[r][k]=(arr[r][k] * inverse) % prime;\n    for (int j=0; j < n; j++) {\n      int c=arr[j][i];\n      if (j == r || c == 0)       continue;\n      arr[j][i]=0;\n      for (int k=i + 1; k < m; k++)       arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n    }\n    r++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void rref(int[][] arr,int prime,int[] inv){\n  int n=arr.length, m=arr[0].length;\n  int r=0;\n  for (int i=0; i < m - 1 && r < n; i++) {\n    if (arr[r][i] == 0) {\n      for (int k=r + 1; k < n; k++) {\n        if (arr[k][i] != 0) {\n          int[] t=arr[r];\n          arr[r]=arr[k];\n          arr[k]=t;\n          break;\n        }\n      }\n    }\n    if (arr[r][i] == 0) {\n      continue;\n    }\n    int inverse=inv[arr[r][i]];\n    for (int k=i; k < m; k++)     arr[r][k]=(arr[r][k] * inverse) % prime;\n    for (int j=0; j < n; j++) {\n      int c=arr[j][i];\n      if (j == r || c == 0)       continue;\n      arr[j][i]=0;\n      for (int k=i + 1; k < m; k++)       arr[j][k]=(arr[j][k] - c * arr[r][k] + c * prime) % prime;\n    }\n    r++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 28
      },
      "nodeContext" : "arr[r]=arr[k];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int[]"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 19,
    "startColumnNumber" : 14,
    "endLineNumber" : 19,
    "endColumnNumber" : 20
  }, {
    "charLength" : 6,
    "startLineNumber" : 21,
    "startColumnNumber" : 21,
    "endLineNumber" : 21,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}