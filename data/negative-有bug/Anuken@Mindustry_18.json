{
  "id" : 18,
  "expression" : "stream.readInt()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/io/versions/LegacySaveVersion2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stream.readInt()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 22,
      "startColumnNumber" : 21,
      "endLineNumber" : 22,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 37
      },
      "nodeContext" : "amount=stream.readInt()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 38
      },
      "nodeContext" : "int amount=stream.readInt();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 18,
        "startColumnNumber" : 70,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Prov[] mapping=this.entityMapping == null ? EntityMapping.idMap : this.entityMapping;\n  int amount=stream.readInt();\n  for (int j=0; j < amount; j++) {\n    readChunk(stream,true,in -> {\n      int typeid=in.readUnsignedByte();\n      if (mapping[typeid] == null) {\n        in.skipBytes(lastRegionLength - 1);\n        return;\n      }\n      Entityc entity=(Entityc)mapping[typeid].get();\n      entity.read(Reads.get(in));\n      entity.add();\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void readWorldEntities(DataInput stream) throws IOException {\n  Prov[] mapping=this.entityMapping == null ? EntityMapping.idMap : this.entityMapping;\n  int amount=stream.readInt();\n  for (int j=0; j < amount; j++) {\n    readChunk(stream,true,in -> {\n      int typeid=in.readUnsignedByte();\n      if (mapping[typeid] == null) {\n        in.skipBytes(lastRegionLength - 1);\n        return;\n      }\n      Entityc entity=(Entityc)mapping[typeid].get();\n      entity.read(Reads.get(in));\n      entity.add();\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 38
      },
      "nodeContext" : "int amount=stream.readInt();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 22,
    "startColumnNumber" : 21,
    "endLineNumber" : 22,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}