{
  "id" : 438,
  "expression" : "!isResponseGzipped",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/filters/common/GZipResponseFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!isResponseGzipped",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 88,
      "startColumnNumber" : 90,
      "endLineNumber" : 88,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 88,
        "startColumnNumber" : 35,
        "endLineNumber" : 88,
        "endColumnNumber" : 140
      },
      "nodeContext" : "isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 88,
        "startColumnNumber" : 22,
        "endLineNumber" : 88,
        "endColumnNumber" : 140
      },
      "nodeContext" : "shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 141
      },
      "nodeContext" : "final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean shouldFilter(HttpResponseMessage response){\n  if (!ENABLED.get() || !response.hasBody() || response.getContext().isInBrownoutMode()) {\n    return false;\n  }\n  if (response.getContext().get(CommonContextKeys.GZIPPER) != null) {\n    return true;\n  }\n  final HttpRequestInfo request=response.getInboundRequest();\n  final Boolean overrideIsGzipRequested=(Boolean)response.getContext().get(CommonContextKeys.OVERRIDE_GZIP_REQUESTED);\n  final boolean isGzipRequested=(overrideIsGzipRequested == null) ? HttpUtils.acceptsGzip(request.getHeaders()) : overrideIsGzipRequested.booleanValue();\n  final Headers respHeaders=response.getHeaders();\n  boolean isResponseGzipped=HttpUtils.isGzipped(respHeaders);\n  final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n  if (shouldGzip) {\n    response.getContext().set(CommonContextKeys.GZIPPER,getGzipper());\n  }\n  return shouldGzip;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 141
      },
      "nodeContext" : "final boolean shouldGzip=isGzippableContentType(response) && isGzipRequested && !isResponseGzipped&& isRightSizeForGzip(response);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 88,
    "startColumnNumber" : 90,
    "endLineNumber" : 88,
    "endColumnNumber" : 108
  } ],
  "layoutRelationDataList" : [ ]
}