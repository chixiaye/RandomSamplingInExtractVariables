{
  "id" : 272,
  "expression" : "preparedMock(fieldReader.read(),field)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/configuration/injection/scanner/MockScanner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "preparedMock(fieldReader.read(),field)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 59,
      "startColumnNumber" : 34,
      "endLineNumber" : 59,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 59,
        "startColumnNumber" : 19,
        "endLineNumber" : 59,
        "endColumnNumber" : 73
      },
      "nodeContext" : "mockInstance=preparedMock(fieldReader.read(),field)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Object mockInstance=preparedMock(fieldReader.read(),field);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 55,
        "startColumnNumber" : 54,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  FieldReader fieldReader=new FieldReader(instance,field);\n  Object mockInstance=preparedMock(fieldReader.read(),field);\n  if (mockInstance != null) {\n    mocks.add(mockInstance);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Field field : clazz.getDeclaredFields()) {\n  FieldReader fieldReader=new FieldReader(instance,field);\n  Object mockInstance=preparedMock(fieldReader.read(),field);\n  if (mockInstance != null) {\n    mocks.add(mockInstance);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 53,
        "startColumnNumber" : 31,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<Object> mocks=newMockSafeHashSet();\n  for (  Field field : clazz.getDeclaredFields()) {\n    FieldReader fieldReader=new FieldReader(instance,field);\n    Object mockInstance=preparedMock(fieldReader.read(),field);\n    if (mockInstance != null) {\n      mocks.add(mockInstance);\n    }\n  }\n  return mocks;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Scan and prepare mocks for the given <code>testClassInstance</code> and <code>clazz</code> in the type hierarchy.\n * @return A prepared set of mock\n */\nprivate Set<Object> scan(){\n  Set<Object> mocks=newMockSafeHashSet();\n  for (  Field field : clazz.getDeclaredFields()) {\n    FieldReader fieldReader=new FieldReader(instance,field);\n    Object mockInstance=preparedMock(fieldReader.read(),field);\n    if (mockInstance != null) {\n      mocks.add(mockInstance);\n    }\n  }\n  return mocks;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Object mockInstance=preparedMock(fieldReader.read(),field);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 59,
    "startColumnNumber" : 34,
    "endLineNumber" : 59,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}