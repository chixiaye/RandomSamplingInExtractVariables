{
  "id" : 439,
  "expression" : "json",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/test/org/openqa/selenium/grid/data/NodeStatusTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "json",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 59,
      "startColumnNumber" : 20,
      "endLineNumber" : 59,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 59,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 39
      },
      "nodeContext" : "json.toJson(status)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 59,
        "startColumnNumber" : 11,
        "endLineNumber" : 59,
        "endColumnNumber" : 39
      },
      "nodeContext" : "source=json.toJson(status)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "String source=json.toJson(status);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 38,
        "startColumnNumber" : 63,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableCapabilities stereotype=new ImmutableCapabilities(\"cheese\",\"brie\");\n  NodeId nodeId=new NodeId(UUID.randomUUID());\n  NodeStatus status=new NodeStatus(nodeId,new URI(\"http://localhost:23456\"),100,ImmutableSet.of(new Slot(new SlotId(nodeId,UUID.randomUUID()),stereotype,Instant.EPOCH,Optional.of(new Session(new SessionId(UUID.randomUUID()),new URI(\"http://localhost:1235\"),stereotype,new ImmutableCapabilities(\"peas\",\"sausages\"),Instant.now())))),UP);\n  Json json=new Json();\n  String source=json.toJson(status);\n  System.out.println(source);\n  Object seen=json.toType(source,NodeStatus.class);\n  assertThat(seen).isEqualTo(status);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void ensureRoundTripWorks() throws URISyntaxException {\n  ImmutableCapabilities stereotype=new ImmutableCapabilities(\"cheese\",\"brie\");\n  NodeId nodeId=new NodeId(UUID.randomUUID());\n  NodeStatus status=new NodeStatus(nodeId,new URI(\"http://localhost:23456\"),100,ImmutableSet.of(new Slot(new SlotId(nodeId,UUID.randomUUID()),stereotype,Instant.EPOCH,Optional.of(new Session(new SessionId(UUID.randomUUID()),new URI(\"http://localhost:1235\"),stereotype,new ImmutableCapabilities(\"peas\",\"sausages\"),Instant.now())))),UP);\n  Json json=new Json();\n  String source=json.toJson(status);\n  System.out.println(source);\n  Object seen=json.toType(source,NodeStatus.class);\n  assertThat(seen).isEqualTo(status);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "String source=json.toJson(status);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.json.Json"
  }, {
    "nodeContext" : "json",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 63,
      "startColumnNumber" : 18,
      "endLineNumber" : 63,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 63,
        "startColumnNumber" : 18,
        "endLineNumber" : 63,
        "endColumnNumber" : 55
      },
      "nodeContext" : "json.toType(source,NodeStatus.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 63,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 55
      },
      "nodeContext" : "seen=json.toType(source,NodeStatus.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Object seen=json.toType(source,NodeStatus.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 38,
        "startColumnNumber" : 63,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableCapabilities stereotype=new ImmutableCapabilities(\"cheese\",\"brie\");\n  NodeId nodeId=new NodeId(UUID.randomUUID());\n  NodeStatus status=new NodeStatus(nodeId,new URI(\"http://localhost:23456\"),100,ImmutableSet.of(new Slot(new SlotId(nodeId,UUID.randomUUID()),stereotype,Instant.EPOCH,Optional.of(new Session(new SessionId(UUID.randomUUID()),new URI(\"http://localhost:1235\"),stereotype,new ImmutableCapabilities(\"peas\",\"sausages\"),Instant.now())))),UP);\n  Json json=new Json();\n  String source=json.toJson(status);\n  System.out.println(source);\n  Object seen=json.toType(source,NodeStatus.class);\n  assertThat(seen).isEqualTo(status);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void ensureRoundTripWorks() throws URISyntaxException {\n  ImmutableCapabilities stereotype=new ImmutableCapabilities(\"cheese\",\"brie\");\n  NodeId nodeId=new NodeId(UUID.randomUUID());\n  NodeStatus status=new NodeStatus(nodeId,new URI(\"http://localhost:23456\"),100,ImmutableSet.of(new Slot(new SlotId(nodeId,UUID.randomUUID()),stereotype,Instant.EPOCH,Optional.of(new Session(new SessionId(UUID.randomUUID()),new URI(\"http://localhost:1235\"),stereotype,new ImmutableCapabilities(\"peas\",\"sausages\"),Instant.now())))),UP);\n  Json json=new Json();\n  String source=json.toJson(status);\n  System.out.println(source);\n  Object seen=json.toType(source,NodeStatus.class);\n  assertThat(seen).isEqualTo(status);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Object seen=json.toType(source,NodeStatus.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.json.Json"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 59,
    "startColumnNumber" : 20,
    "endLineNumber" : 59,
    "endColumnNumber" : 24
  }, {
    "charLength" : 4,
    "startLineNumber" : 63,
    "startColumnNumber" : 18,
    "endLineNumber" : 63,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}