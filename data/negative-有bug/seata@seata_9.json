{
  "id" : 9,
  "expression" : "\"xxa哈哈dd\"",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/common/src/test/java/io/seata/common/util/BlobUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"xxa哈哈dd\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 65,
      "startColumnNumber" : 20,
      "endLineNumber" : 65,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 65,
        "endColumnNumber" : 70
      },
      "nodeContext" : "\"xxa哈哈dd\".getBytes(Constants.DEFAULT_CHARSET_NAME)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 65,
        "startColumnNumber" : 15,
        "endLineNumber" : 65,
        "endColumnNumber" : 70
      },
      "nodeContext" : "bs=\"xxa哈哈dd\".getBytes(Constants.DEFAULT_CHARSET_NAME)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 71
      },
      "nodeContext" : "byte[] bs=\"xxa哈哈dd\".getBytes(Constants.DEFAULT_CHARSET_NAME);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 63,
        "startColumnNumber" : 72,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNull(BlobUtils.bytes2Blob(null));\n  byte[] bs=\"xxa哈哈dd\".getBytes(Constants.DEFAULT_CHARSET_NAME);\n  assertThat(BlobUtils.bytes2Blob(bs)).isEqualTo(new SerialBlob(bs));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void bytes2Blob() throws UnsupportedEncodingException, SQLException {\n  assertNull(BlobUtils.bytes2Blob(null));\n  byte[] bs=\"xxa哈哈dd\".getBytes(Constants.DEFAULT_CHARSET_NAME);\n  assertThat(BlobUtils.bytes2Blob(bs)).isEqualTo(new SerialBlob(bs));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 71
      },
      "nodeContext" : "byte[] bs=\"xxa哈哈dd\".getBytes(Constants.DEFAULT_CHARSET_NAME);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 65,
    "startColumnNumber" : 20,
    "endLineNumber" : 65,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}