{
  "id" : 505,
  "expression" : "serverSocket.accept()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/network/EchoServer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serverSocket.accept()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 77,
      "startColumnNumber" : 38,
      "endLineNumber" : 77,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 77,
        "startColumnNumber" : 29,
        "endLineNumber" : 77,
        "endColumnNumber" : 59
      },
      "nodeContext" : "socket=serverSocket.accept()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 60
      },
      "nodeContext" : "final Socket socket=serverSocket.accept();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 76,
        "startColumnNumber" : 29,
        "endLineNumber" : 115,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final Socket socket=serverSocket.accept();\nsynchronized (sockets) {\n    if (closing) {\n      break;\n    }\n    sockets.add(socket);\n    Thread thread=new Thread(){\n      @Override public void run(){\n        try {\n          DataInputStream input=new DataInputStream(socket.getInputStream());\n          DataOutputStream output=new DataOutputStream(socket.getOutputStream());\n          while (socket.isConnected() && !socket.isClosed()) {\n            int size=input.readInt();\n            if (renegotiate.get()) {\n              renegotiate.set(false);\n              ((SSLSocket)socket).startHandshake();\n            }\n            byte[] bytes=new byte[size];\n            input.readFully(bytes);\n            output.writeInt(size);\n            output.write(bytes);\n            output.flush();\n          }\n        }\n catch (        IOException e) {\n        }\n finally {\n          try {\n            socket.close();\n          }\n catch (          IOException e) {\n          }\n        }\n      }\n    }\n;\n    thread.start();\n    threads.add(thread);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1892,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (!closing) {\n  final Socket socket=serverSocket.accept();\nsynchronized (sockets) {\n    if (closing) {\n      break;\n    }\n    sockets.add(socket);\n    Thread thread=new Thread(){\n      @Override public void run(){\n        try {\n          DataInputStream input=new DataInputStream(socket.getInputStream());\n          DataOutputStream output=new DataOutputStream(socket.getOutputStream());\n          while (socket.isConnected() && !socket.isClosed()) {\n            int size=input.readInt();\n            if (renegotiate.get()) {\n              renegotiate.set(false);\n              ((SSLSocket)socket).startHandshake();\n            }\n            byte[] bytes=new byte[size];\n            input.readFully(bytes);\n            output.writeInt(size);\n            output.write(bytes);\n            output.flush();\n          }\n        }\n catch (        IOException e) {\n        }\n finally {\n          try {\n            socket.close();\n          }\n catch (          IOException e) {\n          }\n        }\n      }\n    }\n;\n    thread.start();\n    threads.add(thread);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 158,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (!closing) {\n    final Socket socket=serverSocket.accept();\nsynchronized (sockets) {\n      if (closing) {\n        break;\n      }\n      sockets.add(socket);\n      Thread thread=new Thread(){\n        @Override public void run(){\n          try {\n            DataInputStream input=new DataInputStream(socket.getInputStream());\n            DataOutputStream output=new DataOutputStream(socket.getOutputStream());\n            while (socket.isConnected() && !socket.isClosed()) {\n              int size=input.readInt();\n              if (renegotiate.get()) {\n                renegotiate.set(false);\n                ((SSLSocket)socket).startHandshake();\n              }\n              byte[] bytes=new byte[size];\n              input.readFully(bytes);\n              output.writeInt(size);\n              output.write(bytes);\n              output.flush();\n            }\n          }\n catch (          IOException e) {\n          }\n finally {\n            try {\n              socket.close();\n            }\n catch (            IOException e) {\n            }\n          }\n        }\n      }\n;\n      thread.start();\n      threads.add(thread);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1976,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  while (!closing) {\n    final Socket socket=serverSocket.accept();\nsynchronized (sockets) {\n      if (closing) {\n        break;\n      }\n      sockets.add(socket);\n      Thread thread=new Thread(){\n        @Override public void run(){\n          try {\n            DataInputStream input=new DataInputStream(socket.getInputStream());\n            DataOutputStream output=new DataOutputStream(socket.getOutputStream());\n            while (socket.isConnected() && !socket.isClosed()) {\n              int size=input.readInt();\n              if (renegotiate.get()) {\n                renegotiate.set(false);\n                ((SSLSocket)socket).startHandshake();\n              }\n              byte[] bytes=new byte[size];\n              input.readFully(bytes);\n              output.writeInt(size);\n              output.write(bytes);\n              output.flush();\n            }\n          }\n catch (          IOException e) {\n          }\n finally {\n            try {\n              socket.close();\n            }\n catch (            IOException e) {\n            }\n          }\n        }\n      }\n;\n      thread.start();\n      threads.add(thread);\n    }\n  }\n}\n catch (IOException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 166,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1992,
        "startLineNumber" : 74,
        "startColumnNumber" : 22,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    while (!closing) {\n      final Socket socket=serverSocket.accept();\nsynchronized (sockets) {\n        if (closing) {\n          break;\n        }\n        sockets.add(socket);\n        Thread thread=new Thread(){\n          @Override public void run(){\n            try {\n              DataInputStream input=new DataInputStream(socket.getInputStream());\n              DataOutputStream output=new DataOutputStream(socket.getOutputStream());\n              while (socket.isConnected() && !socket.isClosed()) {\n                int size=input.readInt();\n                if (renegotiate.get()) {\n                  renegotiate.set(false);\n                  ((SSLSocket)socket).startHandshake();\n                }\n                byte[] bytes=new byte[size];\n                input.readFully(bytes);\n                output.writeInt(size);\n                output.write(bytes);\n                output.flush();\n              }\n            }\n catch (            IOException e) {\n            }\n finally {\n              try {\n                socket.close();\n              }\n catch (              IOException e) {\n              }\n            }\n          }\n        }\n;\n        thread.start();\n        threads.add(thread);\n      }\n    }\n  }\n catch (  IOException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2024,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    while (!closing) {\n      final Socket socket=serverSocket.accept();\nsynchronized (sockets) {\n        if (closing) {\n          break;\n        }\n        sockets.add(socket);\n        Thread thread=new Thread(){\n          @Override public void run(){\n            try {\n              DataInputStream input=new DataInputStream(socket.getInputStream());\n              DataOutputStream output=new DataOutputStream(socket.getOutputStream());\n              while (socket.isConnected() && !socket.isClosed()) {\n                int size=input.readInt();\n                if (renegotiate.get()) {\n                  renegotiate.set(false);\n                  ((SSLSocket)socket).startHandshake();\n                }\n                byte[] bytes=new byte[size];\n                input.readFully(bytes);\n                output.writeInt(size);\n                output.write(bytes);\n                output.flush();\n              }\n            }\n catch (            IOException e) {\n            }\n finally {\n              try {\n                socket.close();\n              }\n catch (              IOException e) {\n              }\n            }\n          }\n        }\n;\n        thread.start();\n        threads.add(thread);\n      }\n    }\n  }\n catch (  IOException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 26
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 60
      },
      "nodeContext" : "final Socket socket=serverSocket.accept();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.net.Socket"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 77,
    "startColumnNumber" : 38,
    "endLineNumber" : 77,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}