{
  "id" : 111,
  "expression" : "resource",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/test/src/test/java/com/bumptech/glide/request/target/ImageViewTargetTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 90,
      "startColumnNumber" : 27,
      "endLineNumber" : 90,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 47
      },
      "nodeContext" : "target.onResourceReady(resource,animation)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 48
      },
      "nodeContext" : "target.onResourceReady(resource,animation);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 85,
        "startColumnNumber" : 81,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") Transition<Drawable> animation=mock(Transition.class);\n  when(animation.transition(any(Drawable.class),eq(target))).thenReturn(false);\n  Drawable resource=new ColorDrawable(Color.GRAY);\n  target.onResourceReady(resource,animation);\n  assertEquals(resource,target.resource);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSetsDrawableOnViewInOnResourceReadyWhenAnimationReturnsFalse(){\n  @SuppressWarnings(\"unchecked\") Transition<Drawable> animation=mock(Transition.class);\n  when(animation.transition(any(Drawable.class),eq(target))).thenReturn(false);\n  Drawable resource=new ColorDrawable(Color.GRAY);\n  target.onResourceReady(resource,animation);\n  assertEquals(resource,target.resource);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 48
      },
      "nodeContext" : "target.onResourceReady(resource,animation);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.request.target.Drawable"
  }, {
    "nodeContext" : "resource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 92,
      "startColumnNumber" : 17,
      "endLineNumber" : 92,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(resource,target.resource)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(resource,target.resource);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 85,
        "startColumnNumber" : 81,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") Transition<Drawable> animation=mock(Transition.class);\n  when(animation.transition(any(Drawable.class),eq(target))).thenReturn(false);\n  Drawable resource=new ColorDrawable(Color.GRAY);\n  target.onResourceReady(resource,animation);\n  assertEquals(resource,target.resource);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSetsDrawableOnViewInOnResourceReadyWhenAnimationReturnsFalse(){\n  @SuppressWarnings(\"unchecked\") Transition<Drawable> animation=mock(Transition.class);\n  when(animation.transition(any(Drawable.class),eq(target))).thenReturn(false);\n  Drawable resource=new ColorDrawable(Color.GRAY);\n  target.onResourceReady(resource,animation);\n  assertEquals(resource,target.resource);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(resource,target.resource);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.bumptech.glide.request.target.Drawable"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 90,
    "startColumnNumber" : 27,
    "endLineNumber" : 90,
    "endColumnNumber" : 35
  }, {
    "charLength" : 8,
    "startLineNumber" : 92,
    "startColumnNumber" : 17,
    "endLineNumber" : 92,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}