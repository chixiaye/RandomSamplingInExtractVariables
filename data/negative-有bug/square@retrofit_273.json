{
  "id" : 273,
  "expression" : "newError",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/main/java/retrofit/RestAdapter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newError",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 240,
      "startColumnNumber" : 14,
      "endLineNumber" : 240,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 240,
        "startColumnNumber" : 14,
        "endLineNumber" : 240,
        "endColumnNumber" : 30
      },
      "nodeContext" : "newError == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 240,
        "startColumnNumber" : 10,
        "endLineNumber" : 243,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (newError == null) {\n  throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 238,
        "startColumnNumber" : 38,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Throwable newError=errorHandler.handleError(error);\n  if (newError == null) {\n    throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n  }\n  throw newError;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 238,
        "startColumnNumber" : 10,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (RetrofitError error) {\n  Throwable newError=errorHandler.handleError(error);\n  if (newError == null) {\n    throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n  }\n  throw newError;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return invokeRequest(requestInterceptor,methodInfo,args);\n}\n catch (RetrofitError error) {\n  Throwable newError=errorHandler.handleError(error);\n  if (newError == null) {\n    throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n  }\n  throw newError;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 235,
        "startColumnNumber" : 36,
        "endLineNumber" : 246,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    return invokeRequest(requestInterceptor,methodInfo,args);\n  }\n catch (  RetrofitError error) {\n    Throwable newError=errorHandler.handleError(error);\n    if (newError == null) {\n      throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n    }\n    throw newError;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 235,
        "startColumnNumber" : 6,
        "endLineNumber" : 246,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (methodInfo.isSynchronous) {\n  try {\n    return invokeRequest(requestInterceptor,methodInfo,args);\n  }\n catch (  RetrofitError error) {\n    Throwable newError=errorHandler.handleError(error);\n    if (newError == null) {\n      throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n    }\n    throw newError;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2296,
        "startLineNumber" : 226,
        "startColumnNumber" : 25,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (method.getDeclaringClass() == Object.class) {\n    return method.invoke(this,args);\n  }\n  final RestMethodInfo methodInfo=getMethodInfo(methodDetailsCache,method);\n  if (methodInfo.isSynchronous) {\n    try {\n      return invokeRequest(requestInterceptor,methodInfo,args);\n    }\n catch (    RetrofitError error) {\n      Throwable newError=errorHandler.handleError(error);\n      if (newError == null) {\n        throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n      }\n      throw newError;\n    }\n  }\n  if (httpExecutor == null || callbackExecutor == null) {\n    throw new IllegalStateException(\"Asynchronous invocation requires calling setExecutors.\");\n  }\n  if (methodInfo.isObservable) {\n    if (rxSupport == null) {\n      if (Platform.HAS_RX_JAVA) {\n        rxSupport=new RxSupport(httpExecutor,errorHandler,requestInterceptor);\n      }\n else {\n        throw new IllegalStateException(\"Observable method found but no RxJava on classpath.\");\n      }\n    }\n    return rxSupport.createRequestObservable(new RxSupport.Invoker(){\n      @Override public ResponseWrapper invoke(      RequestInterceptor requestInterceptor){\n        return (ResponseWrapper)invokeRequest(requestInterceptor,methodInfo,args);\n      }\n    }\n);\n  }\n  final RequestInterceptorTape interceptorTape=new RequestInterceptorTape();\n  requestInterceptor.intercept(interceptorTape);\n  Callback<?> callback=(Callback<?>)args[args.length - 1];\n  httpExecutor.execute(new CallbackRunnable(callback,callbackExecutor,errorHandler){\n    @Override public ResponseWrapper obtainResponse(){\n      return (ResponseWrapper)invokeRequest(interceptorTape,methodInfo,args);\n    }\n  }\n);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2440,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public Object invoke(Object proxy,Method method,final Object[] args) throws Throwable {\n  if (method.getDeclaringClass() == Object.class) {\n    return method.invoke(this,args);\n  }\n  final RestMethodInfo methodInfo=getMethodInfo(methodDetailsCache,method);\n  if (methodInfo.isSynchronous) {\n    try {\n      return invokeRequest(requestInterceptor,methodInfo,args);\n    }\n catch (    RetrofitError error) {\n      Throwable newError=errorHandler.handleError(error);\n      if (newError == null) {\n        throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n      }\n      throw newError;\n    }\n  }\n  if (httpExecutor == null || callbackExecutor == null) {\n    throw new IllegalStateException(\"Asynchronous invocation requires calling setExecutors.\");\n  }\n  if (methodInfo.isObservable) {\n    if (rxSupport == null) {\n      if (Platform.HAS_RX_JAVA) {\n        rxSupport=new RxSupport(httpExecutor,errorHandler,requestInterceptor);\n      }\n else {\n        throw new IllegalStateException(\"Observable method found but no RxJava on classpath.\");\n      }\n    }\n    return rxSupport.createRequestObservable(new RxSupport.Invoker(){\n      @Override public ResponseWrapper invoke(      RequestInterceptor requestInterceptor){\n        return (ResponseWrapper)invokeRequest(requestInterceptor,methodInfo,args);\n      }\n    }\n);\n  }\n  final RequestInterceptorTape interceptorTape=new RequestInterceptorTape();\n  requestInterceptor.intercept(interceptorTape);\n  Callback<?> callback=(Callback<?>)args[args.length - 1];\n  httpExecutor.execute(new CallbackRunnable(callback,callbackExecutor,errorHandler){\n    @Override public ResponseWrapper obtainResponse(){\n      return (ResponseWrapper)invokeRequest(interceptorTape,methodInfo,args);\n    }\n  }\n);\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 240,
        "startColumnNumber" : 14,
        "endLineNumber" : 240,
        "endColumnNumber" : 30
      },
      "nodeContext" : "newError == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  }, {
    "nodeContext" : "newError",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 244,
      "startColumnNumber" : 16,
      "endLineNumber" : 244,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 244,
        "startColumnNumber" : 10,
        "endLineNumber" : 244,
        "endColumnNumber" : 25
      },
      "nodeContext" : "throw newError;\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 238,
        "startColumnNumber" : 38,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Throwable newError=errorHandler.handleError(error);\n  if (newError == null) {\n    throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n  }\n  throw newError;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 238,
        "startColumnNumber" : 10,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (RetrofitError error) {\n  Throwable newError=errorHandler.handleError(error);\n  if (newError == null) {\n    throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n  }\n  throw newError;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 236,
        "startColumnNumber" : 8,
        "endLineNumber" : 245,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return invokeRequest(requestInterceptor,methodInfo,args);\n}\n catch (RetrofitError error) {\n  Throwable newError=errorHandler.handleError(error);\n  if (newError == null) {\n    throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n  }\n  throw newError;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 235,
        "startColumnNumber" : 36,
        "endLineNumber" : 246,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    return invokeRequest(requestInterceptor,methodInfo,args);\n  }\n catch (  RetrofitError error) {\n    Throwable newError=errorHandler.handleError(error);\n    if (newError == null) {\n      throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n    }\n    throw newError;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 235,
        "startColumnNumber" : 6,
        "endLineNumber" : 246,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (methodInfo.isSynchronous) {\n  try {\n    return invokeRequest(requestInterceptor,methodInfo,args);\n  }\n catch (  RetrofitError error) {\n    Throwable newError=errorHandler.handleError(error);\n    if (newError == null) {\n      throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n    }\n    throw newError;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2296,
        "startLineNumber" : 226,
        "startColumnNumber" : 25,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (method.getDeclaringClass() == Object.class) {\n    return method.invoke(this,args);\n  }\n  final RestMethodInfo methodInfo=getMethodInfo(methodDetailsCache,method);\n  if (methodInfo.isSynchronous) {\n    try {\n      return invokeRequest(requestInterceptor,methodInfo,args);\n    }\n catch (    RetrofitError error) {\n      Throwable newError=errorHandler.handleError(error);\n      if (newError == null) {\n        throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n      }\n      throw newError;\n    }\n  }\n  if (httpExecutor == null || callbackExecutor == null) {\n    throw new IllegalStateException(\"Asynchronous invocation requires calling setExecutors.\");\n  }\n  if (methodInfo.isObservable) {\n    if (rxSupport == null) {\n      if (Platform.HAS_RX_JAVA) {\n        rxSupport=new RxSupport(httpExecutor,errorHandler,requestInterceptor);\n      }\n else {\n        throw new IllegalStateException(\"Observable method found but no RxJava on classpath.\");\n      }\n    }\n    return rxSupport.createRequestObservable(new RxSupport.Invoker(){\n      @Override public ResponseWrapper invoke(      RequestInterceptor requestInterceptor){\n        return (ResponseWrapper)invokeRequest(requestInterceptor,methodInfo,args);\n      }\n    }\n);\n  }\n  final RequestInterceptorTape interceptorTape=new RequestInterceptorTape();\n  requestInterceptor.intercept(interceptorTape);\n  Callback<?> callback=(Callback<?>)args[args.length - 1];\n  httpExecutor.execute(new CallbackRunnable(callback,callbackExecutor,errorHandler){\n    @Override public ResponseWrapper obtainResponse(){\n      return (ResponseWrapper)invokeRequest(interceptorTape,methodInfo,args);\n    }\n  }\n);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2440,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public Object invoke(Object proxy,Method method,final Object[] args) throws Throwable {\n  if (method.getDeclaringClass() == Object.class) {\n    return method.invoke(this,args);\n  }\n  final RestMethodInfo methodInfo=getMethodInfo(methodDetailsCache,method);\n  if (methodInfo.isSynchronous) {\n    try {\n      return invokeRequest(requestInterceptor,methodInfo,args);\n    }\n catch (    RetrofitError error) {\n      Throwable newError=errorHandler.handleError(error);\n      if (newError == null) {\n        throw new IllegalStateException(\"Error handler returned null for wrapped exception.\",error);\n      }\n      throw newError;\n    }\n  }\n  if (httpExecutor == null || callbackExecutor == null) {\n    throw new IllegalStateException(\"Asynchronous invocation requires calling setExecutors.\");\n  }\n  if (methodInfo.isObservable) {\n    if (rxSupport == null) {\n      if (Platform.HAS_RX_JAVA) {\n        rxSupport=new RxSupport(httpExecutor,errorHandler,requestInterceptor);\n      }\n else {\n        throw new IllegalStateException(\"Observable method found but no RxJava on classpath.\");\n      }\n    }\n    return rxSupport.createRequestObservable(new RxSupport.Invoker(){\n      @Override public ResponseWrapper invoke(      RequestInterceptor requestInterceptor){\n        return (ResponseWrapper)invokeRequest(requestInterceptor,methodInfo,args);\n      }\n    }\n);\n  }\n  final RequestInterceptorTape interceptorTape=new RequestInterceptorTape();\n  requestInterceptor.intercept(interceptorTape);\n  Callback<?> callback=(Callback<?>)args[args.length - 1];\n  httpExecutor.execute(new CallbackRunnable(callback,callbackExecutor,errorHandler){\n    @Override public ResponseWrapper obtainResponse(){\n      return (ResponseWrapper)invokeRequest(interceptorTape,methodInfo,args);\n    }\n  }\n);\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 244,
        "startColumnNumber" : 10,
        "endLineNumber" : 244,
        "endColumnNumber" : 25
      },
      "nodeContext" : "throw newError;\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 240,
    "startColumnNumber" : 14,
    "endLineNumber" : 240,
    "endColumnNumber" : 22
  }, {
    "charLength" : 8,
    "startLineNumber" : 244,
    "startColumnNumber" : 16,
    "endLineNumber" : 244,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}