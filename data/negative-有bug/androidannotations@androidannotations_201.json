{
  "id" : 201,
  "expression" : "element",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ClickProcessor.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 56,
      "startColumnNumber" : 64,
      "endLineNumber" : 56,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 56,
        "startColumnNumber" : 23,
        "endLineNumber" : 56,
        "endColumnNumber" : 72
      },
      "nodeContext" : "activitiesHolder.getEnclosingEBeanHolder(element)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 56,
        "startColumnNumber" : 14,
        "endLineNumber" : 56,
        "endColumnNumber" : 72
      },
      "nodeContext" : "holder=activitiesHolder.getEnclosingEBeanHolder(element)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 73
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 54,
        "startColumnNumber" : 91,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 73
      },
      "nodeContext" : "EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 58,
      "startColumnNumber" : 22,
      "endLineNumber" : 58,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "element.getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 58,
        "endColumnNumber" : 56
      },
      "nodeContext" : "element.getSimpleName().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 58,
        "startColumnNumber" : 9,
        "endLineNumber" : 58,
        "endColumnNumber" : 56
      },
      "nodeContext" : "methodName=element.getSimpleName().toString()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String methodName=element.getSimpleName().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 54,
        "startColumnNumber" : 91,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String methodName=element.getSimpleName().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 60,
      "startColumnNumber" : 60,
      "endLineNumber" : 60,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 60,
        "startColumnNumber" : 40,
        "endLineNumber" : 60,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(ExecutableElement)element",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 67
      },
      "nodeContext" : "executableElement=(ExecutableElement)element",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ExecutableElement executableElement=(ExecutableElement)element;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 54,
        "startColumnNumber" : 91,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ExecutableElement executableElement=(ExecutableElement)element;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 65,
      "startColumnNumber" : 21,
      "endLineNumber" : 65,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 65,
        "startColumnNumber" : 21,
        "endLineNumber" : 65,
        "endColumnNumber" : 55
      },
      "nodeContext" : "element.getAnnotation(Click.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 55
      },
      "nodeContext" : "annotation=element.getAnnotation(Click.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Click annotation=element.getAnnotation(Click.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 54,
        "startColumnNumber" : 91,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Click annotation=element.getAnnotation(Click.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  }, {
    "nodeContext" : "element",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 66,
      "startColumnNumber" : 48,
      "endLineNumber" : 66,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 66,
        "startColumnNumber" : 28,
        "endLineNumber" : 66,
        "endColumnNumber" : 95
      },
      "nodeContext" : "extractQualifiedIds(element,annotation.value(),\"Clicked\",holder)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 66,
        "startColumnNumber" : 18,
        "endLineNumber" : 66,
        "endColumnNumber" : 95
      },
      "nodeContext" : "idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 96
      },
      "nodeContext" : "List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1328,
        "startLineNumber" : 54,
        "startColumnNumber" : 91,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 87,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasViewParameter=parameters.size() == 1;\n  Click annotation=element.getAnnotation(Click.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n  JDefinedClass onClickListenerClass=codeModel.anonymousClass(holder.refClass(\"android.view.View.OnClickListener\"));\n  JMethod onClickMethod=onClickListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onClick\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JVar onClickViewParam=onClickMethod.param(viewClass,\"view\");\n  JInvocation clickCall=onClickMethod.body().invoke(methodName);\n  if (hasViewParameter) {\n    clickCall.arg(onClickViewParam);\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock block=holder.afterSetContentView.body().block();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    JVar view=block.decl(viewClass,\"view\",findViewById.arg(idRef));\n    block._if(view.ne(JExpr._null()))._then().invoke(view,\"setOnClickListener\").arg(JExpr._new(onClickListenerClass));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 96
      },
      "nodeContext" : "List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"Clicked\",holder);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.lang.model.element.Element"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 56,
    "startColumnNumber" : 64,
    "endLineNumber" : 56,
    "endColumnNumber" : 71
  }, {
    "charLength" : 7,
    "startLineNumber" : 58,
    "startColumnNumber" : 22,
    "endLineNumber" : 58,
    "endColumnNumber" : 29
  }, {
    "charLength" : 7,
    "startLineNumber" : 60,
    "startColumnNumber" : 60,
    "endLineNumber" : 60,
    "endColumnNumber" : 67
  }, {
    "charLength" : 7,
    "startLineNumber" : 65,
    "startColumnNumber" : 21,
    "endLineNumber" : 65,
    "endColumnNumber" : 28
  }, {
    "charLength" : 7,
    "startLineNumber" : 66,
    "startColumnNumber" : 48,
    "endLineNumber" : 66,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}