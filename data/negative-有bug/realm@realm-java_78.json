{
  "id" : 78,
  "expression" : "new Object[SYNC_CONFIG_OPTIONS]",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Object[SYNC_CONFIG_OPTIONS]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 132,
      "startColumnNumber" : 33,
      "endLineNumber" : 132,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 132,
        "startColumnNumber" : 21,
        "endLineNumber" : 132,
        "endColumnNumber" : 64
      },
      "nodeContext" : "configObj=new Object[SYNC_CONFIG_OPTIONS]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 132,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Object[] configObj=new Object[SYNC_CONFIG_OPTIONS];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3400,
        "startLineNumber" : 80,
        "startColumnNumber" : 49,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  User user=syncConfig.getUser();\n  App app=user.getApp();\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=user.getId();\n  String syncRealmAuthUrl=user.getApp().getConfiguration().getBaseUrl().toString();\n  String syncUserRefreshToken=user.getRefreshToken();\n  String syncUserAccessToken=user.getAccessToken();\n  String deviceId=user.getDeviceId();\n  byte sessionStopPolicy=syncConfig.getSessionStopPolicy().getNativeValue();\n  String urlPrefix=syncConfig.getUrlPrefix();\n  String customAuthorizationHeaderName=app.getConfiguration().getAuthorizationHeaderName();\n  Map<String,String> customHeaders=app.getConfiguration().getCustomRequestHeaders();\n  long appNativePointer;\n  try {\n    if (osAppField == null) {\nsynchronized (SyncObjectServerFacade.class) {\n        if (osAppField == null) {\n          Field field=App.class.getDeclaredField(\"osApp\");\n          field.setAccessible(true);\n          osAppField=field;\n        }\n      }\n    }\n    OsApp osApp=(OsApp)osAppField.get(app);\n    appNativePointer=osApp.getNativePtr();\n  }\n catch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n  BsonValue partitionValue=syncConfig.getPartitionValue();\n  String encodedPartitionValue;\nswitch (partitionValue.getBsonType()) {\ncase STRING:case OBJECT_ID:case INT32:case INT64:case NULL:    encodedPartitionValue=JniBsonProtocol.encode(partitionValue,AppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);\n  break;\ndefault:throw new IllegalArgumentException(\"Unsupported type: \" + partitionValue);\n}\nint i=0;\nObject[] configObj=new Object[SYNC_CONFIG_OPTIONS];\nconfigObj[i++]=rosUserIdentity;\nconfigObj[i++]=rosServerUrl;\nconfigObj[i++]=syncRealmAuthUrl;\nconfigObj[i++]=syncUserRefreshToken;\nconfigObj[i++]=syncUserAccessToken;\nconfigObj[i++]=deviceId;\nconfigObj[i++]=sessionStopPolicy;\nconfigObj[i++]=urlPrefix;\nconfigObj[i++]=customAuthorizationHeaderName;\nconfigObj[i++]=customHeaders;\nconfigObj[i++]=OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;\nconfigObj[i++]=encodedPartitionValue;\nconfigObj[i++]=app.getSync();\nconfigObj[i++]=appNativePointer;\nreturn configObj;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 362,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3510,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  User user=syncConfig.getUser();\n  App app=user.getApp();\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=user.getId();\n  String syncRealmAuthUrl=user.getApp().getConfiguration().getBaseUrl().toString();\n  String syncUserRefreshToken=user.getRefreshToken();\n  String syncUserAccessToken=user.getAccessToken();\n  String deviceId=user.getDeviceId();\n  byte sessionStopPolicy=syncConfig.getSessionStopPolicy().getNativeValue();\n  String urlPrefix=syncConfig.getUrlPrefix();\n  String customAuthorizationHeaderName=app.getConfiguration().getAuthorizationHeaderName();\n  Map<String,String> customHeaders=app.getConfiguration().getCustomRequestHeaders();\n  long appNativePointer;\n  try {\n    if (osAppField == null) {\nsynchronized (SyncObjectServerFacade.class) {\n        if (osAppField == null) {\n          Field field=App.class.getDeclaredField(\"osApp\");\n          field.setAccessible(true);\n          osAppField=field;\n        }\n      }\n    }\n    OsApp osApp=(OsApp)osAppField.get(app);\n    appNativePointer=osApp.getNativePtr();\n  }\n catch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n  BsonValue partitionValue=syncConfig.getPartitionValue();\n  String encodedPartitionValue;\nswitch (partitionValue.getBsonType()) {\ncase STRING:case OBJECT_ID:case INT32:case INT64:case NULL:    encodedPartitionValue=JniBsonProtocol.encode(partitionValue,AppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);\n  break;\ndefault:throw new IllegalArgumentException(\"Unsupported type: \" + partitionValue);\n}\nint i=0;\nObject[] configObj=new Object[SYNC_CONFIG_OPTIONS];\nconfigObj[i++]=rosUserIdentity;\nconfigObj[i++]=rosServerUrl;\nconfigObj[i++]=syncRealmAuthUrl;\nconfigObj[i++]=syncUserRefreshToken;\nconfigObj[i++]=syncUserAccessToken;\nconfigObj[i++]=deviceId;\nconfigObj[i++]=sessionStopPolicy;\nconfigObj[i++]=urlPrefix;\nconfigObj[i++]=customAuthorizationHeaderName;\nconfigObj[i++]=customHeaders;\nconfigObj[i++]=OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;\nconfigObj[i++]=encodedPartitionValue;\nconfigObj[i++]=app.getSync();\nconfigObj[i++]=appNativePointer;\nreturn configObj;\n}\n else {\nreturn new Object[SYNC_CONFIG_OPTIONS];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 375,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3526,
        "startLineNumber" : 79,
        "startColumnNumber" : 75,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    User user=syncConfig.getUser();\n    App app=user.getApp();\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=user.getId();\n    String syncRealmAuthUrl=user.getApp().getConfiguration().getBaseUrl().toString();\n    String syncUserRefreshToken=user.getRefreshToken();\n    String syncUserAccessToken=user.getAccessToken();\n    String deviceId=user.getDeviceId();\n    byte sessionStopPolicy=syncConfig.getSessionStopPolicy().getNativeValue();\n    String urlPrefix=syncConfig.getUrlPrefix();\n    String customAuthorizationHeaderName=app.getConfiguration().getAuthorizationHeaderName();\n    Map<String,String> customHeaders=app.getConfiguration().getCustomRequestHeaders();\n    long appNativePointer;\n    try {\n      if (osAppField == null) {\nsynchronized (SyncObjectServerFacade.class) {\n          if (osAppField == null) {\n            Field field=App.class.getDeclaredField(\"osApp\");\n            field.setAccessible(true);\n            osAppField=field;\n          }\n        }\n      }\n      OsApp osApp=(OsApp)osAppField.get(app);\n      appNativePointer=osApp.getNativePtr();\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    BsonValue partitionValue=syncConfig.getPartitionValue();\n    String encodedPartitionValue;\nswitch (partitionValue.getBsonType()) {\ncase STRING:case OBJECT_ID:case INT32:case INT64:case NULL:      encodedPartitionValue=JniBsonProtocol.encode(partitionValue,AppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);\n    break;\ndefault:  throw new IllegalArgumentException(\"Unsupported type: \" + partitionValue);\n}\nint i=0;\nObject[] configObj=new Object[SYNC_CONFIG_OPTIONS];\nconfigObj[i++]=rosUserIdentity;\nconfigObj[i++]=rosServerUrl;\nconfigObj[i++]=syncRealmAuthUrl;\nconfigObj[i++]=syncUserRefreshToken;\nconfigObj[i++]=syncUserAccessToken;\nconfigObj[i++]=deviceId;\nconfigObj[i++]=sessionStopPolicy;\nconfigObj[i++]=urlPrefix;\nconfigObj[i++]=customAuthorizationHeaderName;\nconfigObj[i++]=customHeaders;\nconfigObj[i++]=OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;\nconfigObj[i++]=encodedPartitionValue;\nconfigObj[i++]=app.getSync();\nconfigObj[i++]=appNativePointer;\nreturn configObj;\n}\n else {\nreturn new Object[SYNC_CONFIG_OPTIONS];\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 376,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getSyncConfigurationOptions(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    User user=syncConfig.getUser();\n    App app=user.getApp();\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=user.getId();\n    String syncRealmAuthUrl=user.getApp().getConfiguration().getBaseUrl().toString();\n    String syncUserRefreshToken=user.getRefreshToken();\n    String syncUserAccessToken=user.getAccessToken();\n    String deviceId=user.getDeviceId();\n    byte sessionStopPolicy=syncConfig.getSessionStopPolicy().getNativeValue();\n    String urlPrefix=syncConfig.getUrlPrefix();\n    String customAuthorizationHeaderName=app.getConfiguration().getAuthorizationHeaderName();\n    Map<String,String> customHeaders=app.getConfiguration().getCustomRequestHeaders();\n    long appNativePointer;\n    try {\n      if (osAppField == null) {\nsynchronized (SyncObjectServerFacade.class) {\n          if (osAppField == null) {\n            Field field=App.class.getDeclaredField(\"osApp\");\n            field.setAccessible(true);\n            osAppField=field;\n          }\n        }\n      }\n      OsApp osApp=(OsApp)osAppField.get(app);\n      appNativePointer=osApp.getNativePtr();\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    BsonValue partitionValue=syncConfig.getPartitionValue();\n    String encodedPartitionValue;\nswitch (partitionValue.getBsonType()) {\ncase STRING:case OBJECT_ID:case INT32:case INT64:case NULL:      encodedPartitionValue=JniBsonProtocol.encode(partitionValue,AppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);\n    break;\ndefault:  throw new IllegalArgumentException(\"Unsupported type: \" + partitionValue);\n}\nint i=0;\nObject[] configObj=new Object[SYNC_CONFIG_OPTIONS];\nconfigObj[i++]=rosUserIdentity;\nconfigObj[i++]=rosServerUrl;\nconfigObj[i++]=syncRealmAuthUrl;\nconfigObj[i++]=syncUserRefreshToken;\nconfigObj[i++]=syncUserAccessToken;\nconfigObj[i++]=deviceId;\nconfigObj[i++]=sessionStopPolicy;\nconfigObj[i++]=urlPrefix;\nconfigObj[i++]=customAuthorizationHeaderName;\nconfigObj[i++]=customHeaders;\nconfigObj[i++]=OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;\nconfigObj[i++]=encodedPartitionValue;\nconfigObj[i++]=app.getSync();\nconfigObj[i++]=appNativePointer;\nreturn configObj;\n}\n else {\nreturn new Object[SYNC_CONFIG_OPTIONS];\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 389,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 132,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Object[] configObj=new Object[SYNC_CONFIG_OPTIONS];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.Object[]"
  }, {
    "nodeContext" : "new Object[SYNC_CONFIG_OPTIONS]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 149,
      "startColumnNumber" : 19,
      "endLineNumber" : 149,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 149,
        "endColumnNumber" : 51
      },
      "nodeContext" : "return new Object[SYNC_CONFIG_OPTIONS];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 148,
        "startColumnNumber" : 15,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new Object[SYNC_CONFIG_OPTIONS];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3510,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  User user=syncConfig.getUser();\n  App app=user.getApp();\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=user.getId();\n  String syncRealmAuthUrl=user.getApp().getConfiguration().getBaseUrl().toString();\n  String syncUserRefreshToken=user.getRefreshToken();\n  String syncUserAccessToken=user.getAccessToken();\n  String deviceId=user.getDeviceId();\n  byte sessionStopPolicy=syncConfig.getSessionStopPolicy().getNativeValue();\n  String urlPrefix=syncConfig.getUrlPrefix();\n  String customAuthorizationHeaderName=app.getConfiguration().getAuthorizationHeaderName();\n  Map<String,String> customHeaders=app.getConfiguration().getCustomRequestHeaders();\n  long appNativePointer;\n  try {\n    if (osAppField == null) {\nsynchronized (SyncObjectServerFacade.class) {\n        if (osAppField == null) {\n          Field field=App.class.getDeclaredField(\"osApp\");\n          field.setAccessible(true);\n          osAppField=field;\n        }\n      }\n    }\n    OsApp osApp=(OsApp)osAppField.get(app);\n    appNativePointer=osApp.getNativePtr();\n  }\n catch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n  BsonValue partitionValue=syncConfig.getPartitionValue();\n  String encodedPartitionValue;\nswitch (partitionValue.getBsonType()) {\ncase STRING:case OBJECT_ID:case INT32:case INT64:case NULL:    encodedPartitionValue=JniBsonProtocol.encode(partitionValue,AppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);\n  break;\ndefault:throw new IllegalArgumentException(\"Unsupported type: \" + partitionValue);\n}\nint i=0;\nObject[] configObj=new Object[SYNC_CONFIG_OPTIONS];\nconfigObj[i++]=rosUserIdentity;\nconfigObj[i++]=rosServerUrl;\nconfigObj[i++]=syncRealmAuthUrl;\nconfigObj[i++]=syncUserRefreshToken;\nconfigObj[i++]=syncUserAccessToken;\nconfigObj[i++]=deviceId;\nconfigObj[i++]=sessionStopPolicy;\nconfigObj[i++]=urlPrefix;\nconfigObj[i++]=customAuthorizationHeaderName;\nconfigObj[i++]=customHeaders;\nconfigObj[i++]=OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;\nconfigObj[i++]=encodedPartitionValue;\nconfigObj[i++]=app.getSync();\nconfigObj[i++]=appNativePointer;\nreturn configObj;\n}\n else {\nreturn new Object[SYNC_CONFIG_OPTIONS];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 375,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3526,
        "startLineNumber" : 79,
        "startColumnNumber" : 75,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    User user=syncConfig.getUser();\n    App app=user.getApp();\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=user.getId();\n    String syncRealmAuthUrl=user.getApp().getConfiguration().getBaseUrl().toString();\n    String syncUserRefreshToken=user.getRefreshToken();\n    String syncUserAccessToken=user.getAccessToken();\n    String deviceId=user.getDeviceId();\n    byte sessionStopPolicy=syncConfig.getSessionStopPolicy().getNativeValue();\n    String urlPrefix=syncConfig.getUrlPrefix();\n    String customAuthorizationHeaderName=app.getConfiguration().getAuthorizationHeaderName();\n    Map<String,String> customHeaders=app.getConfiguration().getCustomRequestHeaders();\n    long appNativePointer;\n    try {\n      if (osAppField == null) {\nsynchronized (SyncObjectServerFacade.class) {\n          if (osAppField == null) {\n            Field field=App.class.getDeclaredField(\"osApp\");\n            field.setAccessible(true);\n            osAppField=field;\n          }\n        }\n      }\n      OsApp osApp=(OsApp)osAppField.get(app);\n      appNativePointer=osApp.getNativePtr();\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    BsonValue partitionValue=syncConfig.getPartitionValue();\n    String encodedPartitionValue;\nswitch (partitionValue.getBsonType()) {\ncase STRING:case OBJECT_ID:case INT32:case INT64:case NULL:      encodedPartitionValue=JniBsonProtocol.encode(partitionValue,AppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);\n    break;\ndefault:  throw new IllegalArgumentException(\"Unsupported type: \" + partitionValue);\n}\nint i=0;\nObject[] configObj=new Object[SYNC_CONFIG_OPTIONS];\nconfigObj[i++]=rosUserIdentity;\nconfigObj[i++]=rosServerUrl;\nconfigObj[i++]=syncRealmAuthUrl;\nconfigObj[i++]=syncUserRefreshToken;\nconfigObj[i++]=syncUserAccessToken;\nconfigObj[i++]=deviceId;\nconfigObj[i++]=sessionStopPolicy;\nconfigObj[i++]=urlPrefix;\nconfigObj[i++]=customAuthorizationHeaderName;\nconfigObj[i++]=customHeaders;\nconfigObj[i++]=OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;\nconfigObj[i++]=encodedPartitionValue;\nconfigObj[i++]=app.getSync();\nconfigObj[i++]=appNativePointer;\nreturn configObj;\n}\n else {\nreturn new Object[SYNC_CONFIG_OPTIONS];\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 376,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getSyncConfigurationOptions(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    User user=syncConfig.getUser();\n    App app=user.getApp();\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=user.getId();\n    String syncRealmAuthUrl=user.getApp().getConfiguration().getBaseUrl().toString();\n    String syncUserRefreshToken=user.getRefreshToken();\n    String syncUserAccessToken=user.getAccessToken();\n    String deviceId=user.getDeviceId();\n    byte sessionStopPolicy=syncConfig.getSessionStopPolicy().getNativeValue();\n    String urlPrefix=syncConfig.getUrlPrefix();\n    String customAuthorizationHeaderName=app.getConfiguration().getAuthorizationHeaderName();\n    Map<String,String> customHeaders=app.getConfiguration().getCustomRequestHeaders();\n    long appNativePointer;\n    try {\n      if (osAppField == null) {\nsynchronized (SyncObjectServerFacade.class) {\n          if (osAppField == null) {\n            Field field=App.class.getDeclaredField(\"osApp\");\n            field.setAccessible(true);\n            osAppField=field;\n          }\n        }\n      }\n      OsApp osApp=(OsApp)osAppField.get(app);\n      appNativePointer=osApp.getNativePtr();\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    BsonValue partitionValue=syncConfig.getPartitionValue();\n    String encodedPartitionValue;\nswitch (partitionValue.getBsonType()) {\ncase STRING:case OBJECT_ID:case INT32:case INT64:case NULL:      encodedPartitionValue=JniBsonProtocol.encode(partitionValue,AppConfiguration.DEFAULT_BSON_CODEC_REGISTRY);\n    break;\ndefault:  throw new IllegalArgumentException(\"Unsupported type: \" + partitionValue);\n}\nint i=0;\nObject[] configObj=new Object[SYNC_CONFIG_OPTIONS];\nconfigObj[i++]=rosUserIdentity;\nconfigObj[i++]=rosServerUrl;\nconfigObj[i++]=syncRealmAuthUrl;\nconfigObj[i++]=syncUserRefreshToken;\nconfigObj[i++]=syncUserAccessToken;\nconfigObj[i++]=deviceId;\nconfigObj[i++]=sessionStopPolicy;\nconfigObj[i++]=urlPrefix;\nconfigObj[i++]=customAuthorizationHeaderName;\nconfigObj[i++]=customHeaders;\nconfigObj[i++]=OsRealmConfig.CLIENT_RESYNC_MODE_MANUAL;\nconfigObj[i++]=encodedPartitionValue;\nconfigObj[i++]=app.getSync();\nconfigObj[i++]=appNativePointer;\nreturn configObj;\n}\n else {\nreturn new Object[SYNC_CONFIG_OPTIONS];\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 389,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 149,
        "endColumnNumber" : 51
      },
      "nodeContext" : "return new Object[SYNC_CONFIG_OPTIONS];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.Object[]"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 132,
    "startColumnNumber" : 33,
    "endLineNumber" : 132,
    "endColumnNumber" : 64
  }, {
    "charLength" : 31,
    "startLineNumber" : 149,
    "startColumnNumber" : 19,
    "endLineNumber" : 149,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}