{
  "id" : 20,
  "expression" : "\"ms.\"",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ms.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 333,
      "startColumnNumber" : 138,
      "endLineNumber" : 333,
      "endColumnNumber" : 143
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 333,
        "startColumnNumber" : 27,
        "endLineNumber" : 333,
        "endColumnNumber" : 143
      },
      "nodeContext" : "\"separateTemplateAndData:sessionId(\" + sessionId + \") end, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 333,
        "endColumnNumber" : 144
      },
      "nodeContext" : "log(TAG,Log.INFO,\"separateTemplateAndData:sessionId(\" + sessionId + \") end, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 333,
        "endColumnNumber" : 145
      },
      "nodeContext" : "log(TAG,Log.INFO,\"separateTemplateAndData:sessionId(\" + sessionId + \") end, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2772,
        "startLineNumber" : 281,
        "startColumnNumber" : 150,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long startTime=System.currentTimeMillis();\n  log(TAG,Log.INFO,\"separateTemplateAndData:sessionId(\" + sessionId + \") start, htmlString = \"+ (htmlString.length() > 128 ? htmlString.substring(0,128) : htmlString));\n  JSONObject info=new JSONObject();\n  int lastEnd=0;\n  try {\n    Pattern pattern=Pattern.compile(SONIC_TAG_PATTERN,Pattern.MULTILINE);\n    Matcher matcher=pattern.matcher(htmlString);\n    while (matcher.find()) {\n      String dataInfo=matcher.group();\n      String dataMark=SONIC_TAG_DIFF_BEGIN;\n      int markLen=dataMark.length();\n      int keyStart=dataInfo.indexOf(dataMark);\n      int keyEnd=dataInfo.indexOf(SONIC_TAG_DIFF_END);\n      String key=null;\n      if (keyStart != -1 && keyStart + markLen < keyEnd) {\n        key=dataInfo.substring(keyStart + markLen,keyEnd);\n      }\n      key=SONIC_TAG_KEY_BEGIN + key + SONIC_TAG_KEY_END;\n      if (SonicUtils.shouldLog(Log.DEBUG)) {\n        SonicUtils.log(TAG,Log.DEBUG,\"separateTemplateAndData:sessionId(\" + sessionId + \"), key = \"+ key);\n      }\n      if (!TextUtils.isEmpty(key) && !TextUtils.isEmpty(dataInfo)) {\n        info.put(key,dataInfo);\n        int start=matcher.start();\n        templateStringBuilder.append(htmlString.substring(lastEnd,start));\n        templateStringBuilder.append(key);\n        lastEnd=matcher.end();\n      }\n    }\n    if (lastEnd < htmlString.length() && templateStringBuilder.length() > 0) {\n      templateStringBuilder.append(htmlString.substring(lastEnd,htmlString.length()));\n    }\n    int titleStart=templateStringBuilder.indexOf(SONIC_TAG_TITLE_OPEN);\n    int titleEnd=templateStringBuilder.indexOf(SONIC_TAG_TITLE_CLOSE,titleStart + SONIC_TAG_TITLE_OPEN.length()) + SONIC_TAG_TITLE_CLOSE.length();\n    if (titleStart != -1 && titleStart < titleEnd) {\n      String key=SONIC_TAG_TITLE_KEY;\n      info.put(key,templateStringBuilder.substring(titleStart,titleEnd));\n      templateStringBuilder.replace(titleStart,titleEnd,key);\n    }\n    dataStringBuilder.append(info.toString());\n  }\n catch (  Exception e) {\n    log(TAG,Log.ERROR,\"separateTemplateAndData:sessionId(\" + sessionId + \") error:\"+ e.getMessage());\n    return false;\n  }\n  log(TAG,Log.INFO,\"separateTemplateAndData:sessionId(\" + sessionId + \") end, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 343,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3275,
        "startLineNumber" : 272,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Separate html into templates and data\n * @param sessionId             A unique session id\n * @param htmlString            Html content\n * @param templateStringBuilder StringBuilder to save template content\n * @param dataStringBuilder     StringBuilder to save data content\n * @return The result of separate\n */\nstatic boolean separateTemplateAndData(String sessionId,String htmlString,StringBuilder templateStringBuilder,StringBuilder dataStringBuilder){\n  long startTime=System.currentTimeMillis();\n  log(TAG,Log.INFO,\"separateTemplateAndData:sessionId(\" + sessionId + \") start, htmlString = \"+ (htmlString.length() > 128 ? htmlString.substring(0,128) : htmlString));\n  JSONObject info=new JSONObject();\n  int lastEnd=0;\n  try {\n    Pattern pattern=Pattern.compile(SONIC_TAG_PATTERN,Pattern.MULTILINE);\n    Matcher matcher=pattern.matcher(htmlString);\n    while (matcher.find()) {\n      String dataInfo=matcher.group();\n      String dataMark=SONIC_TAG_DIFF_BEGIN;\n      int markLen=dataMark.length();\n      int keyStart=dataInfo.indexOf(dataMark);\n      int keyEnd=dataInfo.indexOf(SONIC_TAG_DIFF_END);\n      String key=null;\n      if (keyStart != -1 && keyStart + markLen < keyEnd) {\n        key=dataInfo.substring(keyStart + markLen,keyEnd);\n      }\n      key=SONIC_TAG_KEY_BEGIN + key + SONIC_TAG_KEY_END;\n      if (SonicUtils.shouldLog(Log.DEBUG)) {\n        SonicUtils.log(TAG,Log.DEBUG,\"separateTemplateAndData:sessionId(\" + sessionId + \"), key = \"+ key);\n      }\n      if (!TextUtils.isEmpty(key) && !TextUtils.isEmpty(dataInfo)) {\n        info.put(key,dataInfo);\n        int start=matcher.start();\n        templateStringBuilder.append(htmlString.substring(lastEnd,start));\n        templateStringBuilder.append(key);\n        lastEnd=matcher.end();\n      }\n    }\n    if (lastEnd < htmlString.length() && templateStringBuilder.length() > 0) {\n      templateStringBuilder.append(htmlString.substring(lastEnd,htmlString.length()));\n    }\n    int titleStart=templateStringBuilder.indexOf(SONIC_TAG_TITLE_OPEN);\n    int titleEnd=templateStringBuilder.indexOf(SONIC_TAG_TITLE_CLOSE,titleStart + SONIC_TAG_TITLE_OPEN.length()) + SONIC_TAG_TITLE_CLOSE.length();\n    if (titleStart != -1 && titleStart < titleEnd) {\n      String key=SONIC_TAG_TITLE_KEY;\n      info.put(key,templateStringBuilder.substring(titleStart,titleEnd));\n      templateStringBuilder.replace(titleStart,titleEnd,key);\n    }\n    dataStringBuilder.append(info.toString());\n  }\n catch (  Exception e) {\n    log(TAG,Log.ERROR,\"separateTemplateAndData:sessionId(\" + sessionId + \") error:\"+ e.getMessage());\n    return false;\n  }\n  log(TAG,Log.INFO,\"separateTemplateAndData:sessionId(\" + sessionId + \") end, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 364,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 333,
        "endColumnNumber" : 145
      },
      "nodeContext" : "log(TAG,Log.INFO,\"separateTemplateAndData:sessionId(\" + sessionId + \") end, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 333,
    "startColumnNumber" : 138,
    "endLineNumber" : 333,
    "endColumnNumber" : 143
  } ],
  "layoutRelationDataList" : [ ]
}