{
  "id" : 150,
  "expression" : "inputFiles",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/clsp/ConvertToClsSet.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inputFiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 37,
      "startColumnNumber" : 29,
      "endLineNumber" : 37,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 40
      },
      "nodeContext" : "addFilesFromDirectory(f,inputFiles)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 41
      },
      "nodeContext" : "addFilesFromDirectory(f,inputFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 36,
        "startColumnNumber" : 24,
        "endLineNumber" : 38,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  addFilesFromDirectory(f,inputFiles);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 36,
        "startColumnNumber" : 3,
        "endLineNumber" : 40,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (f.isDirectory()) {\n  addFilesFromDirectory(f,inputFiles);\n}\n else {\n  InputFile.addFilesFrom(f,inputFiles);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 34,
        "startColumnNumber" : 40,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File f=new File(args[i]);\n  if (f.isDirectory()) {\n    addFilesFromDirectory(f,inputFiles);\n  }\n else {\n    InputFile.addFilesFrom(f,inputFiles);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=1; i < args.length; i++) {\n  File f=new File(args[i]);\n  if (f.isDirectory()) {\n    addFilesFromDirectory(f,inputFiles);\n  }\n else {\n    InputFile.addFilesFrom(f,inputFiles);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 26,
        "startColumnNumber" : 76,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 26,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args) throws IOException, DecodeException {\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 41
      },
      "nodeContext" : "addFilesFromDirectory(f,inputFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.utils.files.InputFile>"
  }, {
    "nodeContext" : "inputFiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 39,
      "startColumnNumber" : 30,
      "endLineNumber" : 39,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 41
      },
      "nodeContext" : "InputFile.addFilesFrom(f,inputFiles)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 42
      },
      "nodeContext" : "InputFile.addFilesFrom(f,inputFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 38,
        "startColumnNumber" : 10,
        "endLineNumber" : 40,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  InputFile.addFilesFrom(f,inputFiles);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 36,
        "startColumnNumber" : 3,
        "endLineNumber" : 40,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (f.isDirectory()) {\n  addFilesFromDirectory(f,inputFiles);\n}\n else {\n  InputFile.addFilesFrom(f,inputFiles);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 34,
        "startColumnNumber" : 40,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File f=new File(args[i]);\n  if (f.isDirectory()) {\n    addFilesFromDirectory(f,inputFiles);\n  }\n else {\n    InputFile.addFilesFrom(f,inputFiles);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=1; i < args.length; i++) {\n  File f=new File(args[i]);\n  if (f.isDirectory()) {\n    addFilesFromDirectory(f,inputFiles);\n  }\n else {\n    InputFile.addFilesFrom(f,inputFiles);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 26,
        "startColumnNumber" : 76,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 26,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args) throws IOException, DecodeException {\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 42
      },
      "nodeContext" : "InputFile.addFilesFrom(f,inputFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.utils.files.InputFile>"
  }, {
    "nodeContext" : "inputFiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 42,
      "startColumnNumber" : 29,
      "endLineNumber" : 42,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (InputFile inputFile : inputFiles) {\n  LOG.info(\"Loaded: {}\",inputFile.getFile());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 26,
        "startColumnNumber" : 76,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 26,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args) throws IOException, DecodeException {\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (InputFile inputFile : inputFiles) {\n  LOG.info(\"Loaded: {}\",inputFile.getFile());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.utils.files.InputFile>"
  }, {
    "nodeContext" : "inputFiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 47,
      "startColumnNumber" : 12,
      "endLineNumber" : 47,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 23
      },
      "nodeContext" : "root.load(inputFiles)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 24
      },
      "nodeContext" : "root.load(inputFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 26,
        "startColumnNumber" : 76,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 26,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args) throws IOException, DecodeException {\n  if (args.length < 2) {\n    usage();\n    System.exit(1);\n  }\n  File output=new File(args[0]);\n  List<InputFile> inputFiles=new ArrayList<>(args.length - 1);\n  for (int i=1; i < args.length; i++) {\n    File f=new File(args[i]);\n    if (f.isDirectory()) {\n      addFilesFromDirectory(f,inputFiles);\n    }\n else {\n      InputFile.addFilesFrom(f,inputFiles);\n    }\n  }\n  for (  InputFile inputFile : inputFiles) {\n    LOG.info(\"Loaded: {}\",inputFile.getFile());\n  }\n  RootNode root=new RootNode(new JadxArgs());\n  root.load(inputFiles);\n  ClsSet set=new ClsSet();\n  set.load(root);\n  set.save(output);\n  LOG.info(\"Output: {}\",output);\n  LOG.info(\"done\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 24
      },
      "nodeContext" : "root.load(inputFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.utils.files.InputFile>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 37,
    "startColumnNumber" : 29,
    "endLineNumber" : 37,
    "endColumnNumber" : 39
  }, {
    "charLength" : 10,
    "startLineNumber" : 39,
    "startColumnNumber" : 30,
    "endLineNumber" : 39,
    "endColumnNumber" : 40
  }, {
    "charLength" : 10,
    "startLineNumber" : 42,
    "startColumnNumber" : 29,
    "endLineNumber" : 42,
    "endColumnNumber" : 39
  }, {
    "charLength" : 10,
    "startLineNumber" : 47,
    "startColumnNumber" : 12,
    "endLineNumber" : 47,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}