{
  "id" : 237,
  "expression" : "result",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-adminservice/src/test/java/com/ctrip/framework/apollo/adminservice/controller/AppControllerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 34,
      "startColumnNumber" : 40,
      "endLineNumber" : 34,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 34,
        "startColumnNumber" : 40,
        "endLineNumber" : 34,
        "endColumnNumber" : 57
      },
      "nodeContext" : "result.getAppId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.assertEquals(dto.getAppId(),result.getAppId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(dto.getAppId(),result.getAppId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 28,
        "startColumnNumber" : 39,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AppDTO dto=generateSampleDTOData();\n  ResponseEntity<AppDTO> response=restTemplate.postForEntity(getBaseAppUrl(),dto,AppDTO.class);\n  AppDTO result=response.getBody();\n  Assert.assertEquals(HttpStatus.OK,response.getStatusCode());\n  Assert.assertEquals(dto.getAppId(),result.getAppId());\n  Assert.assertTrue(result.getId() > 0);\n  Boolean falseUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"/unique\",Boolean.class);\n  Assert.assertFalse(falseUnique);\n  Boolean trueUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"true\"+ \"/unique\",Boolean.class);\n  Assert.assertTrue(trueUnique);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Sql(scripts=\"/controller/cleanup.sql\",executionPhase=ExecutionPhase.AFTER_TEST_METHOD) public void testCheckIfAppIdUnique(){\n  AppDTO dto=generateSampleDTOData();\n  ResponseEntity<AppDTO> response=restTemplate.postForEntity(getBaseAppUrl(),dto,AppDTO.class);\n  AppDTO result=response.getBody();\n  Assert.assertEquals(HttpStatus.OK,response.getStatusCode());\n  Assert.assertEquals(dto.getAppId(),result.getAppId());\n  Assert.assertTrue(result.getId() > 0);\n  Boolean falseUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"/unique\",Boolean.class);\n  Assert.assertFalse(falseUnique);\n  Boolean trueUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"true\"+ \"/unique\",Boolean.class);\n  Assert.assertTrue(trueUnique);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(dto.getAppId(),result.getAppId());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.common.dto.AppDTO"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 35,
      "startColumnNumber" : 22,
      "endLineNumber" : 35,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 35,
        "startColumnNumber" : 22,
        "endLineNumber" : 35,
        "endColumnNumber" : 36
      },
      "nodeContext" : "result.getId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 35,
        "startColumnNumber" : 22,
        "endLineNumber" : 35,
        "endColumnNumber" : 40
      },
      "nodeContext" : "result.getId() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Assert.assertTrue(result.getId() > 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertTrue(result.getId() > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 28,
        "startColumnNumber" : 39,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AppDTO dto=generateSampleDTOData();\n  ResponseEntity<AppDTO> response=restTemplate.postForEntity(getBaseAppUrl(),dto,AppDTO.class);\n  AppDTO result=response.getBody();\n  Assert.assertEquals(HttpStatus.OK,response.getStatusCode());\n  Assert.assertEquals(dto.getAppId(),result.getAppId());\n  Assert.assertTrue(result.getId() > 0);\n  Boolean falseUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"/unique\",Boolean.class);\n  Assert.assertFalse(falseUnique);\n  Boolean trueUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"true\"+ \"/unique\",Boolean.class);\n  Assert.assertTrue(trueUnique);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Sql(scripts=\"/controller/cleanup.sql\",executionPhase=ExecutionPhase.AFTER_TEST_METHOD) public void testCheckIfAppIdUnique(){\n  AppDTO dto=generateSampleDTOData();\n  ResponseEntity<AppDTO> response=restTemplate.postForEntity(getBaseAppUrl(),dto,AppDTO.class);\n  AppDTO result=response.getBody();\n  Assert.assertEquals(HttpStatus.OK,response.getStatusCode());\n  Assert.assertEquals(dto.getAppId(),result.getAppId());\n  Assert.assertTrue(result.getId() > 0);\n  Boolean falseUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"/unique\",Boolean.class);\n  Assert.assertFalse(falseUnique);\n  Boolean trueUnique=restTemplate.getForObject(getBaseAppUrl() + dto.getAppId() + \"true\"+ \"/unique\",Boolean.class);\n  Assert.assertTrue(trueUnique);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertTrue(result.getId() > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.common.dto.AppDTO"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 34,
    "startColumnNumber" : 40,
    "endLineNumber" : 34,
    "endColumnNumber" : 46
  }, {
    "charLength" : 6,
    "startLineNumber" : 35,
    "startColumnNumber" : 22,
    "endLineNumber" : 35,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}