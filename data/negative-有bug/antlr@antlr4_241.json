{
  "id" : 241,
  "expression" : "channelNames",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/LexerInterpreter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "channelNames",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 60,
      "startColumnNumber" : 22,
      "endLineNumber" : 60,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 60,
        "startColumnNumber" : 22,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "channelNames.toArray(new String[channelNames.size()])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "this.channelNames=channelNames.toArray(new String[channelNames.size()])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 45,
        "startColumnNumber" : 192,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(input);\n  if (atn.grammarType != ATNType.LEXER) {\n    throw new IllegalArgumentException(\"The ATN must be a lexer ATN.\");\n  }\n  this.grammarFileName=grammarFileName;\n  this.atn=atn;\n  this.tokenNames=new String[atn.maxTokenType];\n  for (int i=0; i < tokenNames.length; i++) {\n    tokenNames[i]=vocabulary.getDisplayName(i);\n  }\n  this.ruleNames=ruleNames.toArray(new String[ruleNames.size()]);\n  this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n  this.modeNames=modeNames.toArray(new String[modeNames.size()]);\n  this.vocabulary=vocabulary;\n  this._decisionToDFA=new DFA[atn.getNumberOfDecisions()];\n  for (int i=0; i < _decisionToDFA.length; i++) {\n    _decisionToDFA[i]=new DFA(atn.getDecisionState(i),i);\n  }\n  this._interp=new LexerATNSimulator(this,atn,_decisionToDFA,_sharedContextCache);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 45,
        "startColumnNumber" : 1,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LexerInterpreter(String grammarFileName,Vocabulary vocabulary,Collection<String> ruleNames,Collection<String> channelNames,Collection<String> modeNames,ATN atn,CharStream input){\n  super(input);\n  if (atn.grammarType != ATNType.LEXER) {\n    throw new IllegalArgumentException(\"The ATN must be a lexer ATN.\");\n  }\n  this.grammarFileName=grammarFileName;\n  this.atn=atn;\n  this.tokenNames=new String[atn.maxTokenType];\n  for (int i=0; i < tokenNames.length; i++) {\n    tokenNames[i]=vocabulary.getDisplayName(i);\n  }\n  this.ruleNames=ruleNames.toArray(new String[ruleNames.size()]);\n  this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n  this.modeNames=modeNames.toArray(new String[modeNames.size()]);\n  this.vocabulary=vocabulary;\n  this._decisionToDFA=new DFA[atn.getNumberOfDecisions()];\n  for (int i=0; i < _decisionToDFA.length; i++) {\n    _decisionToDFA[i]=new DFA(atn.getDecisionState(i),i);\n  }\n  this._interp=new LexerATNSimulator(this,atn,_decisionToDFA,_sharedContextCache);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.String>"
  }, {
    "nodeContext" : "channelNames",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 60,
      "startColumnNumber" : 54,
      "endLineNumber" : 60,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 60,
        "startColumnNumber" : 54,
        "endLineNumber" : 60,
        "endColumnNumber" : 73
      },
      "nodeContext" : "channelNames.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 60,
        "startColumnNumber" : 43,
        "endLineNumber" : 60,
        "endColumnNumber" : 74
      },
      "nodeContext" : "new String[channelNames.size()]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 60,
        "startColumnNumber" : 22,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "channelNames.toArray(new String[channelNames.size()])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "this.channelNames=channelNames.toArray(new String[channelNames.size()])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 45,
        "startColumnNumber" : 192,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(input);\n  if (atn.grammarType != ATNType.LEXER) {\n    throw new IllegalArgumentException(\"The ATN must be a lexer ATN.\");\n  }\n  this.grammarFileName=grammarFileName;\n  this.atn=atn;\n  this.tokenNames=new String[atn.maxTokenType];\n  for (int i=0; i < tokenNames.length; i++) {\n    tokenNames[i]=vocabulary.getDisplayName(i);\n  }\n  this.ruleNames=ruleNames.toArray(new String[ruleNames.size()]);\n  this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n  this.modeNames=modeNames.toArray(new String[modeNames.size()]);\n  this.vocabulary=vocabulary;\n  this._decisionToDFA=new DFA[atn.getNumberOfDecisions()];\n  for (int i=0; i < _decisionToDFA.length; i++) {\n    _decisionToDFA[i]=new DFA(atn.getDecisionState(i),i);\n  }\n  this._interp=new LexerATNSimulator(this,atn,_decisionToDFA,_sharedContextCache);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 45,
        "startColumnNumber" : 1,
        "endLineNumber" : 69,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LexerInterpreter(String grammarFileName,Vocabulary vocabulary,Collection<String> ruleNames,Collection<String> channelNames,Collection<String> modeNames,ATN atn,CharStream input){\n  super(input);\n  if (atn.grammarType != ATNType.LEXER) {\n    throw new IllegalArgumentException(\"The ATN must be a lexer ATN.\");\n  }\n  this.grammarFileName=grammarFileName;\n  this.atn=atn;\n  this.tokenNames=new String[atn.maxTokenType];\n  for (int i=0; i < tokenNames.length; i++) {\n    tokenNames[i]=vocabulary.getDisplayName(i);\n  }\n  this.ruleNames=ruleNames.toArray(new String[ruleNames.size()]);\n  this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n  this.modeNames=modeNames.toArray(new String[modeNames.size()]);\n  this.vocabulary=vocabulary;\n  this._decisionToDFA=new DFA[atn.getNumberOfDecisions()];\n  for (int i=0; i < _decisionToDFA.length; i++) {\n    _decisionToDFA[i]=new DFA(atn.getDecisionState(i),i);\n  }\n  this._interp=new LexerATNSimulator(this,atn,_decisionToDFA,_sharedContextCache);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "this.channelNames=channelNames.toArray(new String[channelNames.size()]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 60,
    "startColumnNumber" : 22,
    "endLineNumber" : 60,
    "endColumnNumber" : 34
  }, {
    "charLength" : 12,
    "startLineNumber" : 60,
    "startColumnNumber" : 54,
    "endLineNumber" : 60,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}