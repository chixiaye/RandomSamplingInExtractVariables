{
  "id" : 24,
  "expression" : "base",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-registry/dubbo-registry-kubernetes/src/main/java/org/apache/dubbo/registry/kubernetes/util/KubernetesConfigUtils.java",
  "occurrences" : 27,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 34,
      "startColumnNumber" : 33,
      "endLineNumber" : 34,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new ConfigBuilder(base)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 35,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 37,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 34,
        "endColumnNumber" : 38
      },
      "nodeContext" : "new ConfigBuilder(base)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 37,
      "startColumnNumber" : 24,
      "endLineNumber" : 37,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 37,
        "startColumnNumber" : 24,
        "endLineNumber" : 37,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getApiVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 36,
        "startColumnNumber" : 32,
        "endLineNumber" : 37,
        "endColumnNumber" : 45
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 37,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 37,
        "startColumnNumber" : 24,
        "endLineNumber" : 37,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getApiVersion()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 39,
      "startColumnNumber" : 24,
      "endLineNumber" : 39,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 39,
        "startColumnNumber" : 24,
        "endLineNumber" : 39,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.getNamespace()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 38,
        "startColumnNumber" : 31,
        "endLineNumber" : 39,
        "endColumnNumber" : 44
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 39,
        "startColumnNumber" : 24,
        "endLineNumber" : 39,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.getNamespace()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 41,
      "startColumnNumber" : 24,
      "endLineNumber" : 41,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 41,
        "startColumnNumber" : 24,
        "endLineNumber" : 41,
        "endColumnNumber" : 42
      },
      "nodeContext" : "base.getUsername()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 40,
        "startColumnNumber" : 30,
        "endLineNumber" : 41,
        "endColumnNumber" : 43
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 41,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 41,
        "startColumnNumber" : 24,
        "endLineNumber" : 41,
        "endColumnNumber" : 42
      },
      "nodeContext" : "base.getUsername()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 43,
      "startColumnNumber" : 24,
      "endLineNumber" : 43,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 43,
        "startColumnNumber" : 24,
        "endLineNumber" : 43,
        "endColumnNumber" : 42
      },
      "nodeContext" : "base.getPassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 42,
        "startColumnNumber" : 30,
        "endLineNumber" : 43,
        "endColumnNumber" : 43
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 43,
        "startColumnNumber" : 24,
        "endLineNumber" : 43,
        "endColumnNumber" : 42
      },
      "nodeContext" : "base.getPassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 46,
      "startColumnNumber" : 24,
      "endLineNumber" : 46,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 46,
        "startColumnNumber" : 24,
        "endLineNumber" : 46,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getOauthToken()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 45,
        "startColumnNumber" : 32,
        "endLineNumber" : 46,
        "endColumnNumber" : 45
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 46,
        "startColumnNumber" : 24,
        "endLineNumber" : 46,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getOauthToken()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 49,
      "startColumnNumber" : 24,
      "endLineNumber" : 49,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 49,
        "startColumnNumber" : 24,
        "endLineNumber" : 49,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getCaCertFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 48,
        "startColumnNumber" : 32,
        "endLineNumber" : 49,
        "endColumnNumber" : 45
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 49,
        "startColumnNumber" : 24,
        "endLineNumber" : 49,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getCaCertFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 37,
      "endLineNumber" : 51,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 51,
        "startColumnNumber" : 37,
        "endLineNumber" : 51,
        "endColumnNumber" : 57
      },
      "nodeContext" : "base.getCaCertData()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 51,
        "startColumnNumber" : 24,
        "endLineNumber" : 51,
        "endColumnNumber" : 58
      },
      "nodeContext" : "decodeBase64(base.getCaCertData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 50,
        "startColumnNumber" : 32,
        "endLineNumber" : 51,
        "endColumnNumber" : 59
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 51,
        "startColumnNumber" : 24,
        "endLineNumber" : 51,
        "endColumnNumber" : 58
      },
      "nodeContext" : "decodeBase64(base.getCaCertData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 24,
      "endLineNumber" : 54,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getClientKeyFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 53,
        "startColumnNumber" : 35,
        "endLineNumber" : 54,
        "endColumnNumber" : 48
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getClientKeyFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 56,
      "startColumnNumber" : 37,
      "endLineNumber" : 56,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 56,
        "endColumnNumber" : 60
      },
      "nodeContext" : "base.getClientKeyData()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 56,
        "startColumnNumber" : 24,
        "endLineNumber" : 56,
        "endColumnNumber" : 61
      },
      "nodeContext" : "decodeBase64(base.getClientKeyData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 55,
        "startColumnNumber" : 35,
        "endLineNumber" : 56,
        "endColumnNumber" : 62
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 56,
        "startColumnNumber" : 24,
        "endLineNumber" : 56,
        "endColumnNumber" : 61
      },
      "nodeContext" : "decodeBase64(base.getClientKeyData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 59,
      "startColumnNumber" : 24,
      "endLineNumber" : 59,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 48
      },
      "nodeContext" : "base.getClientCertFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 58,
        "startColumnNumber" : 36,
        "endLineNumber" : 59,
        "endColumnNumber" : 49
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1434,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 123,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 48
      },
      "nodeContext" : "base.getClientCertFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 37,
      "endLineNumber" : 61,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 61,
        "startColumnNumber" : 37,
        "endLineNumber" : 61,
        "endColumnNumber" : 61
      },
      "nodeContext" : "base.getClientCertData()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "decodeBase64(base.getClientCertData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 63
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 136,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "decodeBase64(base.getClientCertData())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 64,
      "startColumnNumber" : 24,
      "endLineNumber" : 64,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 64,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getClientKeyAlgo()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 64,
        "endColumnNumber" : 48
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 147,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 64,
        "startColumnNumber" : 24,
        "endLineNumber" : 64,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getClientKeyAlgo()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 66,
      "startColumnNumber" : 24,
      "endLineNumber" : 66,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 53
      },
      "nodeContext" : "base.getClientKeyPassphrase()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 65,
        "startColumnNumber" : 41,
        "endLineNumber" : 66,
        "endColumnNumber" : 54
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 66,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 158,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 53
      },
      "nodeContext" : "base.getClientKeyPassphrase()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 69,
      "startColumnNumber" : 24,
      "endLineNumber" : 69,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 69,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 51
      },
      "nodeContext" : "base.getConnectionTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 69,
        "endColumnNumber" : 52
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2046,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 69,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 51
      },
      "nodeContext" : "base.getConnectionTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 24,
      "endLineNumber" : 71,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 71,
        "startColumnNumber" : 24,
        "endLineNumber" : 71,
        "endColumnNumber" : 48
      },
      "nodeContext" : "base.getRequestTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 70,
        "startColumnNumber" : 36,
        "endLineNumber" : 71,
        "endColumnNumber" : 49
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2189,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 180,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 71,
        "startColumnNumber" : 24,
        "endLineNumber" : 71,
        "endColumnNumber" : 48
      },
      "nodeContext" : "base.getRequestTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 73,
      "startColumnNumber" : 24,
      "endLineNumber" : 73,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 73,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 48
      },
      "nodeContext" : "base.getRollingTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 72,
        "startColumnNumber" : 36,
        "endLineNumber" : 73,
        "endColumnNumber" : 49
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 191,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 73,
        "startColumnNumber" : 24,
        "endLineNumber" : 73,
        "endColumnNumber" : 48
      },
      "nodeContext" : "base.getRollingTimeout()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 76,
      "startColumnNumber" : 24,
      "endLineNumber" : 76,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 76,
        "startColumnNumber" : 24,
        "endLineNumber" : 76,
        "endColumnNumber" : 56
      },
      "nodeContext" : "base.getWatchReconnectInterval()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 75,
        "startColumnNumber" : 44,
        "endLineNumber" : 76,
        "endColumnNumber" : 57
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2501,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 202,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 76,
        "startColumnNumber" : 24,
        "endLineNumber" : 76,
        "endColumnNumber" : 56
      },
      "nodeContext" : "base.getWatchReconnectInterval()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 78,
      "startColumnNumber" : 24,
      "endLineNumber" : 78,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 78,
        "startColumnNumber" : 24,
        "endLineNumber" : 78,
        "endColumnNumber" : 53
      },
      "nodeContext" : "base.getWatchReconnectLimit()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 77,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 54
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2660,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 78,
        "startColumnNumber" : 24,
        "endLineNumber" : 78,
        "endColumnNumber" : 53
      },
      "nodeContext" : "base.getWatchReconnectLimit()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 80,
      "startColumnNumber" : 24,
      "endLineNumber" : 80,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 80,
        "startColumnNumber" : 24,
        "endLineNumber" : 80,
        "endColumnNumber" : 49
      },
      "nodeContext" : "base.getLoggingInterval()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 79,
        "startColumnNumber" : 37,
        "endLineNumber" : 80,
        "endColumnNumber" : 50
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 224,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 80,
        "startColumnNumber" : 24,
        "endLineNumber" : 80,
        "endColumnNumber" : 49
      },
      "nodeContext" : "base.getLoggingInterval()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 83,
      "startColumnNumber" : 24,
      "endLineNumber" : 83,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.isTrustCerts()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 82,
        "startColumnNumber" : 32,
        "endLineNumber" : 83,
        "endColumnNumber" : 44
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2937,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 83,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 235,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.isTrustCerts()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 85,
      "startColumnNumber" : 24,
      "endLineNumber" : 85,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 85,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.isTrustCerts()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 84,
        "startColumnNumber" : 34,
        "endLineNumber" : 85,
        "endColumnNumber" : 44
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3071,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 85,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 246,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 85,
        "startColumnNumber" : 24,
        "endLineNumber" : 85,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.isTrustCerts()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 88,
      "startColumnNumber" : 24,
      "endLineNumber" : 88,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 88,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.getHttpProxy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 87,
        "startColumnNumber" : 31,
        "endLineNumber" : 88,
        "endColumnNumber" : 44
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3200,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 88,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 257,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 88,
        "startColumnNumber" : 24,
        "endLineNumber" : 88,
        "endColumnNumber" : 43
      },
      "nodeContext" : "base.getHttpProxy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 90,
      "startColumnNumber" : 24,
      "endLineNumber" : 90,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getHttpsProxy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 89,
        "startColumnNumber" : 32,
        "endLineNumber" : 90,
        "endColumnNumber" : 45
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3331,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 268,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 90,
        "endColumnNumber" : 44
      },
      "nodeContext" : "base.getHttpsProxy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 92,
      "startColumnNumber" : 24,
      "endLineNumber" : 92,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 92,
        "startColumnNumber" : 24,
        "endLineNumber" : 92,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getProxyUsername()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 91,
        "startColumnNumber" : 35,
        "endLineNumber" : 92,
        "endColumnNumber" : 48
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3471,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 279,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 92,
        "startColumnNumber" : 24,
        "endLineNumber" : 92,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getProxyUsername()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 94,
      "startColumnNumber" : 24,
      "endLineNumber" : 94,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 94,
        "startColumnNumber" : 24,
        "endLineNumber" : 94,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getProxyPassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 93,
        "startColumnNumber" : 35,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3611,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 290,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 94,
        "startColumnNumber" : 24,
        "endLineNumber" : 94,
        "endColumnNumber" : 47
      },
      "nodeContext" : "base.getProxyPassword()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  }, {
    "nodeContext" : "base",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 96,
      "startColumnNumber" : 24,
      "endLineNumber" : 96,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 96,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 41
      },
      "nodeContext" : "base.getNoProxy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 95,
        "startColumnNumber" : 29,
        "endLineNumber" : 96,
        "endColumnNumber" : 42
      },
      "nodeContext" : "url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 3733,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 301,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 3758,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 303,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3766,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 304,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3918,
        "startLineNumber" : 29,
        "startColumnNumber" : 57,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 314,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3971,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Config createKubernetesConfig(URL url){\n  Config base=Config.autoConfigure(null);\n  return new ConfigBuilder(base).withMasterUrl(buildMasterUrl(url)).withApiVersion(url.getParameter(KubernetesClientConst.API_VERSION,base.getApiVersion())).withNamespace(url.getParameter(KubernetesClientConst.NAMESPACE,base.getNamespace())).withUsername(url.getParameter(KubernetesClientConst.USERNAME,base.getUsername())).withPassword(url.getParameter(KubernetesClientConst.PASSWORD,base.getPassword())).withOauthToken(url.getParameter(KubernetesClientConst.OAUTH_TOKEN,base.getOauthToken())).withCaCertFile(url.getParameter(KubernetesClientConst.CA_CERT_FILE,base.getCaCertFile())).withCaCertData(url.getParameter(KubernetesClientConst.CA_CERT_DATA,decodeBase64(base.getCaCertData()))).withClientKeyFile(url.getParameter(KubernetesClientConst.CLIENT_KEY_FILE,base.getClientKeyFile())).withClientKeyData(url.getParameter(KubernetesClientConst.CLIENT_KEY_DATA,decodeBase64(base.getClientKeyData()))).withClientCertFile(url.getParameter(KubernetesClientConst.CLIENT_CERT_FILE,base.getClientCertFile())).withClientCertData(url.getParameter(KubernetesClientConst.CLIENT_CERT_DATA,decodeBase64(base.getClientCertData()))).withClientKeyAlgo(url.getParameter(KubernetesClientConst.CLIENT_KEY_ALGO,base.getClientKeyAlgo())).withClientKeyPassphrase(url.getParameter(KubernetesClientConst.CLIENT_KEY_PASSPHRASE,base.getClientKeyPassphrase())).withConnectionTimeout(url.getParameter(KubernetesClientConst.CONNECTION_TIMEOUT,base.getConnectionTimeout())).withRequestTimeout(url.getParameter(KubernetesClientConst.REQUEST_TIMEOUT,base.getRequestTimeout())).withRollingTimeout(url.getParameter(KubernetesClientConst.ROLLING_TIMEOUT,base.getRollingTimeout())).withWatchReconnectInterval(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_INTERVAL,base.getWatchReconnectInterval())).withWatchReconnectLimit(url.getParameter(KubernetesClientConst.WATCH_RECONNECT_LIMIT,base.getWatchReconnectLimit())).withLoggingInterval(url.getParameter(KubernetesClientConst.LOGGING_INTERVAL,base.getLoggingInterval())).withTrustCerts(url.getParameter(KubernetesClientConst.TRUST_CERTS,base.isTrustCerts())).withHttp2Disable(url.getParameter(KubernetesClientConst.HTTP2_DISABLE,base.isTrustCerts())).withHttpProxy(url.getParameter(KubernetesClientConst.HTTP_PROXY,base.getHttpProxy())).withHttpsProxy(url.getParameter(KubernetesClientConst.HTTPS_PROXY,base.getHttpsProxy())).withProxyUsername(url.getParameter(KubernetesClientConst.PROXY_USERNAME,base.getProxyUsername())).withProxyPassword(url.getParameter(KubernetesClientConst.PROXY_PASSWORD,base.getProxyPassword())).withNoProxy(url.getParameter(KubernetesClientConst.NO_PROXY,base.getNoProxy())).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 34
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 96,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 41
      },
      "nodeContext" : "base.getNoProxy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.registry.kubernetes.util.Config"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 34,
    "startColumnNumber" : 33,
    "endLineNumber" : 34,
    "endColumnNumber" : 37
  }, {
    "charLength" : 4,
    "startLineNumber" : 37,
    "startColumnNumber" : 24,
    "endLineNumber" : 37,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 39,
    "startColumnNumber" : 24,
    "endLineNumber" : 39,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 41,
    "startColumnNumber" : 24,
    "endLineNumber" : 41,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 43,
    "startColumnNumber" : 24,
    "endLineNumber" : 43,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 46,
    "startColumnNumber" : 24,
    "endLineNumber" : 46,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 49,
    "startColumnNumber" : 24,
    "endLineNumber" : 49,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 37,
    "endLineNumber" : 51,
    "endColumnNumber" : 41
  }, {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 24,
    "endLineNumber" : 54,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 56,
    "startColumnNumber" : 37,
    "endLineNumber" : 56,
    "endColumnNumber" : 41
  }, {
    "charLength" : 4,
    "startLineNumber" : 59,
    "startColumnNumber" : 24,
    "endLineNumber" : 59,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 37,
    "endLineNumber" : 61,
    "endColumnNumber" : 41
  }, {
    "charLength" : 4,
    "startLineNumber" : 64,
    "startColumnNumber" : 24,
    "endLineNumber" : 64,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 66,
    "startColumnNumber" : 24,
    "endLineNumber" : 66,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 69,
    "startColumnNumber" : 24,
    "endLineNumber" : 69,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 24,
    "endLineNumber" : 71,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 73,
    "startColumnNumber" : 24,
    "endLineNumber" : 73,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 76,
    "startColumnNumber" : 24,
    "endLineNumber" : 76,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 78,
    "startColumnNumber" : 24,
    "endLineNumber" : 78,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 80,
    "startColumnNumber" : 24,
    "endLineNumber" : 80,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 83,
    "startColumnNumber" : 24,
    "endLineNumber" : 83,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 85,
    "startColumnNumber" : 24,
    "endLineNumber" : 85,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 88,
    "startColumnNumber" : 24,
    "endLineNumber" : 88,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 90,
    "startColumnNumber" : 24,
    "endLineNumber" : 90,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 92,
    "startColumnNumber" : 24,
    "endLineNumber" : 92,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 94,
    "startColumnNumber" : 24,
    "endLineNumber" : 94,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 96,
    "startColumnNumber" : 24,
    "endLineNumber" : 96,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 10
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 11
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 12
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 13
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 14
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 15
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 16
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 17
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 18
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 19
  }, {
    "firstKey" : 0,
    "secondKey" : 19,
    "layout" : 20
  }, {
    "firstKey" : 0,
    "secondKey" : 20,
    "layout" : 21
  }, {
    "firstKey" : 0,
    "secondKey" : 21,
    "layout" : 22
  }, {
    "firstKey" : 0,
    "secondKey" : 22,
    "layout" : 23
  }, {
    "firstKey" : 0,
    "secondKey" : 23,
    "layout" : 24
  }, {
    "firstKey" : 0,
    "secondKey" : 24,
    "layout" : 25
  }, {
    "firstKey" : 0,
    "secondKey" : 25,
    "layout" : 26
  }, {
    "firstKey" : 0,
    "secondKey" : 26,
    "layout" : 27
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 10
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 11
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 12
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 13
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 14
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 15
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 16
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 17
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 18
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 19
  }, {
    "firstKey" : 1,
    "secondKey" : 19,
    "layout" : 20
  }, {
    "firstKey" : 1,
    "secondKey" : 20,
    "layout" : 21
  }, {
    "firstKey" : 1,
    "secondKey" : 21,
    "layout" : 22
  }, {
    "firstKey" : 1,
    "secondKey" : 22,
    "layout" : 23
  }, {
    "firstKey" : 1,
    "secondKey" : 23,
    "layout" : 24
  }, {
    "firstKey" : 1,
    "secondKey" : 24,
    "layout" : 25
  }, {
    "firstKey" : 1,
    "secondKey" : 25,
    "layout" : 26
  }, {
    "firstKey" : 1,
    "secondKey" : 26,
    "layout" : 27
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 10
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 11
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 12
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 13
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 14
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 15
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 16
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 17
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 18
  }, {
    "firstKey" : 2,
    "secondKey" : 19,
    "layout" : 19
  }, {
    "firstKey" : 2,
    "secondKey" : 20,
    "layout" : 20
  }, {
    "firstKey" : 2,
    "secondKey" : 21,
    "layout" : 21
  }, {
    "firstKey" : 2,
    "secondKey" : 22,
    "layout" : 22
  }, {
    "firstKey" : 2,
    "secondKey" : 23,
    "layout" : 23
  }, {
    "firstKey" : 2,
    "secondKey" : 24,
    "layout" : 24
  }, {
    "firstKey" : 2,
    "secondKey" : 25,
    "layout" : 25
  }, {
    "firstKey" : 2,
    "secondKey" : 26,
    "layout" : 26
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 10
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 11
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 12
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 13
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 14
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 15
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 16
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 17
  }, {
    "firstKey" : 3,
    "secondKey" : 19,
    "layout" : 18
  }, {
    "firstKey" : 3,
    "secondKey" : 20,
    "layout" : 19
  }, {
    "firstKey" : 3,
    "secondKey" : 21,
    "layout" : 20
  }, {
    "firstKey" : 3,
    "secondKey" : 22,
    "layout" : 21
  }, {
    "firstKey" : 3,
    "secondKey" : 23,
    "layout" : 22
  }, {
    "firstKey" : 3,
    "secondKey" : 24,
    "layout" : 23
  }, {
    "firstKey" : 3,
    "secondKey" : 25,
    "layout" : 24
  }, {
    "firstKey" : 3,
    "secondKey" : 26,
    "layout" : 25
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 10
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 12
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 13
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 14
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 15
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 16
  }, {
    "firstKey" : 4,
    "secondKey" : 19,
    "layout" : 17
  }, {
    "firstKey" : 4,
    "secondKey" : 20,
    "layout" : 18
  }, {
    "firstKey" : 4,
    "secondKey" : 21,
    "layout" : 19
  }, {
    "firstKey" : 4,
    "secondKey" : 22,
    "layout" : 20
  }, {
    "firstKey" : 4,
    "secondKey" : 23,
    "layout" : 21
  }, {
    "firstKey" : 4,
    "secondKey" : 24,
    "layout" : 22
  }, {
    "firstKey" : 4,
    "secondKey" : 25,
    "layout" : 23
  }, {
    "firstKey" : 4,
    "secondKey" : 26,
    "layout" : 24
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 10
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 11
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 12
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 13
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 14
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 15
  }, {
    "firstKey" : 5,
    "secondKey" : 19,
    "layout" : 16
  }, {
    "firstKey" : 5,
    "secondKey" : 20,
    "layout" : 17
  }, {
    "firstKey" : 5,
    "secondKey" : 21,
    "layout" : 18
  }, {
    "firstKey" : 5,
    "secondKey" : 22,
    "layout" : 19
  }, {
    "firstKey" : 5,
    "secondKey" : 23,
    "layout" : 20
  }, {
    "firstKey" : 5,
    "secondKey" : 24,
    "layout" : 21
  }, {
    "firstKey" : 5,
    "secondKey" : 25,
    "layout" : 22
  }, {
    "firstKey" : 5,
    "secondKey" : 26,
    "layout" : 23
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 11
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 12
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 13
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 14
  }, {
    "firstKey" : 6,
    "secondKey" : 19,
    "layout" : 15
  }, {
    "firstKey" : 6,
    "secondKey" : 20,
    "layout" : 16
  }, {
    "firstKey" : 6,
    "secondKey" : 21,
    "layout" : 17
  }, {
    "firstKey" : 6,
    "secondKey" : 22,
    "layout" : 18
  }, {
    "firstKey" : 6,
    "secondKey" : 23,
    "layout" : 19
  }, {
    "firstKey" : 6,
    "secondKey" : 24,
    "layout" : 20
  }, {
    "firstKey" : 6,
    "secondKey" : 25,
    "layout" : 21
  }, {
    "firstKey" : 6,
    "secondKey" : 26,
    "layout" : 22
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 11
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 13
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 14
  }, {
    "firstKey" : 7,
    "secondKey" : 19,
    "layout" : 15
  }, {
    "firstKey" : 7,
    "secondKey" : 20,
    "layout" : 16
  }, {
    "firstKey" : 7,
    "secondKey" : 21,
    "layout" : 17
  }, {
    "firstKey" : 7,
    "secondKey" : 22,
    "layout" : 18
  }, {
    "firstKey" : 7,
    "secondKey" : 23,
    "layout" : 19
  }, {
    "firstKey" : 7,
    "secondKey" : 24,
    "layout" : 20
  }, {
    "firstKey" : 7,
    "secondKey" : 25,
    "layout" : 21
  }, {
    "firstKey" : 7,
    "secondKey" : 26,
    "layout" : 22
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 12
  }, {
    "firstKey" : 8,
    "secondKey" : 19,
    "layout" : 13
  }, {
    "firstKey" : 8,
    "secondKey" : 20,
    "layout" : 14
  }, {
    "firstKey" : 8,
    "secondKey" : 21,
    "layout" : 15
  }, {
    "firstKey" : 8,
    "secondKey" : 22,
    "layout" : 16
  }, {
    "firstKey" : 8,
    "secondKey" : 23,
    "layout" : 17
  }, {
    "firstKey" : 8,
    "secondKey" : 24,
    "layout" : 18
  }, {
    "firstKey" : 8,
    "secondKey" : 25,
    "layout" : 19
  }, {
    "firstKey" : 8,
    "secondKey" : 26,
    "layout" : 20
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 11
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 19,
    "layout" : 13
  }, {
    "firstKey" : 9,
    "secondKey" : 20,
    "layout" : 14
  }, {
    "firstKey" : 9,
    "secondKey" : 21,
    "layout" : 15
  }, {
    "firstKey" : 9,
    "secondKey" : 22,
    "layout" : 16
  }, {
    "firstKey" : 9,
    "secondKey" : 23,
    "layout" : 17
  }, {
    "firstKey" : 9,
    "secondKey" : 24,
    "layout" : 18
  }, {
    "firstKey" : 9,
    "secondKey" : 25,
    "layout" : 19
  }, {
    "firstKey" : 9,
    "secondKey" : 26,
    "layout" : 20
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 10
  }, {
    "firstKey" : 10,
    "secondKey" : 19,
    "layout" : 11
  }, {
    "firstKey" : 10,
    "secondKey" : 20,
    "layout" : 12
  }, {
    "firstKey" : 10,
    "secondKey" : 21,
    "layout" : 13
  }, {
    "firstKey" : 10,
    "secondKey" : 22,
    "layout" : 14
  }, {
    "firstKey" : 10,
    "secondKey" : 23,
    "layout" : 15
  }, {
    "firstKey" : 10,
    "secondKey" : 24,
    "layout" : 16
  }, {
    "firstKey" : 10,
    "secondKey" : 25,
    "layout" : 17
  }, {
    "firstKey" : 10,
    "secondKey" : 26,
    "layout" : 18
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 9
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 19,
    "layout" : 11
  }, {
    "firstKey" : 11,
    "secondKey" : 20,
    "layout" : 12
  }, {
    "firstKey" : 11,
    "secondKey" : 21,
    "layout" : 13
  }, {
    "firstKey" : 11,
    "secondKey" : 22,
    "layout" : 14
  }, {
    "firstKey" : 11,
    "secondKey" : 23,
    "layout" : 15
  }, {
    "firstKey" : 11,
    "secondKey" : 24,
    "layout" : 16
  }, {
    "firstKey" : 11,
    "secondKey" : 25,
    "layout" : 17
  }, {
    "firstKey" : 11,
    "secondKey" : 26,
    "layout" : 18
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 19,
    "layout" : 9
  }, {
    "firstKey" : 12,
    "secondKey" : 20,
    "layout" : 10
  }, {
    "firstKey" : 12,
    "secondKey" : 21,
    "layout" : 11
  }, {
    "firstKey" : 12,
    "secondKey" : 22,
    "layout" : 12
  }, {
    "firstKey" : 12,
    "secondKey" : 23,
    "layout" : 13
  }, {
    "firstKey" : 12,
    "secondKey" : 24,
    "layout" : 14
  }, {
    "firstKey" : 12,
    "secondKey" : 25,
    "layout" : 15
  }, {
    "firstKey" : 12,
    "secondKey" : 26,
    "layout" : 16
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 20,
    "layout" : 9
  }, {
    "firstKey" : 13,
    "secondKey" : 21,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 22,
    "layout" : 11
  }, {
    "firstKey" : 13,
    "secondKey" : 23,
    "layout" : 12
  }, {
    "firstKey" : 13,
    "secondKey" : 24,
    "layout" : 13
  }, {
    "firstKey" : 13,
    "secondKey" : 25,
    "layout" : 14
  }, {
    "firstKey" : 13,
    "secondKey" : 26,
    "layout" : 15
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 5
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 14,
    "secondKey" : 21,
    "layout" : 9
  }, {
    "firstKey" : 14,
    "secondKey" : 22,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 23,
    "layout" : 11
  }, {
    "firstKey" : 14,
    "secondKey" : 24,
    "layout" : 12
  }, {
    "firstKey" : 14,
    "secondKey" : 25,
    "layout" : 13
  }, {
    "firstKey" : 14,
    "secondKey" : 26,
    "layout" : 14
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 15,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 15,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 22,
    "layout" : 9
  }, {
    "firstKey" : 15,
    "secondKey" : 23,
    "layout" : 10
  }, {
    "firstKey" : 15,
    "secondKey" : 24,
    "layout" : 11
  }, {
    "firstKey" : 15,
    "secondKey" : 25,
    "layout" : 12
  }, {
    "firstKey" : 15,
    "secondKey" : 26,
    "layout" : 13
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 19,
    "layout" : 5
  }, {
    "firstKey" : 16,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 16,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 16,
    "secondKey" : 23,
    "layout" : 9
  }, {
    "firstKey" : 16,
    "secondKey" : 24,
    "layout" : 10
  }, {
    "firstKey" : 16,
    "secondKey" : 25,
    "layout" : 11
  }, {
    "firstKey" : 16,
    "secondKey" : 26,
    "layout" : 12
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 17,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 17,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 24,
    "layout" : 9
  }, {
    "firstKey" : 17,
    "secondKey" : 25,
    "layout" : 10
  }, {
    "firstKey" : 17,
    "secondKey" : 26,
    "layout" : 11
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 18,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 21,
    "layout" : 5
  }, {
    "firstKey" : 18,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 18,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 18,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 25,
    "layout" : 9
  }, {
    "firstKey" : 18,
    "secondKey" : 26,
    "layout" : 10
  }, {
    "firstKey" : 19,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 19,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 19,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 19,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 19,
    "secondKey" : 26,
    "layout" : 9
  }, {
    "firstKey" : 20,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 23,
    "layout" : 5
  }, {
    "firstKey" : 20,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 20,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 20,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 21,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 21,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 21,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 22,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 22,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 25,
    "layout" : 5
  }, {
    "firstKey" : 22,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 23,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 23,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 24,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 24,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 26,
    "layout" : 3
  }, {
    "firstKey" : 26,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 25,
    "layout" : 2
  } ]
}