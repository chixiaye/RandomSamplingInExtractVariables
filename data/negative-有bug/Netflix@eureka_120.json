{
  "id" : 120,
  "expression" : "UUID.randomUUID()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-client/src/test/java/com/netflix/discovery/shared/transport/jersey/UnexpectedContentTypeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "UUID.randomUUID()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 52,
      "startColumnNumber" : 22,
      "endLineNumber" : 52,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 52,
        "startColumnNumber" : 22,
        "endLineNumber" : 52,
        "endColumnNumber" : 50
      },
      "nodeContext" : "UUID.randomUUID().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 52,
        "endColumnNumber" : 50
      },
      "nodeContext" : "uuid=UUID.randomUUID().toString()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String uuid=UUID.randomUUID().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1373,
        "startLineNumber" : 50,
        "startColumnNumber" : 66,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long lastDirtyTimestamp=System.currentTimeMillis();\n  String uuid=UUID.randomUUID().toString();\n  stubFor(put(urlPathEqualTo(\"/v2/apps/\" + CLIENT_APP_NAME + \"/\"+ uuid)).withQueryParam(\"status\",equalTo(\"UP\")).withQueryParam(\"lastDirtyTimestamp\",equalTo(lastDirtyTimestamp + \"\")).willReturn(aResponse().withStatus(502).withHeader(\"Content-Type\",\"text/HTML\").withBody(\"<html><body>Something went wrong in Apacache</body></html>\")));\n  InstanceInfo instanceInfo=mock(InstanceInfo.class);\n  when(instanceInfo.getStatus()).thenReturn(InstanceInfo.InstanceStatus.UP);\n  when(instanceInfo.getLastDirtyTimestamp()).thenReturn(lastDirtyTimestamp);\n  EurekaHttpResponse<InstanceInfo> response=jerseyHttpClient.sendHeartBeat(CLIENT_APP_NAME,uuid,instanceInfo,null);\n  verify(putRequestedFor(urlPathEqualTo(\"/v2/apps/\" + CLIENT_APP_NAME + \"/\"+ uuid)).withQueryParam(\"status\",equalTo(\"UP\")).withQueryParam(\"lastDirtyTimestamp\",equalTo(lastDirtyTimestamp + \"\")));\n  assertThat(response.getStatusCode()).as(\"status code\").isEqualTo(502);\n  assertThat(response.getEntity()).as(\"instance info\").isNull();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1446,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSendHeartBeatReceivesUnexpectedHtmlResponse(){\n  long lastDirtyTimestamp=System.currentTimeMillis();\n  String uuid=UUID.randomUUID().toString();\n  stubFor(put(urlPathEqualTo(\"/v2/apps/\" + CLIENT_APP_NAME + \"/\"+ uuid)).withQueryParam(\"status\",equalTo(\"UP\")).withQueryParam(\"lastDirtyTimestamp\",equalTo(lastDirtyTimestamp + \"\")).willReturn(aResponse().withStatus(502).withHeader(\"Content-Type\",\"text/HTML\").withBody(\"<html><body>Something went wrong in Apacache</body></html>\")));\n  InstanceInfo instanceInfo=mock(InstanceInfo.class);\n  when(instanceInfo.getStatus()).thenReturn(InstanceInfo.InstanceStatus.UP);\n  when(instanceInfo.getLastDirtyTimestamp()).thenReturn(lastDirtyTimestamp);\n  EurekaHttpResponse<InstanceInfo> response=jerseyHttpClient.sendHeartBeat(CLIENT_APP_NAME,uuid,instanceInfo,null);\n  verify(putRequestedFor(urlPathEqualTo(\"/v2/apps/\" + CLIENT_APP_NAME + \"/\"+ uuid)).withQueryParam(\"status\",equalTo(\"UP\")).withQueryParam(\"lastDirtyTimestamp\",equalTo(lastDirtyTimestamp + \"\")));\n  assertThat(response.getStatusCode()).as(\"status code\").isEqualTo(502);\n  assertThat(response.getEntity()).as(\"instance info\").isNull();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String uuid=UUID.randomUUID().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.UUID"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 52,
    "startColumnNumber" : 22,
    "endLineNumber" : 52,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}