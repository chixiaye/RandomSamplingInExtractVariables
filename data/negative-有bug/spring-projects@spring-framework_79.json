{
  "id" : 79,
  "expression" : "PACKAGE_INFO_SUFFIX",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-orm/src/main/java/org/springframework/orm/hibernate5/LocalSessionFactoryBuilder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PACKAGE_INFO_SUFFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 358,
      "startColumnNumber" : 34,
      "endLineNumber" : 358,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 358,
        "startColumnNumber" : 15,
        "endLineNumber" : 358,
        "endColumnNumber" : 54
      },
      "nodeContext" : "className.endsWith(PACKAGE_INFO_SUFFIX)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 358,
        "startColumnNumber" : 11,
        "endLineNumber" : 360,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n  packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 355,
        "startColumnNumber" : 11,
        "endLineNumber" : 360,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n  converterClassNames.add(className);\n}\n else if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n  packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 352,
        "startColumnNumber" : 6,
        "endLineNumber" : 360,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (matchesEntityTypeFilter(reader,readerFactory)) {\n  entityClassNames.add(className);\n}\n else if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n  converterClassNames.add(className);\n}\n else if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n  packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 349,
        "startColumnNumber" : 32,
        "endLineNumber" : 361,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  MetadataReader reader=readerFactory.getMetadataReader(resource);\n  String className=reader.getClassMetadata().getClassName();\n  if (matchesEntityTypeFilter(reader,readerFactory)) {\n    entityClassNames.add(className);\n  }\n else   if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n    converterClassNames.add(className);\n  }\n else   if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n    packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 349,
        "startColumnNumber" : 5,
        "endLineNumber" : 361,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (resource.isReadable()) {\n  MetadataReader reader=readerFactory.getMetadataReader(resource);\n  String className=reader.getClassMetadata().getClassName();\n  if (matchesEntityTypeFilter(reader,readerFactory)) {\n    entityClassNames.add(className);\n  }\n else   if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n    converterClassNames.add(className);\n  }\n else   if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n    packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 348,
        "startColumnNumber" : 40,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (resource.isReadable()) {\n    MetadataReader reader=readerFactory.getMetadataReader(resource);\n    String className=reader.getClassMetadata().getClassName();\n    if (matchesEntityTypeFilter(reader,readerFactory)) {\n      entityClassNames.add(className);\n    }\n else     if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n      converterClassNames.add(className);\n    }\n else     if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n      packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 348,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Resource resource : resources) {\n  if (resource.isReadable()) {\n    MetadataReader reader=readerFactory.getMetadataReader(resource);\n    String className=reader.getClassMetadata().getClassName();\n    if (matchesEntityTypeFilter(reader,readerFactory)) {\n      entityClassNames.add(className);\n    }\n else     if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n      converterClassNames.add(className);\n    }\n else     if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n      packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 75,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 959,
        "startLineNumber" : 343,
        "startColumnNumber" : 37,
        "endLineNumber" : 363,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n  Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n  MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n  for (  Resource resource : resources) {\n    if (resource.isReadable()) {\n      MetadataReader reader=readerFactory.getMetadataReader(resource);\n      String className=reader.getClassMetadata().getClassName();\n      if (matchesEntityTypeFilter(reader,readerFactory)) {\n        entityClassNames.add(className);\n      }\n else       if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n        converterClassNames.add(className);\n      }\n else       if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n        packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 343,
        "startColumnNumber" : 3,
        "endLineNumber" : 363,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (String pkg : packagesToScan) {\n  String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n  Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n  MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n  for (  Resource resource : resources) {\n    if (resource.isReadable()) {\n      MetadataReader reader=readerFactory.getMetadataReader(resource);\n      String className=reader.getClassMetadata().getClassName();\n      if (matchesEntityTypeFilter(reader,readerFactory)) {\n        entityClassNames.add(className);\n      }\n else       if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n        converterClassNames.add(className);\n      }\n else       if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n        packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 342,
        "startColumnNumber" : 6,
        "endLineNumber" : 364,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  String pkg : packagesToScan) {\n    String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n    Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n    MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n    for (    Resource resource : resources) {\n      if (resource.isReadable()) {\n        MetadataReader reader=readerFactory.getMetadataReader(resource);\n        String className=reader.getClassMetadata().getClassName();\n        if (matchesEntityTypeFilter(reader,readerFactory)) {\n          entityClassNames.add(className);\n        }\n else         if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n          converterClassNames.add(className);\n        }\n else         if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n          packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 342,
        "startColumnNumber" : 2,
        "endLineNumber" : 367,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  for (  String pkg : packagesToScan) {\n    String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n    Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n    MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n    for (    Resource resource : resources) {\n      if (resource.isReadable()) {\n        MetadataReader reader=readerFactory.getMetadataReader(resource);\n        String className=reader.getClassMetadata().getClassName();\n        if (matchesEntityTypeFilter(reader,readerFactory)) {\n          entityClassNames.add(className);\n        }\n else         if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n          converterClassNames.add(className);\n        }\n else         if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n          packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n        }\n      }\n    }\n  }\n}\n catch (IOException ex) {\n  throw new MappingException(\"Failed to scan classpath for unlisted classes\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 134,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1849,
        "startLineNumber" : 338,
        "startColumnNumber" : 100,
        "endLineNumber" : 384,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Set<String> entityClassNames=new TreeSet<>();\n  Set<String> converterClassNames=new TreeSet<>();\n  Set<String> packageNames=new TreeSet<>();\n  try {\n    for (    String pkg : packagesToScan) {\n      String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n      Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n      MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n      for (      Resource resource : resources) {\n        if (resource.isReadable()) {\n          MetadataReader reader=readerFactory.getMetadataReader(resource);\n          String className=reader.getClassMetadata().getClassName();\n          if (matchesEntityTypeFilter(reader,readerFactory)) {\n            entityClassNames.add(className);\n          }\n else           if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n            converterClassNames.add(className);\n          }\n else           if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n            packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n          }\n        }\n      }\n    }\n  }\n catch (  IOException ex) {\n    throw new MappingException(\"Failed to scan classpath for unlisted classes\",ex);\n  }\n  try {\n    ClassLoader cl=this.resourcePatternResolver.getClassLoader();\n    for (    String className : entityClassNames) {\n      addAnnotatedClass(ClassUtils.forName(className,cl));\n    }\n    for (    String className : converterClassNames) {\n      addAttributeConverter((Class<? extends AttributeConverter<?,?>>)ClassUtils.forName(className,cl));\n    }\n    for (    String packageName : packageNames) {\n      addPackage(packageName);\n    }\n  }\n catch (  ClassNotFoundException ex) {\n    throw new MappingException(\"Failed to load annotated classes from classpath\",ex);\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2240,
        "startLineNumber" : 331,
        "startColumnNumber" : 1,
        "endLineNumber" : 384,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Perform Spring-based scanning for entity classes, registering them as annotated classes with this  {@code Configuration}.\n * @param packagesToScan one or more Java package names\n * @throws HibernateException if scanning fails for any reason\n */\n@SuppressWarnings(\"unchecked\") public LocalSessionFactoryBuilder scanPackages(String... packagesToScan) throws HibernateException {\n  Set<String> entityClassNames=new TreeSet<>();\n  Set<String> converterClassNames=new TreeSet<>();\n  Set<String> packageNames=new TreeSet<>();\n  try {\n    for (    String pkg : packagesToScan) {\n      String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n      Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n      MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n      for (      Resource resource : resources) {\n        if (resource.isReadable()) {\n          MetadataReader reader=readerFactory.getMetadataReader(resource);\n          String className=reader.getClassMetadata().getClassName();\n          if (matchesEntityTypeFilter(reader,readerFactory)) {\n            entityClassNames.add(className);\n          }\n else           if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n            converterClassNames.add(className);\n          }\n else           if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n            packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n          }\n        }\n      }\n    }\n  }\n catch (  IOException ex) {\n    throw new MappingException(\"Failed to scan classpath for unlisted classes\",ex);\n  }\n  try {\n    ClassLoader cl=this.resourcePatternResolver.getClassLoader();\n    for (    String className : entityClassNames) {\n      addAnnotatedClass(ClassUtils.forName(className,cl));\n    }\n    for (    String className : converterClassNames) {\n      addAttributeConverter((Class<? extends AttributeConverter<?,?>>)ClassUtils.forName(className,cl));\n    }\n    for (    String packageName : packageNames) {\n      addPackage(packageName);\n    }\n  }\n catch (  ClassNotFoundException ex) {\n    throw new MappingException(\"Failed to load annotated classes from classpath\",ex);\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 358,
        "startColumnNumber" : 15,
        "endLineNumber" : 358,
        "endColumnNumber" : 54
      },
      "nodeContext" : "className.endsWith(PACKAGE_INFO_SUFFIX)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PACKAGE_INFO_SUFFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 359,
      "startColumnNumber" : 68,
      "endLineNumber" : 359,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 359,
        "startColumnNumber" : 68,
        "endLineNumber" : 359,
        "endColumnNumber" : 96
      },
      "nodeContext" : "PACKAGE_INFO_SUFFIX.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 359,
        "startColumnNumber" : 47,
        "endLineNumber" : 359,
        "endColumnNumber" : 96
      },
      "nodeContext" : "className.length() - PACKAGE_INFO_SUFFIX.length()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 359,
        "startColumnNumber" : 24,
        "endLineNumber" : 359,
        "endColumnNumber" : 97
      },
      "nodeContext" : "className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 359,
        "startColumnNumber" : 7,
        "endLineNumber" : 359,
        "endColumnNumber" : 98
      },
      "nodeContext" : "packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 359,
        "startColumnNumber" : 7,
        "endLineNumber" : 359,
        "endColumnNumber" : 99
      },
      "nodeContext" : "packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 358,
        "startColumnNumber" : 56,
        "endLineNumber" : 360,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 358,
        "startColumnNumber" : 11,
        "endLineNumber" : 360,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n  packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 355,
        "startColumnNumber" : 11,
        "endLineNumber" : 360,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n  converterClassNames.add(className);\n}\n else if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n  packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 352,
        "startColumnNumber" : 6,
        "endLineNumber" : 360,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (matchesEntityTypeFilter(reader,readerFactory)) {\n  entityClassNames.add(className);\n}\n else if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n  converterClassNames.add(className);\n}\n else if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n  packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 349,
        "startColumnNumber" : 32,
        "endLineNumber" : 361,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  MetadataReader reader=readerFactory.getMetadataReader(resource);\n  String className=reader.getClassMetadata().getClassName();\n  if (matchesEntityTypeFilter(reader,readerFactory)) {\n    entityClassNames.add(className);\n  }\n else   if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n    converterClassNames.add(className);\n  }\n else   if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n    packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 349,
        "startColumnNumber" : 5,
        "endLineNumber" : 361,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (resource.isReadable()) {\n  MetadataReader reader=readerFactory.getMetadataReader(resource);\n  String className=reader.getClassMetadata().getClassName();\n  if (matchesEntityTypeFilter(reader,readerFactory)) {\n    entityClassNames.add(className);\n  }\n else   if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n    converterClassNames.add(className);\n  }\n else   if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n    packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 348,
        "startColumnNumber" : 40,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (resource.isReadable()) {\n    MetadataReader reader=readerFactory.getMetadataReader(resource);\n    String className=reader.getClassMetadata().getClassName();\n    if (matchesEntityTypeFilter(reader,readerFactory)) {\n      entityClassNames.add(className);\n    }\n else     if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n      converterClassNames.add(className);\n    }\n else     if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n      packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 348,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Resource resource : resources) {\n  if (resource.isReadable()) {\n    MetadataReader reader=readerFactory.getMetadataReader(resource);\n    String className=reader.getClassMetadata().getClassName();\n    if (matchesEntityTypeFilter(reader,readerFactory)) {\n      entityClassNames.add(className);\n    }\n else     if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n      converterClassNames.add(className);\n    }\n else     if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n      packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 75,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 959,
        "startLineNumber" : 343,
        "startColumnNumber" : 37,
        "endLineNumber" : 363,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n  Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n  MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n  for (  Resource resource : resources) {\n    if (resource.isReadable()) {\n      MetadataReader reader=readerFactory.getMetadataReader(resource);\n      String className=reader.getClassMetadata().getClassName();\n      if (matchesEntityTypeFilter(reader,readerFactory)) {\n        entityClassNames.add(className);\n      }\n else       if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n        converterClassNames.add(className);\n      }\n else       if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n        packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 343,
        "startColumnNumber" : 3,
        "endLineNumber" : 363,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (String pkg : packagesToScan) {\n  String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n  Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n  MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n  for (  Resource resource : resources) {\n    if (resource.isReadable()) {\n      MetadataReader reader=readerFactory.getMetadataReader(resource);\n      String className=reader.getClassMetadata().getClassName();\n      if (matchesEntityTypeFilter(reader,readerFactory)) {\n        entityClassNames.add(className);\n      }\n else       if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n        converterClassNames.add(className);\n      }\n else       if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n        packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 342,
        "startColumnNumber" : 6,
        "endLineNumber" : 364,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  String pkg : packagesToScan) {\n    String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n    Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n    MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n    for (    Resource resource : resources) {\n      if (resource.isReadable()) {\n        MetadataReader reader=readerFactory.getMetadataReader(resource);\n        String className=reader.getClassMetadata().getClassName();\n        if (matchesEntityTypeFilter(reader,readerFactory)) {\n          entityClassNames.add(className);\n        }\n else         if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n          converterClassNames.add(className);\n        }\n else         if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n          packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 342,
        "startColumnNumber" : 2,
        "endLineNumber" : 367,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  for (  String pkg : packagesToScan) {\n    String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n    Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n    MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n    for (    Resource resource : resources) {\n      if (resource.isReadable()) {\n        MetadataReader reader=readerFactory.getMetadataReader(resource);\n        String className=reader.getClassMetadata().getClassName();\n        if (matchesEntityTypeFilter(reader,readerFactory)) {\n          entityClassNames.add(className);\n        }\n else         if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n          converterClassNames.add(className);\n        }\n else         if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n          packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n        }\n      }\n    }\n  }\n}\n catch (IOException ex) {\n  throw new MappingException(\"Failed to scan classpath for unlisted classes\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 134,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1849,
        "startLineNumber" : 338,
        "startColumnNumber" : 100,
        "endLineNumber" : 384,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Set<String> entityClassNames=new TreeSet<>();\n  Set<String> converterClassNames=new TreeSet<>();\n  Set<String> packageNames=new TreeSet<>();\n  try {\n    for (    String pkg : packagesToScan) {\n      String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n      Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n      MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n      for (      Resource resource : resources) {\n        if (resource.isReadable()) {\n          MetadataReader reader=readerFactory.getMetadataReader(resource);\n          String className=reader.getClassMetadata().getClassName();\n          if (matchesEntityTypeFilter(reader,readerFactory)) {\n            entityClassNames.add(className);\n          }\n else           if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n            converterClassNames.add(className);\n          }\n else           if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n            packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n          }\n        }\n      }\n    }\n  }\n catch (  IOException ex) {\n    throw new MappingException(\"Failed to scan classpath for unlisted classes\",ex);\n  }\n  try {\n    ClassLoader cl=this.resourcePatternResolver.getClassLoader();\n    for (    String className : entityClassNames) {\n      addAnnotatedClass(ClassUtils.forName(className,cl));\n    }\n    for (    String className : converterClassNames) {\n      addAttributeConverter((Class<? extends AttributeConverter<?,?>>)ClassUtils.forName(className,cl));\n    }\n    for (    String packageName : packageNames) {\n      addPackage(packageName);\n    }\n  }\n catch (  ClassNotFoundException ex) {\n    throw new MappingException(\"Failed to load annotated classes from classpath\",ex);\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2240,
        "startLineNumber" : 331,
        "startColumnNumber" : 1,
        "endLineNumber" : 384,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Perform Spring-based scanning for entity classes, registering them as annotated classes with this  {@code Configuration}.\n * @param packagesToScan one or more Java package names\n * @throws HibernateException if scanning fails for any reason\n */\n@SuppressWarnings(\"unchecked\") public LocalSessionFactoryBuilder scanPackages(String... packagesToScan) throws HibernateException {\n  Set<String> entityClassNames=new TreeSet<>();\n  Set<String> converterClassNames=new TreeSet<>();\n  Set<String> packageNames=new TreeSet<>();\n  try {\n    for (    String pkg : packagesToScan) {\n      String pattern=ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN;\n      Resource[] resources=this.resourcePatternResolver.getResources(pattern);\n      MetadataReaderFactory readerFactory=new CachingMetadataReaderFactory(this.resourcePatternResolver);\n      for (      Resource resource : resources) {\n        if (resource.isReadable()) {\n          MetadataReader reader=readerFactory.getMetadataReader(resource);\n          String className=reader.getClassMetadata().getClassName();\n          if (matchesEntityTypeFilter(reader,readerFactory)) {\n            entityClassNames.add(className);\n          }\n else           if (CONVERTER_TYPE_FILTER.match(reader,readerFactory)) {\n            converterClassNames.add(className);\n          }\n else           if (className.endsWith(PACKAGE_INFO_SUFFIX)) {\n            packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n          }\n        }\n      }\n    }\n  }\n catch (  IOException ex) {\n    throw new MappingException(\"Failed to scan classpath for unlisted classes\",ex);\n  }\n  try {\n    ClassLoader cl=this.resourcePatternResolver.getClassLoader();\n    for (    String className : entityClassNames) {\n      addAnnotatedClass(ClassUtils.forName(className,cl));\n    }\n    for (    String className : converterClassNames) {\n      addAttributeConverter((Class<? extends AttributeConverter<?,?>>)ClassUtils.forName(className,cl));\n    }\n    for (    String packageName : packageNames) {\n      addPackage(packageName);\n    }\n  }\n catch (  ClassNotFoundException ex) {\n    throw new MappingException(\"Failed to load annotated classes from classpath\",ex);\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 359,
        "startColumnNumber" : 7,
        "endLineNumber" : 359,
        "endColumnNumber" : 99
      },
      "nodeContext" : "packageNames.add(className.substring(0,className.length() - PACKAGE_INFO_SUFFIX.length()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 358,
    "startColumnNumber" : 34,
    "endLineNumber" : 358,
    "endColumnNumber" : 53
  }, {
    "charLength" : 19,
    "startLineNumber" : 359,
    "startColumnNumber" : 68,
    "endLineNumber" : 359,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}