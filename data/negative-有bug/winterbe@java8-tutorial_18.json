{
  "id" : 18,
  "expression" : "executor.submit(() -> {\n  try {\n    TimeUnit.SECONDS.sleep(1);\n    return 123;\n  }\n catch (  InterruptedException e) {\n    throw new IllegalStateException(\"task interrupted\",e);\n  }\n}\n)",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/concurrent/Executors2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "executor.submit(() -> {\n  try {\n    TimeUnit.SECONDS.sleep(1);\n    return 123;\n  }\n catch (  InterruptedException e) {\n    throw new IllegalStateException(\"task interrupted\",e);\n  }\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 268,
      "startLineNumber" : 40,
      "startColumnNumber" : 33,
      "endLineNumber" : 48,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 28,
    "astHeight" : 10,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 40,
        "startColumnNumber" : 24,
        "endLineNumber" : 48,
        "endColumnNumber" : 10
      },
      "nodeContext" : "future=executor.submit(() -> {\n  try {\n    TimeUnit.SECONDS.sleep(1);\n    return 123;\n  }\n catch (  InterruptedException e) {\n    throw new IllegalStateException(\"task interrupted\",e);\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 30,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Future<Integer> future=executor.submit(() -> {\n  try {\n    TimeUnit.SECONDS.sleep(1);\n    return 123;\n  }\n catch (  InterruptedException e) {\n    throw new IllegalStateException(\"task interrupted\",e);\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 36,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 37,
        "startColumnNumber" : 80,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutorService executor=Executors.newFixedThreadPool(1);\n  Future<Integer> future=executor.submit(() -> {\n    try {\n      TimeUnit.SECONDS.sleep(1);\n      return 123;\n    }\n catch (    InterruptedException e) {\n      throw new IllegalStateException(\"task interrupted\",e);\n    }\n  }\n);\n  executor.shutdownNow();\n  future.get();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void test2() throws InterruptedException, ExecutionException {\n  ExecutorService executor=Executors.newFixedThreadPool(1);\n  Future<Integer> future=executor.submit(() -> {\n    try {\n      TimeUnit.SECONDS.sleep(1);\n      return 123;\n    }\n catch (    InterruptedException e) {\n      throw new IllegalStateException(\"task interrupted\",e);\n    }\n  }\n);\n  executor.shutdownNow();\n  future.get();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Future<Integer> future=executor.submit(() -> {\n  try {\n    TimeUnit.SECONDS.sleep(1);\n    return 123;\n  }\n catch (  InterruptedException e) {\n    throw new IllegalStateException(\"task interrupted\",e);\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 36,
      "astHeight" : 12
    },
    "tokenLength" : 14,
    "type" : "java.util.concurrent.Future<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 268,
    "startLineNumber" : 40,
    "startColumnNumber" : 33,
    "endLineNumber" : 48,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}