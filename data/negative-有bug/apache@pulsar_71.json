{
  "id" : 71,
  "expression" : "new IllegalArgumentException(\"Field \" + name + \" must be an Iterable but was a \"+ field.getClass())",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-config-validation/src/main/java/org/apache/pulsar/config/validation/ConfigValidationUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalArgumentException(\"Field \" + name + \" must be an Iterable but was a \"+ field.getClass())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 125,
      "startLineNumber" : 92,
      "startColumnNumber" : 22,
      "endLineNumber" : 93,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 96
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Field \" + name + \" must be an Iterable but was a \"+ field.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 77,
        "startColumnNumber" : 52,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (field == null) {\n    if (notNull) {\n      throw new IllegalArgumentException(\"Field \" + name + \" must not be null\");\n    }\n else {\n      return;\n    }\n  }\n  if (field instanceof Iterable) {\n    for (    Object e : (Iterable)field) {\n      validator.validateField(pd + \"Each element of the list \",name,e);\n    }\n    return;\n  }\n  throw new IllegalArgumentException(\"Field \" + name + \" must be an Iterable but was a \"+ field.getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void validateField(String pd,String name,Object field) throws IllegalArgumentException {\n  if (field == null) {\n    if (notNull) {\n      throw new IllegalArgumentException(\"Field \" + name + \" must not be null\");\n    }\n else {\n      return;\n    }\n  }\n  if (field instanceof Iterable) {\n    for (    Object e : (Iterable)field) {\n      validator.validateField(pd + \"Each element of the list \",name,e);\n    }\n    return;\n  }\n  throw new IllegalArgumentException(\"Field \" + name + \" must be an Iterable but was a \"+ field.getClass());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 92,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 96
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Field \" + name + \" must be an Iterable but was a \"+ field.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 15,
    "type" : "java.lang.IllegalArgumentException"
  } ],
  "positionList" : [ {
    "charLength" : 125,
    "startLineNumber" : 92,
    "startColumnNumber" : 22,
    "endLineNumber" : 93,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ ]
}