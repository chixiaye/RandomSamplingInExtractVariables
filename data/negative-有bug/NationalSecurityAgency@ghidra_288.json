{
  "id" : 288,
  "expression" : "\" does not implement interface \"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Debug/ProposedUtils/src/main/java/ghidra/pcode/emu/AbstractModifiedPcodeThread.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" does not implement interface \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 144,
      "startColumnNumber" : 43,
      "endLineNumber" : 144,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 144,
        "startColumnNumber" : 31,
        "endLineNumber" : 145,
        "endColumnNumber" : 52
      },
      "nodeContext" : "classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 144,
        "startColumnNumber" : 10,
        "endLineNumber" : 145,
        "endColumnNumber" : 53
      },
      "nodeContext" : "new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 54
      },
      "nodeContext" : "throw new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 140,
        "startColumnNumber" : 67,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n  throw new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!EmulateInstructionStateModifier.class.isAssignableFrom(c)) {\n  Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n  throw new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Class<?> c=Class.forName(classname);\n  if (!EmulateInstructionStateModifier.class.isAssignableFrom(c)) {\n    Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n    throw new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName());\n  }\n  Constructor<?> constructor=c.getConstructor(Emulate.class);\n  return (EmulateInstructionStateModifier)constructor.newInstance(emulate);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  Class<?> c=Class.forName(classname);\n  if (!EmulateInstructionStateModifier.class.isAssignableFrom(c)) {\n    Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n    throw new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName());\n  }\n  Constructor<?> constructor=c.getConstructor(Emulate.class);\n  return (EmulateInstructionStateModifier)constructor.newInstance(emulate);\n}\n catch (Exception e) {\n  Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n  throw new RuntimeException(\"Failed to instantiate \" + classname + \" for language \"+ language.getLanguageID(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 132,
        "startColumnNumber" : 60,
        "endLineNumber" : 157,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String classname=language.getProperty(GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n  if (classname == null) {\n    return null;\n  }\n  try {\n    Class<?> c=Class.forName(classname);\n    if (!EmulateInstructionStateModifier.class.isAssignableFrom(c)) {\n      Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n      throw new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName());\n    }\n    Constructor<?> constructor=c.getConstructor(Emulate.class);\n    return (EmulateInstructionStateModifier)constructor.newInstance(emulate);\n  }\n catch (  Exception e) {\n    Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n    throw new RuntimeException(\"Failed to instantiate \" + classname + \" for language \"+ language.getLanguageID(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 127,
        "startColumnNumber" : 1,
        "endLineNumber" : 157,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Construct a modifier for the given language\n * @return the state modifier\n */\nprotected EmulateInstructionStateModifier createModifier(){\n  String classname=language.getProperty(GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n  if (classname == null) {\n    return null;\n  }\n  try {\n    Class<?> c=Class.forName(classname);\n    if (!EmulateInstructionStateModifier.class.isAssignableFrom(c)) {\n      Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n      throw new RuntimeException(classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName());\n    }\n    Constructor<?> constructor=c.getConstructor(Emulate.class);\n    return (EmulateInstructionStateModifier)constructor.newInstance(emulate);\n  }\n catch (  Exception e) {\n    Msg.error(this,\"Language \" + language.getLanguageID() + \" does not specify a valid \"+ GhidraLanguagePropertyKeys.EMULATE_INSTRUCTION_STATE_MODIFIER_CLASS);\n    throw new RuntimeException(\"Failed to instantiate \" + classname + \" for language \"+ language.getLanguageID(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 144,
        "startColumnNumber" : 31,
        "endLineNumber" : 145,
        "endColumnNumber" : 52
      },
      "nodeContext" : "classname + \" does not implement interface \" + EmulateInstructionStateModifier.class.getName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 144,
    "startColumnNumber" : 43,
    "endLineNumber" : 144,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}