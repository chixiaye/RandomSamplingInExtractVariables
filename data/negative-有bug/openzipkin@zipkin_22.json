{
  "id" : 22,
  "expression" : "TestObjects.TRACE.stream().map(s -> {\n  Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n  for (  Annotation a : s.annotations()) {\n    builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n  }\n  return builder.build();\n}\n)",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/SearchResultConverterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TestObjects.TRACE.stream().map(s -> {\n  Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n  for (  Annotation a : s.annotations()) {\n    builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n  }\n  return builder.build();\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 338,
      "startLineNumber" : 40,
      "startColumnNumber" : 29,
      "endLineNumber" : 48,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 55,
    "astHeight" : 10,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 40,
        "startColumnNumber" : 29,
        "endLineNumber" : 48,
        "endColumnNumber" : 37
      },
      "nodeContext" : "TestObjects.TRACE.stream().map(s -> {\n  Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n  for (  Annotation a : s.annotations()) {\n    builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n  }\n  return builder.build();\n}\n).collect(Collectors.toList())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 40,
        "startColumnNumber" : 15,
        "endLineNumber" : 48,
        "endColumnNumber" : 37
      },
      "nodeContext" : "stableTrace=TestObjects.TRACE.stream().map(s -> {\n  Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n  for (  Annotation a : s.annotations()) {\n    builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n  }\n  return builder.build();\n}\n).collect(Collectors.toList())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 38
      },
      "nodeContext" : "List<Span> stableTrace=TestObjects.TRACE.stream().map(s -> {\n  Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n  for (  Annotation a : s.annotations()) {\n    builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n  }\n  return builder.build();\n}\n).collect(Collectors.toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 68,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 35,
        "startColumnNumber" : 49,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long stableMicros=(TODAY - 1) * 1000L;\n  List<Span> stableTrace=TestObjects.TRACE.stream().map(s -> {\n    Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n    for (    Annotation a : s.annotations()) {\n      builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n    }\n    return builder.build();\n  }\n).collect(Collectors.toList());\n  assertThat(converter.convert(JSON_FACTORY.createParser(SPANS),Assertions::fail)).containsExactlyElementsOf(stableTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 935,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void convert() throws IOException {\n  long stableMicros=(TODAY - 1) * 1000L;\n  List<Span> stableTrace=TestObjects.TRACE.stream().map(s -> {\n    Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n    for (    Annotation a : s.annotations()) {\n      builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n    }\n    return builder.build();\n  }\n).collect(Collectors.toList());\n  assertThat(converter.convert(JSON_FACTORY.createParser(SPANS),Assertions::fail)).containsExactlyElementsOf(stableTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 38
      },
      "nodeContext" : "List<Span> stableTrace=TestObjects.TRACE.stream().map(s -> {\n  Span.Builder builder=s.toBuilder().timestamp(s.timestampAsLong() - stableMicros).clearAnnotations();\n  for (  Annotation a : s.annotations()) {\n    builder.addAnnotation(a.timestamp() - stableMicros,a.value());\n  }\n  return builder.build();\n}\n).collect(Collectors.toList());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 68,
      "astHeight" : 13
    },
    "tokenLength" : 30,
    "type" : "java.util.stream.Stream<zipkin2.Span>"
  } ],
  "positionList" : [ {
    "charLength" : 338,
    "startLineNumber" : 40,
    "startColumnNumber" : 29,
    "endLineNumber" : 48,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ ]
}