{
  "id" : 198,
  "expression" : "thread + \" failed.\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/ParallelTestRunner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "thread + \" failed.\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 78,
      "startColumnNumber" : 31,
      "endLineNumber" : 78,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.err.println(thread + \" failed.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 52
      },
      "nodeContext" : "System.err.println(thread + \" failed.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 77,
        "startColumnNumber" : 26,
        "endLineNumber" : 80,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  System.err.println(thread + \" failed.\");\n  t2.printStackTrace(System.err);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 77,
        "startColumnNumber" : 10,
        "endLineNumber" : 80,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (t2 != null) {\n  System.err.println(thread + \" failed.\");\n  t2.printStackTrace(System.err);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 75,
        "startColumnNumber" : 15,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Throwable t2=thread.getThrowable();\n  if (t2 != null) {\n    System.err.println(thread + \" failed.\");\n    t2.printStackTrace(System.err);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (t == null) {\n  t=thread.getThrowable();\n}\n else {\n  final Throwable t2=thread.getThrowable();\n  if (t2 != null) {\n    System.err.println(thread + \" failed.\");\n    t2.printStackTrace(System.err);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 71,
        "startColumnNumber" : 10,
        "endLineNumber" : 82,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  thread.join();\n  if (t == null) {\n    t=thread.getThrowable();\n  }\n else {\n    final Throwable t2=thread.getThrowable();\n    if (t2 != null) {\n      System.err.println(thread + \" failed.\");\n      t2.printStackTrace(System.err);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 84,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  thread.join();\n  if (t == null) {\n    t=thread.getThrowable();\n  }\n else {\n    final Throwable t2=thread.getThrowable();\n    if (t2 != null) {\n      System.err.println(thread + \" failed.\");\n      t2.printStackTrace(System.err);\n    }\n  }\n}\n catch (InterruptedException ignored) {\n  interrupt(threads);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 70,
        "startColumnNumber" : 40,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    thread.join();\n    if (t == null) {\n      t=thread.getThrowable();\n    }\n else {\n      final Throwable t2=thread.getThrowable();\n      if (t2 != null) {\n        System.err.println(thread + \" failed.\");\n        t2.printStackTrace(System.err);\n      }\n    }\n  }\n catch (  InterruptedException ignored) {\n    interrupt(threads);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (WorkerThread thread : threads) {\n  try {\n    thread.join();\n    if (t == null) {\n      t=thread.getThrowable();\n    }\n else {\n      final Throwable t2=thread.getThrowable();\n      if (t2 != null) {\n        System.err.println(thread + \" failed.\");\n        t2.printStackTrace(System.err);\n      }\n    }\n  }\n catch (  InterruptedException ignored) {\n    interrupt(threads);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 60,
        "startColumnNumber" : 37,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<WorkerThread> threads=new ArrayList<>(_workers.size());\n  Throwable t=null;\n  int i=1;\n  for (  Worker worker : _workers) {\n    final WorkerThread thread=new WorkerThread(\"WorkerThread #\" + i,worker);\n    ++i;\n    threads.add(thread);\n    thread.start();\n  }\n  for (  WorkerThread thread : threads) {\n    try {\n      thread.join();\n      if (t == null) {\n        t=thread.getThrowable();\n      }\n else {\n        final Throwable t2=thread.getThrowable();\n        if (t2 != null) {\n          System.err.println(thread + \" failed.\");\n          t2.printStackTrace(System.err);\n        }\n      }\n    }\n catch (    InterruptedException ignored) {\n      interrupt(threads);\n    }\n  }\n  if (t != null) {\n    if (t instanceof Exception) {\n      throw (Exception)t;\n    }\n else     if (t instanceof Error) {\n      throw (Error)t;\n    }\n else {\n      throw new RuntimeException(\"Unexpected Throwable \" + t.getClass().getName(),t);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void run() throws Exception {\n  final List<WorkerThread> threads=new ArrayList<>(_workers.size());\n  Throwable t=null;\n  int i=1;\n  for (  Worker worker : _workers) {\n    final WorkerThread thread=new WorkerThread(\"WorkerThread #\" + i,worker);\n    ++i;\n    threads.add(thread);\n    thread.start();\n  }\n  for (  WorkerThread thread : threads) {\n    try {\n      thread.join();\n      if (t == null) {\n        t=thread.getThrowable();\n      }\n else {\n        final Throwable t2=thread.getThrowable();\n        if (t2 != null) {\n          System.err.println(thread + \" failed.\");\n          t2.printStackTrace(System.err);\n        }\n      }\n    }\n catch (    InterruptedException ignored) {\n      interrupt(threads);\n    }\n  }\n  if (t != null) {\n    if (t instanceof Exception) {\n      throw (Exception)t;\n    }\n else     if (t instanceof Error) {\n      throw (Error)t;\n    }\n else {\n      throw new RuntimeException(\"Unexpected Throwable \" + t.getClass().getName(),t);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 52
      },
      "nodeContext" : "System.err.println(thread + \" failed.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 78,
    "startColumnNumber" : 31,
    "endLineNumber" : 78,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}