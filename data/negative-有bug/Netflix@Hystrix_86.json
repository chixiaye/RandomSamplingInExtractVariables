{
  "id" : 86,
  "expression" : "Math.floor(rank)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/util/HystrixRollingPercentile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.floor(rank)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 431,
      "startColumnNumber" : 29,
      "endLineNumber" : 431,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 431,
        "startColumnNumber" : 23,
        "endLineNumber" : 431,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(int)Math.floor(rank)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 431,
        "startColumnNumber" : 16,
        "endLineNumber" : 431,
        "endColumnNumber" : 45
      },
      "nodeContext" : "iLow=(int)Math.floor(rank)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 431,
        "startColumnNumber" : 12,
        "endLineNumber" : 431,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int iLow=(int)Math.floor(rank);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 417,
        "startColumnNumber" : 54,
        "endLineNumber" : 444,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (length <= 0) {\n    return 0;\n  }\n else   if (percent <= 0.0) {\n    return data[0];\n  }\n else   if (percent >= 100.0) {\n    return data[length - 1];\n  }\n  double rank=(percent / 100.0) * length;\n  int iLow=(int)Math.floor(rank);\n  int iHigh=(int)Math.ceil(rank);\n  assert 0 <= iLow && iLow <= rank && rank <= iHigh && iHigh <= length;\n  assert (iHigh - iLow) <= 1;\n  if (iHigh >= length) {\n    return data[length - 1];\n  }\n else   if (iLow == iHigh) {\n    return data[iLow];\n  }\n else {\n    return (int)(data[iLow] + (rank - iLow) * (data[iHigh] - data[iLow]));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1484,
        "startLineNumber" : 410,
        "startColumnNumber" : 8,
        "endLineNumber" : 444,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see <a href=\"http://en.wikipedia.org/wiki/Percentile\">Percentile (Wikipedia)</a>\n * @see <a href=\"http://cnx.org/content/m10805/latest/\">Percentile</a>\n * @param percent percentile of data desired\n * @return data at the asked-for percentile.  Interpolation is used if exactness is not possible\n */\nprivate int computePercentile(double percent){\n  if (length <= 0) {\n    return 0;\n  }\n else   if (percent <= 0.0) {\n    return data[0];\n  }\n else   if (percent >= 100.0) {\n    return data[length - 1];\n  }\n  double rank=(percent / 100.0) * length;\n  int iLow=(int)Math.floor(rank);\n  int iHigh=(int)Math.ceil(rank);\n  assert 0 <= iLow && iLow <= rank && rank <= iHigh && iHigh <= length;\n  assert (iHigh - iLow) <= 1;\n  if (iHigh >= length) {\n    return data[length - 1];\n  }\n else   if (iLow == iHigh) {\n    return data[iLow];\n  }\n else {\n    return (int)(data[iLow] + (rank - iLow) * (data[iHigh] - data[iLow]));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 431,
        "startColumnNumber" : 12,
        "endLineNumber" : 431,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int iLow=(int)Math.floor(rank);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 431,
    "startColumnNumber" : 29,
    "endLineNumber" : 431,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}