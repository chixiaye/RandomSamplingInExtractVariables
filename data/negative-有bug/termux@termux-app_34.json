{
  "id" : 34,
  "expression" : "LocalSocketManager.send(mLocalSocketRunConfig.getLogTitle() + \" (client)\",mFD,data,mLocalSocketRunConfig.getDeadline() > 0 ? mCreationTime + mLocalSocketRunConfig.getDeadline() : 0)",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/termux-shared/src/main/java/com/termux/shared/net/socket/local/LocalClientSocket.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "LocalSocketManager.send(mLocalSocketRunConfig.getLogTitle() + \" (client)\",mFD,data,mLocalSocketRunConfig.getDeadline() > 0 ? mCreationTime + mLocalSocketRunConfig.getDeadline() : 0)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 210,
      "startLineNumber" : 164,
      "startColumnNumber" : 27,
      "endLineNumber" : 166,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 22,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 164,
        "startColumnNumber" : 18,
        "endLineNumber" : 166,
        "endColumnNumber" : 110
      },
      "nodeContext" : "result=LocalSocketManager.send(mLocalSocketRunConfig.getLogTitle() + \" (client)\",mFD,data,mLocalSocketRunConfig.getDeadline() > 0 ? mCreationTime + mLocalSocketRunConfig.getDeadline() : 0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 164,
        "startColumnNumber" : 8,
        "endLineNumber" : 166,
        "endColumnNumber" : 111
      },
      "nodeContext" : "JniResult result=LocalSocketManager.send(mLocalSocketRunConfig.getLogTitle() + \" (client)\",mFD,data,mLocalSocketRunConfig.getDeadline() > 0 ? mCreationTime + mLocalSocketRunConfig.getDeadline() : 0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 158,
        "startColumnNumber" : 44,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mFD < 0) {\n    return LocalSocketErrno.ERRNO_USING_CLIENT_SOCKET_WITH_INVALID_FD.getError(mFD,mLocalSocketRunConfig.getTitle());\n  }\n  JniResult result=LocalSocketManager.send(mLocalSocketRunConfig.getLogTitle() + \" (client)\",mFD,data,mLocalSocketRunConfig.getDeadline() > 0 ? mCreationTime + mLocalSocketRunConfig.getDeadline() : 0);\n  if (result == null || result.retval != 0) {\n    return LocalSocketErrno.ERRNO_SEND_DATA_TO_CLIENT_SOCKET_FAILED.getError(mLocalSocketRunConfig.getTitle(),JniResult.getErrorString(result));\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1495,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Attempts to send data buffer to the file descriptor. If while sending the  {@link #mCreationTime} + the milliseconds returned by{@link LocalSocketRunConfig#getDeadline()} elapses but all the data has not been sent, anerror would be returned. This is a wrapper for  {@link LocalSocketManager#send(String,int,byte[],long)}, which can be called instead if you want to get access to errno int value instead of  {@link JniResult}error  {@link String}.\n * @param data The data buffer containing bytes to send.\n * @return Returns the {@code error} if sending was not successful containing {@link JniResult}error  {@link String}, otherwise  {@code null}.\n */\npublic Error send(@NonNull byte[] data){\n  if (mFD < 0) {\n    return LocalSocketErrno.ERRNO_USING_CLIENT_SOCKET_WITH_INVALID_FD.getError(mFD,mLocalSocketRunConfig.getTitle());\n  }\n  JniResult result=LocalSocketManager.send(mLocalSocketRunConfig.getLogTitle() + \" (client)\",mFD,data,mLocalSocketRunConfig.getDeadline() > 0 ? mCreationTime + mLocalSocketRunConfig.getDeadline() : 0);\n  if (result == null || result.retval != 0) {\n    return LocalSocketErrno.ERRNO_SEND_DATA_TO_CLIENT_SOCKET_FAILED.getError(mLocalSocketRunConfig.getTitle(),JniResult.getErrorString(result));\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 164,
        "startColumnNumber" : 8,
        "endLineNumber" : 166,
        "endColumnNumber" : 111
      },
      "nodeContext" : "JniResult result=LocalSocketManager.send(mLocalSocketRunConfig.getLogTitle() + \" (client)\",mFD,data,mLocalSocketRunConfig.getDeadline() > 0 ? mCreationTime + mLocalSocketRunConfig.getDeadline() : 0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    },
    "tokenLength" : 17,
    "type" : "com.termux.shared.jni.models.JniResult"
  } ],
  "positionList" : [ {
    "charLength" : 210,
    "startLineNumber" : 164,
    "startColumnNumber" : 27,
    "endLineNumber" : 166,
    "endColumnNumber" : 110
  } ],
  "layoutRelationDataList" : [ ]
}