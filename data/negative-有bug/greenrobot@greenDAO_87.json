{
  "id" : 87,
  "expression" : "new Callable<Iterable<T>>(){\n  @Override public Iterable<T> call() throws Exception {\n    dao.insertOrReplaceInTx(entities);\n    return entities;\n  }\n}\n",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/DaoCore/src/main/java/org/greenrobot/greendao/rx/RxDao.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Callable<Iterable<T>>(){\n  @Override public Iterable<T> call() throws Exception {\n    dao.insertOrReplaceInTx(entities);\n    return entities;\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 222,
      "startLineNumber" : 172,
      "startColumnNumber" : 20,
      "endLineNumber" : 178,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 30,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 172,
        "startColumnNumber" : 15,
        "endLineNumber" : 178,
        "endColumnNumber" : 10
      },
      "nodeContext" : "wrap(new Callable<Iterable<T>>(){\n  @Override public Iterable<T> call() throws Exception {\n    dao.insertOrReplaceInTx(entities);\n    return entities;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 11
      },
      "nodeContext" : "return wrap(new Callable<Iterable<T>>(){\n  @Override public Iterable<T> call() throws Exception {\n    dao.insertOrReplaceInTx(entities);\n    return entities;\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 171,
        "startColumnNumber" : 83,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return wrap(new Callable<Iterable<T>>(){\n    @Override public Iterable<T> call() throws Exception {\n      dao.insertOrReplaceInTx(entities);\n      return entities;\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Rx version of  {@link AbstractDao#insertOrReplaceInTx(Iterable)} returning an Observable.Note that the Observable will emit the given entities back to its subscribers.\n */\n@Experimental public Observable<Iterable<T>> insertOrReplaceInTx(final Iterable<T> entities){\n  return wrap(new Callable<Iterable<T>>(){\n    @Override public Iterable<T> call() throws Exception {\n      dao.insertOrReplaceInTx(entities);\n      return entities;\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 11
      },
      "nodeContext" : "return wrap(new Callable<Iterable<T>>(){\n  @Override public Iterable<T> call() throws Exception {\n    dao.insertOrReplaceInTx(entities);\n    return entities;\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    },
    "tokenLength" : 9,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 222,
    "startLineNumber" : 172,
    "startColumnNumber" : 20,
    "endLineNumber" : 178,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}