{
  "id" : 134,
  "expression" : "ActivityInfo",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/hotplug/IncrementComponentManager.java",
  "occurrences" : 28,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 124,
      "startColumnNumber" : 36,
      "endLineNumber" : 124,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 124,
        "startColumnNumber" : 36,
        "endLineNumber" : 124,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ActivityInfo.FLAG_MULTIPROCESS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 124,
        "startColumnNumber" : 20,
        "endLineNumber" : 124,
        "endColumnNumber" : 66
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_MULTIPROCESS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 124,
        "startColumnNumber" : 20,
        "endLineNumber" : 124,
        "endColumnNumber" : 67
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 123,
        "startColumnNumber" : 56,
        "endLineNumber" : 125,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 127,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 122,
        "startColumnNumber" : 56,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 124,
        "startColumnNumber" : 20,
        "endLineNumber" : 124,
        "endColumnNumber" : 67
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 126,
      "startColumnNumber" : 37,
      "endLineNumber" : 126,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 126,
        "startColumnNumber" : 37,
        "endLineNumber" : 126,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ActivityInfo.FLAG_MULTIPROCESS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 126,
        "startColumnNumber" : 36,
        "endLineNumber" : 126,
        "endColumnNumber" : 67
      },
      "nodeContext" : "~ActivityInfo.FLAG_MULTIPROCESS",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 67
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_MULTIPROCESS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 68
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 125,
        "startColumnNumber" : 23,
        "endLineNumber" : 127,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 127,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 122,
        "startColumnNumber" : 56,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 68
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 130,
      "startColumnNumber" : 36,
      "endLineNumber" : 130,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 130,
        "startColumnNumber" : 36,
        "endLineNumber" : 130,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 130,
        "startColumnNumber" : 20,
        "endLineNumber" : 130,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 130,
        "startColumnNumber" : 20,
        "endLineNumber" : 130,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 129,
        "startColumnNumber" : 56,
        "endLineNumber" : 131,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 133,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 128,
        "startColumnNumber" : 62,
        "endLineNumber" : 134,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 130,
        "startColumnNumber" : 20,
        "endLineNumber" : 130,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 132,
      "startColumnNumber" : 37,
      "endLineNumber" : 132,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 132,
        "startColumnNumber" : 37,
        "endLineNumber" : 132,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 132,
        "startColumnNumber" : 36,
        "endLineNumber" : 132,
        "endColumnNumber" : 76
      },
      "nodeContext" : "~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 132,
        "startColumnNumber" : 20,
        "endLineNumber" : 132,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 132,
        "startColumnNumber" : 20,
        "endLineNumber" : 132,
        "endColumnNumber" : 77
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 131,
        "startColumnNumber" : 23,
        "endLineNumber" : 133,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 133,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 128,
        "startColumnNumber" : 62,
        "endLineNumber" : 134,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 132,
        "startColumnNumber" : 20,
        "endLineNumber" : 132,
        "endColumnNumber" : 77
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 136,
      "startColumnNumber" : 36,
      "endLineNumber" : 136,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 136,
        "startColumnNumber" : 36,
        "endLineNumber" : 136,
        "endColumnNumber" : 74
      },
      "nodeContext" : "ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 136,
        "endColumnNumber" : 74
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 136,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 135,
        "startColumnNumber" : 56,
        "endLineNumber" : 137,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 135,
        "startColumnNumber" : 16,
        "endLineNumber" : 139,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 134,
        "startColumnNumber" : 61,
        "endLineNumber" : 140,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 136,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 138,
      "startColumnNumber" : 37,
      "endLineNumber" : 138,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 138,
        "startColumnNumber" : 37,
        "endLineNumber" : 138,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 138,
        "startColumnNumber" : 36,
        "endLineNumber" : 138,
        "endColumnNumber" : 75
      },
      "nodeContext" : "~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 138,
        "startColumnNumber" : 20,
        "endLineNumber" : 138,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 138,
        "startColumnNumber" : 20,
        "endLineNumber" : 138,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 137,
        "startColumnNumber" : 23,
        "endLineNumber" : 139,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 135,
        "startColumnNumber" : 16,
        "endLineNumber" : 139,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 134,
        "startColumnNumber" : 61,
        "endLineNumber" : 140,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 138,
        "startColumnNumber" : 20,
        "endLineNumber" : 138,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 142,
      "startColumnNumber" : 36,
      "endLineNumber" : 142,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 142,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ActivityInfo.FLAG_NO_HISTORY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 142,
        "startColumnNumber" : 20,
        "endLineNumber" : 142,
        "endColumnNumber" : 64
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_NO_HISTORY",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 142,
        "startColumnNumber" : 20,
        "endLineNumber" : 142,
        "endColumnNumber" : 65
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 141,
        "startColumnNumber" : 56,
        "endLineNumber" : 143,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 141,
        "startColumnNumber" : 16,
        "endLineNumber" : 145,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 140,
        "startColumnNumber" : 53,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 142,
        "startColumnNumber" : 20,
        "endLineNumber" : 142,
        "endColumnNumber" : 65
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 144,
      "startColumnNumber" : 37,
      "endLineNumber" : 144,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 144,
        "startColumnNumber" : 37,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ActivityInfo.FLAG_NO_HISTORY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 144,
        "startColumnNumber" : 36,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "~ActivityInfo.FLAG_NO_HISTORY",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 144,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 65
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_NO_HISTORY",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 144,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 66
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 143,
        "startColumnNumber" : 23,
        "endLineNumber" : 145,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 141,
        "startColumnNumber" : 16,
        "endLineNumber" : 145,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 140,
        "startColumnNumber" : 53,
        "endLineNumber" : 146,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 144,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 66
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 148,
      "startColumnNumber" : 36,
      "endLineNumber" : 148,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 148,
        "startColumnNumber" : 36,
        "endLineNumber" : 148,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 148,
        "startColumnNumber" : 20,
        "endLineNumber" : 148,
        "endColumnNumber" : 78
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 148,
        "startColumnNumber" : 20,
        "endLineNumber" : 148,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 147,
        "startColumnNumber" : 56,
        "endLineNumber" : 149,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 146,
        "startColumnNumber" : 65,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 148,
        "startColumnNumber" : 20,
        "endLineNumber" : 148,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 150,
      "startColumnNumber" : 37,
      "endLineNumber" : 150,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 150,
        "startColumnNumber" : 37,
        "endLineNumber" : 150,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 150,
        "startColumnNumber" : 36,
        "endLineNumber" : 150,
        "endColumnNumber" : 79
      },
      "nodeContext" : "~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 150,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 150,
        "endColumnNumber" : 80
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 149,
        "startColumnNumber" : 23,
        "endLineNumber" : 151,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 146,
        "startColumnNumber" : 65,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 150,
        "endColumnNumber" : 80
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 154,
      "startColumnNumber" : 36,
      "endLineNumber" : 154,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 154,
        "startColumnNumber" : 36,
        "endLineNumber" : 154,
        "endColumnNumber" : 70
      },
      "nodeContext" : "ActivityInfo.FLAG_STATE_NOT_NEEDED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 154,
        "startColumnNumber" : 20,
        "endLineNumber" : 154,
        "endColumnNumber" : 70
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 154,
        "startColumnNumber" : 20,
        "endLineNumber" : 154,
        "endColumnNumber" : 71
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 153,
        "startColumnNumber" : 56,
        "endLineNumber" : 155,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 153,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 152,
        "startColumnNumber" : 58,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 154,
        "startColumnNumber" : 20,
        "endLineNumber" : 154,
        "endColumnNumber" : 71
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 156,
      "startColumnNumber" : 37,
      "endLineNumber" : 156,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 156,
        "startColumnNumber" : 37,
        "endLineNumber" : 156,
        "endColumnNumber" : 71
      },
      "nodeContext" : "ActivityInfo.FLAG_STATE_NOT_NEEDED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 156,
        "startColumnNumber" : 36,
        "endLineNumber" : 156,
        "endColumnNumber" : 71
      },
      "nodeContext" : "~ActivityInfo.FLAG_STATE_NOT_NEEDED",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 156,
        "startColumnNumber" : 20,
        "endLineNumber" : 156,
        "endColumnNumber" : 71
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 156,
        "startColumnNumber" : 20,
        "endLineNumber" : 156,
        "endColumnNumber" : 72
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 155,
        "startColumnNumber" : 23,
        "endLineNumber" : 157,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 153,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 152,
        "startColumnNumber" : 58,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 156,
        "startColumnNumber" : 20,
        "endLineNumber" : 156,
        "endColumnNumber" : 72
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 160,
      "startColumnNumber" : 36,
      "endLineNumber" : 160,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 160,
        "startColumnNumber" : 36,
        "endLineNumber" : 160,
        "endColumnNumber" : 74
      },
      "nodeContext" : "ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 160,
        "startColumnNumber" : 20,
        "endLineNumber" : 160,
        "endColumnNumber" : 74
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 160,
        "startColumnNumber" : 20,
        "endLineNumber" : 160,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 159,
        "startColumnNumber" : 56,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 159,
        "startColumnNumber" : 16,
        "endLineNumber" : 163,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 158,
        "startColumnNumber" : 62,
        "endLineNumber" : 164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 160,
        "startColumnNumber" : 20,
        "endLineNumber" : 160,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 162,
      "startColumnNumber" : 37,
      "endLineNumber" : 162,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 162,
        "startColumnNumber" : 37,
        "endLineNumber" : 162,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 162,
        "startColumnNumber" : 36,
        "endLineNumber" : 162,
        "endColumnNumber" : 75
      },
      "nodeContext" : "~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 162,
        "startColumnNumber" : 20,
        "endLineNumber" : 162,
        "endColumnNumber" : 75
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 162,
        "startColumnNumber" : 20,
        "endLineNumber" : 162,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 161,
        "startColumnNumber" : 23,
        "endLineNumber" : 163,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 159,
        "startColumnNumber" : 16,
        "endLineNumber" : 163,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 158,
        "startColumnNumber" : 62,
        "endLineNumber" : 164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 162,
        "startColumnNumber" : 20,
        "endLineNumber" : 162,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 166,
      "startColumnNumber" : 36,
      "endLineNumber" : 166,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 166,
        "startColumnNumber" : 36,
        "endLineNumber" : 166,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ActivityInfo.FLAG_ALLOW_TASK_REPARENTING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 166,
        "startColumnNumber" : 20,
        "endLineNumber" : 166,
        "endColumnNumber" : 76
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 166,
        "startColumnNumber" : 20,
        "endLineNumber" : 166,
        "endColumnNumber" : 77
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 165,
        "startColumnNumber" : 56,
        "endLineNumber" : 167,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 165,
        "startColumnNumber" : 16,
        "endLineNumber" : 169,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 164,
        "startColumnNumber" : 64,
        "endLineNumber" : 170,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 166,
        "startColumnNumber" : 20,
        "endLineNumber" : 166,
        "endColumnNumber" : 77
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 168,
      "startColumnNumber" : 37,
      "endLineNumber" : 168,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 168,
        "startColumnNumber" : 37,
        "endLineNumber" : 168,
        "endColumnNumber" : 77
      },
      "nodeContext" : "ActivityInfo.FLAG_ALLOW_TASK_REPARENTING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 168,
        "startColumnNumber" : 36,
        "endLineNumber" : 168,
        "endColumnNumber" : 77
      },
      "nodeContext" : "~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 168,
        "startColumnNumber" : 20,
        "endLineNumber" : 168,
        "endColumnNumber" : 77
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 168,
        "startColumnNumber" : 20,
        "endLineNumber" : 168,
        "endColumnNumber" : 78
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 167,
        "startColumnNumber" : 23,
        "endLineNumber" : 169,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 165,
        "startColumnNumber" : 16,
        "endLineNumber" : 169,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 164,
        "startColumnNumber" : 64,
        "endLineNumber" : 170,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 168,
        "startColumnNumber" : 20,
        "endLineNumber" : 168,
        "endColumnNumber" : 78
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 172,
      "startColumnNumber" : 36,
      "endLineNumber" : 172,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 172,
        "startColumnNumber" : 36,
        "endLineNumber" : 172,
        "endColumnNumber" : 84
      },
      "nodeContext" : "ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 172,
        "startColumnNumber" : 20,
        "endLineNumber" : 172,
        "endColumnNumber" : 84
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 172,
        "startColumnNumber" : 20,
        "endLineNumber" : 172,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 171,
        "startColumnNumber" : 56,
        "endLineNumber" : 173,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 170,
        "startColumnNumber" : 70,
        "endLineNumber" : 176,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 172,
        "startColumnNumber" : 20,
        "endLineNumber" : 172,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 174,
      "startColumnNumber" : 37,
      "endLineNumber" : 174,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 174,
        "startColumnNumber" : 37,
        "endLineNumber" : 174,
        "endColumnNumber" : 85
      },
      "nodeContext" : "ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 174,
        "startColumnNumber" : 36,
        "endLineNumber" : 174,
        "endColumnNumber" : 85
      },
      "nodeContext" : "~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 174,
        "startColumnNumber" : 20,
        "endLineNumber" : 174,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 174,
        "startColumnNumber" : 20,
        "endLineNumber" : 174,
        "endColumnNumber" : 86
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 173,
        "startColumnNumber" : 23,
        "endLineNumber" : 175,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 171,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 170,
        "startColumnNumber" : 70,
        "endLineNumber" : 176,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 174,
        "startColumnNumber" : 20,
        "endLineNumber" : 174,
        "endColumnNumber" : 86
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 189,
      "startColumnNumber" : 40,
      "endLineNumber" : 189,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 189,
        "startColumnNumber" : 40,
        "endLineNumber" : 189,
        "endColumnNumber" : 67
      },
      "nodeContext" : "ActivityInfo.FLAG_IMMERSIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 189,
        "startColumnNumber" : 24,
        "endLineNumber" : 189,
        "endColumnNumber" : 67
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_IMMERSIVE",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 189,
        "startColumnNumber" : 24,
        "endLineNumber" : 189,
        "endColumnNumber" : 68
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 188,
        "startColumnNumber" : 60,
        "endLineNumber" : 190,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 188,
        "startColumnNumber" : 20,
        "endLineNumber" : 192,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 187,
        "startColumnNumber" : 49,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 18) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 186,
        "startColumnNumber" : 53,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 189,
        "startColumnNumber" : 24,
        "endLineNumber" : 189,
        "endColumnNumber" : 68
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 191,
      "startColumnNumber" : 41,
      "endLineNumber" : 191,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 191,
        "startColumnNumber" : 41,
        "endLineNumber" : 191,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ActivityInfo.FLAG_IMMERSIVE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 191,
        "startColumnNumber" : 40,
        "endLineNumber" : 191,
        "endColumnNumber" : 68
      },
      "nodeContext" : "~ActivityInfo.FLAG_IMMERSIVE",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 191,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 68
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_IMMERSIVE",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 191,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 69
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 190,
        "startColumnNumber" : 27,
        "endLineNumber" : 192,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 188,
        "startColumnNumber" : 20,
        "endLineNumber" : 192,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 187,
        "startColumnNumber" : 49,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 18) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 186,
        "startColumnNumber" : 53,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 191,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 69
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 197,
      "startColumnNumber" : 40,
      "endLineNumber" : 197,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 197,
        "startColumnNumber" : 40,
        "endLineNumber" : 197,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ActivityInfo.FLAG_HARDWARE_ACCELERATED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 197,
        "startColumnNumber" : 24,
        "endLineNumber" : 197,
        "endColumnNumber" : 78
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 197,
        "startColumnNumber" : 24,
        "endLineNumber" : 197,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 196,
        "startColumnNumber" : 60,
        "endLineNumber" : 198,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 196,
        "startColumnNumber" : 20,
        "endLineNumber" : 200,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 195,
        "startColumnNumber" : 49,
        "endLineNumber" : 201,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 201,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 11) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 194,
        "startColumnNumber" : 63,
        "endLineNumber" : 202,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 197,
        "startColumnNumber" : 24,
        "endLineNumber" : 197,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 199,
      "startColumnNumber" : 41,
      "endLineNumber" : 199,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 199,
        "startColumnNumber" : 41,
        "endLineNumber" : 199,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ActivityInfo.FLAG_HARDWARE_ACCELERATED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 199,
        "startColumnNumber" : 40,
        "endLineNumber" : 199,
        "endColumnNumber" : 79
      },
      "nodeContext" : "~ActivityInfo.FLAG_HARDWARE_ACCELERATED",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 199,
        "startColumnNumber" : 24,
        "endLineNumber" : 199,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 199,
        "startColumnNumber" : 24,
        "endLineNumber" : 199,
        "endColumnNumber" : 80
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 198,
        "startColumnNumber" : 27,
        "endLineNumber" : 200,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 196,
        "startColumnNumber" : 20,
        "endLineNumber" : 200,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 195,
        "startColumnNumber" : 49,
        "endLineNumber" : 201,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 201,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 11) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 194,
        "startColumnNumber" : 63,
        "endLineNumber" : 202,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 199,
        "startColumnNumber" : 24,
        "endLineNumber" : 199,
        "endColumnNumber" : 80
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 229,
      "startColumnNumber" : 40,
      "endLineNumber" : 229,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 229,
        "startColumnNumber" : 40,
        "endLineNumber" : 229,
        "endColumnNumber" : 82
      },
      "nodeContext" : "ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 229,
        "startColumnNumber" : 24,
        "endLineNumber" : 229,
        "endColumnNumber" : 82
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 229,
        "startColumnNumber" : 24,
        "endLineNumber" : 229,
        "endColumnNumber" : 83
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 228,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 228,
        "startColumnNumber" : 20,
        "endLineNumber" : 232,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 227,
        "startColumnNumber" : 49,
        "endLineNumber" : 233,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 233,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 21) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 226,
        "startColumnNumber" : 65,
        "endLineNumber" : 234,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 226,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3201,
        "startLineNumber" : 218,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3403,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3534,
        "startLineNumber" : 212,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3659,
        "startLineNumber" : 210,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3851,
        "startLineNumber" : 206,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4059,
        "startLineNumber" : 202,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 417,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 229,
        "startColumnNumber" : 24,
        "endLineNumber" : 229,
        "endColumnNumber" : 83
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 231,
      "startColumnNumber" : 41,
      "endLineNumber" : 231,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 231,
        "startColumnNumber" : 41,
        "endLineNumber" : 231,
        "endColumnNumber" : 83
      },
      "nodeContext" : "ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 231,
        "startColumnNumber" : 40,
        "endLineNumber" : 231,
        "endColumnNumber" : 83
      },
      "nodeContext" : "~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 231,
        "startColumnNumber" : 24,
        "endLineNumber" : 231,
        "endColumnNumber" : 83
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 231,
        "startColumnNumber" : 24,
        "endLineNumber" : 231,
        "endColumnNumber" : 84
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 230,
        "startColumnNumber" : 27,
        "endLineNumber" : 232,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 228,
        "startColumnNumber" : 20,
        "endLineNumber" : 232,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 227,
        "startColumnNumber" : 49,
        "endLineNumber" : 233,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 233,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 21) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 226,
        "startColumnNumber" : 65,
        "endLineNumber" : 234,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 226,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3201,
        "startLineNumber" : 218,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3403,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3534,
        "startLineNumber" : 212,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3659,
        "startLineNumber" : 210,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3851,
        "startLineNumber" : 206,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4059,
        "startLineNumber" : 202,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 417,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 231,
        "startColumnNumber" : 24,
        "endLineNumber" : 231,
        "endColumnNumber" : 84
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 237,
      "startColumnNumber" : 40,
      "endLineNumber" : 237,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 237,
        "startColumnNumber" : 40,
        "endLineNumber" : 237,
        "endColumnNumber" : 82
      },
      "nodeContext" : "ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 237,
        "startColumnNumber" : 24,
        "endLineNumber" : 237,
        "endColumnNumber" : 82
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 237,
        "startColumnNumber" : 24,
        "endLineNumber" : 237,
        "endColumnNumber" : 83
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 236,
        "startColumnNumber" : 60,
        "endLineNumber" : 238,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 236,
        "startColumnNumber" : 20,
        "endLineNumber" : 240,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 241,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 235,
        "startColumnNumber" : 16,
        "endLineNumber" : 241,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 21) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 234,
        "startColumnNumber" : 66,
        "endLineNumber" : 242,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2391,
        "startLineNumber" : 234,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 237,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 226,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3201,
        "startLineNumber" : 218,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3403,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3534,
        "startLineNumber" : 212,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3659,
        "startLineNumber" : 210,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3851,
        "startLineNumber" : 206,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4059,
        "startLineNumber" : 202,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 417,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 237,
        "startColumnNumber" : 24,
        "endLineNumber" : 237,
        "endColumnNumber" : 83
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 239,
      "startColumnNumber" : 41,
      "endLineNumber" : 239,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 239,
        "startColumnNumber" : 41,
        "endLineNumber" : 239,
        "endColumnNumber" : 83
      },
      "nodeContext" : "ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 239,
        "startColumnNumber" : 40,
        "endLineNumber" : 239,
        "endColumnNumber" : 83
      },
      "nodeContext" : "~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 239,
        "startColumnNumber" : 24,
        "endLineNumber" : 239,
        "endColumnNumber" : 83
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 239,
        "startColumnNumber" : 24,
        "endLineNumber" : 239,
        "endColumnNumber" : 84
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 238,
        "startColumnNumber" : 27,
        "endLineNumber" : 240,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 236,
        "startColumnNumber" : 20,
        "endLineNumber" : 240,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 241,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 235,
        "startColumnNumber" : 16,
        "endLineNumber" : 241,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 21) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 234,
        "startColumnNumber" : 66,
        "endLineNumber" : 242,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2391,
        "startLineNumber" : 234,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 237,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 226,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3201,
        "startLineNumber" : 218,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3403,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3534,
        "startLineNumber" : 212,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3659,
        "startLineNumber" : 210,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3851,
        "startLineNumber" : 206,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4059,
        "startLineNumber" : 202,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 417,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 239,
        "startColumnNumber" : 24,
        "endLineNumber" : 239,
        "endColumnNumber" : 84
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 245,
      "startColumnNumber" : 40,
      "endLineNumber" : 245,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 245,
        "startColumnNumber" : 40,
        "endLineNumber" : 245,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ActivityInfo.FLAG_RESUME_WHILE_PAUSING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 245,
        "startColumnNumber" : 24,
        "endLineNumber" : 245,
        "endColumnNumber" : 78
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 245,
        "startColumnNumber" : 24,
        "endLineNumber" : 245,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 244,
        "startColumnNumber" : 60,
        "endLineNumber" : 246,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 244,
        "startColumnNumber" : 20,
        "endLineNumber" : 248,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 243,
        "startColumnNumber" : 49,
        "endLineNumber" : 249,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 21) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 242,
        "startColumnNumber" : 62,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1972,
        "startLineNumber" : 242,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2391,
        "startLineNumber" : 234,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 237,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 226,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3201,
        "startLineNumber" : 218,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3403,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3534,
        "startLineNumber" : 212,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3659,
        "startLineNumber" : 210,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3851,
        "startLineNumber" : 206,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4059,
        "startLineNumber" : 202,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 417,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 245,
        "startColumnNumber" : 24,
        "endLineNumber" : 245,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "ActivityInfo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 247,
      "startColumnNumber" : 41,
      "endLineNumber" : 247,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 247,
        "startColumnNumber" : 41,
        "endLineNumber" : 247,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ActivityInfo.FLAG_RESUME_WHILE_PAUSING",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 247,
        "startColumnNumber" : 40,
        "endLineNumber" : 247,
        "endColumnNumber" : 79
      },
      "nodeContext" : "~ActivityInfo.FLAG_RESUME_WHILE_PAUSING",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 247,
        "startColumnNumber" : 24,
        "endLineNumber" : 247,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 247,
        "startColumnNumber" : 24,
        "endLineNumber" : 247,
        "endColumnNumber" : 80
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 246,
        "startColumnNumber" : 27,
        "endLineNumber" : 248,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 244,
        "startColumnNumber" : 20,
        "endLineNumber" : 248,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (\"true\".equalsIgnoreCase(attrValue)) {\n  result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n}\n else {\n  result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 243,
        "startColumnNumber" : 49,
        "endLineNumber" : 249,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 21) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 242,
        "startColumnNumber" : 62,
        "endLineNumber" : 250,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1972,
        "startLineNumber" : 242,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 198,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2391,
        "startLineNumber" : 234,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 237,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 226,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3201,
        "startLineNumber" : 218,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 315,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3403,
        "startLineNumber" : 214,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 339,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3534,
        "startLineNumber" : 212,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 354,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3659,
        "startLineNumber" : 210,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 369,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3851,
        "startLineNumber" : 206,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 393,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4059,
        "startLineNumber" : 202,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 417,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4467,
        "startLineNumber" : 194,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4843,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 495,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5377,
        "startLineNumber" : 176,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 548,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5723,
        "startLineNumber" : 170,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 578,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6047,
        "startLineNumber" : 164,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 608,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6365,
        "startLineNumber" : 158,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 638,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 6671,
        "startLineNumber" : 152,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 668,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7000,
        "startLineNumber" : 146,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 698,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7289,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 728,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7606,
        "startLineNumber" : 134,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 758,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 7926,
        "startLineNumber" : 128,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 788,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8222,
        "startLineNumber" : 122,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 818,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8329,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 830,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8432,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 842,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8622,
        "startLineNumber" : 114,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 866,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 8887,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 901,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9007,
        "startLineNumber" : 108,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 915,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9131,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 930,
      "astHeight" : 41
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 9522,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 970,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9782,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"name\".equals(attrName)) {\n  if (attrValue.charAt(0) == '.') {\n    result.name=context.getPackageName() + attrValue;\n  }\n else {\n    result.name=attrValue;\n  }\n}\n else if (\"parentActivityName\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 16) {\n    if (attrValue.charAt(0) == '.') {\n      result.parentActivityName=context.getPackageName() + attrValue;\n    }\n else {\n      result.parentActivityName=attrValue;\n    }\n  }\n}\n else if (\"exported\".equals(attrName)) {\n  result.exported=\"true\".equalsIgnoreCase(attrValue);\n}\n else if (\"launchMode\".equals(attrName)) {\n  result.launchMode=parseLaunchMode(attrValue);\n}\n else if (\"theme\".equals(attrName)) {\n  final Resources res=context.getResources();\n  final String packageName=context.getPackageName();\n  result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n}\n else if (\"uiOptions\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 14) {\n    result.uiOptions=Integer.decode(attrValue);\n  }\n}\n else if (\"permission\".equals(attrName)) {\n  result.permission=attrValue;\n}\n else if (\"taskAffinity\".equals(attrName)) {\n  result.taskAffinity=attrValue;\n}\n else if (\"multiprocess\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n  }\n}\n else if (\"finishOnTaskLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n  }\n}\n else if (\"clearTaskOnLaunch\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n  }\n}\n else if (\"noHistory\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n  }\n}\n else if (\"alwaysRetainTaskState\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n  }\n}\n else if (\"stateNotNeeded\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n  }\n}\n else if (\"excludeFromRecents\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n  }\n}\n else if (\"allowTaskReparenting\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n  }\n}\n else if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n else {\n    result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n  }\n}\n else if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 23) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n}\n else if (\"immersive\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 18) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n    }\n  }\n}\n else if (\"hardwareAccelerated\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 11) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n    }\n  }\n}\n else if (\"documentLaunchMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.documentLaunchMode=Integer.decode(attrValue);\n  }\n}\n else if (\"maxRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.maxRecents=Integer.decode(attrValue);\n  }\n}\n else if (\"configChanges\".equals(attrName)) {\n  result.configChanges=Integer.decode(attrValue);\n}\n else if (\"windowSoftInputMode\".equals(attrName)) {\n  result.softInputMode=Integer.decode(attrValue);\n}\n else if (\"persistableMode\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    result.persistableMode=Integer.decode(attrValue);\n  }\n}\n else if (\"allowEmbedded\".equals(attrName)) {\n  final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n  if (\"true\".equalsIgnoreCase(attrValue)) {\n    result.flags|=flag;\n  }\n else {\n    result.flags&=~flag;\n  }\n}\n else if (\"autoRemoveFromRecents\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n    }\n  }\n}\n else if (\"relinquishTaskIdentity\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n    }\n  }\n}\n else if (\"resumeWhilePausing\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 21) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n    }\n  }\n}\n else if (\"screenOrientation\".equals(attrName)) {\n  result.screenOrientation=parseScreenOrientation(attrValue);\n}\n else if (\"label\".equals(attrName)) {\n  final String strOrResId=attrValue;\n  int id=0;\n  try {\n    id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n  if (id != 0) {\n    result.labelRes=id;\n  }\n else {\n    result.nonLocalizedLabel=strOrResId;\n  }\n}\n else if (\"icon\".equals(attrName)) {\n  try {\n    result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n else if (\"banner\".equals(attrName)) {\n  if (Build.VERSION.SDK_INT >= 20) {\n    try {\n      result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n else if (\"logo\".equals(attrName)) {\n  try {\n    result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1001,
      "astHeight" : 43
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9806,
        "startLineNumber" : 91,
        "startColumnNumber" : 111,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1002,
      "astHeight" : 44
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9927,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override void onTranslate(Context context,int tagType,String attrName,String attrValue,ActivityInfo result){\n  if (\"name\".equals(attrName)) {\n    if (attrValue.charAt(0) == '.') {\n      result.name=context.getPackageName() + attrValue;\n    }\n else {\n      result.name=attrValue;\n    }\n  }\n else   if (\"parentActivityName\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 16) {\n      if (attrValue.charAt(0) == '.') {\n        result.parentActivityName=context.getPackageName() + attrValue;\n      }\n else {\n        result.parentActivityName=attrValue;\n      }\n    }\n  }\n else   if (\"exported\".equals(attrName)) {\n    result.exported=\"true\".equalsIgnoreCase(attrValue);\n  }\n else   if (\"launchMode\".equals(attrName)) {\n    result.launchMode=parseLaunchMode(attrValue);\n  }\n else   if (\"theme\".equals(attrName)) {\n    final Resources res=context.getResources();\n    final String packageName=context.getPackageName();\n    result.theme=res.getIdentifier(attrValue,\"style\",packageName);\n  }\n else   if (\"uiOptions\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 14) {\n      result.uiOptions=Integer.decode(attrValue);\n    }\n  }\n else   if (\"permission\".equals(attrName)) {\n    result.permission=attrValue;\n  }\n else   if (\"taskAffinity\".equals(attrName)) {\n    result.taskAffinity=attrValue;\n  }\n else   if (\"multiprocess\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_MULTIPROCESS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_MULTIPROCESS;\n    }\n  }\n else   if (\"finishOnTaskLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_TASK_LAUNCH;\n    }\n  }\n else   if (\"clearTaskOnLaunch\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_CLEAR_TASK_ON_LAUNCH;\n    }\n  }\n else   if (\"noHistory\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_NO_HISTORY;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_NO_HISTORY;\n    }\n  }\n else   if (\"alwaysRetainTaskState\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALWAYS_RETAIN_TASK_STATE;\n    }\n  }\n else   if (\"stateNotNeeded\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_STATE_NOT_NEEDED;\n    }\n  }\n else   if (\"excludeFromRecents\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_EXCLUDE_FROM_RECENTS;\n    }\n  }\n else   if (\"allowTaskReparenting\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_ALLOW_TASK_REPARENTING;\n    }\n  }\n else   if (\"finishOnCloseSystemDialogs\".equals(attrName)) {\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n else {\n      result.flags&=~ActivityInfo.FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS;\n    }\n  }\n else   if (\"showOnLockScreen\".equals(attrName) || \"showForAllUsers\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 23) {\n      final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_SHOW_FOR_ALL_USERS\",0);\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=flag;\n      }\n else {\n        result.flags&=~flag;\n      }\n    }\n  }\n else   if (\"immersive\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 18) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_IMMERSIVE;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_IMMERSIVE;\n      }\n    }\n  }\n else   if (\"hardwareAccelerated\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 11) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_HARDWARE_ACCELERATED;\n      }\n    }\n  }\n else   if (\"documentLaunchMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.documentLaunchMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"maxRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.maxRecents=Integer.decode(attrValue);\n    }\n  }\n else   if (\"configChanges\".equals(attrName)) {\n    result.configChanges=Integer.decode(attrValue);\n  }\n else   if (\"windowSoftInputMode\".equals(attrName)) {\n    result.softInputMode=Integer.decode(attrValue);\n  }\n else   if (\"persistableMode\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      result.persistableMode=Integer.decode(attrValue);\n    }\n  }\n else   if (\"allowEmbedded\".equals(attrName)) {\n    final int flag=ShareReflectUtil.getValueOfStaticIntField(ActivityInfo.class,\"FLAG_ALLOW_EMBEDDED\",0);\n    if (\"true\".equalsIgnoreCase(attrValue)) {\n      result.flags|=flag;\n    }\n else {\n      result.flags&=~flag;\n    }\n  }\n else   if (\"autoRemoveFromRecents\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_AUTO_REMOVE_FROM_RECENTS;\n      }\n    }\n  }\n else   if (\"relinquishTaskIdentity\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RELINQUISH_TASK_IDENTITY;\n      }\n    }\n  }\n else   if (\"resumeWhilePausing\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 21) {\n      if (\"true\".equalsIgnoreCase(attrValue)) {\n        result.flags|=ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n else {\n        result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n      }\n    }\n  }\n else   if (\"screenOrientation\".equals(attrName)) {\n    result.screenOrientation=parseScreenOrientation(attrValue);\n  }\n else   if (\"label\".equals(attrName)) {\n    final String strOrResId=attrValue;\n    int id=0;\n    try {\n      id=context.getResources().getIdentifier(strOrResId,\"string\",sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n    if (id != 0) {\n      result.labelRes=id;\n    }\n else {\n      result.nonLocalizedLabel=strOrResId;\n    }\n  }\n else   if (\"icon\".equals(attrName)) {\n    try {\n      result.icon=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n else   if (\"banner\".equals(attrName)) {\n    if (Build.VERSION.SDK_INT >= 20) {\n      try {\n        result.banner=context.getResources().getIdentifier(attrValue,null,sPackageName);\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n else   if (\"logo\".equals(attrName)) {\n    try {\n      result.logo=context.getResources().getIdentifier(attrValue,null,sPackageName);\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1026,
      "astHeight" : 45
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 247,
        "startColumnNumber" : 24,
        "endLineNumber" : 247,
        "endColumnNumber" : 80
      },
      "nodeContext" : "result.flags&=~ActivityInfo.FLAG_RESUME_WHILE_PAUSING;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 124,
    "startColumnNumber" : 36,
    "endLineNumber" : 124,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 126,
    "startColumnNumber" : 37,
    "endLineNumber" : 126,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 130,
    "startColumnNumber" : 36,
    "endLineNumber" : 130,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 132,
    "startColumnNumber" : 37,
    "endLineNumber" : 132,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 136,
    "startColumnNumber" : 36,
    "endLineNumber" : 136,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 138,
    "startColumnNumber" : 37,
    "endLineNumber" : 138,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 142,
    "startColumnNumber" : 36,
    "endLineNumber" : 142,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 144,
    "startColumnNumber" : 37,
    "endLineNumber" : 144,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 148,
    "startColumnNumber" : 36,
    "endLineNumber" : 148,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 150,
    "startColumnNumber" : 37,
    "endLineNumber" : 150,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 154,
    "startColumnNumber" : 36,
    "endLineNumber" : 154,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 156,
    "startColumnNumber" : 37,
    "endLineNumber" : 156,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 160,
    "startColumnNumber" : 36,
    "endLineNumber" : 160,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 162,
    "startColumnNumber" : 37,
    "endLineNumber" : 162,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 166,
    "startColumnNumber" : 36,
    "endLineNumber" : 166,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 168,
    "startColumnNumber" : 37,
    "endLineNumber" : 168,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 172,
    "startColumnNumber" : 36,
    "endLineNumber" : 172,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 174,
    "startColumnNumber" : 37,
    "endLineNumber" : 174,
    "endColumnNumber" : 49
  }, {
    "charLength" : 12,
    "startLineNumber" : 189,
    "startColumnNumber" : 40,
    "endLineNumber" : 189,
    "endColumnNumber" : 52
  }, {
    "charLength" : 12,
    "startLineNumber" : 191,
    "startColumnNumber" : 41,
    "endLineNumber" : 191,
    "endColumnNumber" : 53
  }, {
    "charLength" : 12,
    "startLineNumber" : 197,
    "startColumnNumber" : 40,
    "endLineNumber" : 197,
    "endColumnNumber" : 52
  }, {
    "charLength" : 12,
    "startLineNumber" : 199,
    "startColumnNumber" : 41,
    "endLineNumber" : 199,
    "endColumnNumber" : 53
  }, {
    "charLength" : 12,
    "startLineNumber" : 229,
    "startColumnNumber" : 40,
    "endLineNumber" : 229,
    "endColumnNumber" : 52
  }, {
    "charLength" : 12,
    "startLineNumber" : 231,
    "startColumnNumber" : 41,
    "endLineNumber" : 231,
    "endColumnNumber" : 53
  }, {
    "charLength" : 12,
    "startLineNumber" : 237,
    "startColumnNumber" : 40,
    "endLineNumber" : 237,
    "endColumnNumber" : 52
  }, {
    "charLength" : 12,
    "startLineNumber" : 239,
    "startColumnNumber" : 41,
    "endLineNumber" : 239,
    "endColumnNumber" : 53
  }, {
    "charLength" : 12,
    "startLineNumber" : 245,
    "startColumnNumber" : 40,
    "endLineNumber" : 245,
    "endColumnNumber" : 52
  }, {
    "charLength" : 12,
    "startLineNumber" : 247,
    "startColumnNumber" : 41,
    "endLineNumber" : 247,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 11
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 11
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 11
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 11
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 9
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 12,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 12
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 11
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 11
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 10
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 9
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 13,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 12
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 11
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 11
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 10
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 9
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 9
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 7
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 14,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 14
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 14
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 13
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 13
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 12
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 12
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 11
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 11
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 10
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 10
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 9
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 9
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 15,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 14
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 14
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 13
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 13
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 12
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 12
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 11
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 11
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 10
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 10
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 9
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 9
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 7
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 7
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 19,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 20,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 21,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 22,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 23,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 24,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 25,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 26,
    "layout" : 6
  }, {
    "firstKey" : 16,
    "secondKey" : 27,
    "layout" : 6
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 15
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 15
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 14
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 14
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 13
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 13
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 12
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 12
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 11
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 11
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 10
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 10
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 9
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 9
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 19,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 20,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 21,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 22,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 23,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 24,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 25,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 26,
    "layout" : 7
  }, {
    "firstKey" : 17,
    "secondKey" : 27,
    "layout" : 7
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 18
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 18
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 17
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 17
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 16
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 16
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 15
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 15
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 14
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 14
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 13
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 13
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 12
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 12
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 11
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 11
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 10
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 10
  }, {
    "firstKey" : 18,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 19,
    "secondKey" : 0,
    "layout" : 19
  }, {
    "firstKey" : 19,
    "secondKey" : 1,
    "layout" : 19
  }, {
    "firstKey" : 19,
    "secondKey" : 2,
    "layout" : 18
  }, {
    "firstKey" : 19,
    "secondKey" : 3,
    "layout" : 18
  }, {
    "firstKey" : 19,
    "secondKey" : 4,
    "layout" : 17
  }, {
    "firstKey" : 19,
    "secondKey" : 5,
    "layout" : 17
  }, {
    "firstKey" : 19,
    "secondKey" : 6,
    "layout" : 16
  }, {
    "firstKey" : 19,
    "secondKey" : 7,
    "layout" : 16
  }, {
    "firstKey" : 19,
    "secondKey" : 8,
    "layout" : 15
  }, {
    "firstKey" : 19,
    "secondKey" : 9,
    "layout" : 15
  }, {
    "firstKey" : 19,
    "secondKey" : 10,
    "layout" : 14
  }, {
    "firstKey" : 19,
    "secondKey" : 11,
    "layout" : 14
  }, {
    "firstKey" : 19,
    "secondKey" : 12,
    "layout" : 13
  }, {
    "firstKey" : 19,
    "secondKey" : 13,
    "layout" : 13
  }, {
    "firstKey" : 19,
    "secondKey" : 14,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 15,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 16,
    "layout" : 11
  }, {
    "firstKey" : 19,
    "secondKey" : 17,
    "layout" : 11
  }, {
    "firstKey" : 19,
    "secondKey" : 18,
    "layout" : 5
  }, {
    "firstKey" : 19,
    "secondKey" : 20,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 21,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 22,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 23,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 24,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 25,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 26,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 27,
    "layout" : 9
  }, {
    "firstKey" : 20,
    "secondKey" : 0,
    "layout" : 19
  }, {
    "firstKey" : 20,
    "secondKey" : 1,
    "layout" : 19
  }, {
    "firstKey" : 20,
    "secondKey" : 2,
    "layout" : 18
  }, {
    "firstKey" : 20,
    "secondKey" : 3,
    "layout" : 18
  }, {
    "firstKey" : 20,
    "secondKey" : 4,
    "layout" : 17
  }, {
    "firstKey" : 20,
    "secondKey" : 5,
    "layout" : 17
  }, {
    "firstKey" : 20,
    "secondKey" : 6,
    "layout" : 16
  }, {
    "firstKey" : 20,
    "secondKey" : 7,
    "layout" : 16
  }, {
    "firstKey" : 20,
    "secondKey" : 8,
    "layout" : 15
  }, {
    "firstKey" : 20,
    "secondKey" : 9,
    "layout" : 15
  }, {
    "firstKey" : 20,
    "secondKey" : 10,
    "layout" : 14
  }, {
    "firstKey" : 20,
    "secondKey" : 11,
    "layout" : 14
  }, {
    "firstKey" : 20,
    "secondKey" : 12,
    "layout" : 13
  }, {
    "firstKey" : 20,
    "secondKey" : 13,
    "layout" : 13
  }, {
    "firstKey" : 20,
    "secondKey" : 14,
    "layout" : 12
  }, {
    "firstKey" : 20,
    "secondKey" : 15,
    "layout" : 12
  }, {
    "firstKey" : 20,
    "secondKey" : 16,
    "layout" : 11
  }, {
    "firstKey" : 20,
    "secondKey" : 17,
    "layout" : 11
  }, {
    "firstKey" : 20,
    "secondKey" : 18,
    "layout" : 9
  }, {
    "firstKey" : 20,
    "secondKey" : 19,
    "layout" : 9
  }, {
    "firstKey" : 20,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 20,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 20,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 20,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 20,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 20,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 0,
    "layout" : 20
  }, {
    "firstKey" : 21,
    "secondKey" : 1,
    "layout" : 20
  }, {
    "firstKey" : 21,
    "secondKey" : 2,
    "layout" : 19
  }, {
    "firstKey" : 21,
    "secondKey" : 3,
    "layout" : 19
  }, {
    "firstKey" : 21,
    "secondKey" : 4,
    "layout" : 18
  }, {
    "firstKey" : 21,
    "secondKey" : 5,
    "layout" : 18
  }, {
    "firstKey" : 21,
    "secondKey" : 6,
    "layout" : 17
  }, {
    "firstKey" : 21,
    "secondKey" : 7,
    "layout" : 17
  }, {
    "firstKey" : 21,
    "secondKey" : 8,
    "layout" : 16
  }, {
    "firstKey" : 21,
    "secondKey" : 9,
    "layout" : 16
  }, {
    "firstKey" : 21,
    "secondKey" : 10,
    "layout" : 15
  }, {
    "firstKey" : 21,
    "secondKey" : 11,
    "layout" : 15
  }, {
    "firstKey" : 21,
    "secondKey" : 12,
    "layout" : 14
  }, {
    "firstKey" : 21,
    "secondKey" : 13,
    "layout" : 14
  }, {
    "firstKey" : 21,
    "secondKey" : 14,
    "layout" : 13
  }, {
    "firstKey" : 21,
    "secondKey" : 15,
    "layout" : 13
  }, {
    "firstKey" : 21,
    "secondKey" : 16,
    "layout" : 12
  }, {
    "firstKey" : 21,
    "secondKey" : 17,
    "layout" : 12
  }, {
    "firstKey" : 21,
    "secondKey" : 18,
    "layout" : 10
  }, {
    "firstKey" : 21,
    "secondKey" : 19,
    "layout" : 10
  }, {
    "firstKey" : 21,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 21,
    "secondKey" : 22,
    "layout" : 9
  }, {
    "firstKey" : 21,
    "secondKey" : 23,
    "layout" : 9
  }, {
    "firstKey" : 21,
    "secondKey" : 24,
    "layout" : 9
  }, {
    "firstKey" : 21,
    "secondKey" : 25,
    "layout" : 9
  }, {
    "firstKey" : 21,
    "secondKey" : 26,
    "layout" : 9
  }, {
    "firstKey" : 21,
    "secondKey" : 27,
    "layout" : 9
  }, {
    "firstKey" : 22,
    "secondKey" : 0,
    "layout" : 26
  }, {
    "firstKey" : 22,
    "secondKey" : 1,
    "layout" : 26
  }, {
    "firstKey" : 22,
    "secondKey" : 2,
    "layout" : 25
  }, {
    "firstKey" : 22,
    "secondKey" : 3,
    "layout" : 25
  }, {
    "firstKey" : 22,
    "secondKey" : 4,
    "layout" : 24
  }, {
    "firstKey" : 22,
    "secondKey" : 5,
    "layout" : 24
  }, {
    "firstKey" : 22,
    "secondKey" : 6,
    "layout" : 23
  }, {
    "firstKey" : 22,
    "secondKey" : 7,
    "layout" : 23
  }, {
    "firstKey" : 22,
    "secondKey" : 8,
    "layout" : 22
  }, {
    "firstKey" : 22,
    "secondKey" : 9,
    "layout" : 22
  }, {
    "firstKey" : 22,
    "secondKey" : 10,
    "layout" : 21
  }, {
    "firstKey" : 22,
    "secondKey" : 11,
    "layout" : 21
  }, {
    "firstKey" : 22,
    "secondKey" : 12,
    "layout" : 20
  }, {
    "firstKey" : 22,
    "secondKey" : 13,
    "layout" : 20
  }, {
    "firstKey" : 22,
    "secondKey" : 14,
    "layout" : 19
  }, {
    "firstKey" : 22,
    "secondKey" : 15,
    "layout" : 19
  }, {
    "firstKey" : 22,
    "secondKey" : 16,
    "layout" : 18
  }, {
    "firstKey" : 22,
    "secondKey" : 17,
    "layout" : 18
  }, {
    "firstKey" : 22,
    "secondKey" : 18,
    "layout" : 16
  }, {
    "firstKey" : 22,
    "secondKey" : 19,
    "layout" : 16
  }, {
    "firstKey" : 22,
    "secondKey" : 20,
    "layout" : 15
  }, {
    "firstKey" : 22,
    "secondKey" : 21,
    "layout" : 15
  }, {
    "firstKey" : 22,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 22,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 22,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 22,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 0,
    "layout" : 27
  }, {
    "firstKey" : 23,
    "secondKey" : 1,
    "layout" : 27
  }, {
    "firstKey" : 23,
    "secondKey" : 2,
    "layout" : 26
  }, {
    "firstKey" : 23,
    "secondKey" : 3,
    "layout" : 26
  }, {
    "firstKey" : 23,
    "secondKey" : 4,
    "layout" : 25
  }, {
    "firstKey" : 23,
    "secondKey" : 5,
    "layout" : 25
  }, {
    "firstKey" : 23,
    "secondKey" : 6,
    "layout" : 24
  }, {
    "firstKey" : 23,
    "secondKey" : 7,
    "layout" : 24
  }, {
    "firstKey" : 23,
    "secondKey" : 8,
    "layout" : 23
  }, {
    "firstKey" : 23,
    "secondKey" : 9,
    "layout" : 23
  }, {
    "firstKey" : 23,
    "secondKey" : 10,
    "layout" : 22
  }, {
    "firstKey" : 23,
    "secondKey" : 11,
    "layout" : 22
  }, {
    "firstKey" : 23,
    "secondKey" : 12,
    "layout" : 21
  }, {
    "firstKey" : 23,
    "secondKey" : 13,
    "layout" : 21
  }, {
    "firstKey" : 23,
    "secondKey" : 14,
    "layout" : 20
  }, {
    "firstKey" : 23,
    "secondKey" : 15,
    "layout" : 20
  }, {
    "firstKey" : 23,
    "secondKey" : 16,
    "layout" : 19
  }, {
    "firstKey" : 23,
    "secondKey" : 17,
    "layout" : 19
  }, {
    "firstKey" : 23,
    "secondKey" : 18,
    "layout" : 17
  }, {
    "firstKey" : 23,
    "secondKey" : 19,
    "layout" : 17
  }, {
    "firstKey" : 23,
    "secondKey" : 20,
    "layout" : 16
  }, {
    "firstKey" : 23,
    "secondKey" : 21,
    "layout" : 16
  }, {
    "firstKey" : 23,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 23,
    "secondKey" : 24,
    "layout" : 9
  }, {
    "firstKey" : 23,
    "secondKey" : 25,
    "layout" : 9
  }, {
    "firstKey" : 23,
    "secondKey" : 26,
    "layout" : 9
  }, {
    "firstKey" : 23,
    "secondKey" : 27,
    "layout" : 9
  }, {
    "firstKey" : 24,
    "secondKey" : 0,
    "layout" : 27
  }, {
    "firstKey" : 24,
    "secondKey" : 1,
    "layout" : 27
  }, {
    "firstKey" : 24,
    "secondKey" : 2,
    "layout" : 26
  }, {
    "firstKey" : 24,
    "secondKey" : 3,
    "layout" : 26
  }, {
    "firstKey" : 24,
    "secondKey" : 4,
    "layout" : 25
  }, {
    "firstKey" : 24,
    "secondKey" : 5,
    "layout" : 25
  }, {
    "firstKey" : 24,
    "secondKey" : 6,
    "layout" : 24
  }, {
    "firstKey" : 24,
    "secondKey" : 7,
    "layout" : 24
  }, {
    "firstKey" : 24,
    "secondKey" : 8,
    "layout" : 23
  }, {
    "firstKey" : 24,
    "secondKey" : 9,
    "layout" : 23
  }, {
    "firstKey" : 24,
    "secondKey" : 10,
    "layout" : 22
  }, {
    "firstKey" : 24,
    "secondKey" : 11,
    "layout" : 22
  }, {
    "firstKey" : 24,
    "secondKey" : 12,
    "layout" : 21
  }, {
    "firstKey" : 24,
    "secondKey" : 13,
    "layout" : 21
  }, {
    "firstKey" : 24,
    "secondKey" : 14,
    "layout" : 20
  }, {
    "firstKey" : 24,
    "secondKey" : 15,
    "layout" : 20
  }, {
    "firstKey" : 24,
    "secondKey" : 16,
    "layout" : 19
  }, {
    "firstKey" : 24,
    "secondKey" : 17,
    "layout" : 19
  }, {
    "firstKey" : 24,
    "secondKey" : 18,
    "layout" : 17
  }, {
    "firstKey" : 24,
    "secondKey" : 19,
    "layout" : 17
  }, {
    "firstKey" : 24,
    "secondKey" : 20,
    "layout" : 16
  }, {
    "firstKey" : 24,
    "secondKey" : 21,
    "layout" : 16
  }, {
    "firstKey" : 24,
    "secondKey" : 22,
    "layout" : 9
  }, {
    "firstKey" : 24,
    "secondKey" : 23,
    "layout" : 9
  }, {
    "firstKey" : 24,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 24,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 0,
    "layout" : 28
  }, {
    "firstKey" : 25,
    "secondKey" : 1,
    "layout" : 28
  }, {
    "firstKey" : 25,
    "secondKey" : 2,
    "layout" : 27
  }, {
    "firstKey" : 25,
    "secondKey" : 3,
    "layout" : 27
  }, {
    "firstKey" : 25,
    "secondKey" : 4,
    "layout" : 26
  }, {
    "firstKey" : 25,
    "secondKey" : 5,
    "layout" : 26
  }, {
    "firstKey" : 25,
    "secondKey" : 6,
    "layout" : 25
  }, {
    "firstKey" : 25,
    "secondKey" : 7,
    "layout" : 25
  }, {
    "firstKey" : 25,
    "secondKey" : 8,
    "layout" : 24
  }, {
    "firstKey" : 25,
    "secondKey" : 9,
    "layout" : 24
  }, {
    "firstKey" : 25,
    "secondKey" : 10,
    "layout" : 23
  }, {
    "firstKey" : 25,
    "secondKey" : 11,
    "layout" : 23
  }, {
    "firstKey" : 25,
    "secondKey" : 12,
    "layout" : 22
  }, {
    "firstKey" : 25,
    "secondKey" : 13,
    "layout" : 22
  }, {
    "firstKey" : 25,
    "secondKey" : 14,
    "layout" : 21
  }, {
    "firstKey" : 25,
    "secondKey" : 15,
    "layout" : 21
  }, {
    "firstKey" : 25,
    "secondKey" : 16,
    "layout" : 20
  }, {
    "firstKey" : 25,
    "secondKey" : 17,
    "layout" : 20
  }, {
    "firstKey" : 25,
    "secondKey" : 18,
    "layout" : 18
  }, {
    "firstKey" : 25,
    "secondKey" : 19,
    "layout" : 18
  }, {
    "firstKey" : 25,
    "secondKey" : 20,
    "layout" : 17
  }, {
    "firstKey" : 25,
    "secondKey" : 21,
    "layout" : 17
  }, {
    "firstKey" : 25,
    "secondKey" : 22,
    "layout" : 10
  }, {
    "firstKey" : 25,
    "secondKey" : 23,
    "layout" : 10
  }, {
    "firstKey" : 25,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 26,
    "layout" : 9
  }, {
    "firstKey" : 25,
    "secondKey" : 27,
    "layout" : 9
  }, {
    "firstKey" : 26,
    "secondKey" : 0,
    "layout" : 28
  }, {
    "firstKey" : 26,
    "secondKey" : 1,
    "layout" : 28
  }, {
    "firstKey" : 26,
    "secondKey" : 2,
    "layout" : 27
  }, {
    "firstKey" : 26,
    "secondKey" : 3,
    "layout" : 27
  }, {
    "firstKey" : 26,
    "secondKey" : 4,
    "layout" : 26
  }, {
    "firstKey" : 26,
    "secondKey" : 5,
    "layout" : 26
  }, {
    "firstKey" : 26,
    "secondKey" : 6,
    "layout" : 25
  }, {
    "firstKey" : 26,
    "secondKey" : 7,
    "layout" : 25
  }, {
    "firstKey" : 26,
    "secondKey" : 8,
    "layout" : 24
  }, {
    "firstKey" : 26,
    "secondKey" : 9,
    "layout" : 24
  }, {
    "firstKey" : 26,
    "secondKey" : 10,
    "layout" : 23
  }, {
    "firstKey" : 26,
    "secondKey" : 11,
    "layout" : 23
  }, {
    "firstKey" : 26,
    "secondKey" : 12,
    "layout" : 22
  }, {
    "firstKey" : 26,
    "secondKey" : 13,
    "layout" : 22
  }, {
    "firstKey" : 26,
    "secondKey" : 14,
    "layout" : 21
  }, {
    "firstKey" : 26,
    "secondKey" : 15,
    "layout" : 21
  }, {
    "firstKey" : 26,
    "secondKey" : 16,
    "layout" : 20
  }, {
    "firstKey" : 26,
    "secondKey" : 17,
    "layout" : 20
  }, {
    "firstKey" : 26,
    "secondKey" : 18,
    "layout" : 18
  }, {
    "firstKey" : 26,
    "secondKey" : 19,
    "layout" : 18
  }, {
    "firstKey" : 26,
    "secondKey" : 20,
    "layout" : 17
  }, {
    "firstKey" : 26,
    "secondKey" : 21,
    "layout" : 17
  }, {
    "firstKey" : 26,
    "secondKey" : 22,
    "layout" : 10
  }, {
    "firstKey" : 26,
    "secondKey" : 23,
    "layout" : 10
  }, {
    "firstKey" : 26,
    "secondKey" : 24,
    "layout" : 9
  }, {
    "firstKey" : 26,
    "secondKey" : 25,
    "layout" : 9
  }, {
    "firstKey" : 26,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 0,
    "layout" : 29
  }, {
    "firstKey" : 27,
    "secondKey" : 1,
    "layout" : 29
  }, {
    "firstKey" : 27,
    "secondKey" : 2,
    "layout" : 28
  }, {
    "firstKey" : 27,
    "secondKey" : 3,
    "layout" : 28
  }, {
    "firstKey" : 27,
    "secondKey" : 4,
    "layout" : 27
  }, {
    "firstKey" : 27,
    "secondKey" : 5,
    "layout" : 27
  }, {
    "firstKey" : 27,
    "secondKey" : 6,
    "layout" : 26
  }, {
    "firstKey" : 27,
    "secondKey" : 7,
    "layout" : 26
  }, {
    "firstKey" : 27,
    "secondKey" : 8,
    "layout" : 25
  }, {
    "firstKey" : 27,
    "secondKey" : 9,
    "layout" : 25
  }, {
    "firstKey" : 27,
    "secondKey" : 10,
    "layout" : 24
  }, {
    "firstKey" : 27,
    "secondKey" : 11,
    "layout" : 24
  }, {
    "firstKey" : 27,
    "secondKey" : 12,
    "layout" : 23
  }, {
    "firstKey" : 27,
    "secondKey" : 13,
    "layout" : 23
  }, {
    "firstKey" : 27,
    "secondKey" : 14,
    "layout" : 22
  }, {
    "firstKey" : 27,
    "secondKey" : 15,
    "layout" : 22
  }, {
    "firstKey" : 27,
    "secondKey" : 16,
    "layout" : 21
  }, {
    "firstKey" : 27,
    "secondKey" : 17,
    "layout" : 21
  }, {
    "firstKey" : 27,
    "secondKey" : 18,
    "layout" : 19
  }, {
    "firstKey" : 27,
    "secondKey" : 19,
    "layout" : 19
  }, {
    "firstKey" : 27,
    "secondKey" : 20,
    "layout" : 18
  }, {
    "firstKey" : 27,
    "secondKey" : 21,
    "layout" : 18
  }, {
    "firstKey" : 27,
    "secondKey" : 22,
    "layout" : 11
  }, {
    "firstKey" : 27,
    "secondKey" : 23,
    "layout" : 11
  }, {
    "firstKey" : 27,
    "secondKey" : 24,
    "layout" : 10
  }, {
    "firstKey" : 27,
    "secondKey" : 25,
    "layout" : 10
  }, {
    "firstKey" : 27,
    "secondKey" : 26,
    "layout" : 5
  } ]
}