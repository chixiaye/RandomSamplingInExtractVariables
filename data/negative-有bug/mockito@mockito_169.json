{
  "id" : 169,
  "expression" : "\"builder only creates invocations of IMethods interface\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/invocation/InvocationBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"builder only creates invocations of IMethods interface\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 64,
      "startColumnNumber" : 24,
      "endLineNumber" : 64,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 63,
        "startColumnNumber" : 22,
        "endLineNumber" : 64,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new RuntimeException(\"builder only creates invocations of IMethods interface\",e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 85
      },
      "nodeContext" : "throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 62,
        "startColumnNumber" : 34,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 62,
        "startColumnNumber" : 14,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (Exception e) {\n  throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  method=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));\n}\n catch (Exception e) {\n  throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 46,
        "startColumnNumber" : 28,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (argTypes == null) {\n    argTypes=new LinkedList<Class<?>>();\n    for (    Object arg : args) {\n      if (arg == null) {\n        argTypes.add(Object.class);\n      }\n else {\n        argTypes.add(arg.getClass());\n      }\n    }\n  }\n  try {\n    method=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));\n  }\n catch (  Exception e) {\n    throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (method == null) {\n  if (argTypes == null) {\n    argTypes=new LinkedList<Class<?>>();\n    for (    Object arg : args) {\n      if (arg == null) {\n        argTypes.add(Object.class);\n      }\n else {\n        argTypes.add(arg.getClass());\n      }\n    }\n  }\n  try {\n    method=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));\n  }\n catch (  Exception e) {\n    throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1237,
        "startLineNumber" : 45,
        "startColumnNumber" : 37,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (method == null) {\n    if (argTypes == null) {\n      argTypes=new LinkedList<Class<?>>();\n      for (      Object arg : args) {\n        if (arg == null) {\n          argTypes.add(Object.class);\n        }\n else {\n          argTypes.add(arg.getClass());\n        }\n      }\n    }\n    try {\n      method=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n    }\n  }\n  Invocation i=createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1);\n  if (verified) {\n    i.markVerified();\n  }\n  return i;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Build the invocation <p> If the method was not specified, use IMethods methods.\n * @return invocation\n */\npublic Invocation toInvocation(){\n  if (method == null) {\n    if (argTypes == null) {\n      argTypes=new LinkedList<Class<?>>();\n      for (      Object arg : args) {\n        if (arg == null) {\n          argTypes.add(Object.class);\n        }\n else {\n          argTypes.add(arg.getClass());\n        }\n      }\n    }\n    try {\n      method=IMethods.class.getMethod(methodName,argTypes.toArray(new Class[argTypes.size()]));\n    }\n catch (    Exception e) {\n      throw new RuntimeException(\"builder only creates invocations of IMethods interface\",e);\n    }\n  }\n  Invocation i=createInvocation(new MockStrongReference<Object>(mock,false),new SerializableMethod(method),args,NO_OP,location == null ? new LocationImpl() : location,1);\n  if (verified) {\n    i.markVerified();\n  }\n  return i;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 63,
        "startColumnNumber" : 22,
        "endLineNumber" : 64,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new RuntimeException(\"builder only creates invocations of IMethods interface\",e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 64,
    "startColumnNumber" : 24,
    "endLineNumber" : 64,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}