{
  "id" : 313,
  "expression" : "gc",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-generate/src/test/java/com/baomidou/mybatisplus/test/generator/SQLServerGenerator.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 38,
      "startColumnNumber" : 8,
      "endLineNumber" : 38,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 31
      },
      "nodeContext" : "gc.setOutputDir(\"D://\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 32
      },
      "nodeContext" : "gc.setOutputDir(\"D://\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 32
      },
      "nodeContext" : "gc.setOutputDir(\"D://\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  }, {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 39,
      "startColumnNumber" : 8,
      "endLineNumber" : 39,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 32
      },
      "nodeContext" : "gc.setFileOverride(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 33
      },
      "nodeContext" : "gc.setFileOverride(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 33
      },
      "nodeContext" : "gc.setFileOverride(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  }, {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 40,
      "startColumnNumber" : 8,
      "endLineNumber" : 40,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 32
      },
      "nodeContext" : "gc.setActiveRecord(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 33
      },
      "nodeContext" : "gc.setActiveRecord(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 33
      },
      "nodeContext" : "gc.setActiveRecord(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  }, {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 41,
      "startColumnNumber" : 8,
      "endLineNumber" : 41,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 32
      },
      "nodeContext" : "gc.setEnableCache(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 33
      },
      "nodeContext" : "gc.setEnableCache(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 33
      },
      "nodeContext" : "gc.setEnableCache(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  }, {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 42,
      "startColumnNumber" : 8,
      "endLineNumber" : 42,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 33
      },
      "nodeContext" : "gc.setBaseResultMap(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 34
      },
      "nodeContext" : "gc.setBaseResultMap(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 34
      },
      "nodeContext" : "gc.setBaseResultMap(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  }, {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 43,
      "startColumnNumber" : 8,
      "endLineNumber" : 43,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 35
      },
      "nodeContext" : "gc.setBaseColumnList(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 36
      },
      "nodeContext" : "gc.setBaseColumnList(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 36
      },
      "nodeContext" : "gc.setBaseColumnList(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  }, {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 45,
      "startColumnNumber" : 8,
      "endLineNumber" : 45,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 34
      },
      "nodeContext" : "gc.setAuthor(\"nieqiurong\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 35
      },
      "nodeContext" : "gc.setAuthor(\"nieqiurong\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 35
      },
      "nodeContext" : "gc.setAuthor(\"nieqiurong\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  }, {
    "nodeContext" : "gc",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 53,
      "startColumnNumber" : 28,
      "endLineNumber" : 53,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 31
      },
      "nodeContext" : "mpg.setGlobalConfig(gc)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 32
      },
      "nodeContext" : "mpg.setGlobalConfig(gc);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4576,
        "startLineNumber" : 32,
        "startColumnNumber" : 43,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 334,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4615,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  int result=scanner();\n  AutoGenerator mpg=new AutoGenerator();\n  GlobalConfig gc=new GlobalConfig();\n  gc.setOutputDir(\"D://\");\n  gc.setFileOverride(true);\n  gc.setActiveRecord(true);\n  gc.setEnableCache(false);\n  gc.setBaseResultMap(true);\n  gc.setBaseColumnList(false);\n  gc.setAuthor(\"nieqiurong\");\n  mpg.setGlobalConfig(gc);\n  DataSourceConfig dsc=new DataSourceConfig();\n  dsc.setDbType(DbType.SQL_SERVER);\n  dsc.setTypeConvert(new SqlServerTypeConvert(){\n    @Override public DbColumnType processTypeConvert(    String fieldType){\n      System.out.println(\"转换类型：\" + fieldType);\n      return super.processTypeConvert(fieldType);\n    }\n  }\n);\n  dsc.setDriverName(\"com.microsoft.sqlserver.jdbc.SQLServerDriver\");\n  dsc.setUsername(\"sa\");\n  dsc.setPassword(\"nieqiuqiu\");\n  dsc.setUrl(\"jdbc:sqlserver://192.168.1.105:1433;databaseName=mybatis-plus\");\n  mpg.setDataSource(dsc);\n  StrategyConfig strategy=new StrategyConfig();\n  strategy.setTablePrefix(new String[]{\"bmd_\",\"mp_\"});\n  strategy.setNaming(NamingStrategy.underline_to_camel);\n  mpg.setStrategy(strategy);\n  PackageConfig pc=new PackageConfig();\n  pc.setModuleName(\"test\");\n  pc.setParent(\"com.baomidou\");\n  pc.setController(\"controller\");\n  mpg.setPackageInfo(pc);\n  InjectionConfig cfg=new InjectionConfig(){\n    @Override public void initMap(){\n      Map<String,Object> map=new HashMap<>();\n      map.put(\"abc\",this.getConfig().getGlobalConfig().getAuthor() + \"-mp\");\n      this.setMap(map);\n    }\n  }\n;\n  List<FileOutConfig> focList=new ArrayList<>();\n  focList.add(new FileOutConfig(\"/templates/entity.java\" + ((1 == result) ? \".ftl\" : \".vm\")){\n    @Override public String outputFile(    TableInfo tableInfo){\n      return \"D://my_\" + tableInfo.getEntityName() + \".java\";\n    }\n  }\n);\n  cfg.setFileOutConfigList(focList);\n  mpg.setCfg(cfg);\n  if (1 == result) {\n    mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n  }\n  mpg.execute();\n  System.err.println(mpg.getCfg().getMap().get(\"abc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 32
      },
      "nodeContext" : "mpg.setGlobalConfig(gc);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.baomidou.mybatisplus.generator.config.GlobalConfig"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 38,
    "startColumnNumber" : 8,
    "endLineNumber" : 38,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 39,
    "startColumnNumber" : 8,
    "endLineNumber" : 39,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 40,
    "startColumnNumber" : 8,
    "endLineNumber" : 40,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 41,
    "startColumnNumber" : 8,
    "endLineNumber" : 41,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 42,
    "startColumnNumber" : 8,
    "endLineNumber" : 42,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 43,
    "startColumnNumber" : 8,
    "endLineNumber" : 43,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 45,
    "startColumnNumber" : 8,
    "endLineNumber" : 45,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 53,
    "startColumnNumber" : 28,
    "endLineNumber" : 53,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  } ]
}