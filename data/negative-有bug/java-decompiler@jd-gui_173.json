{
  "id" : 173,
  "expression" : "File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\")",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/sourceloader/MavenOrgSourceLoaderProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 101,
      "startLineNumber" : 205,
      "startColumnNumber" : 35,
      "endLineNumber" : 205,
      "endColumnNumber" : 136
    },
    "astNodeNumber" : 12,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 205,
        "startColumnNumber" : 25,
        "endLineNumber" : 205,
        "endColumnNumber" : 136
      },
      "nodeContext" : "tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 205,
        "startColumnNumber" : 20,
        "endLineNumber" : 205,
        "endColumnNumber" : 137
      },
      "nodeContext" : "File tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 201,
        "startColumnNumber" : 40,
        "endLineNumber" : 220,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\n  URL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\n  File tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\n  tmpFile.delete();\n  tmpFile.deleteOnExit();\n  try (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\n    int read=is.read(buffer);\n    while (read > 0) {\n      os.write(buffer,0,read);\n      read=is.read(buffer);\n    }\n  }\n   cache.put(entry,tmpFile);\n  return tmpFile;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 201,
        "startColumnNumber" : 16,
        "endLineNumber" : 220,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (artifactId != null) {\n  String filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\n  URL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\n  File tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\n  tmpFile.delete();\n  tmpFile.deleteOnExit();\n  try (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\n    int read=is.read(buffer);\n    while (read > 0) {\n      os.write(buffer,0,read);\n      read=is.read(buffer);\n    }\n  }\n   cache.put(entry,tmpFile);\n  return tmpFile;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4802,
        "startLineNumber" : 121,
        "startColumnNumber" : 16,
        "endLineNumber" : 221,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-1\");\n  byte[] buffer=new byte[1024 * 2];\n  try (DigestInputStream is=new DigestInputStream(entry.getInputStream(),messageDigest)){\n    while (is.read(buffer) > -1)     ;\n  }\n   byte[] array=messageDigest.digest();\n  StringBuilder sb=new StringBuilder();\n  for (  byte b : array) {\n    sb.append(hexa((b & 255) >> 4));\n    sb.append(hexa(b & 15));\n  }\n  String sha1=sb.toString();\n  URL searchUrl=new URL(MAVENORG_SEARCH_URL_PREFIX + sha1 + MAVENORG_SEARCH_URL_SUFFIX);\n  boolean sourceAvailable=false;\n  String id=null;\n  String numFound=null;\n  try (InputStream is=searchUrl.openStream()){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(is);\n    String name=\"\";\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        if (\"str\".equals(reader.getLocalName())) {\n          if (\"id\".equals(reader.getAttributeValue(null,\"name\"))) {\n            name=\"id\";\n          }\n else {\n            name=\"str\";\n          }\n        }\n else         if (\"result\".equals(reader.getLocalName())) {\n          numFound=reader.getAttributeValue(null,\"numFound\");\n        }\n else {\n          name=\"\";\n        }\n      break;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"id\":      id=reader.getText().trim();\n    break;\ncase \"str\":  sourceAvailable|=\"-sources.jar\".equals(reader.getText().trim());\nbreak;\n}\nbreak;\n}\n}\nreader.close();\n}\n String groupId=null, artifactId=null, version=null;\nif (\"0\".equals(numFound)) {\nProperties pomProperties=getPomProperties(entry);\nif (pomProperties != null) {\ngroupId=pomProperties.getProperty(\"groupId\");\nartifactId=pomProperties.getProperty(\"artifactId\");\nversion=pomProperties.getProperty(\"version\");\n}\n}\n else if (\"1\".equals(numFound) && sourceAvailable) {\nint index1=id.indexOf(':');\nint index2=id.lastIndexOf(':');\ngroupId=id.substring(0,index1);\nartifactId=id.substring(index1 + 1,index2);\nversion=id.substring(index2 + 1);\n}\nif (artifactId != null) {\nString filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\nURL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\nFile tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\ntmpFile.delete();\ntmpFile.deleteOnExit();\ntry (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\nint read=is.read(buffer);\nwhile (read > 0) {\nos.write(buffer,0,read);\nread=is.read(buffer);\n}\n}\n cache.put(entry,tmpFile);\nreturn tmpFile;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 476,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4901,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-1\");\n  byte[] buffer=new byte[1024 * 2];\n  try (DigestInputStream is=new DigestInputStream(entry.getInputStream(),messageDigest)){\n    while (is.read(buffer) > -1)     ;\n  }\n   byte[] array=messageDigest.digest();\n  StringBuilder sb=new StringBuilder();\n  for (  byte b : array) {\n    sb.append(hexa((b & 255) >> 4));\n    sb.append(hexa(b & 15));\n  }\n  String sha1=sb.toString();\n  URL searchUrl=new URL(MAVENORG_SEARCH_URL_PREFIX + sha1 + MAVENORG_SEARCH_URL_SUFFIX);\n  boolean sourceAvailable=false;\n  String id=null;\n  String numFound=null;\n  try (InputStream is=searchUrl.openStream()){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(is);\n    String name=\"\";\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        if (\"str\".equals(reader.getLocalName())) {\n          if (\"id\".equals(reader.getAttributeValue(null,\"name\"))) {\n            name=\"id\";\n          }\n else {\n            name=\"str\";\n          }\n        }\n else         if (\"result\".equals(reader.getLocalName())) {\n          numFound=reader.getAttributeValue(null,\"numFound\");\n        }\n else {\n          name=\"\";\n        }\n      break;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"id\":      id=reader.getText().trim();\n    break;\ncase \"str\":  sourceAvailable|=\"-sources.jar\".equals(reader.getText().trim());\nbreak;\n}\nbreak;\n}\n}\nreader.close();\n}\n String groupId=null, artifactId=null, version=null;\nif (\"0\".equals(numFound)) {\nProperties pomProperties=getPomProperties(entry);\nif (pomProperties != null) {\ngroupId=pomProperties.getProperty(\"groupId\");\nartifactId=pomProperties.getProperty(\"artifactId\");\nversion=pomProperties.getProperty(\"version\");\n}\n}\n else if (\"1\".equals(numFound) && sourceAvailable) {\nint index1=id.indexOf(':');\nint index2=id.lastIndexOf(':');\ngroupId=id.substring(0,index1);\nartifactId=id.substring(index1 + 1,index2);\nversion=id.substring(index2 + 1);\n}\nif (artifactId != null) {\nString filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\nURL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\nFile tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\ntmpFile.delete();\ntmpFile.deleteOnExit();\ntry (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\nint read=is.read(buffer);\nwhile (read > 0) {\nos.write(buffer,0,read);\nread=is.read(buffer);\n}\n}\n cache.put(entry,tmpFile);\nreturn tmpFile;\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 488,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4927,
        "startLineNumber" : 120,
        "startColumnNumber" : 61,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-1\");\n    byte[] buffer=new byte[1024 * 2];\n    try (DigestInputStream is=new DigestInputStream(entry.getInputStream(),messageDigest)){\n      while (is.read(buffer) > -1)       ;\n    }\n     byte[] array=messageDigest.digest();\n    StringBuilder sb=new StringBuilder();\n    for (    byte b : array) {\n      sb.append(hexa((b & 255) >> 4));\n      sb.append(hexa(b & 15));\n    }\n    String sha1=sb.toString();\n    URL searchUrl=new URL(MAVENORG_SEARCH_URL_PREFIX + sha1 + MAVENORG_SEARCH_URL_SUFFIX);\n    boolean sourceAvailable=false;\n    String id=null;\n    String numFound=null;\n    try (InputStream is=searchUrl.openStream()){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(is);\n      String name=\"\";\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          if (\"str\".equals(reader.getLocalName())) {\n            if (\"id\".equals(reader.getAttributeValue(null,\"name\"))) {\n              name=\"id\";\n            }\n else {\n              name=\"str\";\n            }\n          }\n else           if (\"result\".equals(reader.getLocalName())) {\n            numFound=reader.getAttributeValue(null,\"numFound\");\n          }\n else {\n            name=\"\";\n          }\n        break;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"id\":        id=reader.getText().trim();\n      break;\ncase \"str\":    sourceAvailable|=\"-sources.jar\".equals(reader.getText().trim());\n  break;\n}\nbreak;\n}\n}\nreader.close();\n}\n String groupId=null, artifactId=null, version=null;\nif (\"0\".equals(numFound)) {\nProperties pomProperties=getPomProperties(entry);\nif (pomProperties != null) {\ngroupId=pomProperties.getProperty(\"groupId\");\nartifactId=pomProperties.getProperty(\"artifactId\");\nversion=pomProperties.getProperty(\"version\");\n}\n}\n else if (\"1\".equals(numFound) && sourceAvailable) {\nint index1=id.indexOf(':');\nint index2=id.lastIndexOf(':');\ngroupId=id.substring(0,index1);\nartifactId=id.substring(index1 + 1,index2);\nversion=id.substring(index2 + 1);\n}\nif (artifactId != null) {\nString filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\nURL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\nFile tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\ntmpFile.delete();\ntmpFile.deleteOnExit();\ntry (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\nint read=is.read(buffer);\nwhile (read > 0) {\nos.write(buffer,0,read);\nread=is.read(buffer);\n}\n}\n cache.put(entry,tmpFile);\nreturn tmpFile;\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 489,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4980,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!entry.isDirectory() && !failed.contains(entry)) {\n  try {\n    MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-1\");\n    byte[] buffer=new byte[1024 * 2];\n    try (DigestInputStream is=new DigestInputStream(entry.getInputStream(),messageDigest)){\n      while (is.read(buffer) > -1)       ;\n    }\n     byte[] array=messageDigest.digest();\n    StringBuilder sb=new StringBuilder();\n    for (    byte b : array) {\n      sb.append(hexa((b & 255) >> 4));\n      sb.append(hexa(b & 15));\n    }\n    String sha1=sb.toString();\n    URL searchUrl=new URL(MAVENORG_SEARCH_URL_PREFIX + sha1 + MAVENORG_SEARCH_URL_SUFFIX);\n    boolean sourceAvailable=false;\n    String id=null;\n    String numFound=null;\n    try (InputStream is=searchUrl.openStream()){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(is);\n      String name=\"\";\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          if (\"str\".equals(reader.getLocalName())) {\n            if (\"id\".equals(reader.getAttributeValue(null,\"name\"))) {\n              name=\"id\";\n            }\n else {\n              name=\"str\";\n            }\n          }\n else           if (\"result\".equals(reader.getLocalName())) {\n            numFound=reader.getAttributeValue(null,\"numFound\");\n          }\n else {\n            name=\"\";\n          }\n        break;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"id\":        id=reader.getText().trim();\n      break;\ncase \"str\":    sourceAvailable|=\"-sources.jar\".equals(reader.getText().trim());\n  break;\n}\nbreak;\n}\n}\nreader.close();\n}\n String groupId=null, artifactId=null, version=null;\nif (\"0\".equals(numFound)) {\nProperties pomProperties=getPomProperties(entry);\nif (pomProperties != null) {\ngroupId=pomProperties.getProperty(\"groupId\");\nartifactId=pomProperties.getProperty(\"artifactId\");\nversion=pomProperties.getProperty(\"version\");\n}\n}\n else if (\"1\".equals(numFound) && sourceAvailable) {\nint index1=id.indexOf(':');\nint index2=id.lastIndexOf(':');\ngroupId=id.substring(0,index1);\nartifactId=id.substring(index1 + 1,index2);\nversion=id.substring(index2 + 1);\n}\nif (artifactId != null) {\nString filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\nURL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\nFile tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\ntmpFile.delete();\ntmpFile.deleteOnExit();\ntry (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\nint read=is.read(buffer);\nwhile (read > 0) {\nos.write(buffer,0,read);\nread=is.read(buffer);\n}\n}\n cache.put(entry,tmpFile);\nreturn tmpFile;\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 500,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5142,
        "startLineNumber" : 115,
        "startColumnNumber" : 64,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cache.containsKey(entry)) {\n    return cache.get(entry);\n  }\n  if (!entry.isDirectory() && !failed.contains(entry)) {\n    try {\n      MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-1\");\n      byte[] buffer=new byte[1024 * 2];\n      try (DigestInputStream is=new DigestInputStream(entry.getInputStream(),messageDigest)){\n        while (is.read(buffer) > -1)         ;\n      }\n       byte[] array=messageDigest.digest();\n      StringBuilder sb=new StringBuilder();\n      for (      byte b : array) {\n        sb.append(hexa((b & 255) >> 4));\n        sb.append(hexa(b & 15));\n      }\n      String sha1=sb.toString();\n      URL searchUrl=new URL(MAVENORG_SEARCH_URL_PREFIX + sha1 + MAVENORG_SEARCH_URL_SUFFIX);\n      boolean sourceAvailable=false;\n      String id=null;\n      String numFound=null;\n      try (InputStream is=searchUrl.openStream()){\n        XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(is);\n        String name=\"\";\n        while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:            if (\"str\".equals(reader.getLocalName())) {\n              if (\"id\".equals(reader.getAttributeValue(null,\"name\"))) {\n                name=\"id\";\n              }\n else {\n                name=\"str\";\n              }\n            }\n else             if (\"result\".equals(reader.getLocalName())) {\n              numFound=reader.getAttributeValue(null,\"numFound\");\n            }\n else {\n              name=\"\";\n            }\n          break;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"id\":          id=reader.getText().trim();\n        break;\ncase \"str\":      sourceAvailable|=\"-sources.jar\".equals(reader.getText().trim());\n    break;\n}\nbreak;\n}\n}\nreader.close();\n}\n String groupId=null, artifactId=null, version=null;\nif (\"0\".equals(numFound)) {\nProperties pomProperties=getPomProperties(entry);\nif (pomProperties != null) {\ngroupId=pomProperties.getProperty(\"groupId\");\nartifactId=pomProperties.getProperty(\"artifactId\");\nversion=pomProperties.getProperty(\"version\");\n}\n}\n else if (\"1\".equals(numFound) && sourceAvailable) {\nint index1=id.indexOf(':');\nint index2=id.lastIndexOf(':');\ngroupId=id.substring(0,index1);\nartifactId=id.substring(index1 + 1,index2);\nversion=id.substring(index2 + 1);\n}\nif (artifactId != null) {\nString filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\nURL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\nFile tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\ntmpFile.delete();\ntmpFile.deleteOnExit();\ntry (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\nint read=is.read(buffer);\nwhile (read > 0) {\nos.write(buffer,0,read);\nread=is.read(buffer);\n}\n}\n cache.put(entry,tmpFile);\nreturn tmpFile;\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nfailed.add(entry);\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 519,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5202,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected File downloadSourceJarFile(Container.Entry entry){\n  if (cache.containsKey(entry)) {\n    return cache.get(entry);\n  }\n  if (!entry.isDirectory() && !failed.contains(entry)) {\n    try {\n      MessageDigest messageDigest=MessageDigest.getInstance(\"SHA-1\");\n      byte[] buffer=new byte[1024 * 2];\n      try (DigestInputStream is=new DigestInputStream(entry.getInputStream(),messageDigest)){\n        while (is.read(buffer) > -1)         ;\n      }\n       byte[] array=messageDigest.digest();\n      StringBuilder sb=new StringBuilder();\n      for (      byte b : array) {\n        sb.append(hexa((b & 255) >> 4));\n        sb.append(hexa(b & 15));\n      }\n      String sha1=sb.toString();\n      URL searchUrl=new URL(MAVENORG_SEARCH_URL_PREFIX + sha1 + MAVENORG_SEARCH_URL_SUFFIX);\n      boolean sourceAvailable=false;\n      String id=null;\n      String numFound=null;\n      try (InputStream is=searchUrl.openStream()){\n        XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(is);\n        String name=\"\";\n        while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:            if (\"str\".equals(reader.getLocalName())) {\n              if (\"id\".equals(reader.getAttributeValue(null,\"name\"))) {\n                name=\"id\";\n              }\n else {\n                name=\"str\";\n              }\n            }\n else             if (\"result\".equals(reader.getLocalName())) {\n              numFound=reader.getAttributeValue(null,\"numFound\");\n            }\n else {\n              name=\"\";\n            }\n          break;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"id\":          id=reader.getText().trim();\n        break;\ncase \"str\":      sourceAvailable|=\"-sources.jar\".equals(reader.getText().trim());\n    break;\n}\nbreak;\n}\n}\nreader.close();\n}\n String groupId=null, artifactId=null, version=null;\nif (\"0\".equals(numFound)) {\nProperties pomProperties=getPomProperties(entry);\nif (pomProperties != null) {\ngroupId=pomProperties.getProperty(\"groupId\");\nartifactId=pomProperties.getProperty(\"artifactId\");\nversion=pomProperties.getProperty(\"version\");\n}\n}\n else if (\"1\".equals(numFound) && sourceAvailable) {\nint index1=id.indexOf(':');\nint index2=id.lastIndexOf(':');\ngroupId=id.substring(0,index1);\nartifactId=id.substring(index1 + 1,index2);\nversion=id.substring(index2 + 1);\n}\nif (artifactId != null) {\nString filePath=groupId.replace('.','/') + '/' + artifactId+ '/'+ version+ '/'+ artifactId+ '-'+ version;\nURL loadUrl=new URL(MAVENORG_LOAD_URL_PREFIX + filePath + MAVENORG_LOAD_URL_SUFFIX);\nFile tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\ntmpFile.delete();\ntmpFile.deleteOnExit();\ntry (InputStream is=new BufferedInputStream(loadUrl.openStream());OutputStream os=new BufferedOutputStream(new FileOutputStream(tmpFile))){\nint read=is.read(buffer);\nwhile (read > 0) {\nos.write(buffer,0,read);\nread=is.read(buffer);\n}\n}\n cache.put(entry,tmpFile);\nreturn tmpFile;\n}\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nfailed.add(entry);\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 205,
        "startColumnNumber" : 20,
        "endLineNumber" : 205,
        "endColumnNumber" : 137
      },
      "nodeContext" : "File tmpFile=File.createTempFile(\"jd-gui.tmp.\",'.' + groupId + '_'+ artifactId+ '_'+ version+ \"-sources.jar\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 13,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 101,
    "startLineNumber" : 205,
    "startColumnNumber" : 35,
    "endLineNumber" : 205,
    "endColumnNumber" : 136
  } ],
  "layoutRelationDataList" : [ ]
}