{
  "id" : 32,
  "expression" : "\"Unexpected EOF; still expected \" + len + \" bytes\"",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/server/pm/installer/FileBridge.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Unexpected EOF; still expected \" + len + \" bytes\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 95,
      "startColumnNumber" : 36,
      "endLineNumber" : 95,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 94,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 87
      },
      "nodeContext" : "new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 94,
        "startColumnNumber" : 28,
        "endLineNumber" : 95,
        "endColumnNumber" : 88
      },
      "nodeContext" : "throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 93,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 93,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (n == -1) {\n  throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 91,
        "startColumnNumber" : 36,
        "endLineNumber" : 99,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  int n=read(mServer,temp,0,Math.min(temp.length,len));\n  if (n == -1) {\n    throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n  }\n  write(mTarget,temp,0,n);\n  len-=n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 91,
        "startColumnNumber" : 20,
        "endLineNumber" : 99,
        "endColumnNumber" : 21
      },
      "nodeContext" : "while (len > 0) {\n  int n=read(mServer,temp,0,Math.min(temp.length,len));\n  if (n == -1) {\n    throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n  }\n  write(mTarget,temp,0,n);\n  len-=n;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 88,
        "startColumnNumber" : 38,
        "endLineNumber" : 101,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n  while (len > 0) {\n    int n=read(mServer,temp,0,Math.min(temp.length,len));\n    if (n == -1) {\n      throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n    }\n    write(mTarget,temp,0,n);\n    len-=n;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 113,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (cmd == CMD_WRITE) {\n  int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n  while (len > 0) {\n    int n=read(mServer,temp,0,Math.min(temp.length,len));\n    if (n == -1) {\n      throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n    }\n    write(mTarget,temp,0,n);\n    len-=n;\n  }\n}\n else if (cmd == CMD_FSYNC) {\n  Os.fsync(mTarget);\n  write(mServer,temp,0,MSG_LENGTH);\n}\n else if (cmd == CMD_CLOSE) {\n  Os.fsync(mTarget);\n  Os.close(mTarget);\n  mClosed=true;\n  write(mServer,temp,0,MSG_LENGTH);\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 86,
        "startColumnNumber" : 69,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final int cmd=FileUtils.peekInt(temp,0,ByteOrder.BIG_ENDIAN);\n  if (cmd == CMD_WRITE) {\n    int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n    while (len > 0) {\n      int n=read(mServer,temp,0,Math.min(temp.length,len));\n      if (n == -1) {\n        throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n      }\n      write(mTarget,temp,0,n);\n      len-=n;\n    }\n  }\n else   if (cmd == CMD_FSYNC) {\n    Os.fsync(mTarget);\n    write(mServer,temp,0,MSG_LENGTH);\n  }\n else   if (cmd == CMD_CLOSE) {\n    Os.fsync(mTarget);\n    Os.close(mTarget);\n    mClosed=true;\n    write(mServer,temp,0,MSG_LENGTH);\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (read(mServer,temp,0,MSG_LENGTH) == MSG_LENGTH) {\n  final int cmd=FileUtils.peekInt(temp,0,ByteOrder.BIG_ENDIAN);\n  if (cmd == CMD_WRITE) {\n    int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n    while (len > 0) {\n      int n=read(mServer,temp,0,Math.min(temp.length,len));\n      if (n == -1) {\n        throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n      }\n      write(mTarget,temp,0,n);\n      len-=n;\n    }\n  }\n else   if (cmd == CMD_FSYNC) {\n    Os.fsync(mTarget);\n    write(mServer,temp,0,MSG_LENGTH);\n  }\n else   if (cmd == CMD_CLOSE) {\n    Os.fsync(mTarget);\n    Os.close(mTarget);\n    mClosed=true;\n    write(mServer,temp,0,MSG_LENGTH);\n    break;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 130,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1301,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (read(mServer,temp,0,MSG_LENGTH) == MSG_LENGTH) {\n    final int cmd=FileUtils.peekInt(temp,0,ByteOrder.BIG_ENDIAN);\n    if (cmd == CMD_WRITE) {\n      int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n      while (len > 0) {\n        int n=read(mServer,temp,0,Math.min(temp.length,len));\n        if (n == -1) {\n          throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n        }\n        write(mTarget,temp,0,n);\n        len-=n;\n      }\n    }\n else     if (cmd == CMD_FSYNC) {\n      Os.fsync(mTarget);\n      write(mServer,temp,0,MSG_LENGTH);\n    }\n else     if (cmd == CMD_CLOSE) {\n      Os.fsync(mTarget);\n      Os.close(mTarget);\n      mClosed=true;\n      write(mServer,temp,0,MSG_LENGTH);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1455,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  while (read(mServer,temp,0,MSG_LENGTH) == MSG_LENGTH) {\n    final int cmd=FileUtils.peekInt(temp,0,ByteOrder.BIG_ENDIAN);\n    if (cmd == CMD_WRITE) {\n      int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n      while (len > 0) {\n        int n=read(mServer,temp,0,Math.min(temp.length,len));\n        if (n == -1) {\n          throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n        }\n        write(mTarget,temp,0,n);\n        len-=n;\n      }\n    }\n else     if (cmd == CMD_FSYNC) {\n      Os.fsync(mTarget);\n      write(mServer,temp,0,MSG_LENGTH);\n    }\n else     if (cmd == CMD_CLOSE) {\n      Os.fsync(mTarget);\n      Os.close(mTarget);\n      mClosed=true;\n      write(mServer,temp,0,MSG_LENGTH);\n      break;\n    }\n  }\n}\n catch (ErrnoException|IOException e) {\n  Log.wtf(TAG,\"Failed during bridge\",e);\n}\n finally {\n  forceClose();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 152,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1515,
        "startLineNumber" : 83,
        "startColumnNumber" : 22,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final byte[] temp=new byte[8192];\n  try {\n    while (read(mServer,temp,0,MSG_LENGTH) == MSG_LENGTH) {\n      final int cmd=FileUtils.peekInt(temp,0,ByteOrder.BIG_ENDIAN);\n      if (cmd == CMD_WRITE) {\n        int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n        while (len > 0) {\n          int n=read(mServer,temp,0,Math.min(temp.length,len));\n          if (n == -1) {\n            throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n          }\n          write(mTarget,temp,0,n);\n          len-=n;\n        }\n      }\n else       if (cmd == CMD_FSYNC) {\n        Os.fsync(mTarget);\n        write(mServer,temp,0,MSG_LENGTH);\n      }\n else       if (cmd == CMD_CLOSE) {\n        Os.fsync(mTarget);\n        Os.close(mTarget);\n        mClosed=true;\n        write(mServer,temp,0,MSG_LENGTH);\n        break;\n      }\n    }\n  }\n catch (  ErrnoException|IOException e) {\n    Log.wtf(TAG,\"Failed during bridge\",e);\n  }\n finally {\n    forceClose();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1547,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  final byte[] temp=new byte[8192];\n  try {\n    while (read(mServer,temp,0,MSG_LENGTH) == MSG_LENGTH) {\n      final int cmd=FileUtils.peekInt(temp,0,ByteOrder.BIG_ENDIAN);\n      if (cmd == CMD_WRITE) {\n        int len=FileUtils.peekInt(temp,4,ByteOrder.BIG_ENDIAN);\n        while (len > 0) {\n          int n=read(mServer,temp,0,Math.min(temp.length,len));\n          if (n == -1) {\n            throw new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\");\n          }\n          write(mTarget,temp,0,n);\n          len-=n;\n        }\n      }\n else       if (cmd == CMD_FSYNC) {\n        Os.fsync(mTarget);\n        write(mServer,temp,0,MSG_LENGTH);\n      }\n else       if (cmd == CMD_CLOSE) {\n        Os.fsync(mTarget);\n        Os.close(mTarget);\n        mClosed=true;\n        write(mServer,temp,0,MSG_LENGTH);\n        break;\n      }\n    }\n  }\n catch (  ErrnoException|IOException e) {\n    Log.wtf(TAG,\"Failed during bridge\",e);\n  }\n finally {\n    forceClose();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 94,
        "startColumnNumber" : 34,
        "endLineNumber" : 95,
        "endColumnNumber" : 87
      },
      "nodeContext" : "new IOException(\"Unexpected EOF; still expected \" + len + \" bytes\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 95,
    "startColumnNumber" : 36,
    "endLineNumber" : 95,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}