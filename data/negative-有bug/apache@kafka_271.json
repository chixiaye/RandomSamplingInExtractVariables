{
  "id" : 271,
  "expression" : "inputArr[i] == (byte)0xFF",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/utils/Bytes.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inputArr[i] == (byte)0xFF",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 155,
      "startColumnNumber" : 16,
      "endLineNumber" : 155,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 56
      },
      "nodeContext" : "inputArr[i] == (byte)0xFF && carry == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (inputArr[i] == (byte)0xFF && carry == 1) {\n  ret[i]=(byte)0x00;\n}\n else {\n  ret[i]=(byte)(inputArr[i] + carry);\n  carry=0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 154,
        "startColumnNumber" : 55,
        "endLineNumber" : 161,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (inputArr[i] == (byte)0xFF && carry == 1) {\n    ret[i]=(byte)0x00;\n  }\n else {\n    ret[i]=(byte)(inputArr[i] + carry);\n    carry=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=inputArr.length - 1; i >= 0; i--) {\n  if (inputArr[i] == (byte)0xFF && carry == 1) {\n    ret[i]=(byte)0x00;\n  }\n else {\n    ret[i]=(byte)(inputArr[i] + carry);\n    carry=0;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 150,
        "startColumnNumber" : 80,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] inputArr=input.get();\n  byte[] ret=new byte[inputArr.length];\n  int carry=1;\n  for (int i=inputArr.length - 1; i >= 0; i--) {\n    if (inputArr[i] == (byte)0xFF && carry == 1) {\n      ret[i]=(byte)0x00;\n    }\n else {\n      ret[i]=(byte)(inputArr[i] + carry);\n      carry=0;\n    }\n  }\n  if (carry == 0) {\n    return wrap(ret);\n  }\n else {\n    throw new IndexOutOfBoundsException();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Increment the underlying byte array by adding 1. Throws an IndexOutOfBoundsException if incrementing would cause the underlying input byte array to overflow.\n * @param input - The byte array to increment\n * @return A new copy of the incremented byte array.\n */\npublic static Bytes increment(Bytes input) throws IndexOutOfBoundsException {\n  byte[] inputArr=input.get();\n  byte[] ret=new byte[inputArr.length];\n  int carry=1;\n  for (int i=inputArr.length - 1; i >= 0; i--) {\n    if (inputArr[i] == (byte)0xFF && carry == 1) {\n      ret[i]=(byte)0x00;\n    }\n else {\n      ret[i]=(byte)(inputArr[i] + carry);\n      carry=0;\n    }\n  }\n  if (carry == 0) {\n    return wrap(ret);\n  }\n else {\n    throw new IndexOutOfBoundsException();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 56
      },
      "nodeContext" : "inputArr[i] == (byte)0xFF && carry == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 155,
    "startColumnNumber" : 16,
    "endLineNumber" : 155,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}