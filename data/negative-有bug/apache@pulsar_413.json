{
  "id" : 413,
  "expression" : "NarClassLoader.getFromArchive(tmpdir,Collections.emptySet(),Thread.currentThread().getContextClassLoader(),NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/utils/src/test/java/org/apache/pulsar/functions/utils/SinkConfigUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NarClassLoader.getFromArchive(tmpdir,Collections.emptySet(),Thread.currentThread().getContextClassLoader(),NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 185,
      "startLineNumber" : 333,
      "startColumnNumber" : 40,
      "endLineNumber" : 335,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 15,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 333,
        "startColumnNumber" : 23,
        "endLineNumber" : 335,
        "endColumnNumber" : 106
      },
      "nodeContext" : "narClassLoader=NarClassLoader.getFromArchive(tmpdir,Collections.emptySet(),Thread.currentThread().getContextClassLoader(),NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NarClassLoader narClassLoader=NarClassLoader.getFromArchive(tmpdir,Collections.emptySet(),Thread.currentThread().getContextClassLoader(),NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 321,
        "startColumnNumber" : 56,
        "endLineNumber" : 346,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockStatic(ConnectorUtils.class);\n  mockStatic(NarUnpacker.class);\n  defn=new ConnectorDefinition();\n  defn.setSinkConfigClass(TestSinkConfig.class.getName());\n  PowerMockito.when(ConnectorUtils.getConnectorDefinition(any())).thenReturn(defn);\n  File tmpdir=Files.createTempDirectory(\"test\").toFile();\n  PowerMockito.when(NarUnpacker.unpackNar(any(),any())).thenReturn(tmpdir);\n  SinkConfig sinkConfig=createSinkConfig();\n  NarClassLoader narClassLoader=NarClassLoader.getFromArchive(tmpdir,Collections.emptySet(),Thread.currentThread().getContextClassLoader(),NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR);\n  sinkConfig.getConfigs().put(\"configParameter\",\"Test\");\n  SinkConfigUtils.validateSinkConfig(sinkConfig,narClassLoader);\n  sinkConfig.getConfigs().put(\"configParameter\",null);\n  Exception e=expectThrows(IllegalArgumentException.class,() -> SinkConfigUtils.validateSinkConfig(sinkConfig,narClassLoader));\n  assertTrue(e.getMessage().contains(\"Could not validate sink config: Field 'configParameter' cannot be null!\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1297,
        "startLineNumber" : 320,
        "startColumnNumber" : 4,
        "endLineNumber" : 346,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testValidateConfig() throws IOException {\n  mockStatic(ConnectorUtils.class);\n  mockStatic(NarUnpacker.class);\n  defn=new ConnectorDefinition();\n  defn.setSinkConfigClass(TestSinkConfig.class.getName());\n  PowerMockito.when(ConnectorUtils.getConnectorDefinition(any())).thenReturn(defn);\n  File tmpdir=Files.createTempDirectory(\"test\").toFile();\n  PowerMockito.when(NarUnpacker.unpackNar(any(),any())).thenReturn(tmpdir);\n  SinkConfig sinkConfig=createSinkConfig();\n  NarClassLoader narClassLoader=NarClassLoader.getFromArchive(tmpdir,Collections.emptySet(),Thread.currentThread().getContextClassLoader(),NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR);\n  sinkConfig.getConfigs().put(\"configParameter\",\"Test\");\n  SinkConfigUtils.validateSinkConfig(sinkConfig,narClassLoader);\n  sinkConfig.getConfigs().put(\"configParameter\",null);\n  Exception e=expectThrows(IllegalArgumentException.class,() -> SinkConfigUtils.validateSinkConfig(sinkConfig,narClassLoader));\n  assertTrue(e.getMessage().contains(\"Could not validate sink config: Field 'configParameter' cannot be null!\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 333,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NarClassLoader narClassLoader=NarClassLoader.getFromArchive(tmpdir,Collections.emptySet(),Thread.currentThread().getContextClassLoader(),NarClassLoader.DEFAULT_NAR_EXTRACTION_DIR);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 13,
    "type" : "org.apache.pulsar.common.nar.NarClassLoader"
  } ],
  "positionList" : [ {
    "charLength" : 185,
    "startLineNumber" : 333,
    "startColumnNumber" : 40,
    "endLineNumber" : 335,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ ]
}