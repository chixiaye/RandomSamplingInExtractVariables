{
  "id" : 174,
  "expression" : "\"rule 1:2\\n\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/TestATNSerialization.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"rule 1:2\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 249,
      "startColumnNumber" : 4,
      "endLineNumber" : 249,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 238,
        "startColumnNumber" : 3,
        "endLineNumber" : 255,
        "endColumnNumber" : 26
      },
      "nodeContext" : "\"max type 1\\n\" + \"0:RULE_START 0\\n\" + \"1:RULE_STOP 0\\n\"+ \"2:RULE_START 1\\n\"+ \"3:RULE_STOP 1\\n\"+ \"4:BASIC 0\\n\"+ \"5:BASIC 0\\n\"+ \"6:BASIC 1\\n\"+ \"7:BASIC 1\\n\"+ \"8:BASIC 1\\n\"+ \"rule 0:0\\n\"+ \"rule 1:2\\n\"+ \"0->4 EPSILON 0,0,0\\n\"+ \"2->6 EPSILON 0,0,0\\n\"+ \"4->5 RULE 2,1,0\\n\"+ \"5->1 EPSILON 0,0,0\\n\"+ \"6->7 ATOM 1,0,0\\n\"+ \"7->3 EPSILON 0,0,0\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 451,
        "startLineNumber" : 237,
        "startColumnNumber" : 9,
        "endLineNumber" : 255,
        "endColumnNumber" : 26
      },
      "nodeContext" : "expecting=\"max type 1\\n\" + \"0:RULE_START 0\\n\" + \"1:RULE_STOP 0\\n\"+ \"2:RULE_START 1\\n\"+ \"3:RULE_STOP 1\\n\"+ \"4:BASIC 0\\n\"+ \"5:BASIC 0\\n\"+ \"6:BASIC 1\\n\"+ \"7:BASIC 1\\n\"+ \"8:BASIC 1\\n\"+ \"rule 0:0\\n\"+ \"rule 1:2\\n\"+ \"0->4 EPSILON 0,0,0\\n\"+ \"2->6 EPSILON 0,0,0\\n\"+ \"4->5 RULE 2,1,0\\n\"+ \"5->1 EPSILON 0,0,0\\n\"+ \"6->7 ATOM 1,0,0\\n\"+ \"7->3 EPSILON 0,0,0\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 459,
        "startLineNumber" : 237,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 27
      },
      "nodeContext" : "String expecting=\"max type 1\\n\" + \"0:RULE_START 0\\n\" + \"1:RULE_STOP 0\\n\"+ \"2:RULE_START 1\\n\"+ \"3:RULE_STOP 1\\n\"+ \"4:BASIC 0\\n\"+ \"5:BASIC 0\\n\"+ \"6:BASIC 1\\n\"+ \"7:BASIC 1\\n\"+ \"8:BASIC 1\\n\"+ \"rule 0:0\\n\"+ \"rule 1:2\\n\"+ \"0->4 EPSILON 0,0,0\\n\"+ \"2->6 EPSILON 0,0,0\\n\"+ \"4->5 RULE 2,1,0\\n\"+ \"5->1 EPSILON 0,0,0\\n\"+ \"6->7 ATOM 1,0,0\\n\"+ \"7->3 EPSILON 0,0,0\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 232,
        "startColumnNumber" : 50,
        "endLineNumber" : 259,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Grammar g=new Grammar(\"parser grammar T;\\n\" + \"a : e ;\\n\" + \"e : E ;\\n\");\n  String expecting=\"max type 1\\n\" + \"0:RULE_START 0\\n\" + \"1:RULE_STOP 0\\n\"+ \"2:RULE_START 1\\n\"+ \"3:RULE_STOP 1\\n\"+ \"4:BASIC 0\\n\"+ \"5:BASIC 0\\n\"+ \"6:BASIC 1\\n\"+ \"7:BASIC 1\\n\"+ \"8:BASIC 1\\n\"+ \"rule 0:0\\n\"+ \"rule 1:2\\n\"+ \"0->4 EPSILON 0,0,0\\n\"+ \"2->6 EPSILON 0,0,0\\n\"+ \"4->5 RULE 2,1,0\\n\"+ \"5->1 EPSILON 0,0,0\\n\"+ \"6->7 ATOM 1,0,0\\n\"+ \"7->3 EPSILON 0,0,0\\n\";\n  ATN atn=createATN(g,true);\n  String result=ATNSerializer.getDecoded(atn,Arrays.asList(g.getTokenNames()));\n  assertEquals(expecting,result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 232,
        "startColumnNumber" : 1,
        "endLineNumber" : 259,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testRuleRef() throws Exception {\n  Grammar g=new Grammar(\"parser grammar T;\\n\" + \"a : e ;\\n\" + \"e : E ;\\n\");\n  String expecting=\"max type 1\\n\" + \"0:RULE_START 0\\n\" + \"1:RULE_STOP 0\\n\"+ \"2:RULE_START 1\\n\"+ \"3:RULE_STOP 1\\n\"+ \"4:BASIC 0\\n\"+ \"5:BASIC 0\\n\"+ \"6:BASIC 1\\n\"+ \"7:BASIC 1\\n\"+ \"8:BASIC 1\\n\"+ \"rule 0:0\\n\"+ \"rule 1:2\\n\"+ \"0->4 EPSILON 0,0,0\\n\"+ \"2->6 EPSILON 0,0,0\\n\"+ \"4->5 RULE 2,1,0\\n\"+ \"5->1 EPSILON 0,0,0\\n\"+ \"6->7 ATOM 1,0,0\\n\"+ \"7->3 EPSILON 0,0,0\\n\";\n  ATN atn=createATN(g,true);\n  String result=ATNSerializer.getDecoded(atn,Arrays.asList(g.getTokenNames()));\n  assertEquals(expecting,result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 238,
        "startColumnNumber" : 3,
        "endLineNumber" : 255,
        "endColumnNumber" : 26
      },
      "nodeContext" : "\"max type 1\\n\" + \"0:RULE_START 0\\n\" + \"1:RULE_STOP 0\\n\"+ \"2:RULE_START 1\\n\"+ \"3:RULE_STOP 1\\n\"+ \"4:BASIC 0\\n\"+ \"5:BASIC 0\\n\"+ \"6:BASIC 1\\n\"+ \"7:BASIC 1\\n\"+ \"8:BASIC 1\\n\"+ \"rule 0:0\\n\"+ \"rule 1:2\\n\"+ \"0->4 EPSILON 0,0,0\\n\"+ \"2->6 EPSILON 0,0,0\\n\"+ \"4->5 RULE 2,1,0\\n\"+ \"5->1 EPSILON 0,0,0\\n\"+ \"6->7 ATOM 1,0,0\\n\"+ \"7->3 EPSILON 0,0,0\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 249,
    "startColumnNumber" : 4,
    "endLineNumber" : 249,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}