{
  "id" : 1,
  "expression" : "requestOfDeath",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/SyncRequestProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "requestOfDeath",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 79,
      "startColumnNumber" : 26,
      "endLineNumber" : 79,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 79,
        "endColumnNumber" : 40
      },
      "nodeContext" : "si == requestOfDeath",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (si == requestOfDeath) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1874,
        "startLineNumber" : 68,
        "startColumnNumber" : 25,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Request si=null;\n  if (toFlush.isEmpty()) {\n    si=queuedRequests.take();\n  }\n else {\n    si=queuedRequests.poll();\n    if (si == null) {\n      flush(toFlush);\n      continue;\n    }\n  }\n  if (si == requestOfDeath) {\n    break;\n  }\n  if (si != null) {\n    zks.getLogWriter().append(si);\n    logCount++;\n    if (logCount > snapCount / 2 && r.nextInt(snapCount / 2) == 0) {\n      zks.getLogWriter().rollLog();\n      if (snapInProcess != null && snapInProcess.isAlive()) {\n        LOG.warn(\"Too busy to snap, skipping\");\n      }\n else {\n        snapInProcess=new Thread(\"Snapshot Thread\"){\n          public void run(){\n            try {\n              zks.takeSnapshot();\n            }\n catch (            Exception e) {\n              LOG.warn(\"Unexpected exception\",e);\n            }\n          }\n        }\n;\n        snapInProcess.start();\n      }\n      logCount=0;\n    }\n    toFlush.add(si);\n    if (toFlush.size() > 1000) {\n      flush(toFlush);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1887,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (true) {\n  Request si=null;\n  if (toFlush.isEmpty()) {\n    si=queuedRequests.take();\n  }\n else {\n    si=queuedRequests.poll();\n    if (si == null) {\n      flush(toFlush);\n      continue;\n    }\n  }\n  if (si == requestOfDeath) {\n    break;\n  }\n  if (si != null) {\n    zks.getLogWriter().append(si);\n    logCount++;\n    if (logCount > snapCount / 2 && r.nextInt(snapCount / 2) == 0) {\n      zks.getLogWriter().rollLog();\n      if (snapInProcess != null && snapInProcess.isAlive()) {\n        LOG.warn(\"Too busy to snap, skipping\");\n      }\n else {\n        snapInProcess=new Thread(\"Snapshot Thread\"){\n          public void run(){\n            try {\n              zks.takeSnapshot();\n            }\n catch (            Exception e) {\n              LOG.warn(\"Unexpected exception\",e);\n            }\n          }\n        }\n;\n        snapInProcess.start();\n      }\n      logCount=0;\n    }\n    toFlush.add(si);\n    if (toFlush.size() > 1000) {\n      flush(toFlush);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 150,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1911,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (true) {\n    Request si=null;\n    if (toFlush.isEmpty()) {\n      si=queuedRequests.take();\n    }\n else {\n      si=queuedRequests.poll();\n      if (si == null) {\n        flush(toFlush);\n        continue;\n      }\n    }\n    if (si == requestOfDeath) {\n      break;\n    }\n    if (si != null) {\n      zks.getLogWriter().append(si);\n      logCount++;\n      if (logCount > snapCount / 2 && r.nextInt(snapCount / 2) == 0) {\n        zks.getLogWriter().rollLog();\n        if (snapInProcess != null && snapInProcess.isAlive()) {\n          LOG.warn(\"Too busy to snap, skipping\");\n        }\n else {\n          snapInProcess=new Thread(\"Snapshot Thread\"){\n            public void run(){\n              try {\n                zks.takeSnapshot();\n              }\n catch (              Exception e) {\n                LOG.warn(\"Unexpected exception\",e);\n              }\n            }\n          }\n;\n          snapInProcess.start();\n        }\n        logCount=0;\n      }\n      toFlush.add(si);\n      if (toFlush.size() > 1000) {\n        flush(toFlush);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2041,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  while (true) {\n    Request si=null;\n    if (toFlush.isEmpty()) {\n      si=queuedRequests.take();\n    }\n else {\n      si=queuedRequests.poll();\n      if (si == null) {\n        flush(toFlush);\n        continue;\n      }\n    }\n    if (si == requestOfDeath) {\n      break;\n    }\n    if (si != null) {\n      zks.getLogWriter().append(si);\n      logCount++;\n      if (logCount > snapCount / 2 && r.nextInt(snapCount / 2) == 0) {\n        zks.getLogWriter().rollLog();\n        if (snapInProcess != null && snapInProcess.isAlive()) {\n          LOG.warn(\"Too busy to snap, skipping\");\n        }\n else {\n          snapInProcess=new Thread(\"Snapshot Thread\"){\n            public void run(){\n              try {\n                zks.takeSnapshot();\n              }\n catch (              Exception e) {\n                LOG.warn(\"Unexpected exception\",e);\n              }\n            }\n          }\n;\n          snapInProcess.start();\n        }\n        logCount=0;\n      }\n      toFlush.add(si);\n      if (toFlush.size() > 1000) {\n        flush(toFlush);\n      }\n    }\n  }\n}\n catch (Throwable t) {\n  LOG.fatal(\"Severe unrecoverable error, exiting\",t);\n  System.exit(11);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 169,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2107,
        "startLineNumber" : 66,
        "startColumnNumber" : 22,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    while (true) {\n      Request si=null;\n      if (toFlush.isEmpty()) {\n        si=queuedRequests.take();\n      }\n else {\n        si=queuedRequests.poll();\n        if (si == null) {\n          flush(toFlush);\n          continue;\n        }\n      }\n      if (si == requestOfDeath) {\n        break;\n      }\n      if (si != null) {\n        zks.getLogWriter().append(si);\n        logCount++;\n        if (logCount > snapCount / 2 && r.nextInt(snapCount / 2) == 0) {\n          zks.getLogWriter().rollLog();\n          if (snapInProcess != null && snapInProcess.isAlive()) {\n            LOG.warn(\"Too busy to snap, skipping\");\n          }\n else {\n            snapInProcess=new Thread(\"Snapshot Thread\"){\n              public void run(){\n                try {\n                  zks.takeSnapshot();\n                }\n catch (                Exception e) {\n                  LOG.warn(\"Unexpected exception\",e);\n                }\n              }\n            }\n;\n            snapInProcess.start();\n          }\n          logCount=0;\n        }\n        toFlush.add(si);\n        if (toFlush.size() > 1000) {\n          flush(toFlush);\n        }\n      }\n    }\n  }\n catch (  Throwable t) {\n    LOG.fatal(\"Severe unrecoverable error, exiting\",t);\n    System.exit(11);\n  }\n  LOG.info(\"SyncRequestProcessor exited!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2139,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    while (true) {\n      Request si=null;\n      if (toFlush.isEmpty()) {\n        si=queuedRequests.take();\n      }\n else {\n        si=queuedRequests.poll();\n        if (si == null) {\n          flush(toFlush);\n          continue;\n        }\n      }\n      if (si == requestOfDeath) {\n        break;\n      }\n      if (si != null) {\n        zks.getLogWriter().append(si);\n        logCount++;\n        if (logCount > snapCount / 2 && r.nextInt(snapCount / 2) == 0) {\n          zks.getLogWriter().rollLog();\n          if (snapInProcess != null && snapInProcess.isAlive()) {\n            LOG.warn(\"Too busy to snap, skipping\");\n          }\n else {\n            snapInProcess=new Thread(\"Snapshot Thread\"){\n              public void run(){\n                try {\n                  zks.takeSnapshot();\n                }\n catch (                Exception e) {\n                  LOG.warn(\"Unexpected exception\",e);\n                }\n              }\n            }\n;\n            snapInProcess.start();\n          }\n          logCount=0;\n        }\n        toFlush.add(si);\n        if (toFlush.size() > 1000) {\n          flush(toFlush);\n        }\n      }\n    }\n  }\n catch (  Throwable t) {\n    LOG.fatal(\"Severe unrecoverable error, exiting\",t);\n    System.exit(11);\n  }\n  LOG.info(\"SyncRequestProcessor exited!\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 79,
        "endColumnNumber" : 40
      },
      "nodeContext" : "si == requestOfDeath",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.server.Request"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 79,
    "startColumnNumber" : 26,
    "endLineNumber" : 79,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}