{
  "id" : 351,
  "expression" : "val.scale() == 0",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/main/java/com/alibaba/fastjson/serializer/BigDecimalCodec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "val.scale() == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 61,
      "startColumnNumber" : 108,
      "endLineNumber" : 61,
      "endColumnNumber" : 124
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 124
      },
      "nodeContext" : "(out.features & SerializerFeature.WriteClassName.mask) != 0 && fieldType != BigDecimal.class && val.scale() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((out.features & SerializerFeature.WriteClassName.mask) != 0 && fieldType != BigDecimal.class && val.scale() == 0) {\n  out.write('.');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 40,
        "startColumnNumber" : 117,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullNumberAsZero.mask) != 0) {\n      out.write('0');\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof BigInteger) {\n    BigInteger val=(BigInteger)object;\n    out.write(val.toString());\n    return;\n  }\n  BigDecimal val=(BigDecimal)object;\n  out.write(val.toString());\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0 && fieldType != BigDecimal.class && val.scale() == 0) {\n    out.write('.');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void write(JSONSerializer serializer,Object object,Object fieldName,Type fieldType) throws IOException {\n  SerializeWriter out=serializer.out;\n  if (object == null) {\n    if ((out.features & SerializerFeature.WriteNullNumberAsZero.mask) != 0) {\n      out.write('0');\n    }\n else {\n      out.writeNull();\n    }\n    return;\n  }\n  if (object instanceof BigInteger) {\n    BigInteger val=(BigInteger)object;\n    out.write(val.toString());\n    return;\n  }\n  BigDecimal val=(BigDecimal)object;\n  out.write(val.toString());\n  if ((out.features & SerializerFeature.WriteClassName.mask) != 0 && fieldType != BigDecimal.class && val.scale() == 0) {\n    out.write('.');\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 124
      },
      "nodeContext" : "(out.features & SerializerFeature.WriteClassName.mask) != 0 && fieldType != BigDecimal.class && val.scale() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 61,
    "startColumnNumber" : 108,
    "endLineNumber" : 61,
    "endColumnNumber" : 124
  } ],
  "layoutRelationDataList" : [ ]
}