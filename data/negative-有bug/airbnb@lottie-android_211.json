{
  "id" : 211,
  "expression" : "progress",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/GradientColor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "progress",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 31,
      "startColumnNumber" : 72,
      "endLineNumber" : 31,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 31,
        "startColumnNumber" : 21,
        "endLineNumber" : 31,
        "endColumnNumber" : 81
      },
      "nodeContext" : "MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 31,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 81
      },
      "nodeContext" : "positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 31,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 82
      },
      "nodeContext" : "positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 30,
        "startColumnNumber" : 48,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n  colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < gc1.colors.length; i++) {\n  positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n  colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 24,
        "startColumnNumber" : 66,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void lerp(GradientColor gc1,GradientColor gc2,float progress){\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 31,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 82
      },
      "nodeContext" : "positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "progress",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 32,
      "startColumnNumber" : 42,
      "endLineNumber" : 32,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 32,
        "startColumnNumber" : 18,
        "endLineNumber" : 32,
        "endColumnNumber" : 81
      },
      "nodeContext" : "GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 32,
        "startColumnNumber" : 6,
        "endLineNumber" : 32,
        "endColumnNumber" : 81
      },
      "nodeContext" : "colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 32,
        "startColumnNumber" : 6,
        "endLineNumber" : 32,
        "endColumnNumber" : 82
      },
      "nodeContext" : "colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 30,
        "startColumnNumber" : 48,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n  colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < gc1.colors.length; i++) {\n  positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n  colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 24,
        "startColumnNumber" : 66,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "void lerp(GradientColor gc1,GradientColor gc2,float progress){\n  if (gc1.colors.length != gc2.colors.length) {\n    throw new IllegalArgumentException(\"Cannot interpolate between gradients. Lengths vary (\" + gc1.colors.length + \" vs \"+ gc2.colors.length+ \")\");\n  }\n  for (int i=0; i < gc1.colors.length; i++) {\n    positions[i]=MiscUtils.lerp(gc1.positions[i],gc2.positions[i],progress);\n    colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 32,
        "startColumnNumber" : 6,
        "endLineNumber" : 32,
        "endColumnNumber" : 82
      },
      "nodeContext" : "colors[i]=GammaEvaluator.evaluate(progress,gc1.colors[i],gc2.colors[i]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 31,
    "startColumnNumber" : 72,
    "endLineNumber" : 31,
    "endColumnNumber" : 80
  }, {
    "charLength" : 8,
    "startLineNumber" : 32,
    "startColumnNumber" : 42,
    "endLineNumber" : 32,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}