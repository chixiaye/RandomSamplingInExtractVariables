{
  "id" : 168,
  "expression" : "divisor1",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/aggregation/CorrelationAggregation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "divisor1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 52,
      "startColumnNumber" : 35,
      "endLineNumber" : 52,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 52,
        "startColumnNumber" : 24,
        "endLineNumber" : 52,
        "endColumnNumber" : 54
      },
      "nodeContext" : "dividend / divisor1 / divisor2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 52,
        "endColumnNumber" : 54
      },
      "nodeContext" : "result=dividend / divisor1 / divisor2",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 55
      },
      "nodeContext" : "double result=dividend / divisor1 / divisor2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  double dividend=state.getCount() * state.getSumXY() - state.getSumX() * state.getSumY();\n  dividend=dividend * dividend;\n  double divisor1=state.getCount() * state.getSumXSquare() - state.getSumX() * state.getSumX();\n  double divisor2=state.getCount() * state.getSumYSquare() - state.getSumY() * state.getSumY();\n  double result=dividend / divisor1 / divisor2;\n  if (Double.isFinite(result)) {\n    DOUBLE.writeDouble(out,Math.sqrt(result));\n  }\n else {\n    out.appendNull();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1068,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@OutputFunction(StandardTypes.DOUBLE) public static void corr(CorrelationState state,BlockBuilder out){\n  double dividend=state.getCount() * state.getSumXY() - state.getSumX() * state.getSumY();\n  dividend=dividend * dividend;\n  double divisor1=state.getCount() * state.getSumXSquare() - state.getSumX() * state.getSumX();\n  double divisor2=state.getCount() * state.getSumYSquare() - state.getSumY() * state.getSumY();\n  double result=dividend / divisor1 / divisor2;\n  if (Double.isFinite(result)) {\n    DOUBLE.writeDouble(out,Math.sqrt(result));\n  }\n else {\n    out.appendNull();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 55
      },
      "nodeContext" : "double result=dividend / divisor1 / divisor2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 52,
    "startColumnNumber" : 35,
    "endLineNumber" : 52,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}