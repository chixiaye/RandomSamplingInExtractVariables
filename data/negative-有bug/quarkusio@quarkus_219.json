{
  "id" : 219,
  "expression" : "diagnostic.getSource() == null",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/dev/JavaCompilationProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "diagnostic.getSource() == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 129,
      "startColumnNumber" : 20,
      "endLineNumber" : 129,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 129,
        "startColumnNumber" : 20,
        "endLineNumber" : 129,
        "endColumnNumber" : 106
      },
      "nodeContext" : "diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 128,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 107
      },
      "nodeContext" : "log.logf(level,\"%s, line %d in %s\",message,diagnostic.getLineNumber(),diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 128,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 108
      },
      "nodeContext" : "log.logf(level,\"%s, line %d in %s\",message,diagnostic.getLineNumber(),diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 121,
        "startColumnNumber" : 93,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Logger.Level level=diagnostic.getKind() == Diagnostic.Kind.ERROR ? Logger.Level.ERROR : Logger.Level.WARN;\n  String message=diagnostic.getMessage(null);\n  if (level.equals(Logger.Level.WARN) && ignoreWarningForNamespace(message)) {\n    continue;\n  }\n  log.logf(level,\"%s, line %d in %s\",message,diagnostic.getLineNumber(),diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Diagnostic<? extends JavaFileObject> diagnostic : diagnostics.getDiagnostics()) {\n  Logger.Level level=diagnostic.getKind() == Diagnostic.Kind.ERROR ? Logger.Level.ERROR : Logger.Level.WARN;\n  String message=diagnostic.getMessage(null);\n  if (level.equals(Logger.Level.WARN) && ignoreWarningForNamespace(message)) {\n    continue;\n  }\n  log.logf(level,\"%s, line %d in %s\",message,diagnostic.getLineNumber(),diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 120,
        "startColumnNumber" : 87,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Diagnostic<? extends JavaFileObject> diagnostic : diagnostics.getDiagnostics()) {\n    Logger.Level level=diagnostic.getKind() == Diagnostic.Kind.ERROR ? Logger.Level.ERROR : Logger.Level.WARN;\n    String message=diagnostic.getMessage(null);\n    if (level.equals(Logger.Level.WARN) && ignoreWarningForNamespace(message)) {\n      continue;\n    }\n    log.logf(level,\"%s, line %d in %s\",message,diagnostic.getLineNumber(),diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void logDiagnostics(final DiagnosticCollector<JavaFileObject> diagnostics){\n  for (  Diagnostic<? extends JavaFileObject> diagnostic : diagnostics.getDiagnostics()) {\n    Logger.Level level=diagnostic.getKind() == Diagnostic.Kind.ERROR ? Logger.Level.ERROR : Logger.Level.WARN;\n    String message=diagnostic.getMessage(null);\n    if (level.equals(Logger.Level.WARN) && ignoreWarningForNamespace(message)) {\n      continue;\n    }\n    log.logf(level,\"%s, line %d in %s\",message,diagnostic.getLineNumber(),diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 129,
        "startColumnNumber" : 20,
        "endLineNumber" : 129,
        "endColumnNumber" : 106
      },
      "nodeContext" : "diagnostic.getSource() == null ? \"[unknown source]\" : diagnostic.getSource().getName()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 129,
    "startColumnNumber" : 20,
    "endLineNumber" : 129,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}