{
  "id" : 352,
  "expression" : "new Func1<ByteBuf,Observable<Void>>(){\n  @Override public Observable<Void> call(  ByteBuf byteBuf){\n    I content=null;\n    if (byteBuf.readableBytes() > 0) {\n      content=sourceTransformer.transform(byteBuf);\n    }\n    PublishSubject<O> responseSubject=PublishSubject.create();\n    RequestContext<I,O> requestContext=new RequestContext<I,O>(request,response,content,responseSubject);\n    requestObservable.onNext(requestContext);\n    return responseSubject.flatMap(new Func1<O,Observable<Void>>(){\n      @Override public Observable<Void> call(      O o){\n        return response.writeAndFlush(resultTransformer.transform(o));\n      }\n    }\n).doOnCompleted(new Action0(){\n      @Override public void call(){\n        response.close();\n      }\n    }\n);\n  }\n}\n",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-test-utils/src/main/java/com/netflix/eureka2/rx/MockHttpRxServer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Func1<ByteBuf,Observable<Void>>(){\n  @Override public Observable<Void> call(  ByteBuf byteBuf){\n    I content=null;\n    if (byteBuf.readableBytes() > 0) {\n      content=sourceTransformer.transform(byteBuf);\n    }\n    PublishSubject<O> responseSubject=PublishSubject.create();\n    RequestContext<I,O> requestContext=new RequestContext<I,O>(request,response,content,responseSubject);\n    requestObservable.onNext(requestContext);\n    return responseSubject.flatMap(new Func1<O,Observable<Void>>(){\n      @Override public Observable<Void> call(      O o){\n        return response.writeAndFlush(resultTransformer.transform(o));\n      }\n    }\n).doOnCompleted(new Action0(){\n      @Override public void call(){\n        response.close();\n      }\n    }\n);\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 1234,
      "startLineNumber" : 46,
      "startColumnNumber" : 52,
      "endLineNumber" : 68,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 141,
    "astHeight" : 15,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1264,
        "startLineNumber" : 46,
        "startColumnNumber" : 23,
        "endLineNumber" : 68,
        "endColumnNumber" : 18
      },
      "nodeContext" : "request.getContent().flatMap(new Func1<ByteBuf,Observable<Void>>(){\n  @Override public Observable<Void> call(  ByteBuf byteBuf){\n    I content=null;\n    if (byteBuf.readableBytes() > 0) {\n      content=sourceTransformer.transform(byteBuf);\n    }\n    PublishSubject<O> responseSubject=PublishSubject.create();\n    RequestContext<I,O> requestContext=new RequestContext<I,O>(request,response,content,responseSubject);\n    requestObservable.onNext(requestContext);\n    return responseSubject.flatMap(new Func1<O,Observable<Void>>(){\n      @Override public Observable<Void> call(      O o){\n        return response.writeAndFlush(resultTransformer.transform(o));\n      }\n    }\n).doOnCompleted(new Action0(){\n      @Override public void call(){\n        response.close();\n      }\n    }\n);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 146,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 46,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return request.getContent().flatMap(new Func1<ByteBuf,Observable<Void>>(){\n  @Override public Observable<Void> call(  ByteBuf byteBuf){\n    I content=null;\n    if (byteBuf.readableBytes() > 0) {\n      content=sourceTransformer.transform(byteBuf);\n    }\n    PublishSubject<O> responseSubject=PublishSubject.create();\n    RequestContext<I,O> requestContext=new RequestContext<I,O>(request,response,content,responseSubject);\n    requestObservable.onNext(requestContext);\n    return responseSubject.flatMap(new Func1<O,Observable<Void>>(){\n      @Override public Observable<Void> call(      O o){\n        return response.writeAndFlush(resultTransformer.transform(o));\n      }\n    }\n).doOnCompleted(new Action0(){\n      @Override public void call(){\n        response.close();\n      }\n    }\n);\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 147,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1304,
        "startLineNumber" : 45,
        "startColumnNumber" : 129,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return request.getContent().flatMap(new Func1<ByteBuf,Observable<Void>>(){\n    @Override public Observable<Void> call(    ByteBuf byteBuf){\n      I content=null;\n      if (byteBuf.readableBytes() > 0) {\n        content=sourceTransformer.transform(byteBuf);\n      }\n      PublishSubject<O> responseSubject=PublishSubject.create();\n      RequestContext<I,O> requestContext=new RequestContext<I,O>(request,response,content,responseSubject);\n      requestObservable.onNext(requestContext);\n      return responseSubject.flatMap(new Func1<O,Observable<Void>>(){\n        @Override public Observable<Void> call(        O o){\n          return response.writeAndFlush(resultTransformer.transform(o));\n        }\n      }\n).doOnCompleted(new Action0(){\n        @Override public void call(){\n          response.close();\n        }\n      }\n);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Observable<Void> handle(final HttpServerRequest<ByteBuf> request,final HttpServerResponse<ByteBuf> response){\n  return request.getContent().flatMap(new Func1<ByteBuf,Observable<Void>>(){\n    @Override public Observable<Void> call(    ByteBuf byteBuf){\n      I content=null;\n      if (byteBuf.readableBytes() > 0) {\n        content=sourceTransformer.transform(byteBuf);\n      }\n      PublishSubject<O> responseSubject=PublishSubject.create();\n      RequestContext<I,O> requestContext=new RequestContext<I,O>(request,response,content,responseSubject);\n      requestObservable.onNext(requestContext);\n      return responseSubject.flatMap(new Func1<O,Observable<Void>>(){\n        @Override public Observable<Void> call(        O o){\n          return response.writeAndFlush(resultTransformer.transform(o));\n        }\n      }\n).doOnCompleted(new Action0(){\n        @Override public void call(){\n          response.close();\n        }\n      }\n);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 46,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 19
      },
      "nodeContext" : "return request.getContent().flatMap(new Func1<ByteBuf,Observable<Void>>(){\n  @Override public Observable<Void> call(  ByteBuf byteBuf){\n    I content=null;\n    if (byteBuf.readableBytes() > 0) {\n      content=sourceTransformer.transform(byteBuf);\n    }\n    PublishSubject<O> responseSubject=PublishSubject.create();\n    RequestContext<I,O> requestContext=new RequestContext<I,O>(request,response,content,responseSubject);\n    requestObservable.onNext(requestContext);\n    return responseSubject.flatMap(new Func1<O,Observable<Void>>(){\n      @Override public Observable<Void> call(      O o){\n        return response.writeAndFlush(resultTransformer.transform(o));\n      }\n    }\n).doOnCompleted(new Action0(){\n      @Override public void call(){\n        response.close();\n      }\n    }\n);\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 147,
      "astHeight" : 17
    },
    "tokenLength" : 51,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 1234,
    "startLineNumber" : 46,
    "startColumnNumber" : 52,
    "endLineNumber" : 68,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}