{
  "id" : 419,
  "expression" : "entry",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/utils/android/AndroidResourcesUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 151,
      "startColumnNumber" : 16,
      "endLineNumber" : 151,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 30
      },
      "nodeContext" : "entry.getKey()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 151,
        "startColumnNumber" : 10,
        "endLineNumber" : 151,
        "endColumnNumber" : 30
      },
      "nodeContext" : "key=entry.getKey()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 151,
        "startColumnNumber" : 3,
        "endLineNumber" : 151,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Object key=entry.getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 150,
        "startColumnNumber" : 68,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Object key=entry.getKey();\n  FieldNode field=entry.getValue();\n  AccessInfo accessFlags=field.getAccessFlags();\n  if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n    resFieldsMap.put((Integer)key,field);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Map.Entry<Object,FieldNode> entry : constFields.entrySet()) {\n  Object key=entry.getKey();\n  FieldNode field=entry.getValue();\n  AccessInfo accessFlags=field.getAccessFlags();\n  if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n    resFieldsMap.put((Integer)key,field);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 607,
        "startLineNumber" : 146,
        "startColumnNumber" : 75,
        "endLineNumber" : 162,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Integer,FieldNode> resFieldsMap=new HashMap<>();\n  ConstStorage constStorage=resCls.root().getConstValues();\n  Map<Object,FieldNode> constFields=constStorage.getGlobalConstFields();\n  for (  Map.Entry<Object,FieldNode> entry : constFields.entrySet()) {\n    Object key=entry.getKey();\n    FieldNode field=entry.getValue();\n    AccessInfo accessFlags=field.getAccessFlags();\n    if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n      resFieldsMap.put((Integer)key,field);\n    }\n  }\n  return resFieldsMap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 145,
        "startColumnNumber" : 1,
        "endLineNumber" : 162,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@NotNull private static Map<Integer,FieldNode> fillResFieldsMap(ClassNode resCls){\n  Map<Integer,FieldNode> resFieldsMap=new HashMap<>();\n  ConstStorage constStorage=resCls.root().getConstValues();\n  Map<Object,FieldNode> constFields=constStorage.getGlobalConstFields();\n  for (  Map.Entry<Object,FieldNode> entry : constFields.entrySet()) {\n    Object key=entry.getKey();\n    FieldNode field=entry.getValue();\n    AccessInfo accessFlags=field.getAccessFlags();\n    if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n      resFieldsMap.put((Integer)key,field);\n    }\n  }\n  return resFieldsMap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 151,
        "startColumnNumber" : 3,
        "endLineNumber" : 151,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Object key=entry.getKey();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map.Entry<java.lang.Object,jadx.core.dex.nodes.FieldNode>"
  }, {
    "nodeContext" : "entry",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 152,
      "startColumnNumber" : 21,
      "endLineNumber" : 152,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 152,
        "startColumnNumber" : 21,
        "endLineNumber" : 152,
        "endColumnNumber" : 37
      },
      "nodeContext" : "entry.getValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 152,
        "startColumnNumber" : 13,
        "endLineNumber" : 152,
        "endColumnNumber" : 37
      },
      "nodeContext" : "field=entry.getValue()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 152,
        "startColumnNumber" : 3,
        "endLineNumber" : 152,
        "endColumnNumber" : 38
      },
      "nodeContext" : "FieldNode field=entry.getValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 150,
        "startColumnNumber" : 68,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Object key=entry.getKey();\n  FieldNode field=entry.getValue();\n  AccessInfo accessFlags=field.getAccessFlags();\n  if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n    resFieldsMap.put((Integer)key,field);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Map.Entry<Object,FieldNode> entry : constFields.entrySet()) {\n  Object key=entry.getKey();\n  FieldNode field=entry.getValue();\n  AccessInfo accessFlags=field.getAccessFlags();\n  if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n    resFieldsMap.put((Integer)key,field);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 607,
        "startLineNumber" : 146,
        "startColumnNumber" : 75,
        "endLineNumber" : 162,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<Integer,FieldNode> resFieldsMap=new HashMap<>();\n  ConstStorage constStorage=resCls.root().getConstValues();\n  Map<Object,FieldNode> constFields=constStorage.getGlobalConstFields();\n  for (  Map.Entry<Object,FieldNode> entry : constFields.entrySet()) {\n    Object key=entry.getKey();\n    FieldNode field=entry.getValue();\n    AccessInfo accessFlags=field.getAccessFlags();\n    if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n      resFieldsMap.put((Integer)key,field);\n    }\n  }\n  return resFieldsMap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 145,
        "startColumnNumber" : 1,
        "endLineNumber" : 162,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@NotNull private static Map<Integer,FieldNode> fillResFieldsMap(ClassNode resCls){\n  Map<Integer,FieldNode> resFieldsMap=new HashMap<>();\n  ConstStorage constStorage=resCls.root().getConstValues();\n  Map<Object,FieldNode> constFields=constStorage.getGlobalConstFields();\n  for (  Map.Entry<Object,FieldNode> entry : constFields.entrySet()) {\n    Object key=entry.getKey();\n    FieldNode field=entry.getValue();\n    AccessInfo accessFlags=field.getAccessFlags();\n    if (field.getType().equals(ArgType.INT) && accessFlags.isStatic() && accessFlags.isFinal()&& key instanceof Integer) {\n      resFieldsMap.put((Integer)key,field);\n    }\n  }\n  return resFieldsMap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 152,
        "startColumnNumber" : 3,
        "endLineNumber" : 152,
        "endColumnNumber" : 38
      },
      "nodeContext" : "FieldNode field=entry.getValue();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map.Entry<java.lang.Object,jadx.core.dex.nodes.FieldNode>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 151,
    "startColumnNumber" : 16,
    "endLineNumber" : 151,
    "endColumnNumber" : 21
  }, {
    "charLength" : 5,
    "startLineNumber" : 152,
    "startColumnNumber" : 21,
    "endLineNumber" : 152,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}