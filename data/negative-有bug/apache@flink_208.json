{
  "id" : 208,
  "expression" : "\"check1\"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-streaming-java/src/test/java/org/apache/flink/streaming/api/functions/source/SocketTextStreamFunctionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"check1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 201,
      "startColumnNumber" : 80,
      "endLineNumber" : 201,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 201,
        "startColumnNumber" : 40,
        "endLineNumber" : 201,
        "endColumnNumber" : 99
      },
      "nodeContext" : "new SocketSourceThread(source,\"test1\",\"check1\",\"check2\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 201,
        "startColumnNumber" : 31,
        "endLineNumber" : 201,
        "endColumnNumber" : 99
      },
      "nodeContext" : "runner=new SocketSourceThread(source,\"test1\",\"check1\",\"check2\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 201,
        "startColumnNumber" : 12,
        "endLineNumber" : 201,
        "endColumnNumber" : 100
      },
      "nodeContext" : "SocketSourceThread runner=new SocketSourceThread(source,\"test1\",\"check1\",\"check2\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 230,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SocketTextStreamFunction source=new SocketTextStreamFunction(LOCALHOST,server.getLocalPort(),\"\\n\",10,100);\n  SocketSourceThread runner=new SocketSourceThread(source,\"test1\",\"check1\",\"check2\");\n  runner.start();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  channel.close();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  OutputStreamWriter writer=new OutputStreamWriter(channel.getOutputStream());\n  writer.write(\"te\");\n  writer.close();\n  channel.close();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  channel.close();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  writer=new OutputStreamWriter(channel.getOutputStream());\n  writer.write(\"st1\\n\");\n  writer.write(\"check1\\n\");\n  writer.write(\"check2\\n\");\n  writer.flush();\n  runner.waitForNumElements(2);\n  runner.cancel();\n  runner.waitUntilDone();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1429,
        "startLineNumber" : 197,
        "startColumnNumber" : 8,
        "endLineNumber" : 235,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  SocketTextStreamFunction source=new SocketTextStreamFunction(LOCALHOST,server.getLocalPort(),\"\\n\",10,100);\n  SocketSourceThread runner=new SocketSourceThread(source,\"test1\",\"check1\",\"check2\");\n  runner.start();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  channel.close();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  OutputStreamWriter writer=new OutputStreamWriter(channel.getOutputStream());\n  writer.write(\"te\");\n  writer.close();\n  channel.close();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  channel.close();\n  channel=NetUtils.acceptWithoutTimeout(server);\n  writer=new OutputStreamWriter(channel.getOutputStream());\n  writer.write(\"st1\\n\");\n  writer.write(\"check1\\n\");\n  writer.write(\"check2\\n\");\n  writer.flush();\n  runner.waitForNumElements(2);\n  runner.cancel();\n  runner.waitUntilDone();\n}\n  finally {\n  if (channel != null) {\n    IOUtils.closeQuietly(channel);\n  }\n  IOUtils.closeQuietly(server);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 150,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1528,
        "startLineNumber" : 193,
        "startColumnNumber" : 71,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ServerSocket server=new ServerSocket(0);\n  Socket channel=null;\n  try {\n    SocketTextStreamFunction source=new SocketTextStreamFunction(LOCALHOST,server.getLocalPort(),\"\\n\",10,100);\n    SocketSourceThread runner=new SocketSourceThread(source,\"test1\",\"check1\",\"check2\");\n    runner.start();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    channel.close();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    OutputStreamWriter writer=new OutputStreamWriter(channel.getOutputStream());\n    writer.write(\"te\");\n    writer.close();\n    channel.close();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    channel.close();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    writer=new OutputStreamWriter(channel.getOutputStream());\n    writer.write(\"st1\\n\");\n    writer.write(\"check1\\n\");\n    writer.write(\"check2\\n\");\n    writer.flush();\n    runner.waitForNumElements(2);\n    runner.cancel();\n    runner.waitUntilDone();\n  }\n  finally {\n    if (channel != null) {\n      IOUtils.closeQuietly(channel);\n    }\n    IOUtils.closeQuietly(server);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1605,
        "startLineNumber" : 192,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSocketSourceOutputAcrossRetries() throws Exception {\n  ServerSocket server=new ServerSocket(0);\n  Socket channel=null;\n  try {\n    SocketTextStreamFunction source=new SocketTextStreamFunction(LOCALHOST,server.getLocalPort(),\"\\n\",10,100);\n    SocketSourceThread runner=new SocketSourceThread(source,\"test1\",\"check1\",\"check2\");\n    runner.start();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    channel.close();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    OutputStreamWriter writer=new OutputStreamWriter(channel.getOutputStream());\n    writer.write(\"te\");\n    writer.close();\n    channel.close();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    channel.close();\n    channel=NetUtils.acceptWithoutTimeout(server);\n    writer=new OutputStreamWriter(channel.getOutputStream());\n    writer.write(\"st1\\n\");\n    writer.write(\"check1\\n\");\n    writer.write(\"check2\\n\");\n    writer.flush();\n    runner.waitForNumElements(2);\n    runner.cancel();\n    runner.waitUntilDone();\n  }\n  finally {\n    if (channel != null) {\n      IOUtils.closeQuietly(channel);\n    }\n    IOUtils.closeQuietly(server);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 201,
        "startColumnNumber" : 12,
        "endLineNumber" : 201,
        "endColumnNumber" : 100
      },
      "nodeContext" : "SocketSourceThread runner=new SocketSourceThread(source,\"test1\",\"check1\",\"check2\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 201,
    "startColumnNumber" : 80,
    "endLineNumber" : 201,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}