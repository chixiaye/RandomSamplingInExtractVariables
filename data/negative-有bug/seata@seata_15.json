{
  "id" : 15,
  "expression" : "temp.getCode()",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/server/src/main/java/io/seata/server/store/TransactionStoreManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "temp.getCode()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 111,
      "startColumnNumber" : 20,
      "endLineNumber" : 111,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 111,
        "endColumnNumber" : 42
      },
      "nodeContext" : "temp.getCode() == code",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 113,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (temp.getCode() == code) {\n  return temp;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 110,
        "startColumnNumber" : 47,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (temp.getCode() == code) {\n    return temp;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (LogOperation temp : values()) {\n  if (temp.getCode() == code) {\n    return temp;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 109,
        "startColumnNumber" : 68,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  LogOperation temp : values()) {\n    if (temp.getCode() == code) {\n      return temp;\n    }\n  }\n  throw new IllegalArgumentException(\"Unknown LogOperation[\" + code + \"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * Gets log operation by code.\n * @param code the code\n * @return the log operation by code\n */\npublic static LogOperation getLogOperationByCode(byte code){\n  for (  LogOperation temp : values()) {\n    if (temp.getCode() == code) {\n      return temp;\n    }\n  }\n  throw new IllegalArgumentException(\"Unknown LogOperation[\" + code + \"]\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 36,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 111,
        "endColumnNumber" : 42
      },
      "nodeContext" : "temp.getCode() == code",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 111,
    "startColumnNumber" : 20,
    "endLineNumber" : 111,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}