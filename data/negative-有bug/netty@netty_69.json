{
  "id" : 69,
  "expression" : "\"POST / HTTP/1.1\\r\\n\" + \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\"+ \"Expect: 100-continue\\r\\n\"+ \"Content-Encoding: gzip\\r\\n\"+ \"\\r\\n\"",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/test/java/io/netty/handler/codec/http/HttpContentDecoderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"POST / HTTP/1.1\\r\\n\" + \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\"+ \"Expect: 100-continue\\r\\n\"+ \"Content-Encoding: gzip\\r\\n\"+ \"\\r\\n\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 232,
      "startLineNumber" : 310,
      "startColumnNumber" : 21,
      "endLineNumber" : 314,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 11,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 310,
        "startColumnNumber" : 15,
        "endLineNumber" : 314,
        "endColumnNumber" : 27
      },
      "nodeContext" : "req=\"POST / HTTP/1.1\\r\\n\" + \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\"+ \"Expect: 100-continue\\r\\n\"+ \"Content-Encoding: gzip\\r\\n\"+ \"\\r\\n\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 310,
        "startColumnNumber" : 8,
        "endLineNumber" : 314,
        "endColumnNumber" : 28
      },
      "nodeContext" : "String req=\"POST / HTTP/1.1\\r\\n\" + \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\"+ \"Expect: 100-continue\\r\\n\"+ \"Content-Encoding: gzip\\r\\n\"+ \"\\r\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1283,
        "startLineNumber" : 303,
        "startColumnNumber" : 46,
        "endLineNumber" : 327,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpRequestDecoder decoder=new HttpRequestDecoder();\n  HttpContentDecoder decompressor=new HttpContentDecompressor();\n  HttpObjectAggregator aggregator=new HttpObjectAggregator(1024);\n  EmbeddedChannel channel=new EmbeddedChannel(decoder,decompressor,aggregator);\n  String req=\"POST / HTTP/1.1\\r\\n\" + \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\"+ \"Expect: 100-continue\\r\\n\"+ \"Content-Encoding: gzip\\r\\n\"+ \"\\r\\n\";\n  assertFalse(channel.writeInbound(Unpooled.wrappedBuffer(req.getBytes())));\n  Object o=channel.readOutbound();\n  assertThat(o,is(instanceOf(FullHttpResponse.class)));\n  FullHttpResponse r=(FullHttpResponse)o;\n  assertEquals(100,r.status().code());\n  r.release();\n  assertTrue(channel.writeInbound(Unpooled.copiedBuffer(GZ_HELLO_WORLD)));\n  assertHasInboundMessages(channel,true);\n  assertHasOutboundMessages(channel,false);\n  assertFalse(channel.finish());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 302,
        "startColumnNumber" : 4,
        "endLineNumber" : 327,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testExpectContinueResponse3(){\n  HttpRequestDecoder decoder=new HttpRequestDecoder();\n  HttpContentDecoder decompressor=new HttpContentDecompressor();\n  HttpObjectAggregator aggregator=new HttpObjectAggregator(1024);\n  EmbeddedChannel channel=new EmbeddedChannel(decoder,decompressor,aggregator);\n  String req=\"POST / HTTP/1.1\\r\\n\" + \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\"+ \"Expect: 100-continue\\r\\n\"+ \"Content-Encoding: gzip\\r\\n\"+ \"\\r\\n\";\n  assertFalse(channel.writeInbound(Unpooled.wrappedBuffer(req.getBytes())));\n  Object o=channel.readOutbound();\n  assertThat(o,is(instanceOf(FullHttpResponse.class)));\n  FullHttpResponse r=(FullHttpResponse)o;\n  assertEquals(100,r.status().code());\n  r.release();\n  assertTrue(channel.writeInbound(Unpooled.copiedBuffer(GZ_HELLO_WORLD)));\n  assertHasInboundMessages(channel,true);\n  assertHasOutboundMessages(channel,false);\n  assertFalse(channel.finish());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 310,
        "startColumnNumber" : 8,
        "endLineNumber" : 314,
        "endColumnNumber" : 28
      },
      "nodeContext" : "String req=\"POST / HTTP/1.1\\r\\n\" + \"Content-Length: \" + GZ_HELLO_WORLD.length + \"\\r\\n\"+ \"Expect: 100-continue\\r\\n\"+ \"Content-Encoding: gzip\\r\\n\"+ \"\\r\\n\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 29,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 232,
    "startLineNumber" : 310,
    "startColumnNumber" : 21,
    "endLineNumber" : 314,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}