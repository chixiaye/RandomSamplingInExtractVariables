{
  "id" : 107,
  "expression" : "\"The broker does not support \" + apiKey",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/NodeApiVersions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"The broker does not support \" + apiKey",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 130,
      "startColumnNumber" : 50,
      "endLineNumber" : 130,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 130,
        "startColumnNumber" : 18,
        "endLineNumber" : 130,
        "endColumnNumber" : 90
      },
      "nodeContext" : "new UnsupportedVersionException(\"The broker does not support \" + apiKey)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 91
      },
      "nodeContext" : "throw new UnsupportedVersionException(\"The broker does not support \" + apiKey);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 91
      },
      "nodeContext" : "if (!supportedVersions.containsKey(apiKey)) throw new UnsupportedVersionException(\"The broker does not support \" + apiKey);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 128,
        "startColumnNumber" : 109,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!supportedVersions.containsKey(apiKey))   throw new UnsupportedVersionException(\"The broker does not support \" + apiKey);\n  ApiVersion supportedVersion=supportedVersions.get(apiKey);\n  Optional<ApiVersion> intersectVersion=ApiVersionsResponse.intersect(supportedVersion,new ApiVersion().setApiKey(apiKey.id).setMinVersion(oldestAllowedVersion).setMaxVersion(latestAllowedVersion));\n  if (intersectVersion.isPresent())   return intersectVersion.get().maxVersion();\n else   throw new UnsupportedVersionException(\"The broker does not support \" + apiKey + \" with version in range [\"+ oldestAllowedVersion+ \",\"+ latestAllowedVersion+ \"]. The supported\"+ \" range is [\"+ supportedVersion.minVersion()+ \",\"+ supportedVersion.maxVersion()+ \"].\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get the latest version supported by the broker within an allowed range of versions\n */\npublic short latestUsableVersion(ApiKeys apiKey,short oldestAllowedVersion,short latestAllowedVersion){\n  if (!supportedVersions.containsKey(apiKey))   throw new UnsupportedVersionException(\"The broker does not support \" + apiKey);\n  ApiVersion supportedVersion=supportedVersions.get(apiKey);\n  Optional<ApiVersion> intersectVersion=ApiVersionsResponse.intersect(supportedVersion,new ApiVersion().setApiKey(apiKey.id).setMinVersion(oldestAllowedVersion).setMaxVersion(latestAllowedVersion));\n  if (intersectVersion.isPresent())   return intersectVersion.get().maxVersion();\n else   throw new UnsupportedVersionException(\"The broker does not support \" + apiKey + \" with version in range [\"+ oldestAllowedVersion+ \",\"+ latestAllowedVersion+ \"]. The supported\"+ \" range is [\"+ supportedVersion.minVersion()+ \",\"+ supportedVersion.maxVersion()+ \"].\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 91
      },
      "nodeContext" : "throw new UnsupportedVersionException(\"The broker does not support \" + apiKey);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 130,
    "startColumnNumber" : 50,
    "endLineNumber" : 130,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}