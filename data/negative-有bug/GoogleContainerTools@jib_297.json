{
  "id" : 297,
  "expression" : "\"another registry\"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/registry/credentials/DockerConfigCredentialRetrieverTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"another registry\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 104,
      "startColumnNumber" : 16,
      "endLineNumber" : 104,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 64
      },
      "nodeContext" : "mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")).thenReturn(mockDockerCredentialHelper)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")).thenReturn(mockDockerCredentialHelper);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 101,
        "startColumnNumber" : 62,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")).thenReturn(mockDockerCredentialHelper);\n  DockerConfigCredentialRetriever dockerConfigCredentialRetriever=new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory);\n  Authorization authorization=dockerConfigCredentialRetriever.retrieve();\n  Assert.assertEquals(mockAuthorization,authorization);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRetrieve_useCredHelper() throws IOException {\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")).thenReturn(mockDockerCredentialHelper);\n  DockerConfigCredentialRetriever dockerConfigCredentialRetriever=new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory);\n  Authorization authorization=dockerConfigCredentialRetriever.retrieve();\n  Assert.assertEquals(mockAuthorization,authorization);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 64
      },
      "nodeContext" : "mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"another registry\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 109,
      "startColumnNumber" : 12,
      "endLineNumber" : 109,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 107,
        "startColumnNumber" : 36,
        "endLineNumber" : 109,
        "endColumnNumber" : 84
      },
      "nodeContext" : "dockerConfigCredentialRetriever=new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 85
      },
      "nodeContext" : "DockerConfigCredentialRetriever dockerConfigCredentialRetriever=new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 101,
        "startColumnNumber" : 62,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")).thenReturn(mockDockerCredentialHelper);\n  DockerConfigCredentialRetriever dockerConfigCredentialRetriever=new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory);\n  Authorization authorization=dockerConfigCredentialRetriever.retrieve();\n  Assert.assertEquals(mockAuthorization,authorization);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRetrieve_useCredHelper() throws IOException {\n  Mockito.when(mockDockerCredentialHelperFactory.newDockerCredentialHelper(\"another registry\",\"another credential helper\")).thenReturn(mockDockerCredentialHelper);\n  DockerConfigCredentialRetriever dockerConfigCredentialRetriever=new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory);\n  Authorization authorization=dockerConfigCredentialRetriever.retrieve();\n  Assert.assertEquals(mockAuthorization,authorization);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new DockerConfigCredentialRetriever(\"another registry\",dockerConfigFile,mockDockerCredentialHelperFactory)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 104,
    "startColumnNumber" : 16,
    "endLineNumber" : 104,
    "endColumnNumber" : 34
  }, {
    "charLength" : 18,
    "startLineNumber" : 109,
    "startColumnNumber" : 12,
    "endLineNumber" : 109,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}