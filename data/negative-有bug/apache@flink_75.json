{
  "id" : 75,
  "expression" : "\"The following ID's where not found in the result list: \" + list.toString()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-streaming-java/src/test/java/org/apache/flink/streaming/runtime/operators/GenericWriteAheadSinkTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"The following ID's where not found in the result list: \" + list.toString()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 75,
      "startLineNumber" : 67,
      "startColumnNumber" : 16,
      "endLineNumber" : 67,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Assert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(),list.isEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Assert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(),list.isEmpty());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 56,
        "startColumnNumber" : 66,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<Integer> list=new ArrayList<>();\n  for (int x=1; x <= 60; x++) {\n    list.add(x);\n  }\n  for (  Integer i : sink.values) {\n    list.remove(i);\n  }\n  Assert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(),list.isEmpty());\n  Assert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60),sink.values.size() == 60);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void verifyResultsIdealCircumstances(ListSink sink){\n  ArrayList<Integer> list=new ArrayList<>();\n  for (int x=1; x <= 60; x++) {\n    list.add(x);\n  }\n  for (  Integer i : sink.values) {\n    list.remove(i);\n  }\n  Assert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(),list.isEmpty());\n  Assert.assertTrue(\"The sink emitted to many values: \" + (sink.values.size() - 60),sink.values.size() == 60);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 31
      },
      "nodeContext" : "Assert.assertTrue(\"The following ID's where not found in the result list: \" + list.toString(),list.isEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 14,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 75,
    "startLineNumber" : 67,
    "startColumnNumber" : 16,
    "endLineNumber" : 67,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}