{
  "id" : 500,
  "expression" : "tb",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-beans/src/test/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistryTests.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 40,
      "startColumnNumber" : 39,
      "endLineNumber" : 40,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 42
      },
      "nodeContext" : "beanRegistry.registerSingleton(\"tb\",tb)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 43
      },
      "nodeContext" : "beanRegistry.registerSingleton(\"tb\",tb);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 36,
        "startColumnNumber" : 30,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  DefaultSingletonBeanRegistry beanRegistry=new DefaultSingletonBeanRegistry();\n  TestBean tb=new TestBean();\n  beanRegistry.registerSingleton(\"tb\",tb);\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  TestBean tb2=(TestBean)beanRegistry.getSingleton(\"tb2\",new ObjectFactory<Object>(){\n    @Override public Object getObject() throws BeansException {\n      return new TestBean();\n    }\n  }\n);\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertEquals(2,beanRegistry.getSingletonCount());\n  String[] names=beanRegistry.getSingletonNames();\n  assertEquals(2,names.length);\n  assertEquals(\"tb\",names[0]);\n  assertEquals(\"tb2\",names[1]);\n  beanRegistry.destroySingletons();\n  assertEquals(0,beanRegistry.getSingletonCount());\n  assertEquals(0,beanRegistry.getSingletonNames().length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testSingletons(){\n  DefaultSingletonBeanRegistry beanRegistry=new DefaultSingletonBeanRegistry();\n  TestBean tb=new TestBean();\n  beanRegistry.registerSingleton(\"tb\",tb);\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  TestBean tb2=(TestBean)beanRegistry.getSingleton(\"tb2\",new ObjectFactory<Object>(){\n    @Override public Object getObject() throws BeansException {\n      return new TestBean();\n    }\n  }\n);\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertEquals(2,beanRegistry.getSingletonCount());\n  String[] names=beanRegistry.getSingletonNames();\n  assertEquals(2,names.length);\n  assertEquals(\"tb\",names[0]);\n  assertEquals(\"tb2\",names[1]);\n  beanRegistry.destroySingletons();\n  assertEquals(0,beanRegistry.getSingletonCount());\n  assertEquals(0,beanRegistry.getSingletonNames().length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 43
      },
      "nodeContext" : "beanRegistry.registerSingleton(\"tb\",tb);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.tests.sample.beans.TestBean"
  }, {
    "nodeContext" : "tb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 41,
      "startColumnNumber" : 13,
      "endLineNumber" : 41,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertSame(tb,beanRegistry.getSingleton(\"tb\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 36,
        "startColumnNumber" : 30,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  DefaultSingletonBeanRegistry beanRegistry=new DefaultSingletonBeanRegistry();\n  TestBean tb=new TestBean();\n  beanRegistry.registerSingleton(\"tb\",tb);\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  TestBean tb2=(TestBean)beanRegistry.getSingleton(\"tb2\",new ObjectFactory<Object>(){\n    @Override public Object getObject() throws BeansException {\n      return new TestBean();\n    }\n  }\n);\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertEquals(2,beanRegistry.getSingletonCount());\n  String[] names=beanRegistry.getSingletonNames();\n  assertEquals(2,names.length);\n  assertEquals(\"tb\",names[0]);\n  assertEquals(\"tb2\",names[1]);\n  beanRegistry.destroySingletons();\n  assertEquals(0,beanRegistry.getSingletonCount());\n  assertEquals(0,beanRegistry.getSingletonNames().length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testSingletons(){\n  DefaultSingletonBeanRegistry beanRegistry=new DefaultSingletonBeanRegistry();\n  TestBean tb=new TestBean();\n  beanRegistry.registerSingleton(\"tb\",tb);\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  TestBean tb2=(TestBean)beanRegistry.getSingleton(\"tb2\",new ObjectFactory<Object>(){\n    @Override public Object getObject() throws BeansException {\n      return new TestBean();\n    }\n  }\n);\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertEquals(2,beanRegistry.getSingletonCount());\n  String[] names=beanRegistry.getSingletonNames();\n  assertEquals(2,names.length);\n  assertEquals(\"tb\",names[0]);\n  assertEquals(\"tb2\",names[1]);\n  beanRegistry.destroySingletons();\n  assertEquals(0,beanRegistry.getSingletonCount());\n  assertEquals(0,beanRegistry.getSingletonNames().length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 41,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.tests.sample.beans.TestBean"
  }, {
    "nodeContext" : "tb",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 51,
      "startColumnNumber" : 13,
      "endLineNumber" : 51,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertSame(tb,beanRegistry.getSingleton(\"tb\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 36,
        "startColumnNumber" : 30,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  DefaultSingletonBeanRegistry beanRegistry=new DefaultSingletonBeanRegistry();\n  TestBean tb=new TestBean();\n  beanRegistry.registerSingleton(\"tb\",tb);\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  TestBean tb2=(TestBean)beanRegistry.getSingleton(\"tb2\",new ObjectFactory<Object>(){\n    @Override public Object getObject() throws BeansException {\n      return new TestBean();\n    }\n  }\n);\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertEquals(2,beanRegistry.getSingletonCount());\n  String[] names=beanRegistry.getSingletonNames();\n  assertEquals(2,names.length);\n  assertEquals(\"tb\",names[0]);\n  assertEquals(\"tb2\",names[1]);\n  beanRegistry.destroySingletons();\n  assertEquals(0,beanRegistry.getSingletonCount());\n  assertEquals(0,beanRegistry.getSingletonNames().length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 62,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testSingletons(){\n  DefaultSingletonBeanRegistry beanRegistry=new DefaultSingletonBeanRegistry();\n  TestBean tb=new TestBean();\n  beanRegistry.registerSingleton(\"tb\",tb);\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  TestBean tb2=(TestBean)beanRegistry.getSingleton(\"tb2\",new ObjectFactory<Object>(){\n    @Override public Object getObject() throws BeansException {\n      return new TestBean();\n    }\n  }\n);\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n  assertSame(tb2,beanRegistry.getSingleton(\"tb2\"));\n  assertEquals(2,beanRegistry.getSingletonCount());\n  String[] names=beanRegistry.getSingletonNames();\n  assertEquals(2,names.length);\n  assertEquals(\"tb\",names[0]);\n  assertEquals(\"tb2\",names[1]);\n  beanRegistry.destroySingletons();\n  assertEquals(0,beanRegistry.getSingletonCount());\n  assertEquals(0,beanRegistry.getSingletonNames().length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertSame(tb,beanRegistry.getSingleton(\"tb\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.tests.sample.beans.TestBean"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 40,
    "startColumnNumber" : 39,
    "endLineNumber" : 40,
    "endColumnNumber" : 41
  }, {
    "charLength" : 2,
    "startLineNumber" : 41,
    "startColumnNumber" : 13,
    "endLineNumber" : 41,
    "endColumnNumber" : 15
  }, {
    "charLength" : 2,
    "startLineNumber" : 51,
    "startColumnNumber" : 13,
    "endLineNumber" : 51,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}