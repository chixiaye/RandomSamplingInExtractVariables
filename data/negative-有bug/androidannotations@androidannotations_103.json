{
  "id" : 103,
  "expression" : "(Spinner)activity.findViewById(R.id.spinner)",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/functional-test-1-5/src/test/java/com/googlecode/androidannotations/test15/ItemClicksHandledActivityTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Spinner)activity.findViewById(R.id.spinner)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 48,
      "startColumnNumber" : 20,
      "endLineNumber" : 48,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 48,
        "startColumnNumber" : 10,
        "endLineNumber" : 48,
        "endColumnNumber" : 65
      },
      "nodeContext" : "spinner=(Spinner)activity.findViewById(R.id.spinner)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Spinner spinner=(Spinner)activity.findViewById(R.id.spinner);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 47,
        "startColumnNumber" : 40,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Spinner spinner=(Spinner)activity.findViewById(R.id.spinner);\n  long itemId=spinner.getAdapter().getItemId(TESTED_CLICKED_INDEX);\n  View view=spinner.getChildAt(0);\n  assertThat(activity.spinnerItemClicked).isFalse();\n  spinner.performItemClick(view,TESTED_CLICKED_INDEX,itemId);\n  assertThat(activity.spinnerItemClicked).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 46,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void handlingSpinnerItemClick(){\n  Spinner spinner=(Spinner)activity.findViewById(R.id.spinner);\n  long itemId=spinner.getAdapter().getItemId(TESTED_CLICKED_INDEX);\n  View view=spinner.getChildAt(0);\n  assertThat(activity.spinnerItemClicked).isFalse();\n  spinner.performItemClick(view,TESTED_CLICKED_INDEX,itemId);\n  assertThat(activity.spinnerItemClicked).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Spinner spinner=(Spinner)activity.findViewById(R.id.spinner);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "com.googlecode.androidannotations.test15.Spinner"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 48,
    "startColumnNumber" : 20,
    "endLineNumber" : 48,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}