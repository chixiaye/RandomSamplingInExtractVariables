{
  "id" : 133,
  "expression" : "\".sizeOf() is reporting inconsistent results!\"",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/main/java/com/nostra13/universalimageloader/cache/memory/impl/LruMemoryCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".sizeOf() is reporting inconsistent results!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 84,
      "startColumnNumber" : 60,
      "endLineNumber" : 84,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 84,
        "startColumnNumber" : 37,
        "endLineNumber" : 84,
        "endColumnNumber" : 106
      },
      "nodeContext" : "getClass().getName() + \".sizeOf() is reporting inconsistent results!\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 84,
        "endColumnNumber" : 107
      },
      "nodeContext" : "new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 84,
        "startColumnNumber" : 5,
        "endLineNumber" : 84,
        "endColumnNumber" : 108
      },
      "nodeContext" : "throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 83,
        "startColumnNumber" : 50,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (size < 0 || (map.isEmpty() && size != 0)) {\n  throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 82,
        "startColumnNumber" : 23,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (size < 0 || (map.isEmpty() && size != 0)) {\n    throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n  }\n  if (size <= maxSize || map.isEmpty()) {\n    break;\n  }\n  Map.Entry<String,Bitmap> toEvict=map.entrySet().iterator().next();\n  if (toEvict == null) {\n    break;\n  }\n  key=toEvict.getKey();\n  value=toEvict.getValue();\n  map.remove(key);\n  size-=sizeOf(key,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 82,
        "startColumnNumber" : 3,
        "endLineNumber" : 99,
        "endColumnNumber" : 4
      },
      "nodeContext" : "synchronized (this) {\n  if (size < 0 || (map.isEmpty() && size != 0)) {\n    throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n  }\n  if (size <= maxSize || map.isEmpty()) {\n    break;\n  }\n  Map.Entry<String,Bitmap> toEvict=map.entrySet().iterator().next();\n  if (toEvict == null) {\n    break;\n  }\n  key=toEvict.getKey();\n  value=toEvict.getValue();\n  map.remove(key);\n  size-=sizeOf(key,value);\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 86,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 79,
        "startColumnNumber" : 15,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String key;\n  Bitmap value;\nsynchronized (this) {\n    if (size < 0 || (map.isEmpty() && size != 0)) {\n      throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n    }\n    if (size <= maxSize || map.isEmpty()) {\n      break;\n    }\n    Map.Entry<String,Bitmap> toEvict=map.entrySet().iterator().next();\n    if (toEvict == null) {\n      break;\n    }\n    key=toEvict.getKey();\n    value=toEvict.getValue();\n    map.remove(key);\n    size-=sizeOf(key,value);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (true) {\n  String key;\n  Bitmap value;\nsynchronized (this) {\n    if (size < 0 || (map.isEmpty() && size != 0)) {\n      throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n    }\n    if (size <= maxSize || map.isEmpty()) {\n      break;\n    }\n    Map.Entry<String,Bitmap> toEvict=map.entrySet().iterator().next();\n    if (toEvict == null) {\n      break;\n    }\n    key=toEvict.getKey();\n    value=toEvict.getValue();\n    map.remove(key);\n    size-=sizeOf(key,value);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 78,
        "startColumnNumber" : 38,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  while (true) {\n    String key;\n    Bitmap value;\nsynchronized (this) {\n      if (size < 0 || (map.isEmpty() && size != 0)) {\n        throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n      }\n      if (size <= maxSize || map.isEmpty()) {\n        break;\n      }\n      Map.Entry<String,Bitmap> toEvict=map.entrySet().iterator().next();\n      if (toEvict == null) {\n        break;\n      }\n      key=toEvict.getKey();\n      value=toEvict.getValue();\n      map.remove(key);\n      size-=sizeOf(key,value);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Remove the eldest entries until the total of remaining entries is at or below the requested size.\n * @param maxSize the maximum size of the cache before returning. May be -1 to evict even 0-sized elements.\n */\nprivate void trimToSize(int maxSize){\n  while (true) {\n    String key;\n    Bitmap value;\nsynchronized (this) {\n      if (size < 0 || (map.isEmpty() && size != 0)) {\n        throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n      }\n      if (size <= maxSize || map.isEmpty()) {\n        break;\n      }\n      Map.Entry<String,Bitmap> toEvict=map.entrySet().iterator().next();\n      if (toEvict == null) {\n        break;\n      }\n      key=toEvict.getKey();\n      value=toEvict.getValue();\n      map.remove(key);\n      size-=sizeOf(key,value);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 84,
        "startColumnNumber" : 5,
        "endLineNumber" : 84,
        "endColumnNumber" : 108
      },
      "nodeContext" : "throw new IllegalStateException(getClass().getName() + \".sizeOf() is reporting inconsistent results!\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 84,
    "startColumnNumber" : 60,
    "endLineNumber" : 84,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ ]
}