{
  "id" : 296,
  "expression" : "\"\\\\\\\\n\"",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/test/processing/app/I18NTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\\\\\\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 101,
      "startColumnNumber" : 60,
      "endLineNumber" : 101,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 101,
        "startColumnNumber" : 39,
        "endLineNumber" : 101,
        "endColumnNumber" : 68
      },
      "nodeContext" : "key.replaceAll(\"\\n\",\"\\\\\\\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 101,
        "startColumnNumber" : 39,
        "endLineNumber" : 101,
        "endColumnNumber" : 93
      },
      "nodeContext" : "key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 101,
        "startColumnNumber" : 29,
        "endLineNumber" : 101,
        "endColumnNumber" : 99
      },
      "nodeContext" : "\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 100
      },
      "nodeContext" : "System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 101
      },
      "nodeContext" : "System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 100,
        "startColumnNumber" : 64,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String key : missingTranslationsPerFile.get(file)) {\n  System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 97,
        "startColumnNumber" : 58,
        "endLineNumber" : 104,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  System.out.println(\"Following translations in file \" + file + \" are missing:\");\n  for (  String key : missingTranslationsPerFile.get(file)) {\n    System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n  }\n  System.out.println();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 104,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (String file : filesWithIncompleteTranslations) {\n  System.out.println(\"Following translations in file \" + file + \" are missing:\");\n  for (  String key : missingTranslationsPerFile.get(file)) {\n    System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n  }\n  System.out.println();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 93,
        "startColumnNumber" : 47,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> filesWithIncompleteTranslations=new LinkedList<String>(missingTranslationsPerFile.keySet());\n  Collections.sort(filesWithIncompleteTranslations);\n  System.out.println(\"Following files have missing translations:\" + filesWithIncompleteTranslations);\n  for (  String file : filesWithIncompleteTranslations) {\n    System.out.println(\"Following translations in file \" + file + \" are missing:\");\n    for (    String key : missingTranslationsPerFile.get(file)) {\n      System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n    }\n    System.out.println();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!missingTranslationsPerFile.isEmpty()) {\n  List<String> filesWithIncompleteTranslations=new LinkedList<String>(missingTranslationsPerFile.keySet());\n  Collections.sort(filesWithIncompleteTranslations);\n  System.out.println(\"Following files have missing translations:\" + filesWithIncompleteTranslations);\n  for (  String file : filesWithIncompleteTranslations) {\n    System.out.println(\"Following translations in file \" + file + \" are missing:\");\n    for (    String key : missingTranslationsPerFile.get(file)) {\n      System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n    }\n    System.out.println();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 79,
        "startColumnNumber" : 66,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<String> keys=loadReferenceI18NKeys();\n  Map<String,List<String>> missingTranslationsPerFile=new HashMap<String,List<String>>();\n  for (  File file : listPropertiesFiles()) {\n    Properties properties=loadProperties(file);\n    for (    String key : keys) {\n      if (!properties.containsKey(key) || properties.get(key).equals(\"\")) {\n        addMissingTranslation(missingTranslationsPerFile,file,key);\n      }\n    }\n  }\n  if (!missingTranslationsPerFile.isEmpty()) {\n    List<String> filesWithIncompleteTranslations=new LinkedList<String>(missingTranslationsPerFile.keySet());\n    Collections.sort(filesWithIncompleteTranslations);\n    System.out.println(\"Following files have missing translations:\" + filesWithIncompleteTranslations);\n    for (    String file : filesWithIncompleteTranslations) {\n      System.out.println(\"Following translations in file \" + file + \" are missing:\");\n      for (      String key : missingTranslationsPerFile.get(file)) {\n        System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n      }\n      System.out.println();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Ignore public void ensureEveryTranslationIsComplete() throws Exception {\n  Set<String> keys=loadReferenceI18NKeys();\n  Map<String,List<String>> missingTranslationsPerFile=new HashMap<String,List<String>>();\n  for (  File file : listPropertiesFiles()) {\n    Properties properties=loadProperties(file);\n    for (    String key : keys) {\n      if (!properties.containsKey(key) || properties.get(key).equals(\"\")) {\n        addMissingTranslation(missingTranslationsPerFile,file,key);\n      }\n    }\n  }\n  if (!missingTranslationsPerFile.isEmpty()) {\n    List<String> filesWithIncompleteTranslations=new LinkedList<String>(missingTranslationsPerFile.keySet());\n    Collections.sort(filesWithIncompleteTranslations);\n    System.out.println(\"Following files have missing translations:\" + filesWithIncompleteTranslations);\n    for (    String file : filesWithIncompleteTranslations) {\n      System.out.println(\"Following translations in file \" + file + \" are missing:\");\n      for (      String key : missingTranslationsPerFile.get(file)) {\n        System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n      }\n      System.out.println();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 101
      },
      "nodeContext" : "System.out.println(\"==> '\" + key.replaceAll(\"\\n\",\"\\\\\\\\n\").replaceAll(\" \",\"\\\\\\\\ \") + \"'\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 101,
    "startColumnNumber" : 60,
    "endLineNumber" : 101,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}