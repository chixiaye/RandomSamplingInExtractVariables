{
  "id" : 312,
  "expression" : "'r'",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/impl/StringEscapeUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'r'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 217,
      "startColumnNumber" : 22,
      "endLineNumber" : 217,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 26
      },
      "nodeContext" : "out.write('r')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 27
      },
      "nodeContext" : "out.write('r');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 226,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (ch) {\ncase '\\b':  out.write('\\\\');\nout.write('b');\nbreak;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 197,
        "startColumnNumber" : 26,
        "endLineNumber" : 227,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\nswitch (ch) {\ncase '\\b':    out.write('\\\\');\n  out.write('b');\nbreak;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 197,
        "startColumnNumber" : 13,
        "endLineNumber" : 253,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ch < 32) {\nswitch (ch) {\ncase '\\b':    out.write('\\\\');\n  out.write('b');\nbreak;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1404,
        "startLineNumber" : 195,
        "startColumnNumber" : 13,
        "endLineNumber" : 253,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ch > 0x7f) {\n  out.write(\"\\\\u00\" + hex(ch));\n}\n else if (ch < 32) {\nswitch (ch) {\ncase '\\b':    out.write('\\\\');\n  out.write('b');\nbreak;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 180,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1471,
        "startLineNumber" : 193,
        "startColumnNumber" : 13,
        "endLineNumber" : 253,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ch > 0xff) {\n  out.write(\"\\\\u0\" + hex(ch));\n}\n else if (ch > 0x7f) {\n  out.write(\"\\\\u00\" + hex(ch));\n}\n else if (ch < 32) {\nswitch (ch) {\ncase '\\b':    out.write('\\\\');\n  out.write('b');\nbreak;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 194,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1538,
        "startLineNumber" : 191,
        "startColumnNumber" : 6,
        "endLineNumber" : 253,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ch > 0xfff) {\n  out.write(\"\\\\u\" + hex(ch));\n}\n else if (ch > 0xff) {\n  out.write(\"\\\\u0\" + hex(ch));\n}\n else if (ch > 0x7f) {\n  out.write(\"\\\\u00\" + hex(ch));\n}\n else if (ch < 32) {\nswitch (ch) {\ncase '\\b':    out.write('\\\\');\n  out.write('b');\nbreak;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 208,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1608,
        "startLineNumber" : 187,
        "startColumnNumber" : 33,
        "endLineNumber" : 254,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char ch=str.charAt(i);\n  if (ch > 0xfff) {\n    out.write(\"\\\\u\" + hex(ch));\n  }\n else   if (ch > 0xff) {\n    out.write(\"\\\\u0\" + hex(ch));\n  }\n else   if (ch > 0x7f) {\n    out.write(\"\\\\u00\" + hex(ch));\n  }\n else   if (ch < 32) {\nswitch (ch) {\ncase '\\b':      out.write('\\\\');\n    out.write('b');\n  break;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 187,
        "startColumnNumber" : 4,
        "endLineNumber" : 254,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < sz; i++) {\n  char ch=str.charAt(i);\n  if (ch > 0xfff) {\n    out.write(\"\\\\u\" + hex(ch));\n  }\n else   if (ch > 0xff) {\n    out.write(\"\\\\u0\" + hex(ch));\n  }\n else   if (ch > 0x7f) {\n    out.write(\"\\\\u00\" + hex(ch));\n  }\n else   if (ch < 32) {\nswitch (ch) {\ncase '\\b':      out.write('\\\\');\n    out.write('b');\n  break;\ncase '\\n':out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 228,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1827,
        "startLineNumber" : 178,
        "startColumnNumber" : 91,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (out == null) {\n    throw new IllegalArgumentException(\"The Writer must not be null\");\n  }\n  if (str == null) {\n    return;\n  }\n  int sz;\n  sz=str.length();\n  for (int i=0; i < sz; i++) {\n    char ch=str.charAt(i);\n    if (ch > 0xfff) {\n      out.write(\"\\\\u\" + hex(ch));\n    }\n else     if (ch > 0xff) {\n      out.write(\"\\\\u0\" + hex(ch));\n    }\n else     if (ch > 0x7f) {\n      out.write(\"\\\\u00\" + hex(ch));\n    }\n else     if (ch < 32) {\nswitch (ch) {\ncase '\\b':        out.write('\\\\');\n      out.write('b');\n    break;\ncase '\\n':  out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2411,
        "startLineNumber" : 168,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Worker method for the  {@link #escapeJavaScript(String)} method.</p>\n * @param out                write to receieve the escaped string\n * @param str                String to escape values in, may be null\n * @param escapeSingleQuote  escapes single quotes if <code>true</code>\n * @param escapeForwardSlash TODO\n * @throws java.io.IOException if an IOException occurs\n */\nprivate static void escapeJavaStyleString(Writer out,String str,boolean escapeSingleQuote,boolean escapeForwardSlash) throws IOException {\n  if (out == null) {\n    throw new IllegalArgumentException(\"The Writer must not be null\");\n  }\n  if (str == null) {\n    return;\n  }\n  int sz;\n  sz=str.length();\n  for (int i=0; i < sz; i++) {\n    char ch=str.charAt(i);\n    if (ch > 0xfff) {\n      out.write(\"\\\\u\" + hex(ch));\n    }\n else     if (ch > 0xff) {\n      out.write(\"\\\\u0\" + hex(ch));\n    }\n else     if (ch > 0x7f) {\n      out.write(\"\\\\u00\" + hex(ch));\n    }\n else     if (ch < 32) {\nswitch (ch) {\ncase '\\b':        out.write('\\\\');\n      out.write('b');\n    break;\ncase '\\n':  out.write('\\\\');\nout.write('n');\nbreak;\ncase '\\t':out.write('\\\\');\nout.write('t');\nbreak;\ncase '\\f':out.write('\\\\');\nout.write('f');\nbreak;\ncase '\\r':out.write('\\\\');\nout.write('r');\nbreak;\ndefault:if (ch > 0xf) {\nout.write(\"\\\\u00\" + hex(ch));\n}\n else {\nout.write(\"\\\\u000\" + hex(ch));\n}\nbreak;\n}\n}\n else {\nswitch (ch) {\ncase '\\'':if (escapeSingleQuote) {\nout.write('\\\\');\n}\nout.write('\\'');\nbreak;\ncase '\"':out.write('\\\\');\nout.write('\"');\nbreak;\ncase '\\\\':out.write('\\\\');\nout.write('\\\\');\nbreak;\ncase '/':if (escapeForwardSlash) {\nout.write('\\\\');\n}\nout.write('/');\nbreak;\ndefault:out.write(ch);\nbreak;\n}\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 27
      },
      "nodeContext" : "out.write('r');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 217,
    "startColumnNumber" : 22,
    "endLineNumber" : 217,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}