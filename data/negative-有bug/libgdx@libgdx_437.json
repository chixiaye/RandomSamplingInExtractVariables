{
  "id" : 437,
  "expression" : "additionalCapacity",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "additionalCapacity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 279,
      "startColumnNumber" : 35,
      "endLineNumber" : 279,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 279,
        "startColumnNumber" : 28,
        "endLineNumber" : 279,
        "endColumnNumber" : 53
      },
      "nodeContext" : "size + additionalCapacity",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 279,
        "startColumnNumber" : 18,
        "endLineNumber" : 279,
        "endColumnNumber" : 66
      },
      "nodeContext" : "tableSize(size + additionalCapacity,loadFactor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 279,
        "startColumnNumber" : 6,
        "endLineNumber" : 279,
        "endColumnNumber" : 66
      },
      "nodeContext" : "tableSize=tableSize(size + additionalCapacity,loadFactor)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 279,
        "startColumnNumber" : 2,
        "endLineNumber" : 279,
        "endColumnNumber" : 67
      },
      "nodeContext" : "int tableSize=tableSize(size + additionalCapacity,loadFactor);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 278,
        "startColumnNumber" : 53,
        "endLineNumber" : 281,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int tableSize=tableSize(size + additionalCapacity,loadFactor);\n  if (keyTable.length < tableSize)   resize(tableSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 276,
        "startColumnNumber" : 1,
        "endLineNumber" : 281,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Increases the size of the backing array to accommodate the specified number of additional items / loadFactor. Useful before adding many items to avoid multiple backing array resizes. \n */\npublic void ensureCapacity(int additionalCapacity){\n  int tableSize=tableSize(size + additionalCapacity,loadFactor);\n  if (keyTable.length < tableSize)   resize(tableSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 29,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 279,
        "startColumnNumber" : 2,
        "endLineNumber" : 279,
        "endColumnNumber" : 67
      },
      "nodeContext" : "int tableSize=tableSize(size + additionalCapacity,loadFactor);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 279,
    "startColumnNumber" : 35,
    "endLineNumber" : 279,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}