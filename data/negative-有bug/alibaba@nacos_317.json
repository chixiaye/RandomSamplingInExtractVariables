{
  "id" : 317,
  "expression" : "Assert",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/common/src/test/java/com/alibaba/nacos/common/utils/MapUtilTest.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 33,
      "startColumnNumber" : 8,
      "endLineNumber" : 33,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-1\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-1\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 36,
      "startColumnNumber" : 8,
      "endLineNumber" : 36,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-str\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-str\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-str\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 39,
      "startColumnNumber" : 8,
      "endLineNumber" : 39,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-str\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-str\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-str\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 42,
      "startColumnNumber" : 8,
      "endLineNumber" : 42,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-str\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-str\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-str\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 45,
      "startColumnNumber" : 8,
      "endLineNumber" : 45,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-list\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-list\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-list\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 48,
      "startColumnNumber" : 8,
      "endLineNumber" : 48,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-list\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-list\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-list\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 51,
      "startColumnNumber" : 8,
      "endLineNumber" : 51,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-list\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-list\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-list\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 54,
      "startColumnNumber" : 8,
      "endLineNumber" : 54,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-map\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-map\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-map\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 57,
      "startColumnNumber" : 8,
      "endLineNumber" : 57,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-map\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-map\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assert.assertFalse(map.containsKey(\"key-map\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 63,
      "startColumnNumber" : 8,
      "endLineNumber" : 63,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-map\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-map\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMap(){\n  Map<Object,Object> map=new HashMap<Object,Object>();\n  MapUtil.putIfValNoNull(map,\"key-1\",null);\n  Assert.assertFalse(map.containsKey(\"key-1\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",null);\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"\");\n  Assert.assertFalse(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-str\",\"1\");\n  Assert.assertTrue(map.containsKey(\"key-str\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",null);\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.emptyList());\n  Assert.assertFalse(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-list\",Collections.singletonList(1));\n  Assert.assertTrue(map.containsKey(\"key-list\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",null);\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  MapUtil.putIfValNoEmpty(map,\"key-map\",Collections.emptyMap());\n  Assert.assertFalse(map.containsKey(\"key-map\"));\n  Map<String,String> map1=new HashMap<String,String>();\n  map1.put(\"1123\",\"123\");\n  MapUtil.putIfValNoEmpty(map,\"key-map\",map1);\n  Assert.assertTrue(map.containsKey(\"key-map\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assert.assertTrue(map.containsKey(\"key-map\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 33,
    "startColumnNumber" : 8,
    "endLineNumber" : 33,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 36,
    "startColumnNumber" : 8,
    "endLineNumber" : 36,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 39,
    "startColumnNumber" : 8,
    "endLineNumber" : 39,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 42,
    "startColumnNumber" : 8,
    "endLineNumber" : 42,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 45,
    "startColumnNumber" : 8,
    "endLineNumber" : 45,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 48,
    "startColumnNumber" : 8,
    "endLineNumber" : 48,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 51,
    "startColumnNumber" : 8,
    "endLineNumber" : 51,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 54,
    "startColumnNumber" : 8,
    "endLineNumber" : 54,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 57,
    "startColumnNumber" : 8,
    "endLineNumber" : 57,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 63,
    "startColumnNumber" : 8,
    "endLineNumber" : 63,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  } ]
}