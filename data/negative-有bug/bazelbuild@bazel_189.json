{
  "id" : 189,
  "expression" : "dividend",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/android/desugar/runtime/UnsignedIntsTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dividend",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 98,
      "startColumnNumber" : 10,
      "endLineNumber" : 98,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 62
      },
      "nodeContext" : "dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 92,
        "startColumnNumber" : 38,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int dividend=r.nextInt();\n  int divisor=r.nextInt();\n  assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 1000000; i++) {\n  int dividend=r.nextInt();\n  int divisor=r.nextInt();\n  assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 89,
        "startColumnNumber" : 53,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Random r=new Random(0L);\n  for (int i=0; i < 1000000; i++) {\n    int dividend=r.nextInt();\n    int divisor=r.nextInt();\n    assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDivideRemainderEuclideanProperty(){\n  Random r=new Random(0L);\n  for (int i=0; i < 1000000; i++) {\n    int dividend=r.nextInt();\n    int divisor=r.nextInt();\n    assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 62
      },
      "nodeContext" : "dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "dividend",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 99,
      "startColumnNumber" : 47,
      "endLineNumber" : 99,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 99,
        "startColumnNumber" : 27,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "UnsignedInts.divide(dividend,divisor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 99,
        "startColumnNumber" : 17,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "divisor * UnsignedInts.divide(dividend,divisor)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 99,
        "startColumnNumber" : 17,
        "endLineNumber" : 100,
        "endColumnNumber" : 61
      },
      "nodeContext" : "divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 62
      },
      "nodeContext" : "dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 92,
        "startColumnNumber" : 38,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int dividend=r.nextInt();\n  int divisor=r.nextInt();\n  assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 1000000; i++) {\n  int dividend=r.nextInt();\n  int divisor=r.nextInt();\n  assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 89,
        "startColumnNumber" : 53,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Random r=new Random(0L);\n  for (int i=0; i < 1000000; i++) {\n    int dividend=r.nextInt();\n    int divisor=r.nextInt();\n    assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDivideRemainderEuclideanProperty(){\n  Random r=new Random(0L);\n  for (int i=0; i < 1000000; i++) {\n    int dividend=r.nextInt();\n    int divisor=r.nextInt();\n    assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 99,
        "startColumnNumber" : 17,
        "endLineNumber" : 99,
        "endColumnNumber" : 65
      },
      "nodeContext" : "divisor * UnsignedInts.divide(dividend,divisor)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "dividend",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 100,
      "startColumnNumber" : 43,
      "endLineNumber" : 100,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 61
      },
      "nodeContext" : "UnsignedInts.remainder(dividend,divisor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 99,
        "startColumnNumber" : 17,
        "endLineNumber" : 100,
        "endColumnNumber" : 61
      },
      "nodeContext" : "divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 100,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 98,
        "startColumnNumber" : 10,
        "endLineNumber" : 100,
        "endColumnNumber" : 62
      },
      "nodeContext" : "dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 92,
        "startColumnNumber" : 38,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int dividend=r.nextInt();\n  int divisor=r.nextInt();\n  assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 1000000; i++) {\n  int dividend=r.nextInt();\n  int divisor=r.nextInt();\n  assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 89,
        "startColumnNumber" : 53,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Random r=new Random(0L);\n  for (int i=0; i < 1000000; i++) {\n    int dividend=r.nextInt();\n    int divisor=r.nextInt();\n    assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDivideRemainderEuclideanProperty(){\n  Random r=new Random(0L);\n  for (int i=0; i < 1000000; i++) {\n    int dividend=r.nextInt();\n    int divisor=r.nextInt();\n    assertEquals(0,dividend - (divisor * UnsignedInts.divide(dividend,divisor) + UnsignedInts.remainder(dividend,divisor)));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 61
      },
      "nodeContext" : "UnsignedInts.remainder(dividend,divisor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 98,
    "startColumnNumber" : 10,
    "endLineNumber" : 98,
    "endColumnNumber" : 18
  }, {
    "charLength" : 8,
    "startLineNumber" : 99,
    "startColumnNumber" : 47,
    "endLineNumber" : 99,
    "endColumnNumber" : 55
  }, {
    "charLength" : 8,
    "startLineNumber" : 100,
    "startColumnNumber" : 43,
    "endLineNumber" : 100,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}