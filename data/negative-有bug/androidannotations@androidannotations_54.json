{
  "id" : 54,
  "expression" : "dummySourceFilePath.substring(\"file:\".length())",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/AndroidManifestFinder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dummySourceFilePath.substring(\"file:\".length())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 78,
      "startColumnNumber" : 38,
      "endLineNumber" : 78,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 78,
        "startColumnNumber" : 26,
        "endLineNumber" : 78,
        "endColumnNumber" : 85
      },
      "nodeContext" : "\"file://\" + dummySourceFilePath.substring(\"file:\".length())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 85
      },
      "nodeContext" : "dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 86
      },
      "nodeContext" : "dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 77,
        "startColumnNumber" : 51,
        "endLineNumber" : 79,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 77,
        "startColumnNumber" : 3,
        "endLineNumber" : 79,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!dummySourceFilePath.startsWith(\"file://\")) {\n  dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 76,
        "startColumnNumber" : 47,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!dummySourceFilePath.startsWith(\"file://\")) {\n    dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (dummySourceFilePath.startsWith(\"file:\")) {\n  if (!dummySourceFilePath.startsWith(\"file://\")) {\n    dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n  }\n}\n else {\n  dummySourceFilePath=\"file://\" + dummySourceFilePath;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1685,
        "startLineNumber" : 70,
        "startColumnNumber" : 58,
        "endLineNumber" : 116,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Filer filer=processingEnv.getFiler();\n  JavaFileObject dummySourceFile=filer.createSourceFile(\"dummy\" + System.currentTimeMillis());\n  String dummySourceFilePath=dummySourceFile.toUri().toString();\n  if (dummySourceFilePath.startsWith(\"file:\")) {\n    if (!dummySourceFilePath.startsWith(\"file://\")) {\n      dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n    }\n  }\n else {\n    dummySourceFilePath=\"file://\" + dummySourceFilePath;\n  }\n  Messager messager=processingEnv.getMessager();\n  messager.printMessage(Kind.NOTE,\"Dummy source file: \" + dummySourceFilePath);\n  URI cleanURI=new URI(dummySourceFilePath);\n  File dummyFile=new File(cleanURI);\n  File sourcesGenerationFolder=dummyFile.getParentFile();\n  File projectRoot=sourcesGenerationFolder.getParentFile();\n  File androidManifestFile=new File(projectRoot,\"AndroidManifest.xml\");\n  for (int i=0; i < MAX_PARENTS_FROM_SOURCE_FOLDER; i++) {\n    if (androidManifestFile.exists()) {\n      break;\n    }\n else {\n      if (projectRoot.getParentFile() != null) {\n        projectRoot=projectRoot.getParentFile();\n        androidManifestFile=new File(projectRoot,\"AndroidManifest.xml\");\n      }\n else {\n        break;\n      }\n    }\n  }\n  if (!androidManifestFile.exists()) {\n    throw new IllegalStateException(\"Could not find the AndroidManifest.xml file, going up from path [\" + sourcesGenerationFolder.getAbsolutePath() + \"] found using dummy file [\"+ dummySourceFilePath+ \"] (max atempts: \"+ MAX_PARENTS_FROM_SOURCE_FOLDER+ \")\");\n  }\n else {\n    messager.printMessage(Kind.NOTE,\"AndroidManifest.xml file found: \" + androidManifestFile.toString());\n  }\n  return androidManifestFile;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2061,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 116,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * We use a dirty trick to find the AndroidManifest.xml file, since it's not available in the classpath. The idea is quite simple : create a fake class file, retrieve its URI, and start going up in parent folders to find the AndroidManifest.xml file. Any better solution will be appreciated.\n */\nprivate File findManifestFileThrowing() throws Exception {\n  Filer filer=processingEnv.getFiler();\n  JavaFileObject dummySourceFile=filer.createSourceFile(\"dummy\" + System.currentTimeMillis());\n  String dummySourceFilePath=dummySourceFile.toUri().toString();\n  if (dummySourceFilePath.startsWith(\"file:\")) {\n    if (!dummySourceFilePath.startsWith(\"file://\")) {\n      dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n    }\n  }\n else {\n    dummySourceFilePath=\"file://\" + dummySourceFilePath;\n  }\n  Messager messager=processingEnv.getMessager();\n  messager.printMessage(Kind.NOTE,\"Dummy source file: \" + dummySourceFilePath);\n  URI cleanURI=new URI(dummySourceFilePath);\n  File dummyFile=new File(cleanURI);\n  File sourcesGenerationFolder=dummyFile.getParentFile();\n  File projectRoot=sourcesGenerationFolder.getParentFile();\n  File androidManifestFile=new File(projectRoot,\"AndroidManifest.xml\");\n  for (int i=0; i < MAX_PARENTS_FROM_SOURCE_FOLDER; i++) {\n    if (androidManifestFile.exists()) {\n      break;\n    }\n else {\n      if (projectRoot.getParentFile() != null) {\n        projectRoot=projectRoot.getParentFile();\n        androidManifestFile=new File(projectRoot,\"AndroidManifest.xml\");\n      }\n else {\n        break;\n      }\n    }\n  }\n  if (!androidManifestFile.exists()) {\n    throw new IllegalStateException(\"Could not find the AndroidManifest.xml file, going up from path [\" + sourcesGenerationFolder.getAbsolutePath() + \"] found using dummy file [\"+ dummySourceFilePath+ \"] (max atempts: \"+ MAX_PARENTS_FROM_SOURCE_FOLDER+ \")\");\n  }\n else {\n    messager.printMessage(Kind.NOTE,\"AndroidManifest.xml file found: \" + androidManifestFile.toString());\n  }\n  return androidManifestFile;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 210,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 86
      },
      "nodeContext" : "dummySourceFilePath=\"file://\" + dummySourceFilePath.substring(\"file:\".length());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 78,
    "startColumnNumber" : 38,
    "endLineNumber" : 78,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}