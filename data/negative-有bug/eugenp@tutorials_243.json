{
  "id" : 243,
  "expression" : "tenantId",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/persistence-modules/hibernate-enterprise/src/test/java/com/baeldung/hibernate/multitenancy/database/MapMultiTenantConnectionProvider.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tenantId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 36,
      "startColumnNumber" : 106,
      "endLineNumber" : 36,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 36,
        "startColumnNumber" : 55,
        "endLineNumber" : 36,
        "endColumnNumber" : 115
      },
      "nodeContext" : "String.format(\"/hibernate-database-%s.properties\",tenantId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 36,
        "startColumnNumber" : 24,
        "endLineNumber" : 36,
        "endColumnNumber" : 116
      },
      "nodeContext" : "getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 117
      },
      "nodeContext" : "properties.load(getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 118
      },
      "nodeContext" : "properties.load(getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 34,
        "startColumnNumber" : 85,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Properties properties=new Properties();\n  properties.load(getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId)));\n  DriverManagerConnectionProviderImpl connectionProvider=new DriverManagerConnectionProviderImpl();\n  connectionProvider.configure(properties);\n  this.connectionProviderMap.put(tenantId,connectionProvider);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void initConnectionProviderForTenant(String tenantId) throws IOException {\n  Properties properties=new Properties();\n  properties.load(getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId)));\n  DriverManagerConnectionProviderImpl connectionProvider=new DriverManagerConnectionProviderImpl();\n  connectionProvider.configure(properties);\n  this.connectionProviderMap.put(tenantId,connectionProvider);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 118
      },
      "nodeContext" : "properties.load(getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "tenantId",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 39,
      "startColumnNumber" : 39,
      "endLineNumber" : 39,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 68
      },
      "nodeContext" : "this.connectionProviderMap.put(tenantId,connectionProvider)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 69
      },
      "nodeContext" : "this.connectionProviderMap.put(tenantId,connectionProvider);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 34,
        "startColumnNumber" : 85,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Properties properties=new Properties();\n  properties.load(getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId)));\n  DriverManagerConnectionProviderImpl connectionProvider=new DriverManagerConnectionProviderImpl();\n  connectionProvider.configure(properties);\n  this.connectionProviderMap.put(tenantId,connectionProvider);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void initConnectionProviderForTenant(String tenantId) throws IOException {\n  Properties properties=new Properties();\n  properties.load(getClass().getResourceAsStream(String.format(\"/hibernate-database-%s.properties\",tenantId)));\n  DriverManagerConnectionProviderImpl connectionProvider=new DriverManagerConnectionProviderImpl();\n  connectionProvider.configure(properties);\n  this.connectionProviderMap.put(tenantId,connectionProvider);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 69
      },
      "nodeContext" : "this.connectionProviderMap.put(tenantId,connectionProvider);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 36,
    "startColumnNumber" : 106,
    "endLineNumber" : 36,
    "endColumnNumber" : 114
  }, {
    "charLength" : 8,
    "startLineNumber" : 39,
    "startColumnNumber" : 39,
    "endLineNumber" : 39,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}