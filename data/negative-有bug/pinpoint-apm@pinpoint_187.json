{
  "id" : 187,
  "expression" : "variables.getEnterInsnNode()",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/instrument/ASMMethodVariablesTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "variables.getEnterInsnNode()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 100,
      "startColumnNumber" : 19,
      "endLineNumber" : 100,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertNull(variables.getEnterInsnNode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 96,
        "startColumnNumber" : 65,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void initInterceptorLocalVariables() throws Exception {\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.navercorp.pinpoint.profiler.instrument.AbstractInsnNode"
  }, {
    "nodeContext" : "variables.getEnterInsnNode()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 101,
      "startColumnNumber" : 19,
      "endLineNumber" : 101,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertNull(variables.getEnterInsnNode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 96,
        "startColumnNumber" : 65,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void initInterceptorLocalVariables() throws Exception {\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.navercorp.pinpoint.profiler.instrument.AbstractInsnNode"
  }, {
    "nodeContext" : "variables.getEnterInsnNode()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 110,
      "startColumnNumber" : 22,
      "endLineNumber" : 110,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertNotNull(variables.getEnterInsnNode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertNotNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 96,
        "startColumnNumber" : 65,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void initInterceptorLocalVariables() throws Exception {\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertNotNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.navercorp.pinpoint.profiler.instrument.AbstractInsnNode"
  }, {
    "nodeContext" : "variables.getEnterInsnNode()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 111,
      "startColumnNumber" : 22,
      "endLineNumber" : 111,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertNotNull(variables.getEnterInsnNode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertNotNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 96,
        "startColumnNumber" : 65,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void initInterceptorLocalVariables() throws Exception {\n  MethodNode methodNode=ASMClassNodeLoader.get(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",\"<init>\");\n  ASMMethodVariables variables=new ASMMethodVariables(\"com.navercorp.pinpoint.profiler.instrument.mock.ConstructorChildClass\",methodNode);\n  assertNull(variables.getEnterInsnNode());\n  assertNull(variables.getEnterInsnNode());\n  InterceptorRegistryBinder interceptorRegistryBinder=new DefaultInterceptorRegistryBinder();\n  int interceptorId=interceptorRegistryBinder.getInterceptorRegistryAdaptor().addInterceptor(new ArgsArrayInterceptor());\n  final InterceptorDefinition interceptorDefinition=new InterceptorDefinitionFactory().createInterceptorDefinition(ArgsArrayInterceptor.class);\n  InsnList instructions=new InsnList();\n  boolean first=variables.initInterceptorLocalVariables(instructions,interceptorId,interceptorDefinition,-1);\n  assertEquals(true,first);\n  assertNotNull(variables.getEnterInsnNode());\n  assertNotNull(variables.getEnterInsnNode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertNotNull(variables.getEnterInsnNode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.navercorp.pinpoint.profiler.instrument.AbstractInsnNode"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 100,
    "startColumnNumber" : 19,
    "endLineNumber" : 100,
    "endColumnNumber" : 47
  }, {
    "charLength" : 28,
    "startLineNumber" : 101,
    "startColumnNumber" : 19,
    "endLineNumber" : 101,
    "endColumnNumber" : 47
  }, {
    "charLength" : 28,
    "startLineNumber" : 110,
    "startColumnNumber" : 22,
    "endLineNumber" : 110,
    "endColumnNumber" : 50
  }, {
    "charLength" : 28,
    "startLineNumber" : 111,
    "startColumnNumber" : 22,
    "endLineNumber" : 111,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}