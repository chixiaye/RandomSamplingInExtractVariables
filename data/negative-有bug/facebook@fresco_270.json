{
  "id" : 270,
  "expression" : "entries.get(i)",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline-base/src/test/java/com/facebook/cache/disk/ScoreBasedEvictionComparatorSupplierTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entries.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 54,
      "startColumnNumber" : 17,
      "endLineNumber" : 54,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 54,
        "startColumnNumber" : 17,
        "endLineNumber" : 54,
        "endColumnNumber" : 46
      },
      "nodeContext" : "entries.get(i).getTimestamp()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 54,
        "startColumnNumber" : 17,
        "endLineNumber" : 54,
        "endColumnNumber" : 82
      },
      "nodeContext" : "entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 83
      },
      "nodeContext" : "assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 84
      },
      "nodeContext" : "assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 53,
        "startColumnNumber" : 49,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < entries.size() - 1; i++) {\n  assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 51,
        "startColumnNumber" : 39,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  doTest(1f,0f);\n  for (int i=0; i < entries.size() - 1; i++) {\n    assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTimestampOnlyOrder(){\n  doTest(1f,0f);\n  for (int i=0; i < entries.size() - 1; i++) {\n    assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 46,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 84
      },
      "nodeContext" : "assertTrue(entries.get(i).getTimestamp() < entries.get(i + 1).getTimestamp());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "com.facebook.cache.disk.DiskStorage.Entry"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 54,
    "startColumnNumber" : 17,
    "endLineNumber" : 54,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}