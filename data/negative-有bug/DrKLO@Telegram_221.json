{
  "id" : 221,
  "expression" : "!formatDeclared",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/ts/SpliceInfoSectionReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!formatDeclared",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 47,
      "startColumnNumber" : 8,
      "endLineNumber" : 47,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!formatDeclared) {\n  if (timestampAdjuster.getTimestampOffsetUs() == C.TIME_UNSET) {\n    return;\n  }\n  output.format(Format.createSampleFormat(null,MimeTypes.APPLICATION_SCTE35,timestampAdjuster.getTimestampOffsetUs()));\n  formatDeclared=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 46,
        "startColumnNumber" : 53,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!formatDeclared) {\n    if (timestampAdjuster.getTimestampOffsetUs() == C.TIME_UNSET) {\n      return;\n    }\n    output.format(Format.createSampleFormat(null,MimeTypes.APPLICATION_SCTE35,timestampAdjuster.getTimestampOffsetUs()));\n    formatDeclared=true;\n  }\n  int sampleSize=sectionData.bytesLeft();\n  output.sampleData(sectionData,sampleSize);\n  output.sampleMetadata(timestampAdjuster.getLastAdjustedTimestampUs(),C.BUFFER_FLAG_KEY_FRAME,sampleSize,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void consume(ParsableByteArray sectionData){\n  if (!formatDeclared) {\n    if (timestampAdjuster.getTimestampOffsetUs() == C.TIME_UNSET) {\n      return;\n    }\n    output.format(Format.createSampleFormat(null,MimeTypes.APPLICATION_SCTE35,timestampAdjuster.getTimestampOffsetUs()));\n    formatDeclared=true;\n  }\n  int sampleSize=sectionData.bytesLeft();\n  output.sampleData(sectionData,sampleSize);\n  output.sampleMetadata(timestampAdjuster.getLastAdjustedTimestampUs(),C.BUFFER_FLAG_KEY_FRAME,sampleSize,0,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!formatDeclared) {\n  if (timestampAdjuster.getTimestampOffsetUs() == C.TIME_UNSET) {\n    return;\n  }\n  output.format(Format.createSampleFormat(null,MimeTypes.APPLICATION_SCTE35,timestampAdjuster.getTimestampOffsetUs()));\n  formatDeclared=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 47,
    "startColumnNumber" : 8,
    "endLineNumber" : 47,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}