{
  "id" : 492,
  "expression" : "i <= 3",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/semaphore/src/test/java/com/iluwatar/semaphore/SemaphoreTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i <= 3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 51,
      "startColumnNumber" : 20,
      "endLineNumber" : 51,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (var i=1; i <= 3; i++) {\n  sphore.release();\n  assertEquals(i,sphore.getAvailableLicenses());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 37,
        "startColumnNumber" : 35,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var sphore=new Semaphore(3);\n  assertEquals(3,sphore.getAvailableLicenses());\n  for (var i=2; i >= 0; i--) {\n    try {\n      sphore.acquire();\n      assertEquals(i,sphore.getAvailableLicenses());\n    }\n catch (    InterruptedException e) {\n      fail(e.toString());\n    }\n  }\n  for (var i=1; i <= 3; i++) {\n    sphore.release();\n    assertEquals(i,sphore.getAvailableLicenses());\n  }\n  sphore.release();\n  assertEquals(3,sphore.getAvailableLicenses());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void acquireReleaseTest(){\n  var sphore=new Semaphore(3);\n  assertEquals(3,sphore.getAvailableLicenses());\n  for (var i=2; i >= 0; i--) {\n    try {\n      sphore.acquire();\n      assertEquals(i,sphore.getAvailableLicenses());\n    }\n catch (    InterruptedException e) {\n      fail(e.toString());\n    }\n  }\n  for (var i=1; i <= 3; i++) {\n    sphore.release();\n    assertEquals(i,sphore.getAvailableLicenses());\n  }\n  sphore.release();\n  assertEquals(3,sphore.getAvailableLicenses());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (var i=1; i <= 3; i++) {\n  sphore.release();\n  assertEquals(i,sphore.getAvailableLicenses());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 51,
    "startColumnNumber" : 20,
    "endLineNumber" : 51,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}