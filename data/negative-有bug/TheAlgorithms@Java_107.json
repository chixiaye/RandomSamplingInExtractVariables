{
  "id" : 107,
  "expression" : "mid",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Sorts/QuickSort.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mid",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 39,
      "startColumnNumber" : 25,
      "endLineNumber" : 39,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 29
      },
      "nodeContext" : "list.get(mid)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 39,
        "startColumnNumber" : 10,
        "endLineNumber" : 39,
        "endColumnNumber" : 29
      },
      "nodeContext" : "pivot=list.get(mid)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 30
      },
      "nodeContext" : "T pivot=list.get(mid);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 37,
        "startColumnNumber" : 93,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mid=(left + right) / 2;\n  T pivot=list.get(mid);\n  swap(list,mid,right);\n  while (left < right) {\n    while (left < right && pivot.compareTo(list.get(left)) >= 0) {\n      ++left;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      --right;\n    }\n    while (left < right && list.get(right).compareTo(pivot) >= 0) {\n      --right;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      ++left;\n    }\n  }\n  return left;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method finds the partition index for an array\n * @param array The array to be sorted\n * @param start The first index of an array\n * @param end The last index of an arrayFinds the partition index of an array\n */\npublic static <T extends Comparable<T>>int partition(List<T> list,int left,int right){\n  int mid=(left + right) / 2;\n  T pivot=list.get(mid);\n  swap(list,mid,right);\n  while (left < right) {\n    while (left < right && pivot.compareTo(list.get(left)) >= 0) {\n      ++left;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      --right;\n    }\n    while (left < right && list.get(right).compareTo(pivot) >= 0) {\n      --right;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      ++left;\n    }\n  }\n  return left;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 30
      },
      "nodeContext" : "T pivot=list.get(mid);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "mid",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 40,
      "startColumnNumber" : 18,
      "endLineNumber" : 40,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 28
      },
      "nodeContext" : "swap(list,mid,right)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 29
      },
      "nodeContext" : "swap(list,mid,right);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 37,
        "startColumnNumber" : 93,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mid=(left + right) / 2;\n  T pivot=list.get(mid);\n  swap(list,mid,right);\n  while (left < right) {\n    while (left < right && pivot.compareTo(list.get(left)) >= 0) {\n      ++left;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      --right;\n    }\n    while (left < right && list.get(right).compareTo(pivot) >= 0) {\n      --right;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      ++left;\n    }\n  }\n  return left;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method finds the partition index for an array\n * @param array The array to be sorted\n * @param start The first index of an array\n * @param end The last index of an arrayFinds the partition index of an array\n */\npublic static <T extends Comparable<T>>int partition(List<T> list,int left,int right){\n  int mid=(left + right) / 2;\n  T pivot=list.get(mid);\n  swap(list,mid,right);\n  while (left < right) {\n    while (left < right && pivot.compareTo(list.get(left)) >= 0) {\n      ++left;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      --right;\n    }\n    while (left < right && list.get(right).compareTo(pivot) >= 0) {\n      --right;\n    }\n    if (left < right) {\n      swap(list,left,right);\n      ++left;\n    }\n  }\n  return left;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 29
      },
      "nodeContext" : "swap(list,mid,right);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 39,
    "startColumnNumber" : 25,
    "endLineNumber" : 39,
    "endColumnNumber" : 28
  }, {
    "charLength" : 3,
    "startLineNumber" : 40,
    "startColumnNumber" : 18,
    "endLineNumber" : 40,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}