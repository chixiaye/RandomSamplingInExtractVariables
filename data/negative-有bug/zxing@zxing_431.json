{
  "id" : 431,
  "expression" : "12",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/test/src/com/google/zxing/common/BitSourceTestCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "12",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 40,
      "startColumnNumber" : 17,
      "endLineNumber" : 40,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertEquals(12,source.readBits(10))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(12,source.readBits(10));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 28,
        "startColumnNumber" : 27,
        "endLineNumber" : 46,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] bytes={(byte)1,(byte)2,(byte)3,(byte)4,(byte)5};\n  BitSource source=new BitSource(bytes);\n  assertEquals(40,source.available());\n  assertEquals(0,source.readBits(1));\n  assertEquals(39,source.available());\n  assertEquals(0,source.readBits(6));\n  assertEquals(33,source.available());\n  assertEquals(1,source.readBits(1));\n  assertEquals(32,source.available());\n  assertEquals(2,source.readBits(8));\n  assertEquals(24,source.available());\n  assertEquals(12,source.readBits(10));\n  assertEquals(14,source.available());\n  assertEquals(16,source.readBits(8));\n  assertEquals(6,source.available());\n  assertEquals(5,source.readBits(6));\n  assertEquals(0,source.available());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 46,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSource(){\n  byte[] bytes={(byte)1,(byte)2,(byte)3,(byte)4,(byte)5};\n  BitSource source=new BitSource(bytes);\n  assertEquals(40,source.available());\n  assertEquals(0,source.readBits(1));\n  assertEquals(39,source.available());\n  assertEquals(0,source.readBits(6));\n  assertEquals(33,source.available());\n  assertEquals(1,source.readBits(1));\n  assertEquals(32,source.available());\n  assertEquals(2,source.readBits(8));\n  assertEquals(24,source.available());\n  assertEquals(12,source.readBits(10));\n  assertEquals(14,source.available());\n  assertEquals(16,source.readBits(8));\n  assertEquals(6,source.available());\n  assertEquals(5,source.readBits(6));\n  assertEquals(0,source.available());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(12,source.readBits(10));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 40,
    "startColumnNumber" : 17,
    "endLineNumber" : 40,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}