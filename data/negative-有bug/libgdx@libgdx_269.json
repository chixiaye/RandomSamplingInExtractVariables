{
  "id" : 269,
  "expression" : "area.y",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ScissorStack.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "area.y",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 128,
      "startColumnNumber" : 18,
      "endLineNumber" : 128,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 28
      },
      "nodeContext" : "tmp.set(area.x,area.y,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 29
      },
      "nodeContext" : "tmp.set(area.x,area.y,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 127,
        "startColumnNumber" : 83,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  tmp.set(area.x,area.y,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.x=tmp.x;\n  scissor.y=tmp.y;\n  tmp.set(area.x + area.width,area.y + area.height,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.width=tmp.x - scissor.x;\n  scissor.height=tmp.y - scissor.y;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1380,
        "startLineNumber" : 117,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Calculates a scissor rectangle in OpenGL ES window coordinates from a  {@link Camera}, a transformation  {@link Matrix4} andan axis aligned  {@link Rectangle}. The rectangle will get transformed by the camera and transform matrices and is then projected to screen coordinates. Note that only axis aligned rectangles will work with this method. If either the Camera or the Matrix4 have rotational components, the output of this method will not be suitable for {@link GL20#glScissor(int,int,int,int)}.\n * @param camera the {@link Camera}\n * @param batchTransform the transformation {@link Matrix4}\n * @param area the {@link Rectangle} to transform to window coordinates\n * @param scissor the Rectangle to store the result in \n */\npublic static void calculateScissors(Camera camera,float viewportX,float viewportY,float viewportWidth,float viewportHeight,Matrix4 batchTransform,Rectangle area,Rectangle scissor){\n  tmp.set(area.x,area.y,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.x=tmp.x;\n  scissor.y=tmp.y;\n  tmp.set(area.x + area.width,area.y + area.height,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.width=tmp.x - scissor.x;\n  scissor.height=tmp.y - scissor.y;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 29
      },
      "nodeContext" : "tmp.set(area.x,area.y,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "float"
  }, {
    "nodeContext" : "area.y",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 134,
      "startColumnNumber" : 31,
      "endLineNumber" : 134,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 134,
        "startColumnNumber" : 31,
        "endLineNumber" : 134,
        "endColumnNumber" : 51
      },
      "nodeContext" : "area.y + area.height",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 55
      },
      "nodeContext" : "tmp.set(area.x + area.width,area.y + area.height,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 56
      },
      "nodeContext" : "tmp.set(area.x + area.width,area.y + area.height,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 127,
        "startColumnNumber" : 83,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  tmp.set(area.x,area.y,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.x=tmp.x;\n  scissor.y=tmp.y;\n  tmp.set(area.x + area.width,area.y + area.height,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.width=tmp.x - scissor.x;\n  scissor.height=tmp.y - scissor.y;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1380,
        "startLineNumber" : 117,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Calculates a scissor rectangle in OpenGL ES window coordinates from a  {@link Camera}, a transformation  {@link Matrix4} andan axis aligned  {@link Rectangle}. The rectangle will get transformed by the camera and transform matrices and is then projected to screen coordinates. Note that only axis aligned rectangles will work with this method. If either the Camera or the Matrix4 have rotational components, the output of this method will not be suitable for {@link GL20#glScissor(int,int,int,int)}.\n * @param camera the {@link Camera}\n * @param batchTransform the transformation {@link Matrix4}\n * @param area the {@link Rectangle} to transform to window coordinates\n * @param scissor the Rectangle to store the result in \n */\npublic static void calculateScissors(Camera camera,float viewportX,float viewportY,float viewportWidth,float viewportHeight,Matrix4 batchTransform,Rectangle area,Rectangle scissor){\n  tmp.set(area.x,area.y,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.x=tmp.x;\n  scissor.y=tmp.y;\n  tmp.set(area.x + area.width,area.y + area.height,0);\n  tmp.mul(batchTransform);\n  camera.project(tmp,viewportX,viewportY,viewportWidth,viewportHeight);\n  scissor.width=tmp.x - scissor.x;\n  scissor.height=tmp.y - scissor.y;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 56
      },
      "nodeContext" : "tmp.set(area.x + area.width,area.y + area.height,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 128,
    "startColumnNumber" : 18,
    "endLineNumber" : 128,
    "endColumnNumber" : 24
  }, {
    "charLength" : 6,
    "startLineNumber" : 134,
    "startColumnNumber" : 31,
    "endLineNumber" : 134,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}