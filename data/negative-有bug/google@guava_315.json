{
  "id" : 315,
  "expression" : "1",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/io/CountingOutputStreamTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 36,
      "startColumnNumber" : 15,
      "endLineNumber" : 36,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 16
      },
      "nodeContext" : "written+=1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "written+=1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 28,
        "startColumnNumber" : 43,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int written=0;\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  CountingOutputStream counter=new CountingOutputStream(out);\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(0);\n  written+=1;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  byte[] data=new byte[10];\n  counter.write(data);\n  written+=10;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,0,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,2,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  try {\n    counter.write(data,0,data.length + 1);\n    fail(\"expected exception\");\n  }\n catch (  IndexOutOfBoundsException expected) {\n  }\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1168,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testCount() throws Exception {\n  int written=0;\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  CountingOutputStream counter=new CountingOutputStream(out);\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(0);\n  written+=1;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  byte[] data=new byte[10];\n  counter.write(data);\n  written+=10;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,0,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,2,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  try {\n    counter.write(data,0,data.length + 1);\n    fail(\"expected exception\");\n  }\n catch (  IndexOutOfBoundsException expected) {\n  }\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 17
      },
      "nodeContext" : "written+=1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 58,
      "startColumnNumber" : 43,
      "endLineNumber" : 58,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 58,
        "startColumnNumber" : 29,
        "endLineNumber" : 58,
        "endColumnNumber" : 44
      },
      "nodeContext" : "data.length + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 45
      },
      "nodeContext" : "counter.write(data,0,data.length + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 46
      },
      "nodeContext" : "counter.write(data,0,data.length + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  counter.write(data,0,data.length + 1);\n  fail(\"expected exception\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  counter.write(data,0,data.length + 1);\n  fail(\"expected exception\");\n}\n catch (IndexOutOfBoundsException expected) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 28,
        "startColumnNumber" : 43,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int written=0;\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  CountingOutputStream counter=new CountingOutputStream(out);\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(0);\n  written+=1;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  byte[] data=new byte[10];\n  counter.write(data);\n  written+=10;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,0,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,2,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  try {\n    counter.write(data,0,data.length + 1);\n    fail(\"expected exception\");\n  }\n catch (  IndexOutOfBoundsException expected) {\n  }\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1168,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testCount() throws Exception {\n  int written=0;\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  CountingOutputStream counter=new CountingOutputStream(out);\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(0);\n  written+=1;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  byte[] data=new byte[10];\n  counter.write(data);\n  written+=10;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,0,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  counter.write(data,2,5);\n  written+=5;\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n  try {\n    counter.write(data,0,data.length + 1);\n    fail(\"expected exception\");\n  }\n catch (  IndexOutOfBoundsException expected) {\n  }\n  assertEquals(written,out.size());\n  assertEquals(written,counter.getCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 46
      },
      "nodeContext" : "counter.write(data,0,data.length + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 36,
    "startColumnNumber" : 15,
    "endLineNumber" : 36,
    "endColumnNumber" : 16
  }, {
    "charLength" : 1,
    "startLineNumber" : 58,
    "startColumnNumber" : 43,
    "endLineNumber" : 58,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}