{
  "id" : 320,
  "expression" : "null",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/JavaBeanSerializerTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 26,
      "startColumnNumber" : 118,
      "endLineNumber" : 26,
      "endColumnNumber" : 122
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 26,
        "startColumnNumber" : 96,
        "endLineNumber" : 26,
        "endColumnNumber" : 122
      },
      "nodeContext" : "(Map<String,String>)null",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 26,
        "startColumnNumber" : 40,
        "endLineNumber" : 26,
        "endColumnNumber" : 148
      },
      "nodeContext" : "new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 26,
        "startColumnNumber" : 27,
        "endLineNumber" : 26,
        "endColumnNumber" : 148
      },
      "nodeContext" : "serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 149
      },
      "nodeContext" : "JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 19,
        "startColumnNumber" : 44,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=new SerializeWriter();\n  A a=new A();\n  a.getL0().add(\"A\");\n  a.getL0().add(\"B\");\n  JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n  serializer.write(new JSONSerializer(out),a,null,null);\n  Assert.assertEquals(\"{\\\"l0\\\":[\\\"A\\\",\\\"B\\\"]}\",out.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0_s() throws Exception {\n  SerializeWriter out=new SerializeWriter();\n  A a=new A();\n  a.getL0().add(\"A\");\n  a.getL0().add(\"B\");\n  JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n  serializer.write(new JSONSerializer(out),a,null,null);\n  Assert.assertEquals(\"{\\\"l0\\\":[\\\"A\\\",\\\"B\\\"]}\",out.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 149
      },
      "nodeContext" : "JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 27,
      "startColumnNumber" : 53,
      "endLineNumber" : 27,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 64
      },
      "nodeContext" : "serializer.write(new JSONSerializer(out),a,null,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 65
      },
      "nodeContext" : "serializer.write(new JSONSerializer(out),a,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 19,
        "startColumnNumber" : 44,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=new SerializeWriter();\n  A a=new A();\n  a.getL0().add(\"A\");\n  a.getL0().add(\"B\");\n  JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n  serializer.write(new JSONSerializer(out),a,null,null);\n  Assert.assertEquals(\"{\\\"l0\\\":[\\\"A\\\",\\\"B\\\"]}\",out.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0_s() throws Exception {\n  SerializeWriter out=new SerializeWriter();\n  A a=new A();\n  a.getL0().add(\"A\");\n  a.getL0().add(\"B\");\n  JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n  serializer.write(new JSONSerializer(out),a,null,null);\n  Assert.assertEquals(\"{\\\"l0\\\":[\\\"A\\\",\\\"B\\\"]}\",out.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 65
      },
      "nodeContext" : "serializer.write(new JSONSerializer(out),a,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 27,
      "startColumnNumber" : 59,
      "endLineNumber" : 27,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 64
      },
      "nodeContext" : "serializer.write(new JSONSerializer(out),a,null,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 65
      },
      "nodeContext" : "serializer.write(new JSONSerializer(out),a,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 19,
        "startColumnNumber" : 44,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SerializeWriter out=new SerializeWriter();\n  A a=new A();\n  a.getL0().add(\"A\");\n  a.getL0().add(\"B\");\n  JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n  serializer.write(new JSONSerializer(out),a,null,null);\n  Assert.assertEquals(\"{\\\"l0\\\":[\\\"A\\\",\\\"B\\\"]}\",out.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0_s() throws Exception {\n  SerializeWriter out=new SerializeWriter();\n  A a=new A();\n  a.getL0().add(\"A\");\n  a.getL0().add(\"B\");\n  JavaBeanSerializer serializer=new JavaBeanSerializer(A.class,A.class.getModifiers(),(Map<String,String>)null,false,true,true,true);\n  serializer.write(new JSONSerializer(out),a,null,null);\n  Assert.assertEquals(\"{\\\"l0\\\":[\\\"A\\\",\\\"B\\\"]}\",out.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 65
      },
      "nodeContext" : "serializer.write(new JSONSerializer(out),a,null,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 26,
    "startColumnNumber" : 118,
    "endLineNumber" : 26,
    "endColumnNumber" : 122
  }, {
    "charLength" : 4,
    "startLineNumber" : 27,
    "startColumnNumber" : 53,
    "endLineNumber" : 27,
    "endColumnNumber" : 57
  }, {
    "charLength" : 4,
    "startLineNumber" : 27,
    "startColumnNumber" : 59,
    "endLineNumber" : 27,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  } ]
}