{
  "id" : 325,
  "expression" : "this",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/mock/mockito/MockBeanForBeanFactoryIntegrationTests.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 8,
      "endLineNumber" : 54,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 28
      },
      "nodeContext" : "this.testFactoryBean",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.testFactoryBean.getObjectType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 45
      },
      "nodeContext" : "given(this.testFactoryBean.getObjectType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 80
      },
      "nodeContext" : "given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 81
      },
      "nodeContext" : "given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 51,
        "startColumnNumber" : 41,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TestBean testBean=mock(TestBean.class);\n  given(testBean.hello()).willReturn(\"amock\");\n  given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n  given(this.testFactoryBean.getObject()).willReturn(testBean);\n  TestBean bean=this.applicationContext.getBean(TestBean.class);\n  assertThat(bean.hello()).isEqualTo(\"amock\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @SuppressWarnings({\"unchecked\",\"rawtypes\"}) public void testName() throws Exception {\n  TestBean testBean=mock(TestBean.class);\n  given(testBean.hello()).willReturn(\"amock\");\n  given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n  given(this.testFactoryBean.getObject()).willReturn(testBean);\n  TestBean bean=this.applicationContext.getBean(TestBean.class);\n  assertThat(bean.hello()).isEqualTo(\"amock\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 81
      },
      "nodeContext" : "given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 55,
      "startColumnNumber" : 8,
      "endLineNumber" : 55,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 28
      },
      "nodeContext" : "this.testFactoryBean",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 40
      },
      "nodeContext" : "this.testFactoryBean.getObject()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 41
      },
      "nodeContext" : "given(this.testFactoryBean.getObject())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 62
      },
      "nodeContext" : "given(this.testFactoryBean.getObject()).willReturn(testBean)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 63
      },
      "nodeContext" : "given(this.testFactoryBean.getObject()).willReturn(testBean);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 51,
        "startColumnNumber" : 41,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TestBean testBean=mock(TestBean.class);\n  given(testBean.hello()).willReturn(\"amock\");\n  given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n  given(this.testFactoryBean.getObject()).willReturn(testBean);\n  TestBean bean=this.applicationContext.getBean(TestBean.class);\n  assertThat(bean.hello()).isEqualTo(\"amock\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @SuppressWarnings({\"unchecked\",\"rawtypes\"}) public void testName() throws Exception {\n  TestBean testBean=mock(TestBean.class);\n  given(testBean.hello()).willReturn(\"amock\");\n  given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n  given(this.testFactoryBean.getObject()).willReturn(testBean);\n  TestBean bean=this.applicationContext.getBean(TestBean.class);\n  assertThat(bean.hello()).isEqualTo(\"amock\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 63
      },
      "nodeContext" : "given(this.testFactoryBean.getObject()).willReturn(testBean);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 56,
      "startColumnNumber" : 18,
      "endLineNumber" : 56,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 56,
        "startColumnNumber" : 18,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "this.applicationContext",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 56,
        "startColumnNumber" : 18,
        "endLineNumber" : 56,
        "endColumnNumber" : 65
      },
      "nodeContext" : "this.applicationContext.getBean(TestBean.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 56,
        "startColumnNumber" : 11,
        "endLineNumber" : 56,
        "endColumnNumber" : 65
      },
      "nodeContext" : "bean=this.applicationContext.getBean(TestBean.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 66
      },
      "nodeContext" : "TestBean bean=this.applicationContext.getBean(TestBean.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 51,
        "startColumnNumber" : 41,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TestBean testBean=mock(TestBean.class);\n  given(testBean.hello()).willReturn(\"amock\");\n  given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n  given(this.testFactoryBean.getObject()).willReturn(testBean);\n  TestBean bean=this.applicationContext.getBean(TestBean.class);\n  assertThat(bean.hello()).isEqualTo(\"amock\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @SuppressWarnings({\"unchecked\",\"rawtypes\"}) public void testName() throws Exception {\n  TestBean testBean=mock(TestBean.class);\n  given(testBean.hello()).willReturn(\"amock\");\n  given(this.testFactoryBean.getObjectType()).willReturn((Class)TestBean.class);\n  given(this.testFactoryBean.getObject()).willReturn(testBean);\n  TestBean bean=this.applicationContext.getBean(TestBean.class);\n  assertThat(bean.hello()).isEqualTo(\"amock\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 66
      },
      "nodeContext" : "TestBean bean=this.applicationContext.getBean(TestBean.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.test.mock.mockito.MockBeanForBeanFactoryIntegrationTests"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 8,
    "endLineNumber" : 54,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 55,
    "startColumnNumber" : 8,
    "endLineNumber" : 55,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 56,
    "startColumnNumber" : 18,
    "endLineNumber" : 56,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}