{
  "id" : 97,
  "expression" : "new JdbcConnection(dataSource.getConnection())",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/LiquibaseFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new JdbcConnection(dataSource.getConnection())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 35,
      "startColumnNumber" : 55,
      "endLineNumber" : 35,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 34,
        "startColumnNumber" : 32,
        "endLineNumber" : 35,
        "endColumnNumber" : 102
      },
      "nodeContext" : "DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 34,
        "startColumnNumber" : 21,
        "endLineNumber" : 35,
        "endColumnNumber" : 102
      },
      "nodeContext" : "database=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Database database=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1356,
        "startLineNumber" : 32,
        "startColumnNumber" : 65,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Database database=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()));\n  ;\n  if (database != null) {\n    database.setDatabaseChangeLogLockTableName(config.databaseChangeLogLockTableName);\n    database.setDatabaseChangeLogTableName(config.databaseChangeLogTableName);\n    config.liquibaseCatalogName.ifPresent(database::setLiquibaseCatalogName);\n    config.liquibaseSchemaName.ifPresent(database::setLiquibaseSchemaName);\n    config.liquibaseTablespaceName.ifPresent(database::setLiquibaseTablespaceName);\n    if (config.defaultCatalogName.isPresent()) {\n      database.setDefaultCatalogName(config.defaultCatalogName.get());\n    }\n    if (config.defaultSchemaName.isPresent()) {\n      database.setDefaultSchemaName(config.defaultSchemaName.get());\n    }\n  }\n  Liquibase liquibase=new Liquibase(config.changeLog,resourceAccessor,database);\n  for (  Map.Entry<String,String> entry : config.changeLogParameters.entrySet()) {\n    liquibase.getChangeLogParameters().set(entry.getKey(),entry.getValue());\n  }\n  return liquibase;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (ClassLoaderResourceAccessor resourceAccessor=new ClassLoaderResourceAccessor(Thread.currentThread().getContextClassLoader())){\n  Database database=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()));\n  ;\n  if (database != null) {\n    database.setDatabaseChangeLogLockTableName(config.databaseChangeLogLockTableName);\n    database.setDatabaseChangeLogTableName(config.databaseChangeLogTableName);\n    config.liquibaseCatalogName.ifPresent(database::setLiquibaseCatalogName);\n    config.liquibaseSchemaName.ifPresent(database::setLiquibaseSchemaName);\n    config.liquibaseTablespaceName.ifPresent(database::setLiquibaseTablespaceName);\n    if (config.defaultCatalogName.isPresent()) {\n      database.setDefaultCatalogName(config.defaultCatalogName.get());\n    }\n    if (config.defaultSchemaName.isPresent()) {\n      database.setDefaultSchemaName(config.defaultSchemaName.get());\n    }\n  }\n  Liquibase liquibase=new Liquibase(config.changeLog,resourceAccessor,database);\n  for (  Map.Entry<String,String> entry : config.changeLogParameters.entrySet()) {\n    liquibase.getChangeLogParameters().set(entry.getKey(),entry.getValue());\n  }\n  return liquibase;\n}\n catch (Exception ex) {\n  throw new IllegalStateException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1604,
        "startLineNumber" : 30,
        "startColumnNumber" : 39,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (ClassLoaderResourceAccessor resourceAccessor=new ClassLoaderResourceAccessor(Thread.currentThread().getContextClassLoader())){\n    Database database=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()));\n    ;\n    if (database != null) {\n      database.setDatabaseChangeLogLockTableName(config.databaseChangeLogLockTableName);\n      database.setDatabaseChangeLogTableName(config.databaseChangeLogTableName);\n      config.liquibaseCatalogName.ifPresent(database::setLiquibaseCatalogName);\n      config.liquibaseSchemaName.ifPresent(database::setLiquibaseSchemaName);\n      config.liquibaseTablespaceName.ifPresent(database::setLiquibaseTablespaceName);\n      if (config.defaultCatalogName.isPresent()) {\n        database.setDefaultCatalogName(config.defaultCatalogName.get());\n      }\n      if (config.defaultSchemaName.isPresent()) {\n        database.setDefaultSchemaName(config.defaultSchemaName.get());\n      }\n    }\n    Liquibase liquibase=new Liquibase(config.changeLog,resourceAccessor,database);\n    for (    Map.Entry<String,String> entry : config.changeLogParameters.entrySet()) {\n      liquibase.getChangeLogParameters().set(entry.getKey(),entry.getValue());\n    }\n    return liquibase;\n  }\n catch (  Exception ex) {\n    throw new IllegalStateException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1639,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Liquibase createLiquibase(){\n  try (ClassLoaderResourceAccessor resourceAccessor=new ClassLoaderResourceAccessor(Thread.currentThread().getContextClassLoader())){\n    Database database=DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()));\n    ;\n    if (database != null) {\n      database.setDatabaseChangeLogLockTableName(config.databaseChangeLogLockTableName);\n      database.setDatabaseChangeLogTableName(config.databaseChangeLogTableName);\n      config.liquibaseCatalogName.ifPresent(database::setLiquibaseCatalogName);\n      config.liquibaseSchemaName.ifPresent(database::setLiquibaseSchemaName);\n      config.liquibaseTablespaceName.ifPresent(database::setLiquibaseTablespaceName);\n      if (config.defaultCatalogName.isPresent()) {\n        database.setDefaultCatalogName(config.defaultCatalogName.get());\n      }\n      if (config.defaultSchemaName.isPresent()) {\n        database.setDefaultSchemaName(config.defaultSchemaName.get());\n      }\n    }\n    Liquibase liquibase=new Liquibase(config.changeLog,resourceAccessor,database);\n    for (    Map.Entry<String,String> entry : config.changeLogParameters.entrySet()) {\n      liquibase.getChangeLogParameters().set(entry.getKey(),entry.getValue());\n    }\n    return liquibase;\n  }\n catch (  Exception ex) {\n    throw new IllegalStateException(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 34,
        "startColumnNumber" : 32,
        "endLineNumber" : 35,
        "endColumnNumber" : 102
      },
      "nodeContext" : "DatabaseFactory.getInstance().findCorrectDatabaseImplementation(new JdbcConnection(dataSource.getConnection()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "io.quarkus.liquibase.JdbcConnection"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 35,
    "startColumnNumber" : 55,
    "endLineNumber" : 35,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}