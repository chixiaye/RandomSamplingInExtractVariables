{
  "id" : 112,
  "expression" : "LongCodec",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-27/src/main/java/org/redisson/spring/data/connection/RedissonReactiveGeoCommands.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "LongCodec",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 360,
      "startColumnNumber" : 41,
      "endLineNumber" : 360,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 360,
        "startColumnNumber" : 41,
        "endLineNumber" : 360,
        "endColumnNumber" : 59
      },
      "nodeContext" : "LongCodec.INSTANCE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 360,
        "startColumnNumber" : 27,
        "endLineNumber" : 360,
        "endColumnNumber" : 121
      },
      "nodeContext" : "write(keyBuf,LongCodec.INSTANCE,RedisCommands.GEOSEARCHSTORE_STORE,commandParams.toArray())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 360,
        "startColumnNumber" : 23,
        "endLineNumber" : 360,
        "endColumnNumber" : 121
      },
      "nodeContext" : "m=write(keyBuf,LongCodec.INSTANCE,RedisCommands.GEOSEARCHSTORE_STORE,commandParams.toArray())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 360,
        "startColumnNumber" : 12,
        "endLineNumber" : 360,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Mono<Long> m=write(keyBuf,LongCodec.INSTANCE,RedisCommands.GEOSEARCHSTORE_STORE,commandParams.toArray());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 3079,
        "startLineNumber" : 306,
        "startColumnNumber" : 44,
        "endLineNumber" : 362,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.notNull(command.getArgs(),\"Args must not be null!\");\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notNull(command.getDestKey(),\"DestKey must not be null!\");\n  Assert.notNull(command.getShape(),\"Shape must not be null!\");\n  Assert.notNull(command.getReference(),\"Reference must not be null!\");\n  List<Object> commandParams=new ArrayList<>();\n  byte[] destKeyBuf=toByteArray(command.getDestKey());\n  commandParams.add(destKeyBuf);\n  byte[] keyBuf=toByteArray(command.getKey());\n  commandParams.add(keyBuf);\n  if (command.getReference() instanceof GeoReference.GeoCoordinateReference) {\n    GeoReference.GeoCoordinateReference ref=(GeoReference.GeoCoordinateReference)command.getReference();\n    commandParams.add(\"FROMLONLAT\");\n    commandParams.add(convert(ref.getLongitude()));\n    commandParams.add(convert(ref.getLatitude()));\n  }\n else   if (command.getReference() instanceof GeoReference.GeoMemberReference) {\n    GeoReference.GeoMemberReference ref=(GeoReference.GeoMemberReference)command.getReference();\n    commandParams.add(\"FROMMEMBER\");\n    commandParams.add(encode(ref.getMember()));\n  }\n  if (command.getShape() instanceof RadiusShape) {\n    RadiusShape shape=(RadiusShape)command.getShape();\n    commandParams.add(\"BYRADIUS\");\n    commandParams.add(shape.getRadius().getValue());\n    commandParams.add(convert(shape.getMetric()).getAbbreviation());\n  }\n else   if (command.getShape() instanceof BoxShape) {\n    BoxShape shape=(BoxShape)command.getShape();\n    commandParams.add(\"BYBOX\");\n    commandParams.add(shape.getBoundingBox().getWidth().getValue());\n    commandParams.add(shape.getBoundingBox().getHeight().getValue());\n    commandParams.add(convert(shape.getMetric()).getAbbreviation());\n  }\n  RedisGeoCommands.GeoSearchStoreCommandArgs args=command.getArgs().orElse(RedisGeoCommands.GeoSearchStoreCommandArgs.newGeoSearchStoreArgs());\n  if (args.hasSortDirection()) {\n    commandParams.add(args.getSortDirection());\n  }\n  if (args.getLimit() != null) {\n    commandParams.add(\"COUNT\");\n    commandParams.add(args.getLimit());\n    if (args.hasAnyLimit()) {\n      commandParams.add(\"ANY\");\n    }\n  }\n  if (args.isStoreDistance()) {\n    commandParams.add(\"STOREDIST\");\n  }\n  Mono<Long> m=write(keyBuf,LongCodec.INSTANCE,RedisCommands.GEOSEARCHSTORE_STORE,commandParams.toArray());\n  return m.map(v -> new NumericResponse<>(command,v));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 3090,
        "startLineNumber" : 306,
        "startColumnNumber" : 33,
        "endLineNumber" : 362,
        "endColumnNumber" : 9
      },
      "nodeContext" : "command -> {\n  Assert.notNull(command.getArgs(),\"Args must not be null!\");\n  Assert.notNull(command.getKey(),\"Key must not be null!\");\n  Assert.notNull(command.getDestKey(),\"DestKey must not be null!\");\n  Assert.notNull(command.getShape(),\"Shape must not be null!\");\n  Assert.notNull(command.getReference(),\"Reference must not be null!\");\n  List<Object> commandParams=new ArrayList<>();\n  byte[] destKeyBuf=toByteArray(command.getDestKey());\n  commandParams.add(destKeyBuf);\n  byte[] keyBuf=toByteArray(command.getKey());\n  commandParams.add(keyBuf);\n  if (command.getReference() instanceof GeoReference.GeoCoordinateReference) {\n    GeoReference.GeoCoordinateReference ref=(GeoReference.GeoCoordinateReference)command.getReference();\n    commandParams.add(\"FROMLONLAT\");\n    commandParams.add(convert(ref.getLongitude()));\n    commandParams.add(convert(ref.getLatitude()));\n  }\n else   if (command.getReference() instanceof GeoReference.GeoMemberReference) {\n    GeoReference.GeoMemberReference ref=(GeoReference.GeoMemberReference)command.getReference();\n    commandParams.add(\"FROMMEMBER\");\n    commandParams.add(encode(ref.getMember()));\n  }\n  if (command.getShape() instanceof RadiusShape) {\n    RadiusShape shape=(RadiusShape)command.getShape();\n    commandParams.add(\"BYRADIUS\");\n    commandParams.add(shape.getRadius().getValue());\n    commandParams.add(convert(shape.getMetric()).getAbbreviation());\n  }\n else   if (command.getShape() instanceof BoxShape) {\n    BoxShape shape=(BoxShape)command.getShape();\n    commandParams.add(\"BYBOX\");\n    commandParams.add(shape.getBoundingBox().getWidth().getValue());\n    commandParams.add(shape.getBoundingBox().getHeight().getValue());\n    commandParams.add(convert(shape.getMetric()).getAbbreviation());\n  }\n  RedisGeoCommands.GeoSearchStoreCommandArgs args=command.getArgs().orElse(RedisGeoCommands.GeoSearchStoreCommandArgs.newGeoSearchStoreArgs());\n  if (args.hasSortDirection()) {\n    commandParams.add(args.getSortDirection());\n  }\n  if (args.getLimit() != null) {\n    commandParams.add(\"COUNT\");\n    commandParams.add(args.getLimit());\n    if (args.hasAnyLimit()) {\n      commandParams.add(\"ANY\");\n    }\n  }\n  if (args.isStoreDistance()) {\n    commandParams.add(\"STOREDIST\");\n  }\n  Mono<Long> m=write(keyBuf,LongCodec.INSTANCE,RedisCommands.GEOSEARCHSTORE_STORE,commandParams.toArray());\n  return m.map(v -> new NumericResponse<>(command,v));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 377,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 360,
        "startColumnNumber" : 12,
        "endLineNumber" : 360,
        "endColumnNumber" : 122
      },
      "nodeContext" : "Mono<Long> m=write(keyBuf,LongCodec.INSTANCE,RedisCommands.GEOSEARCHSTORE_STORE,commandParams.toArray());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 360,
    "startColumnNumber" : 41,
    "endLineNumber" : 360,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}