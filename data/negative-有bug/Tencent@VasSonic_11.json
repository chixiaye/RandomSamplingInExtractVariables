{
  "id" : 11,
  "expression" : "(n=bufferedInputStream.read(buffer))",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/androidTest/java/com/tencent/sonic/sdk/BaseSonicTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(n=bufferedInputStream.read(buffer))",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 223,
      "startColumnNumber" : 25,
      "endLineNumber" : 223,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 223,
        "startColumnNumber" : 19,
        "endLineNumber" : 223,
        "endColumnNumber" : 63
      },
      "nodeContext" : "-1 != (n=bufferedInputStream.read(buffer))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (-1 != (n=bufferedInputStream.read(buffer))) {\n  outputStream.write(buffer,0,n);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 617,
        "startLineNumber" : 217,
        "startColumnNumber" : 38,
        "endLineNumber" : 232,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  BufferedInputStream bufferedInputStream=new BufferedInputStream(resourceResponse.getData());\n  byte[] buffer=new byte[1024];\n  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n  String data=null;\n  int n=0;\n  while (-1 != (n=bufferedInputStream.read(buffer))) {\n    outputStream.write(buffer,0,n);\n  }\n  if (n == -1) {\n    data=outputStream.toString(\"UTF-8\");\n  }\n  assertEquals(data,html);\n  bufferedInputStream.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 232,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resourceResponse != null) {\n  BufferedInputStream bufferedInputStream=new BufferedInputStream(resourceResponse.getData());\n  byte[] buffer=new byte[1024];\n  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n  String data=null;\n  int n=0;\n  while (-1 != (n=bufferedInputStream.read(buffer))) {\n    outputStream.write(buffer,0,n);\n  }\n  if (n == -1) {\n    data=outputStream.toString(\"UTF-8\");\n  }\n  assertEquals(data,html);\n  bufferedInputStream.close();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 789,
        "startLineNumber" : 215,
        "startColumnNumber" : 72,
        "endLineNumber" : 233,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  WebResourceResponse resourceResponse=(WebResourceResponse)sonicSession.getSessionClient().requestResource(url);\n  if (resourceResponse != null) {\n    BufferedInputStream bufferedInputStream=new BufferedInputStream(resourceResponse.getData());\n    byte[] buffer=new byte[1024];\n    ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n    String data=null;\n    int n=0;\n    while (-1 != (n=bufferedInputStream.read(buffer))) {\n      outputStream.write(buffer,0,n);\n    }\n    if (n == -1) {\n      data=outputStream.toString(\"UTF-8\");\n    }\n    assertEquals(data,html);\n    bufferedInputStream.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 215,
        "startColumnNumber" : 4,
        "endLineNumber" : 233,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void mockInterceptRequest(String html) throws IOException {\n  WebResourceResponse resourceResponse=(WebResourceResponse)sonicSession.getSessionClient().requestResource(url);\n  if (resourceResponse != null) {\n    BufferedInputStream bufferedInputStream=new BufferedInputStream(resourceResponse.getData());\n    byte[] buffer=new byte[1024];\n    ByteArrayOutputStream outputStream=new ByteArrayOutputStream();\n    String data=null;\n    int n=0;\n    while (-1 != (n=bufferedInputStream.read(buffer))) {\n      outputStream.write(buffer,0,n);\n    }\n    if (n == -1) {\n      data=outputStream.toString(\"UTF-8\");\n    }\n    assertEquals(data,html);\n    bufferedInputStream.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 223,
        "startColumnNumber" : 19,
        "endLineNumber" : 223,
        "endColumnNumber" : 63
      },
      "nodeContext" : "-1 != (n=bufferedInputStream.read(buffer))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 223,
    "startColumnNumber" : 25,
    "endLineNumber" : 223,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}