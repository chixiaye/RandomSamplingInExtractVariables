{
  "id" : 105,
  "expression" : "new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\")))",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-jdbc/shardingsphere-jdbc-core/src/test/java/org/apache/shardingsphere/driver/jdbc/base/AbstractSQLTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\")))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 134,
      "startLineNumber" : 54,
      "startColumnNumber" : 40,
      "endLineNumber" : 54,
      "endColumnNumber" : 174
    },
    "astNodeNumber" : 14,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 175
      },
      "nodeContext" : "RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 176
      },
      "nodeContext" : "RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 53,
        "startColumnNumber" : 50,
        "endLineNumber" : 55,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"encrypt\".equals(dataSourceName)) {\n  RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n}\n else if (\"shadow_jdbc_0\".equals(dataSourceName) || \"shadow_jdbc_1\".equals(dataSourceName)) {\n  RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_shadow_init.sql\"))));\n}\n else {\n  RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_init.sql\"))));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 52,
        "startColumnNumber" : 88,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (\"encrypt\".equals(dataSourceName)) {\n    RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n  }\n else   if (\"shadow_jdbc_0\".equals(dataSourceName) || \"shadow_jdbc_1\".equals(dataSourceName)) {\n    RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_shadow_init.sql\"))));\n  }\n else {\n    RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_init.sql\"))));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 807,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Connection conn=ACTUAL_DATA_SOURCES.get(dataSourceName).getConnection()){\n  if (\"encrypt\".equals(dataSourceName)) {\n    RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n  }\n else   if (\"shadow_jdbc_0\".equals(dataSourceName) || \"shadow_jdbc_1\".equals(dataSourceName)) {\n    RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_shadow_init.sql\"))));\n  }\n else {\n    RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_init.sql\"))));\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 51,
        "startColumnNumber" : 90,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (Connection conn=ACTUAL_DATA_SOURCES.get(dataSourceName).getConnection()){\n    if (\"encrypt\".equals(dataSourceName)) {\n      RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n    }\n else     if (\"shadow_jdbc_0\".equals(dataSourceName) || \"shadow_jdbc_1\".equals(dataSourceName)) {\n      RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_shadow_init.sql\"))));\n    }\n else {\n      RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_init.sql\"))));\n    }\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void initializeSchema(final String dataSourceName) throws SQLException {\n  try (Connection conn=ACTUAL_DATA_SOURCES.get(dataSourceName).getConnection()){\n    if (\"encrypt\".equals(dataSourceName)) {\n      RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n    }\n else     if (\"shadow_jdbc_0\".equals(dataSourceName) || \"shadow_jdbc_1\".equals(dataSourceName)) {\n      RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_shadow_init.sql\"))));\n    }\n else {\n      RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_init.sql\"))));\n    }\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 176
      },
      "nodeContext" : "RunScript.execute(conn,new InputStreamReader(Objects.requireNonNull(AbstractSQLTest.class.getClassLoader().getResourceAsStream(\"sql/jdbc_encrypt_init.sql\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    },
    "tokenLength" : 10,
    "type" : "java.io.InputStreamReader"
  } ],
  "positionList" : [ {
    "charLength" : 134,
    "startLineNumber" : 54,
    "startColumnNumber" : 40,
    "endLineNumber" : 54,
    "endColumnNumber" : 174
  } ],
  "layoutRelationDataList" : [ ]
}