{
  "id" : 421,
  "expression" : "new Connection(URL.valueOf(\"empty://127.0.0.1:8080?foo=bar\"))",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/api/ConnectionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Connection(URL.valueOf(\"empty://127.0.0.1:8080?foo=bar\"))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 30,
      "startColumnNumber" : 32,
      "endLineNumber" : 30,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 30,
        "startColumnNumber" : 19,
        "endLineNumber" : 30,
        "endColumnNumber" : 93
      },
      "nodeContext" : "connection=new Connection(URL.valueOf(\"empty://127.0.0.1:8080?foo=bar\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Connection connection=new Connection(URL.valueOf(\"empty://127.0.0.1:8080?foo=bar\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 29,
        "startColumnNumber" : 58,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Connection connection=new Connection(URL.valueOf(\"empty://127.0.0.1:8080?foo=bar\"));\n  CountDownLatch latch=new CountDownLatch(1);\n  connection.getCloseFuture().addListener(future -> latch.countDown());\n  connection.release();\n  latch.await();\n  Assertions.assertEquals(0,latch.getCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRefCnt0() throws InterruptedException {\n  Connection connection=new Connection(URL.valueOf(\"empty://127.0.0.1:8080?foo=bar\"));\n  CountDownLatch latch=new CountDownLatch(1);\n  connection.getCloseFuture().addListener(future -> latch.countDown());\n  connection.release();\n  latch.await();\n  Assertions.assertEquals(0,latch.getCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Connection connection=new Connection(URL.valueOf(\"empty://127.0.0.1:8080?foo=bar\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 10,
    "type" : "org.apache.dubbo.remoting.api.Connection"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 30,
    "startColumnNumber" : 32,
    "endLineNumber" : 30,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}