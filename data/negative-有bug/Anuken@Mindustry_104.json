{
  "id" : 104,
  "expression" : "state.wavetime <= 0",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/core/Logic.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "state.wavetime <= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 403,
      "startColumnNumber" : 36,
      "endLineNumber" : 403,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 403,
        "startColumnNumber" : 19,
        "endLineNumber" : 403,
        "endColumnNumber" : 55
      },
      "nodeContext" : "!net.client() && state.wavetime <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 403,
        "startColumnNumber" : 19,
        "endLineNumber" : 403,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!net.client() && state.wavetime <= 0 && state.rules.waves",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 403,
        "startColumnNumber" : 16,
        "endLineNumber" : 405,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!net.client() && state.wavetime <= 0 && state.rules.waves) {\n  runWave();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 374,
        "startColumnNumber" : 33,
        "endLineNumber" : 412,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  state.teams.updateTeamStats();\n  if (state.isCampaign()) {\n    state.rules.sector.info.update();\n  }\n  if (state.isCampaign()) {\n    universe.update();\n  }\n  Time.update();\n  if (!net.client() && !state.isEditor()) {\n    updateWeather();\n    for (    TeamData data : state.teams.getActive()) {\n      if (data.hasAI()) {\n        data.ai.update();\n      }\n    }\n  }\n  if (state.rules.waves && state.rules.waveTimer && !state.gameOver) {\n    if (!isWaitingWave()) {\n      state.wavetime=Math.max(state.wavetime - Time.delta,0);\n    }\n  }\n  if (!net.client() && state.wavetime <= 0 && state.rules.waves) {\n    runWave();\n  }\n  state.envAttrs.clear();\n  Groups.weather.each(w -> state.envAttrs.add(w.weather.attrs,w.opacity));\n  Groups.update();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1266,
        "startLineNumber" : 374,
        "startColumnNumber" : 12,
        "endLineNumber" : 412,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!state.isPaused()) {\n  state.teams.updateTeamStats();\n  if (state.isCampaign()) {\n    state.rules.sector.info.update();\n  }\n  if (state.isCampaign()) {\n    universe.update();\n  }\n  Time.update();\n  if (!net.client() && !state.isEditor()) {\n    updateWeather();\n    for (    TeamData data : state.teams.getActive()) {\n      if (data.hasAI()) {\n        data.ai.update();\n      }\n    }\n  }\n  if (state.rules.waves && state.rules.waveTimer && !state.gameOver) {\n    if (!isWaitingWave()) {\n      state.wavetime=Math.max(state.wavetime - Time.delta,0);\n    }\n  }\n  if (!net.client() && state.wavetime <= 0 && state.rules.waves) {\n    runWave();\n  }\n  state.envAttrs.clear();\n  Groups.weather.each(w -> state.envAttrs.add(w.weather.attrs,w.opacity));\n  Groups.update();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1599,
        "startLineNumber" : 369,
        "startColumnNumber" : 26,
        "endLineNumber" : 417,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!net.client()) {\n    state.enemies=Groups.unit.count(u -> u.team() == state.rules.waveTeam && u.type.isCounted);\n  }\n  if (!state.isPaused()) {\n    state.teams.updateTeamStats();\n    if (state.isCampaign()) {\n      state.rules.sector.info.update();\n    }\n    if (state.isCampaign()) {\n      universe.update();\n    }\n    Time.update();\n    if (!net.client() && !state.isEditor()) {\n      updateWeather();\n      for (      TeamData data : state.teams.getActive()) {\n        if (data.hasAI()) {\n          data.ai.update();\n        }\n      }\n    }\n    if (state.rules.waves && state.rules.waveTimer && !state.gameOver) {\n      if (!isWaitingWave()) {\n        state.wavetime=Math.max(state.wavetime - Time.delta,0);\n      }\n    }\n    if (!net.client() && state.wavetime <= 0 && state.rules.waves) {\n      runWave();\n    }\n    state.envAttrs.clear();\n    Groups.weather.each(w -> state.envAttrs.add(w.weather.attrs,w.opacity));\n    Groups.update();\n  }\n  if (!net.client() && !world.isInvalidMap() && !state.isEditor()&& state.rules.canGameOver) {\n    checkGameState();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1617,
        "startLineNumber" : 369,
        "startColumnNumber" : 8,
        "endLineNumber" : 417,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (state.isGame()) {\n  if (!net.client()) {\n    state.enemies=Groups.unit.count(u -> u.team() == state.rules.waveTeam && u.type.isCounted);\n  }\n  if (!state.isPaused()) {\n    state.teams.updateTeamStats();\n    if (state.isCampaign()) {\n      state.rules.sector.info.update();\n    }\n    if (state.isCampaign()) {\n      universe.update();\n    }\n    Time.update();\n    if (!net.client() && !state.isEditor()) {\n      updateWeather();\n      for (      TeamData data : state.teams.getActive()) {\n        if (data.hasAI()) {\n          data.ai.update();\n        }\n      }\n    }\n    if (state.rules.waves && state.rules.waveTimer && !state.gameOver) {\n      if (!isWaitingWave()) {\n        state.wavetime=Math.max(state.wavetime - Time.delta,0);\n      }\n    }\n    if (!net.client() && state.wavetime <= 0 && state.rules.waves) {\n      runWave();\n    }\n    state.envAttrs.clear();\n    Groups.weather.each(w -> state.envAttrs.add(w.weather.attrs,w.opacity));\n    Groups.update();\n  }\n  if (!net.client() && !world.isInvalidMap() && !state.isEditor()&& state.rules.canGameOver) {\n    checkGameState();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 229,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1814,
        "startLineNumber" : 361,
        "startColumnNumber" : 24,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Events.fire(Trigger.update);\n  universe.updateGlobal();\n  if (Core.settings.modified() && !state.isPlaying()) {\n    Core.settings.forceSave();\n  }\n  if (state.isGame()) {\n    if (!net.client()) {\n      state.enemies=Groups.unit.count(u -> u.team() == state.rules.waveTeam && u.type.isCounted);\n    }\n    if (!state.isPaused()) {\n      state.teams.updateTeamStats();\n      if (state.isCampaign()) {\n        state.rules.sector.info.update();\n      }\n      if (state.isCampaign()) {\n        universe.update();\n      }\n      Time.update();\n      if (!net.client() && !state.isEditor()) {\n        updateWeather();\n        for (        TeamData data : state.teams.getActive()) {\n          if (data.hasAI()) {\n            data.ai.update();\n          }\n        }\n      }\n      if (state.rules.waves && state.rules.waveTimer && !state.gameOver) {\n        if (!isWaitingWave()) {\n          state.wavetime=Math.max(state.wavetime - Time.delta,0);\n        }\n      }\n      if (!net.client() && state.wavetime <= 0 && state.rules.waves) {\n        runWave();\n      }\n      state.envAttrs.clear();\n      Groups.weather.each(w -> state.envAttrs.add(w.weather.attrs,w.opacity));\n      Groups.update();\n    }\n    if (!net.client() && !world.isInvalidMap() && !state.isEditor()&& state.rules.canGameOver) {\n      checkGameState();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 259,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1848,
        "startLineNumber" : 360,
        "startColumnNumber" : 4,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void update(){\n  Events.fire(Trigger.update);\n  universe.updateGlobal();\n  if (Core.settings.modified() && !state.isPlaying()) {\n    Core.settings.forceSave();\n  }\n  if (state.isGame()) {\n    if (!net.client()) {\n      state.enemies=Groups.unit.count(u -> u.team() == state.rules.waveTeam && u.type.isCounted);\n    }\n    if (!state.isPaused()) {\n      state.teams.updateTeamStats();\n      if (state.isCampaign()) {\n        state.rules.sector.info.update();\n      }\n      if (state.isCampaign()) {\n        universe.update();\n      }\n      Time.update();\n      if (!net.client() && !state.isEditor()) {\n        updateWeather();\n        for (        TeamData data : state.teams.getActive()) {\n          if (data.hasAI()) {\n            data.ai.update();\n          }\n        }\n      }\n      if (state.rules.waves && state.rules.waveTimer && !state.gameOver) {\n        if (!isWaitingWave()) {\n          state.wavetime=Math.max(state.wavetime - Time.delta,0);\n        }\n      }\n      if (!net.client() && state.wavetime <= 0 && state.rules.waves) {\n        runWave();\n      }\n      state.envAttrs.clear();\n      Groups.weather.each(w -> state.envAttrs.add(w.weather.attrs,w.opacity));\n      Groups.update();\n    }\n    if (!net.client() && !world.isInvalidMap() && !state.isEditor()&& state.rules.canGameOver) {\n      checkGameState();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 265,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 403,
        "startColumnNumber" : 19,
        "endLineNumber" : 403,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!net.client() && state.wavetime <= 0 && state.rules.waves",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 403,
    "startColumnNumber" : 36,
    "endLineNumber" : 403,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}