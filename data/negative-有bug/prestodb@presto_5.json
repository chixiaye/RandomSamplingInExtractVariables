{
  "id" : 5,
  "expression" : "TimeUnit.DAYS",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-pinot-toolkit/src/test/java/com/facebook/presto/pinot/TestPinotColumnMetadata.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TimeUnit.DAYS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 67,
      "startColumnNumber" : 73,
      "endLineNumber" : 67,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 67,
        "startColumnNumber" : 25,
        "endLineNumber" : 67,
        "endColumnNumber" : 105
      },
      "nodeContext" : "new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1885,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 67,
        "endColumnNumber" : 188
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 183,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1984,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 68,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 193,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2098,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 69,
        "endColumnNumber" : 113
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 203,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 70,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2311,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 71,
        "endColumnNumber" : 109
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 223,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 2336,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 72,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 225,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 2354,
        "startLineNumber" : 47,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 24
      },
      "nodeContext" : "testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 227,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2362,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Schema testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 230,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6849,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PinotConfig pinotConfig=new PinotConfig();\n  pinotConfig.setInferDateTypeInSchema(true);\n  pinotConfig.setInferTimestampTypeInSchema(true);\n  Schema testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build();\n  Map<String,Type> expectedTypeMap=new ImmutableMap.Builder<String,Type>().put(\"singleValueIntDimension\",INTEGER).put(\"singleValueLongDimension\",BIGINT).put(\"singleValueFloatDimension\",DOUBLE).put(\"singleValueDoubleDimension\",DOUBLE).put(\"singleValueBytesDimension\",VARBINARY).put(\"singleValueBooleanDimension\",BOOLEAN).put(\"singleValueStringDimension\",VARCHAR).put(\"multiValueIntDimension\",new ArrayType(INTEGER)).put(\"multiValueLongDimension\",new ArrayType(BIGINT)).put(\"multiValueFloatDimension\",new ArrayType(DOUBLE)).put(\"multiValueDoubleDimension\",new ArrayType(DOUBLE)).put(\"multiValueBytesDimension\",new ArrayType(VARBINARY)).put(\"multiValueBooleanDimension\",new ArrayType(BOOLEAN)).put(\"multiValueStringDimension\",new ArrayType(VARCHAR)).put(\"intMetric\",INTEGER).put(\"longMetric\",BIGINT).put(\"floatMetric\",DOUBLE).put(\"doubleMetric\",DOUBLE).put(\"bytesMetric\",VARBINARY).put(\"daysSinceEpoch\",DateType.DATE).put(\"epochDayDateTime\",DateType.DATE).put(\"epochMillisDateTime\",TimestampType.TIMESTAMP).put(\"epochTenDayDateTime\",INTEGER).put(\"epochSecondsDateTime\",BIGINT).build();\n  Map<String,String> expectedComment=new ImmutableMap.Builder<String,String>().put(\"sd1\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"intMetric\",FieldSpec.FieldType.METRIC.name()).put(\"longMetric\",FieldSpec.FieldType.METRIC.name()).put(\"floatMetric\",FieldSpec.FieldType.METRIC.name()).put(\"doubleMetric\",FieldSpec.FieldType.METRIC.name()).put(\"bytesMetric\",FieldSpec.FieldType.METRIC.name()).put(\"daysSinceEpoch\",FieldSpec.FieldType.TIME.name()).put(\"epochDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochMillisDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochTenDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochSecondsDateTime\",FieldSpec.FieldType.DATE_TIME.name()).build();\n  List<PinotColumn> pinotColumns=PinotColumnUtils.getPinotColumnsForPinotSchema(testPinotSchema,pinotConfig.isInferDateTypeInSchema(),pinotConfig.isInferTimestampTypeInSchema());\n  for (  PinotColumn column : pinotColumns) {\n    assertEquals(column.getType(),expectedTypeMap.get(column.getName()),\"Failed to compare column type for field - \" + column.getName());\n    assertEquals(column.getComment(),expectedComment.get(column.getName()),\"Failed to compare column comment for field - \" + column.getName());\n    assertEquals(column.isNullable(),false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 732,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6912,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testParsePinotSchemaToPinotColumns(){\n  PinotConfig pinotConfig=new PinotConfig();\n  pinotConfig.setInferDateTypeInSchema(true);\n  pinotConfig.setInferTimestampTypeInSchema(true);\n  Schema testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build();\n  Map<String,Type> expectedTypeMap=new ImmutableMap.Builder<String,Type>().put(\"singleValueIntDimension\",INTEGER).put(\"singleValueLongDimension\",BIGINT).put(\"singleValueFloatDimension\",DOUBLE).put(\"singleValueDoubleDimension\",DOUBLE).put(\"singleValueBytesDimension\",VARBINARY).put(\"singleValueBooleanDimension\",BOOLEAN).put(\"singleValueStringDimension\",VARCHAR).put(\"multiValueIntDimension\",new ArrayType(INTEGER)).put(\"multiValueLongDimension\",new ArrayType(BIGINT)).put(\"multiValueFloatDimension\",new ArrayType(DOUBLE)).put(\"multiValueDoubleDimension\",new ArrayType(DOUBLE)).put(\"multiValueBytesDimension\",new ArrayType(VARBINARY)).put(\"multiValueBooleanDimension\",new ArrayType(BOOLEAN)).put(\"multiValueStringDimension\",new ArrayType(VARCHAR)).put(\"intMetric\",INTEGER).put(\"longMetric\",BIGINT).put(\"floatMetric\",DOUBLE).put(\"doubleMetric\",DOUBLE).put(\"bytesMetric\",VARBINARY).put(\"daysSinceEpoch\",DateType.DATE).put(\"epochDayDateTime\",DateType.DATE).put(\"epochMillisDateTime\",TimestampType.TIMESTAMP).put(\"epochTenDayDateTime\",INTEGER).put(\"epochSecondsDateTime\",BIGINT).build();\n  Map<String,String> expectedComment=new ImmutableMap.Builder<String,String>().put(\"sd1\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"intMetric\",FieldSpec.FieldType.METRIC.name()).put(\"longMetric\",FieldSpec.FieldType.METRIC.name()).put(\"floatMetric\",FieldSpec.FieldType.METRIC.name()).put(\"doubleMetric\",FieldSpec.FieldType.METRIC.name()).put(\"bytesMetric\",FieldSpec.FieldType.METRIC.name()).put(\"daysSinceEpoch\",FieldSpec.FieldType.TIME.name()).put(\"epochDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochMillisDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochTenDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochSecondsDateTime\",FieldSpec.FieldType.DATE_TIME.name()).build();\n  List<PinotColumn> pinotColumns=PinotColumnUtils.getPinotColumnsForPinotSchema(testPinotSchema,pinotConfig.isInferDateTypeInSchema(),pinotConfig.isInferTimestampTypeInSchema());\n  for (  PinotColumn column : pinotColumns) {\n    assertEquals(column.getType(),expectedTypeMap.get(column.getName()),\"Failed to compare column type for field - \" + column.getName());\n    assertEquals(column.getComment(),expectedComment.get(column.getName()),\"Failed to compare column comment for field - \" + column.getName());\n    assertEquals(column.isNullable(),false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 738,
      "astHeight" : 35
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 67,
        "startColumnNumber" : 25,
        "endLineNumber" : 67,
        "endColumnNumber" : 105
      },
      "nodeContext" : "new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit.DAYS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 67,
      "startColumnNumber" : 155,
      "endLineNumber" : 67,
      "endColumnNumber" : 168
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 67,
        "startColumnNumber" : 107,
        "endLineNumber" : 67,
        "endColumnNumber" : 187
      },
      "nodeContext" : "new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1885,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 67,
        "endColumnNumber" : 188
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 183,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1984,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 68,
        "endColumnNumber" : 98
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 193,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2098,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 69,
        "endColumnNumber" : 113
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 203,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2201,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 70,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 213,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2311,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 71,
        "endColumnNumber" : 109
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 223,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 2336,
        "startLineNumber" : 47,
        "startColumnNumber" : 33,
        "endLineNumber" : 72,
        "endColumnNumber" : 24
      },
      "nodeContext" : "new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 225,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 2354,
        "startLineNumber" : 47,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 24
      },
      "nodeContext" : "testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 227,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2362,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Schema testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 230,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6849,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PinotConfig pinotConfig=new PinotConfig();\n  pinotConfig.setInferDateTypeInSchema(true);\n  pinotConfig.setInferTimestampTypeInSchema(true);\n  Schema testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build();\n  Map<String,Type> expectedTypeMap=new ImmutableMap.Builder<String,Type>().put(\"singleValueIntDimension\",INTEGER).put(\"singleValueLongDimension\",BIGINT).put(\"singleValueFloatDimension\",DOUBLE).put(\"singleValueDoubleDimension\",DOUBLE).put(\"singleValueBytesDimension\",VARBINARY).put(\"singleValueBooleanDimension\",BOOLEAN).put(\"singleValueStringDimension\",VARCHAR).put(\"multiValueIntDimension\",new ArrayType(INTEGER)).put(\"multiValueLongDimension\",new ArrayType(BIGINT)).put(\"multiValueFloatDimension\",new ArrayType(DOUBLE)).put(\"multiValueDoubleDimension\",new ArrayType(DOUBLE)).put(\"multiValueBytesDimension\",new ArrayType(VARBINARY)).put(\"multiValueBooleanDimension\",new ArrayType(BOOLEAN)).put(\"multiValueStringDimension\",new ArrayType(VARCHAR)).put(\"intMetric\",INTEGER).put(\"longMetric\",BIGINT).put(\"floatMetric\",DOUBLE).put(\"doubleMetric\",DOUBLE).put(\"bytesMetric\",VARBINARY).put(\"daysSinceEpoch\",DateType.DATE).put(\"epochDayDateTime\",DateType.DATE).put(\"epochMillisDateTime\",TimestampType.TIMESTAMP).put(\"epochTenDayDateTime\",INTEGER).put(\"epochSecondsDateTime\",BIGINT).build();\n  Map<String,String> expectedComment=new ImmutableMap.Builder<String,String>().put(\"sd1\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"intMetric\",FieldSpec.FieldType.METRIC.name()).put(\"longMetric\",FieldSpec.FieldType.METRIC.name()).put(\"floatMetric\",FieldSpec.FieldType.METRIC.name()).put(\"doubleMetric\",FieldSpec.FieldType.METRIC.name()).put(\"bytesMetric\",FieldSpec.FieldType.METRIC.name()).put(\"daysSinceEpoch\",FieldSpec.FieldType.TIME.name()).put(\"epochDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochMillisDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochTenDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochSecondsDateTime\",FieldSpec.FieldType.DATE_TIME.name()).build();\n  List<PinotColumn> pinotColumns=PinotColumnUtils.getPinotColumnsForPinotSchema(testPinotSchema,pinotConfig.isInferDateTypeInSchema(),pinotConfig.isInferTimestampTypeInSchema());\n  for (  PinotColumn column : pinotColumns) {\n    assertEquals(column.getType(),expectedTypeMap.get(column.getName()),\"Failed to compare column type for field - \" + column.getName());\n    assertEquals(column.getComment(),expectedComment.get(column.getName()),\"Failed to compare column comment for field - \" + column.getName());\n    assertEquals(column.isNullable(),false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 732,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6912,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testParsePinotSchemaToPinotColumns(){\n  PinotConfig pinotConfig=new PinotConfig();\n  pinotConfig.setInferDateTypeInSchema(true);\n  pinotConfig.setInferTimestampTypeInSchema(true);\n  Schema testPinotSchema=new Schema.SchemaBuilder().addSingleValueDimension(\"singleValueIntDimension\",FieldSpec.DataType.INT).addSingleValueDimension(\"singleValueLongDimension\",FieldSpec.DataType.LONG).addSingleValueDimension(\"singleValueFloatDimension\",FieldSpec.DataType.FLOAT).addSingleValueDimension(\"singleValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addSingleValueDimension(\"singleValueBytesDimension\",FieldSpec.DataType.BYTES).addSingleValueDimension(\"singleValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addSingleValueDimension(\"singleValueStringDimension\",FieldSpec.DataType.STRING).addMultiValueDimension(\"multiValueIntDimension\",FieldSpec.DataType.INT).addMultiValueDimension(\"multiValueLongDimension\",FieldSpec.DataType.LONG).addMultiValueDimension(\"multiValueFloatDimension\",FieldSpec.DataType.FLOAT).addMultiValueDimension(\"multiValueDoubleDimension\",FieldSpec.DataType.DOUBLE).addMultiValueDimension(\"multiValueBytesDimension\",FieldSpec.DataType.BYTES).addMultiValueDimension(\"multiValueBooleanDimension\",FieldSpec.DataType.BOOLEAN).addMultiValueDimension(\"multiValueStringDimension\",FieldSpec.DataType.STRING).addMetric(\"intMetric\",FieldSpec.DataType.INT).addMetric(\"longMetric\",FieldSpec.DataType.LONG).addMetric(\"floatMetric\",FieldSpec.DataType.FLOAT).addMetric(\"doubleMetric\",FieldSpec.DataType.DOUBLE).addMetric(\"bytesMetric\",FieldSpec.DataType.BYTES).addTime(new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\"),new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")).addDateTime(\"epochDayDateTime\",FieldSpec.DataType.INT,\"1:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochMillisDateTime\",FieldSpec.DataType.LONG,\"1:MILLISECONDS:EPOCH\",\"1:SECONDS\").addDateTime(\"epochTenDayDateTime\",FieldSpec.DataType.INT,\"10:DAYS:EPOCH\",\"1:DAYS\").addDateTime(\"epochSecondsDateTime\",FieldSpec.DataType.LONG,\"1:SECONDS:EPOCH\",\"1:SECONDS\").build();\n  Map<String,Type> expectedTypeMap=new ImmutableMap.Builder<String,Type>().put(\"singleValueIntDimension\",INTEGER).put(\"singleValueLongDimension\",BIGINT).put(\"singleValueFloatDimension\",DOUBLE).put(\"singleValueDoubleDimension\",DOUBLE).put(\"singleValueBytesDimension\",VARBINARY).put(\"singleValueBooleanDimension\",BOOLEAN).put(\"singleValueStringDimension\",VARCHAR).put(\"multiValueIntDimension\",new ArrayType(INTEGER)).put(\"multiValueLongDimension\",new ArrayType(BIGINT)).put(\"multiValueFloatDimension\",new ArrayType(DOUBLE)).put(\"multiValueDoubleDimension\",new ArrayType(DOUBLE)).put(\"multiValueBytesDimension\",new ArrayType(VARBINARY)).put(\"multiValueBooleanDimension\",new ArrayType(BOOLEAN)).put(\"multiValueStringDimension\",new ArrayType(VARCHAR)).put(\"intMetric\",INTEGER).put(\"longMetric\",BIGINT).put(\"floatMetric\",DOUBLE).put(\"doubleMetric\",DOUBLE).put(\"bytesMetric\",VARBINARY).put(\"daysSinceEpoch\",DateType.DATE).put(\"epochDayDateTime\",DateType.DATE).put(\"epochMillisDateTime\",TimestampType.TIMESTAMP).put(\"epochTenDayDateTime\",INTEGER).put(\"epochSecondsDateTime\",BIGINT).build();\n  Map<String,String> expectedComment=new ImmutableMap.Builder<String,String>().put(\"sd1\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"singleValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueIntDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueLongDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueFloatDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueDoubleDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBytesDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueBooleanDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"multiValueStringDimension\",FieldSpec.FieldType.DIMENSION.name()).put(\"intMetric\",FieldSpec.FieldType.METRIC.name()).put(\"longMetric\",FieldSpec.FieldType.METRIC.name()).put(\"floatMetric\",FieldSpec.FieldType.METRIC.name()).put(\"doubleMetric\",FieldSpec.FieldType.METRIC.name()).put(\"bytesMetric\",FieldSpec.FieldType.METRIC.name()).put(\"daysSinceEpoch\",FieldSpec.FieldType.TIME.name()).put(\"epochDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochMillisDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochTenDayDateTime\",FieldSpec.FieldType.DATE_TIME.name()).put(\"epochSecondsDateTime\",FieldSpec.FieldType.DATE_TIME.name()).build();\n  List<PinotColumn> pinotColumns=PinotColumnUtils.getPinotColumnsForPinotSchema(testPinotSchema,pinotConfig.isInferDateTypeInSchema(),pinotConfig.isInferTimestampTypeInSchema());\n  for (  PinotColumn column : pinotColumns) {\n    assertEquals(column.getType(),expectedTypeMap.get(column.getName()),\"Failed to compare column type for field - \" + column.getName());\n    assertEquals(column.getComment(),expectedComment.get(column.getName()),\"Failed to compare column comment for field - \" + column.getName());\n    assertEquals(column.isNullable(),false);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 738,
      "astHeight" : 35
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 67,
        "startColumnNumber" : 107,
        "endLineNumber" : 67,
        "endColumnNumber" : 187
      },
      "nodeContext" : "new TimeGranularitySpec(FieldSpec.DataType.INT,TimeUnit.DAYS,\"daysSinceEpoch\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 67,
    "startColumnNumber" : 73,
    "endLineNumber" : 67,
    "endColumnNumber" : 86
  }, {
    "charLength" : 13,
    "startLineNumber" : 67,
    "startColumnNumber" : 155,
    "endLineNumber" : 67,
    "endColumnNumber" : 168
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}