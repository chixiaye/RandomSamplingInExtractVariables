{
  "id" : 483,
  "expression" : "pairComparatorFactory",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/operators/AbstractCachedBuildSideJoinDriver.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pairComparatorFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 112,
      "startColumnNumber" : 32,
      "endLineNumber" : 112,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 112,
        "startColumnNumber" : 32,
        "endLineNumber" : 112,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator21(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 105,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 40,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 845,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 51
      },
      "nodeContext" : "matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 52
      },
      "nodeContext" : "matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 102,
        "startColumnNumber" : 60,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 142,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (buildSideIndex == 0 && probeSideIndex == 1) {\n  matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else if (buildSideIndex == 1 && probeSideIndex == 0) {\n  matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else {\n  throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 101,
        "startColumnNumber" : 32,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4050,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (objectReuseEnabled) {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n else {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5725,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 417,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5781,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void initialize() throws Exception {\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 112,
        "startColumnNumber" : 32,
        "endLineNumber" : 112,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator21(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.common.typeutils.TypePairComparatorFactory<IT1,IT2>"
  }, {
    "nodeContext" : "pairComparatorFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 131,
      "startColumnNumber" : 32,
      "endLineNumber" : 131,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 131,
        "startColumnNumber" : 32,
        "endLineNumber" : 131,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator12(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 124,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 40,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 51
      },
      "nodeContext" : "matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 52
      },
      "nodeContext" : "matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 121,
        "startColumnNumber" : 67,
        "endLineNumber" : 140,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1049,
        "startLineNumber" : 121,
        "startColumnNumber" : 19,
        "endLineNumber" : 142,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (buildSideIndex == 1 && probeSideIndex == 0) {\n  matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else {\n  throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 142,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (buildSideIndex == 0 && probeSideIndex == 1) {\n  matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else if (buildSideIndex == 1 && probeSideIndex == 0) {\n  matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else {\n  throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2007,
        "startLineNumber" : 101,
        "startColumnNumber" : 32,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4050,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (objectReuseEnabled) {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n else {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5725,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 417,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5781,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void initialize() throws Exception {\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 131,
        "startColumnNumber" : 32,
        "endLineNumber" : 131,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator12(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.common.typeutils.TypePairComparatorFactory<IT1,IT2>"
  }, {
    "nodeContext" : "pairComparatorFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 154,
      "startColumnNumber" : 32,
      "endLineNumber" : 154,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 154,
        "startColumnNumber" : 32,
        "endLineNumber" : 154,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator21(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 161,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 40,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 848,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 161,
        "endColumnNumber" : 51
      },
      "nodeContext" : "matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 161,
        "endColumnNumber" : 52
      },
      "nodeContext" : "matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 144,
        "startColumnNumber" : 60,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1989,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (buildSideIndex == 0 && probeSideIndex == 1) {\n  matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else if (buildSideIndex == 1 && probeSideIndex == 0) {\n  matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else {\n  throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 143,
        "startColumnNumber" : 15,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4050,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (objectReuseEnabled) {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n else {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5725,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 417,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5781,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void initialize() throws Exception {\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 154,
        "startColumnNumber" : 32,
        "endLineNumber" : 154,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator21(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.common.typeutils.TypePairComparatorFactory<IT1,IT2>"
  }, {
    "nodeContext" : "pairComparatorFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 173,
      "startColumnNumber" : 32,
      "endLineNumber" : 173,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 173,
        "startColumnNumber" : 32,
        "endLineNumber" : 173,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator12(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 166,
        "startColumnNumber" : 24,
        "endLineNumber" : 180,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 40,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 165,
        "startColumnNumber" : 16,
        "endLineNumber" : 180,
        "endColumnNumber" : 51
      },
      "nodeContext" : "matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 165,
        "startColumnNumber" : 16,
        "endLineNumber" : 180,
        "endColumnNumber" : 52
      },
      "nodeContext" : "matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 884,
        "startLineNumber" : 163,
        "startColumnNumber" : 67,
        "endLineNumber" : 182,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 163,
        "startColumnNumber" : 19,
        "endLineNumber" : 184,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (buildSideIndex == 1 && probeSideIndex == 0) {\n  matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else {\n  throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1989,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (buildSideIndex == 0 && probeSideIndex == 1) {\n  matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else if (buildSideIndex == 1 && probeSideIndex == 0) {\n  matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n}\n else {\n  throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 143,
        "startColumnNumber" : 15,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4050,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (objectReuseEnabled) {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n else {\n  if (buildSideIndex == 0 && probeSideIndex == 1) {\n    matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else   if (buildSideIndex == 1 && probeSideIndex == 0) {\n    matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n  }\n else {\n    throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 224,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5725,
        "startLineNumber" : 67,
        "startColumnNumber" : 46,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 417,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5781,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void initialize() throws Exception {\n  TaskConfig config=this.taskContext.getTaskConfig();\n  final Counter numRecordsIn=taskContext.getMetricGroup().getIOMetricGroup().getNumRecordsInCounter();\n  TypeSerializer<IT1> serializer1=this.taskContext.<IT1>getInputSerializer(0).getSerializer();\n  TypeSerializer<IT2> serializer2=this.taskContext.<IT2>getInputSerializer(1).getSerializer();\n  TypeComparator<IT1> comparator1=this.taskContext.getDriverComparator(0);\n  TypeComparator<IT2> comparator2=this.taskContext.getDriverComparator(1);\n  MutableObjectIterator<IT1> input1=new CountingMutableObjectIterator<>(this.taskContext.<IT1>getInput(0),numRecordsIn);\n  MutableObjectIterator<IT2> input2=new CountingMutableObjectIterator<>(this.taskContext.<IT2>getInput(1),numRecordsIn);\n  TypePairComparatorFactory<IT1,IT2> pairComparatorFactory=this.taskContext.getTaskConfig().getPairComparatorFactory(this.taskContext.getUserCodeClassLoader());\n  double availableMemory=config.getRelativeMemoryDriver();\n  boolean hashJoinUseBitMaps=taskContext.getTaskManagerInfo().getConfiguration().getBoolean(AlgorithmOptions.HASH_JOIN_BLOOM_FILTERS);\n  ExecutionConfig executionConfig=taskContext.getExecutionConfig();\n  objectReuseEnabled=executionConfig.isObjectReuseEnabled();\n  if (objectReuseEnabled) {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new ReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new ReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n else {\n    if (buildSideIndex == 0 && probeSideIndex == 1) {\n      matchIterator=new NonReusingBuildFirstReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator21(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else     if (buildSideIndex == 1 && probeSideIndex == 0) {\n      matchIterator=new NonReusingBuildSecondReOpenableHashJoinIterator<IT1,IT2,OT>(input1,input2,serializer1,comparator1,serializer2,comparator2,pairComparatorFactory.createComparator12(comparator1,comparator2),this.taskContext.getMemoryManager(),this.taskContext.getIOManager(),this.taskContext.getContainingTask(),availableMemory,false,false,hashJoinUseBitMaps);\n    }\n else {\n      throw new Exception(\"Error: Inconsistent setup for repeatable hash join driver.\");\n    }\n  }\n  this.matchIterator.open();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 425,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 173,
        "startColumnNumber" : 32,
        "endLineNumber" : 173,
        "endColumnNumber" : 98
      },
      "nodeContext" : "pairComparatorFactory.createComparator12(comparator1,comparator2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.common.typeutils.TypePairComparatorFactory<IT1,IT2>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 112,
    "startColumnNumber" : 32,
    "endLineNumber" : 112,
    "endColumnNumber" : 53
  }, {
    "charLength" : 21,
    "startLineNumber" : 131,
    "startColumnNumber" : 32,
    "endLineNumber" : 131,
    "endColumnNumber" : 53
  }, {
    "charLength" : 21,
    "startLineNumber" : 154,
    "startColumnNumber" : 32,
    "endLineNumber" : 154,
    "endColumnNumber" : 53
  }, {
    "charLength" : 21,
    "startLineNumber" : 173,
    "startColumnNumber" : 32,
    "endLineNumber" : 173,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  } ]
}