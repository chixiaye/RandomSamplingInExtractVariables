{
  "id" : 70,
  "expression" : "result",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-spring/shardingsphere-readwrite-splitting-spring-boot-starter/src/main/java/org/apache/shardingsphere/readwritesplitting/spring/boot/ReadwriteSplittingRuleSpringbootConfiguration.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 65,
      "startColumnNumber" : 8,
      "endLineNumber" : 65,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "result.setLoadBalanceAlgorithms(balanceAlgorithmMap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 61
      },
      "nodeContext" : "result.setLoadBalanceAlgorithms(balanceAlgorithmMap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 62,
        "startColumnNumber" : 151,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AlgorithmProvidedReadwriteSplittingRuleConfiguration result=swapper.swapToObject(yamlConfig.getReadwriteSplitting());\n  Map<String,ReplicaLoadBalanceAlgorithm> balanceAlgorithmMap=Optional.ofNullable(loadBalanceAlgorithms.getIfAvailable()).orElse(Collections.emptyMap());\n  result.setLoadBalanceAlgorithms(balanceAlgorithmMap);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Readwrite-splitting rule configuration for spring boot.\n * @param loadBalanceAlgorithms load balance algorithms\n * @return readwrite-splitting rule configuration\n */\n@Bean public RuleConfiguration readWriteSplittingRuleConfiguration(final ObjectProvider<Map<String,ReplicaLoadBalanceAlgorithm>> loadBalanceAlgorithms){\n  AlgorithmProvidedReadwriteSplittingRuleConfiguration result=swapper.swapToObject(yamlConfig.getReadwriteSplitting());\n  Map<String,ReplicaLoadBalanceAlgorithm> balanceAlgorithmMap=Optional.ofNullable(loadBalanceAlgorithms.getIfAvailable()).orElse(Collections.emptyMap());\n  result.setLoadBalanceAlgorithms(balanceAlgorithmMap);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 61
      },
      "nodeContext" : "result.setLoadBalanceAlgorithms(balanceAlgorithmMap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.readwritesplitting.algorithm.config.AlgorithmProvidedReadwriteSplittingRuleConfiguration"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 66,
      "startColumnNumber" : 15,
      "endLineNumber" : 66,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 22
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 62,
        "startColumnNumber" : 151,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AlgorithmProvidedReadwriteSplittingRuleConfiguration result=swapper.swapToObject(yamlConfig.getReadwriteSplitting());\n  Map<String,ReplicaLoadBalanceAlgorithm> balanceAlgorithmMap=Optional.ofNullable(loadBalanceAlgorithms.getIfAvailable()).orElse(Collections.emptyMap());\n  result.setLoadBalanceAlgorithms(balanceAlgorithmMap);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Readwrite-splitting rule configuration for spring boot.\n * @param loadBalanceAlgorithms load balance algorithms\n * @return readwrite-splitting rule configuration\n */\n@Bean public RuleConfiguration readWriteSplittingRuleConfiguration(final ObjectProvider<Map<String,ReplicaLoadBalanceAlgorithm>> loadBalanceAlgorithms){\n  AlgorithmProvidedReadwriteSplittingRuleConfiguration result=swapper.swapToObject(yamlConfig.getReadwriteSplitting());\n  Map<String,ReplicaLoadBalanceAlgorithm> balanceAlgorithmMap=Optional.ofNullable(loadBalanceAlgorithms.getIfAvailable()).orElse(Collections.emptyMap());\n  result.setLoadBalanceAlgorithms(balanceAlgorithmMap);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 22
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.readwritesplitting.algorithm.config.AlgorithmProvidedReadwriteSplittingRuleConfiguration"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 65,
    "startColumnNumber" : 8,
    "endLineNumber" : 65,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 66,
    "startColumnNumber" : 15,
    "endLineNumber" : 66,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}