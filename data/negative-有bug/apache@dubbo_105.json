{
  "id" : 105,
  "expression" : "e.getMessage()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/support/AbstractClusterInvoker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e.getMessage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 191,
      "startColumnNumber" : 36,
      "endLineNumber" : 191,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 191,
        "startColumnNumber" : 36,
        "endLineNumber" : 191,
        "endColumnNumber" : 105
      },
      "nodeContext" : "e.getMessage() + \" may because invokers list dynamic change, ignore.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 191,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 109
      },
      "nodeContext" : "logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 191,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 110
      },
      "nodeContext" : "logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 190,
        "startColumnNumber" : 42,
        "endLineNumber" : 192,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 190,
        "startColumnNumber" : 22,
        "endLineNumber" : 192,
        "endColumnNumber" : 21
      },
      "nodeContext" : "catch (Exception e) {\n  logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 187,
        "startColumnNumber" : 20,
        "endLineNumber" : 192,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  invoker=invokers.get((index + 1) % invokers.size());\n}\n catch (Exception e) {\n  logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 184,
        "startColumnNumber" : 23,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int index=invokers.indexOf(invoker);\n  try {\n    invoker=invokers.get((index + 1) % invokers.size());\n  }\n catch (  Exception e) {\n    logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 182,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (rInvoker != null) {\n  invoker=rInvoker;\n}\n else {\n  int index=invokers.indexOf(invoker);\n  try {\n    invoker=invokers.get((index + 1) % invokers.size());\n  }\n catch (  Exception e) {\n    logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 180,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Invoker<T> rInvoker=reselect(loadbalance,invocation,invokers,selected,availablecheck);\n  if (rInvoker != null) {\n    invoker=rInvoker;\n  }\n else {\n    int index=invokers.indexOf(invoker);\n    try {\n      invoker=invokers.get((index + 1) % invokers.size());\n    }\n catch (    Exception e) {\n      logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 180,
        "startColumnNumber" : 12,
        "endLineNumber" : 196,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Invoker<T> rInvoker=reselect(loadbalance,invocation,invokers,selected,availablecheck);\n  if (rInvoker != null) {\n    invoker=rInvoker;\n  }\n else {\n    int index=invokers.indexOf(invoker);\n    try {\n      invoker=invokers.get((index + 1) % invokers.size());\n    }\n catch (    Exception e) {\n      logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n    }\n  }\n}\n catch (Throwable t) {\n  logger.error(\"cluster reselect fail reason is :\" + t.getMessage() + \" if can not solve, you can set cluster.availablecheck=false in url\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 84,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 179,
        "startColumnNumber" : 83,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Invoker<T> rInvoker=reselect(loadbalance,invocation,invokers,selected,availablecheck);\n    if (rInvoker != null) {\n      invoker=rInvoker;\n    }\n else {\n      int index=invokers.indexOf(invoker);\n      try {\n        invoker=invokers.get((index + 1) % invokers.size());\n      }\n catch (      Exception e) {\n        logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n      }\n    }\n  }\n catch (  Throwable t) {\n    logger.error(\"cluster reselect fail reason is :\" + t.getMessage() + \" if can not solve, you can set cluster.availablecheck=false in url\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1108,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((selected != null && selected.contains(invoker)) || (!invoker.isAvailable() && getUrl() != null && availablecheck)) {\n  try {\n    Invoker<T> rInvoker=reselect(loadbalance,invocation,invokers,selected,availablecheck);\n    if (rInvoker != null) {\n      invoker=rInvoker;\n    }\n else {\n      int index=invokers.indexOf(invoker);\n      try {\n        invoker=invokers.get((index + 1) % invokers.size());\n      }\n catch (      Exception e) {\n        logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n      }\n    }\n  }\n catch (  Throwable t) {\n    logger.error(\"cluster reselect fail reason is :\" + t.getMessage() + \" if can not solve, you can set cluster.availablecheck=false in url\",t);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1510,
        "startLineNumber" : 167,
        "startColumnNumber" : 106,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CollectionUtils.isEmpty(invokers)) {\n    return null;\n  }\n  if (invokers.size() == 1) {\n    return invokers.get(0);\n  }\n  Invoker<T> invoker=loadbalance.select(invokers,getUrl(),invocation);\n  if ((selected != null && selected.contains(invoker)) || (!invoker.isAvailable() && getUrl() != null && availablecheck)) {\n    try {\n      Invoker<T> rInvoker=reselect(loadbalance,invocation,invokers,selected,availablecheck);\n      if (rInvoker != null) {\n        invoker=rInvoker;\n      }\n else {\n        int index=invokers.indexOf(invoker);\n        try {\n          invoker=invokers.get((index + 1) % invokers.size());\n        }\n catch (        Exception e) {\n          logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n        }\n      }\n    }\n catch (    Throwable t) {\n      logger.error(\"cluster reselect fail reason is :\" + t.getMessage() + \" if can not solve, you can set cluster.availablecheck=false in url\",t);\n    }\n  }\n  return invoker;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Invoker<T> doSelect(LoadBalance loadbalance,Invocation invocation,List<Invoker<T>> invokers,List<Invoker<T>> selected) throws RpcException {\n  if (CollectionUtils.isEmpty(invokers)) {\n    return null;\n  }\n  if (invokers.size() == 1) {\n    return invokers.get(0);\n  }\n  Invoker<T> invoker=loadbalance.select(invokers,getUrl(),invocation);\n  if ((selected != null && selected.contains(invoker)) || (!invoker.isAvailable() && getUrl() != null && availablecheck)) {\n    try {\n      Invoker<T> rInvoker=reselect(loadbalance,invocation,invokers,selected,availablecheck);\n      if (rInvoker != null) {\n        invoker=rInvoker;\n      }\n else {\n        int index=invokers.indexOf(invoker);\n        try {\n          invoker=invokers.get((index + 1) % invokers.size());\n        }\n catch (        Exception e) {\n          logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n        }\n      }\n    }\n catch (    Throwable t) {\n      logger.error(\"cluster reselect fail reason is :\" + t.getMessage() + \" if can not solve, you can set cluster.availablecheck=false in url\",t);\n    }\n  }\n  return invoker;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 191,
        "startColumnNumber" : 24,
        "endLineNumber" : 191,
        "endColumnNumber" : 110
      },
      "nodeContext" : "logger.warn(e.getMessage() + \" may because invokers list dynamic change, ignore.\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 191,
    "startColumnNumber" : 36,
    "endLineNumber" : 191,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}