{
  "id" : 75,
  "expression" : "new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    if (element instanceof DBNResource) {\n      Collection<DBPDataSourceContainer> containers=((DBNResource)element).getAssociatedDataSources();\n      if (!CommonUtils.isEmpty(containers)) {\n        StringBuilder text=new StringBuilder();\n        for (        DBPDataSourceContainer container : containers) {\n          if (text.length() > 0) {\n            text.append(\", \");\n          }\n          text.append(container.getName());\n        }\n        return text.toString();\n      }\n    }\n    return \"\";\n  }\n  @Override public Image getImage(  Object element){\n    return null;\n  }\n}\n",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.data.transfer.ui/src/org/jkiss/dbeaver/tasks/ui/sql/script/SQLScriptTaskDataSourceSelectorDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    if (element instanceof DBNResource) {\n      Collection<DBPDataSourceContainer> containers=((DBNResource)element).getAssociatedDataSources();\n      if (!CommonUtils.isEmpty(containers)) {\n        StringBuilder text=new StringBuilder();\n        for (        DBPDataSourceContainer container : containers) {\n          if (text.length() > 0) {\n            text.append(\", \");\n          }\n          text.append(container.getName());\n        }\n        return text.toString();\n      }\n    }\n    return \"\";\n  }\n  @Override public Image getImage(  Object element){\n    return null;\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 958,
      "startLineNumber" : 135,
      "startColumnNumber" : 196,
      "endLineNumber" : 158,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 98,
    "astHeight" : 15,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1147,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 10
      },
      "nodeContext" : "columnController.addColumn(ModelMessages.model_navigator_Connection,DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script_data_source,SWT.LEFT,true,true,new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    if (element instanceof DBNResource) {\n      Collection<DBPDataSourceContainer> containers=((DBNResource)element).getAssociatedDataSources();\n      if (!CommonUtils.isEmpty(containers)) {\n        StringBuilder text=new StringBuilder();\n        for (        DBPDataSourceContainer container : containers) {\n          if (text.length() > 0) {\n            text.append(\", \");\n          }\n          text.append(container.getName());\n        }\n        return text.toString();\n      }\n    }\n    return \"\";\n  }\n  @Override public Image getImage(  Object element){\n    return null;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 112,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 11
      },
      "nodeContext" : "columnController.addColumn(ModelMessages.model_navigator_Connection,DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script_data_source,SWT.LEFT,true,true,new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    if (element instanceof DBNResource) {\n      Collection<DBPDataSourceContainer> containers=((DBNResource)element).getAssociatedDataSources();\n      if (!CommonUtils.isEmpty(containers)) {\n        StringBuilder text=new StringBuilder();\n        for (        DBPDataSourceContainer container : containers) {\n          if (text.length() > 0) {\n            text.append(\", \");\n          }\n          text.append(container.getName());\n        }\n        return text.toString();\n      }\n    }\n    return \"\";\n  }\n  @Override public Image getImage(  Object element){\n    return null;\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 113,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2277,
        "startLineNumber" : 113,
        "startColumnNumber" : 57,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ILabelProvider mainLabelProvider=(ILabelProvider)viewer.getLabelProvider();\n  ViewerColumnController columnController=new ViewerColumnController(\"sqlTaskScriptViewer\",viewer);\n  columnController.setForceAutoSize(true);\n  columnController.addColumn(ModelMessages.model_navigator_Name,DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script,SWT.LEFT,true,true,new ColumnLabelProvider(){\n    @Override public String getText(    Object element){\n      return mainLabelProvider.getText(element);\n    }\n    @Override public Image getImage(    Object element){\n      return mainLabelProvider.getImage(element);\n    }\n    @Override public String getToolTipText(    Object element){\n      if (mainLabelProvider instanceof IToolTipProvider) {\n        return ((IToolTipProvider)mainLabelProvider).getToolTipText(element);\n      }\n      return null;\n    }\n  }\n);\n  columnController.addColumn(ModelMessages.model_navigator_Connection,DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script_data_source,SWT.LEFT,true,true,new ColumnLabelProvider(){\n    @Override public String getText(    Object element){\n      if (element instanceof DBNResource) {\n        Collection<DBPDataSourceContainer> containers=((DBNResource)element).getAssociatedDataSources();\n        if (!CommonUtils.isEmpty(containers)) {\n          StringBuilder text=new StringBuilder();\n          for (          DBPDataSourceContainer container : containers) {\n            if (text.length() > 0) {\n              text.append(\", \");\n            }\n            text.append(container.getName());\n          }\n          return text.toString();\n        }\n      }\n      return \"\";\n    }\n    @Override public Image getImage(    Object element){\n      return null;\n    }\n  }\n);\n  columnController.createColumns(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2330,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void createScriptColumns(ColumnViewer viewer){\n  final ILabelProvider mainLabelProvider=(ILabelProvider)viewer.getLabelProvider();\n  ViewerColumnController columnController=new ViewerColumnController(\"sqlTaskScriptViewer\",viewer);\n  columnController.setForceAutoSize(true);\n  columnController.addColumn(ModelMessages.model_navigator_Name,DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script,SWT.LEFT,true,true,new ColumnLabelProvider(){\n    @Override public String getText(    Object element){\n      return mainLabelProvider.getText(element);\n    }\n    @Override public Image getImage(    Object element){\n      return mainLabelProvider.getImage(element);\n    }\n    @Override public String getToolTipText(    Object element){\n      if (mainLabelProvider instanceof IToolTipProvider) {\n        return ((IToolTipProvider)mainLabelProvider).getToolTipText(element);\n      }\n      return null;\n    }\n  }\n);\n  columnController.addColumn(ModelMessages.model_navigator_Connection,DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script_data_source,SWT.LEFT,true,true,new ColumnLabelProvider(){\n    @Override public String getText(    Object element){\n      if (element instanceof DBNResource) {\n        Collection<DBPDataSourceContainer> containers=((DBNResource)element).getAssociatedDataSources();\n        if (!CommonUtils.isEmpty(containers)) {\n          StringBuilder text=new StringBuilder();\n          for (          DBPDataSourceContainer container : containers) {\n            if (text.length() > 0) {\n              text.append(\", \");\n            }\n            text.append(container.getName());\n          }\n          return text.toString();\n        }\n      }\n      return \"\";\n    }\n    @Override public Image getImage(    Object element){\n      return null;\n    }\n  }\n);\n  columnController.createColumns(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 11
      },
      "nodeContext" : "columnController.addColumn(ModelMessages.model_navigator_Connection,DTUIMessages.sql_script_task_data_source_selection_dialog_column_description_script_data_source,SWT.LEFT,true,true,new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    if (element instanceof DBNResource) {\n      Collection<DBPDataSourceContainer> containers=((DBNResource)element).getAssociatedDataSources();\n      if (!CommonUtils.isEmpty(containers)) {\n        StringBuilder text=new StringBuilder();\n        for (        DBPDataSourceContainer container : containers) {\n          if (text.length() > 0) {\n            text.append(\", \");\n          }\n          text.append(container.getName());\n        }\n        return text.toString();\n      }\n    }\n    return \"\";\n  }\n  @Override public Image getImage(  Object element){\n    return null;\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 113,
      "astHeight" : 17
    },
    "tokenLength" : 40,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 958,
    "startLineNumber" : 135,
    "startColumnNumber" : 196,
    "endLineNumber" : 158,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}