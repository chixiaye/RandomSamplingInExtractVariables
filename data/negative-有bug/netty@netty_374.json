{
  "id" : 374,
  "expression" : "channel",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/test/java/io/netty/handler/codec/string/LineEncoderTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "channel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 39,
      "startColumnNumber" : 19,
      "endLineNumber" : 39,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 39,
        "startColumnNumber" : 19,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "channel.writeOutbound(msg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(msg))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(msg));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 37,
        "startColumnNumber" : 80,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testLineEncode(LineSeparator lineSeparator,String msg){\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertTrue(channel.writeOutbound(msg));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.channel.embedded.EmbeddedChannel"
  }, {
    "nodeContext" : "channel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 40,
      "startColumnNumber" : 22,
      "endLineNumber" : 40,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 40,
        "startColumnNumber" : 22,
        "endLineNumber" : 40,
        "endColumnNumber" : 44
      },
      "nodeContext" : "channel.readOutbound()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 40,
        "startColumnNumber" : 16,
        "endLineNumber" : 40,
        "endColumnNumber" : 44
      },
      "nodeContext" : "buf=channel.readOutbound()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 45
      },
      "nodeContext" : "ByteBuf buf=channel.readOutbound();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 37,
        "startColumnNumber" : 80,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testLineEncode(LineSeparator lineSeparator,String msg){\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 45
      },
      "nodeContext" : "ByteBuf buf=channel.readOutbound();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.channel.embedded.EmbeddedChannel"
  }, {
    "nodeContext" : "channel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 46,
      "startColumnNumber" : 23,
      "endLineNumber" : 46,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 46,
        "startColumnNumber" : 23,
        "endLineNumber" : 46,
        "endColumnNumber" : 45
      },
      "nodeContext" : "channel.readOutbound()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertNull(channel.readOutbound())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertNull(channel.readOutbound());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] data=new byte[buf.readableBytes()];\n  buf.readBytes(data);\n  byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n  assertArrayEquals(expected,data);\n  assertNull(channel.readOutbound());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  byte[] data=new byte[buf.readableBytes()];\n  buf.readBytes(data);\n  byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n  assertArrayEquals(expected,data);\n  assertNull(channel.readOutbound());\n}\n  finally {\n  buf.release();\n  assertFalse(channel.finish());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 37,
        "startColumnNumber" : 80,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testLineEncode(LineSeparator lineSeparator,String msg){\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertNull(channel.readOutbound());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.channel.embedded.EmbeddedChannel"
  }, {
    "nodeContext" : "channel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 49,
      "startColumnNumber" : 24,
      "endLineNumber" : 49,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 49,
        "startColumnNumber" : 24,
        "endLineNumber" : 49,
        "endColumnNumber" : 40
      },
      "nodeContext" : "channel.finish()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertFalse(channel.finish())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertFalse(channel.finish());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 47,
        "startColumnNumber" : 18,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  buf.release();\n  assertFalse(channel.finish());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  byte[] data=new byte[buf.readableBytes()];\n  buf.readBytes(data);\n  byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n  assertArrayEquals(expected,data);\n  assertNull(channel.readOutbound());\n}\n  finally {\n  buf.release();\n  assertFalse(channel.finish());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 37,
        "startColumnNumber" : 80,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void testLineEncode(LineSeparator lineSeparator,String msg){\n  EmbeddedChannel channel=new EmbeddedChannel(new LineEncoder(lineSeparator,CharsetUtil.UTF_8));\n  assertTrue(channel.writeOutbound(msg));\n  ByteBuf buf=channel.readOutbound();\n  try {\n    byte[] data=new byte[buf.readableBytes()];\n    buf.readBytes(data);\n    byte[] expected=(msg + lineSeparator.value()).getBytes(CharsetUtil.UTF_8);\n    assertArrayEquals(expected,data);\n    assertNull(channel.readOutbound());\n  }\n  finally {\n    buf.release();\n    assertFalse(channel.finish());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertFalse(channel.finish());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.netty.channel.embedded.EmbeddedChannel"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 39,
    "startColumnNumber" : 19,
    "endLineNumber" : 39,
    "endColumnNumber" : 26
  }, {
    "charLength" : 7,
    "startLineNumber" : 40,
    "startColumnNumber" : 22,
    "endLineNumber" : 40,
    "endColumnNumber" : 29
  }, {
    "charLength" : 7,
    "startLineNumber" : 46,
    "startColumnNumber" : 23,
    "endLineNumber" : 46,
    "endColumnNumber" : 30
  }, {
    "charLength" : 7,
    "startLineNumber" : 49,
    "startColumnNumber" : 24,
    "endLineNumber" : 49,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}