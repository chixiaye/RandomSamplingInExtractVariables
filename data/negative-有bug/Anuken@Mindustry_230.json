{
  "id" : 230,
  "expression" : "4",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/graphics/g3d/MeshBuilder.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 60,
      "startColumnNumber" : 48,
      "endLineNumber" : 60,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 4,
        "startLineNumber" : 60,
        "startColumnNumber" : 46,
        "endLineNumber" : 60,
        "endColumnNumber" : 50
      },
      "nodeContext" : "c[4]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 60,
        "startColumnNumber" : 46,
        "endLineNumber" : 60,
        "endColumnNumber" : 52
      },
      "nodeContext" : "c[4].v",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 60,
        "startColumnNumber" : 23,
        "endLineNumber" : 60,
        "endColumnNumber" : 53
      },
      "nodeContext" : "normal(c[0].v,c[2].v,c[4].v)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 60,
        "startColumnNumber" : 17,
        "endLineNumber" : 60,
        "endColumnNumber" : 53
      },
      "nodeContext" : "nor=normal(c[0].v,c[2].v,c[4].v)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Corner[] c=tile.corners;\n  for (  Corner corner : c) {\n    corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n  }\n  Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n  Color color=mesher.getColor(v2.set(tile.v));\n  if (lines) {\n    nor.set(1f,1f,1f);\n    for (int i=0; i < c.length; i++) {\n      Vec3 v1=c[i].v;\n      Vec3 v2=c[(i + 1) % c.length].v;\n      vert(v1,nor,color);\n      vert(v2,nor,color);\n    }\n  }\n else {\n    verts(c[0].v,c[1].v,c[2].v,nor,color);\n    verts(c[0].v,c[2].v,c[3].v,nor,color);\n    verts(c[0].v,c[3].v,c[4].v,nor,color);\n    if (c.length > 5) {\n      verts(c[0].v,c[4].v,c[5].v,nor,color);\n    }\n  }\n  for (  Corner corner : c) {\n    corner.v.nor();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Ptile tile : grid.tiles) {\n  Corner[] c=tile.corners;\n  for (  Corner corner : c) {\n    corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n  }\n  Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n  Color color=mesher.getColor(v2.set(tile.v));\n  if (lines) {\n    nor.set(1f,1f,1f);\n    for (int i=0; i < c.length; i++) {\n      Vec3 v1=c[i].v;\n      Vec3 v2=c[(i + 1) % c.length].v;\n      vert(v1,nor,color);\n      vert(v2,nor,color);\n    }\n  }\n else {\n    verts(c[0].v,c[1].v,c[2].v,nor,color);\n    verts(c[0].v,c[2].v,c[3].v,nor,color);\n    verts(c[0].v,c[3].v,c[4].v,nor,color);\n    if (c.length > 5) {\n      verts(c[0].v,c[4].v,c[5].v,nor,color);\n    }\n  }\n  for (  Corner corner : c) {\n    corner.v.nor();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 248,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 47,
        "startColumnNumber" : 110,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PlanetGrid grid=PlanetGrid.create(divisions);\n  begin(grid.tiles.length * 12 * (3 + 3 + 1));\n  for (  Ptile tile : grid.tiles) {\n    Corner[] c=tile.corners;\n    for (    Corner corner : c) {\n      corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n    }\n    Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n    Color color=mesher.getColor(v2.set(tile.v));\n    if (lines) {\n      nor.set(1f,1f,1f);\n      for (int i=0; i < c.length; i++) {\n        Vec3 v1=c[i].v;\n        Vec3 v2=c[(i + 1) % c.length].v;\n        vert(v1,nor,color);\n        vert(v2,nor,color);\n      }\n    }\n else {\n      verts(c[0].v,c[1].v,c[2].v,nor,color);\n      verts(c[0].v,c[2].v,c[3].v,nor,color);\n      verts(c[0].v,c[3].v,c[4].v,nor,color);\n      if (c.length > 5) {\n        verts(c[0].v,c[4].v,c[5].v,nor,color);\n      }\n    }\n    for (    Corner corner : c) {\n      corner.v.nor();\n    }\n  }\n  return end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Mesh buildHex(HexMesher mesher,int divisions,boolean lines,float radius,float intensity){\n  PlanetGrid grid=PlanetGrid.create(divisions);\n  begin(grid.tiles.length * 12 * (3 + 3 + 1));\n  for (  Ptile tile : grid.tiles) {\n    Corner[] c=tile.corners;\n    for (    Corner corner : c) {\n      corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n    }\n    Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n    Color color=mesher.getColor(v2.set(tile.v));\n    if (lines) {\n      nor.set(1f,1f,1f);\n      for (int i=0; i < c.length; i++) {\n        Vec3 v1=c[i].v;\n        Vec3 v2=c[(i + 1) % c.length].v;\n        vert(v1,nor,color);\n        vert(v2,nor,color);\n      }\n    }\n else {\n      verts(c[0].v,c[1].v,c[2].v,nor,color);\n      verts(c[0].v,c[2].v,c[3].v,nor,color);\n      verts(c[0].v,c[3].v,c[4].v,nor,color);\n      if (c.length > 5) {\n        verts(c[0].v,c[4].v,c[5].v,nor,color);\n      }\n    }\n    for (    Corner corner : c) {\n      corner.v.nor();\n    }\n  }\n  return end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 298,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 76,
      "startColumnNumber" : 40,
      "endLineNumber" : 76,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 4,
        "startLineNumber" : 76,
        "startColumnNumber" : 38,
        "endLineNumber" : 76,
        "endColumnNumber" : 42
      },
      "nodeContext" : "c[4]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 76,
        "startColumnNumber" : 38,
        "endLineNumber" : 76,
        "endColumnNumber" : 44
      },
      "nodeContext" : "c[4].v",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verts(c[0].v,c[3].v,c[4].v,nor,color)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "verts(c[0].v,c[3].v,c[4].v,nor,color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 73,
        "startColumnNumber" : 17,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  verts(c[0].v,c[1].v,c[2].v,nor,color);\n  verts(c[0].v,c[2].v,c[3].v,nor,color);\n  verts(c[0].v,c[3].v,c[4].v,nor,color);\n  if (c.length > 5) {\n    verts(c[0].v,c[4].v,c[5].v,nor,color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (lines) {\n  nor.set(1f,1f,1f);\n  for (int i=0; i < c.length; i++) {\n    Vec3 v1=c[i].v;\n    Vec3 v2=c[(i + 1) % c.length].v;\n    vert(v1,nor,color);\n    vert(v2,nor,color);\n  }\n}\n else {\n  verts(c[0].v,c[1].v,c[2].v,nor,color);\n  verts(c[0].v,c[2].v,c[3].v,nor,color);\n  verts(c[0].v,c[3].v,c[4].v,nor,color);\n  if (c.length > 5) {\n    verts(c[0].v,c[4].v,c[5].v,nor,color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Corner[] c=tile.corners;\n  for (  Corner corner : c) {\n    corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n  }\n  Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n  Color color=mesher.getColor(v2.set(tile.v));\n  if (lines) {\n    nor.set(1f,1f,1f);\n    for (int i=0; i < c.length; i++) {\n      Vec3 v1=c[i].v;\n      Vec3 v2=c[(i + 1) % c.length].v;\n      vert(v1,nor,color);\n      vert(v2,nor,color);\n    }\n  }\n else {\n    verts(c[0].v,c[1].v,c[2].v,nor,color);\n    verts(c[0].v,c[2].v,c[3].v,nor,color);\n    verts(c[0].v,c[3].v,c[4].v,nor,color);\n    if (c.length > 5) {\n      verts(c[0].v,c[4].v,c[5].v,nor,color);\n    }\n  }\n  for (  Corner corner : c) {\n    corner.v.nor();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Ptile tile : grid.tiles) {\n  Corner[] c=tile.corners;\n  for (  Corner corner : c) {\n    corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n  }\n  Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n  Color color=mesher.getColor(v2.set(tile.v));\n  if (lines) {\n    nor.set(1f,1f,1f);\n    for (int i=0; i < c.length; i++) {\n      Vec3 v1=c[i].v;\n      Vec3 v2=c[(i + 1) % c.length].v;\n      vert(v1,nor,color);\n      vert(v2,nor,color);\n    }\n  }\n else {\n    verts(c[0].v,c[1].v,c[2].v,nor,color);\n    verts(c[0].v,c[2].v,c[3].v,nor,color);\n    verts(c[0].v,c[3].v,c[4].v,nor,color);\n    if (c.length > 5) {\n      verts(c[0].v,c[4].v,c[5].v,nor,color);\n    }\n  }\n  for (  Corner corner : c) {\n    corner.v.nor();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 248,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 47,
        "startColumnNumber" : 110,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PlanetGrid grid=PlanetGrid.create(divisions);\n  begin(grid.tiles.length * 12 * (3 + 3 + 1));\n  for (  Ptile tile : grid.tiles) {\n    Corner[] c=tile.corners;\n    for (    Corner corner : c) {\n      corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n    }\n    Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n    Color color=mesher.getColor(v2.set(tile.v));\n    if (lines) {\n      nor.set(1f,1f,1f);\n      for (int i=0; i < c.length; i++) {\n        Vec3 v1=c[i].v;\n        Vec3 v2=c[(i + 1) % c.length].v;\n        vert(v1,nor,color);\n        vert(v2,nor,color);\n      }\n    }\n else {\n      verts(c[0].v,c[1].v,c[2].v,nor,color);\n      verts(c[0].v,c[2].v,c[3].v,nor,color);\n      verts(c[0].v,c[3].v,c[4].v,nor,color);\n      if (c.length > 5) {\n        verts(c[0].v,c[4].v,c[5].v,nor,color);\n      }\n    }\n    for (    Corner corner : c) {\n      corner.v.nor();\n    }\n  }\n  return end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Mesh buildHex(HexMesher mesher,int divisions,boolean lines,float radius,float intensity){\n  PlanetGrid grid=PlanetGrid.create(divisions);\n  begin(grid.tiles.length * 12 * (3 + 3 + 1));\n  for (  Ptile tile : grid.tiles) {\n    Corner[] c=tile.corners;\n    for (    Corner corner : c) {\n      corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n    }\n    Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n    Color color=mesher.getColor(v2.set(tile.v));\n    if (lines) {\n      nor.set(1f,1f,1f);\n      for (int i=0; i < c.length; i++) {\n        Vec3 v1=c[i].v;\n        Vec3 v2=c[(i + 1) % c.length].v;\n        vert(v1,nor,color);\n        vert(v2,nor,color);\n      }\n    }\n else {\n      verts(c[0].v,c[1].v,c[2].v,nor,color);\n      verts(c[0].v,c[2].v,c[3].v,nor,color);\n      verts(c[0].v,c[3].v,c[4].v,nor,color);\n      if (c.length > 5) {\n        verts(c[0].v,c[4].v,c[5].v,nor,color);\n      }\n    }\n    for (    Corner corner : c) {\n      corner.v.nor();\n    }\n  }\n  return end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 298,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "verts(c[0].v,c[3].v,c[4].v,nor,color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 79,
      "startColumnNumber" : 36,
      "endLineNumber" : 79,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 4,
        "startLineNumber" : 79,
        "startColumnNumber" : 34,
        "endLineNumber" : 79,
        "endColumnNumber" : 38
      },
      "nodeContext" : "c[4]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 79,
        "startColumnNumber" : 34,
        "endLineNumber" : 79,
        "endColumnNumber" : 40
      },
      "nodeContext" : "c[4].v",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 79,
        "endColumnNumber" : 61
      },
      "nodeContext" : "verts(c[0].v,c[4].v,c[5].v,nor,color)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 79,
        "endColumnNumber" : 62
      },
      "nodeContext" : "verts(c[0].v,c[4].v,c[5].v,nor,color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 78,
        "startColumnNumber" : 32,
        "endLineNumber" : 80,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  verts(c[0].v,c[4].v,c[5].v,nor,color);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 80,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (c.length > 5) {\n  verts(c[0].v,c[4].v,c[5].v,nor,color);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 73,
        "startColumnNumber" : 17,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  verts(c[0].v,c[1].v,c[2].v,nor,color);\n  verts(c[0].v,c[2].v,c[3].v,nor,color);\n  verts(c[0].v,c[3].v,c[4].v,nor,color);\n  if (c.length > 5) {\n    verts(c[0].v,c[4].v,c[5].v,nor,color);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (lines) {\n  nor.set(1f,1f,1f);\n  for (int i=0; i < c.length; i++) {\n    Vec3 v1=c[i].v;\n    Vec3 v2=c[(i + 1) % c.length].v;\n    vert(v1,nor,color);\n    vert(v2,nor,color);\n  }\n}\n else {\n  verts(c[0].v,c[1].v,c[2].v,nor,color);\n  verts(c[0].v,c[2].v,c[3].v,nor,color);\n  verts(c[0].v,c[3].v,c[4].v,nor,color);\n  if (c.length > 5) {\n    verts(c[0].v,c[4].v,c[5].v,nor,color);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Corner[] c=tile.corners;\n  for (  Corner corner : c) {\n    corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n  }\n  Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n  Color color=mesher.getColor(v2.set(tile.v));\n  if (lines) {\n    nor.set(1f,1f,1f);\n    for (int i=0; i < c.length; i++) {\n      Vec3 v1=c[i].v;\n      Vec3 v2=c[(i + 1) % c.length].v;\n      vert(v1,nor,color);\n      vert(v2,nor,color);\n    }\n  }\n else {\n    verts(c[0].v,c[1].v,c[2].v,nor,color);\n    verts(c[0].v,c[2].v,c[3].v,nor,color);\n    verts(c[0].v,c[3].v,c[4].v,nor,color);\n    if (c.length > 5) {\n      verts(c[0].v,c[4].v,c[5].v,nor,color);\n    }\n  }\n  for (  Corner corner : c) {\n    corner.v.nor();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Ptile tile : grid.tiles) {\n  Corner[] c=tile.corners;\n  for (  Corner corner : c) {\n    corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n  }\n  Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n  Color color=mesher.getColor(v2.set(tile.v));\n  if (lines) {\n    nor.set(1f,1f,1f);\n    for (int i=0; i < c.length; i++) {\n      Vec3 v1=c[i].v;\n      Vec3 v2=c[(i + 1) % c.length].v;\n      vert(v1,nor,color);\n      vert(v2,nor,color);\n    }\n  }\n else {\n    verts(c[0].v,c[1].v,c[2].v,nor,color);\n    verts(c[0].v,c[2].v,c[3].v,nor,color);\n    verts(c[0].v,c[3].v,c[4].v,nor,color);\n    if (c.length > 5) {\n      verts(c[0].v,c[4].v,c[5].v,nor,color);\n    }\n  }\n  for (  Corner corner : c) {\n    corner.v.nor();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 248,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1252,
        "startLineNumber" : 47,
        "startColumnNumber" : 110,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PlanetGrid grid=PlanetGrid.create(divisions);\n  begin(grid.tiles.length * 12 * (3 + 3 + 1));\n  for (  Ptile tile : grid.tiles) {\n    Corner[] c=tile.corners;\n    for (    Corner corner : c) {\n      corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n    }\n    Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n    Color color=mesher.getColor(v2.set(tile.v));\n    if (lines) {\n      nor.set(1f,1f,1f);\n      for (int i=0; i < c.length; i++) {\n        Vec3 v1=c[i].v;\n        Vec3 v2=c[(i + 1) % c.length].v;\n        vert(v1,nor,color);\n        vert(v2,nor,color);\n      }\n    }\n else {\n      verts(c[0].v,c[1].v,c[2].v,nor,color);\n      verts(c[0].v,c[2].v,c[3].v,nor,color);\n      verts(c[0].v,c[3].v,c[4].v,nor,color);\n      if (c.length > 5) {\n        verts(c[0].v,c[4].v,c[5].v,nor,color);\n      }\n    }\n    for (    Corner corner : c) {\n      corner.v.nor();\n    }\n  }\n  return end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Mesh buildHex(HexMesher mesher,int divisions,boolean lines,float radius,float intensity){\n  PlanetGrid grid=PlanetGrid.create(divisions);\n  begin(grid.tiles.length * 12 * (3 + 3 + 1));\n  for (  Ptile tile : grid.tiles) {\n    Corner[] c=tile.corners;\n    for (    Corner corner : c) {\n      corner.v.setLength((1f + mesher.getHeight(v2.set(corner.v)) * intensity) * radius);\n    }\n    Vec3 nor=normal(c[0].v,c[2].v,c[4].v);\n    Color color=mesher.getColor(v2.set(tile.v));\n    if (lines) {\n      nor.set(1f,1f,1f);\n      for (int i=0; i < c.length; i++) {\n        Vec3 v1=c[i].v;\n        Vec3 v2=c[(i + 1) % c.length].v;\n        vert(v1,nor,color);\n        vert(v2,nor,color);\n      }\n    }\n else {\n      verts(c[0].v,c[1].v,c[2].v,nor,color);\n      verts(c[0].v,c[2].v,c[3].v,nor,color);\n      verts(c[0].v,c[3].v,c[4].v,nor,color);\n      if (c.length > 5) {\n        verts(c[0].v,c[4].v,c[5].v,nor,color);\n      }\n    }\n    for (    Corner corner : c) {\n      corner.v.nor();\n    }\n  }\n  return end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 298,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 79,
        "startColumnNumber" : 20,
        "endLineNumber" : 79,
        "endColumnNumber" : 62
      },
      "nodeContext" : "verts(c[0].v,c[4].v,c[5].v,nor,color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 60,
    "startColumnNumber" : 48,
    "endLineNumber" : 60,
    "endColumnNumber" : 49
  }, {
    "charLength" : 1,
    "startLineNumber" : 76,
    "startColumnNumber" : 40,
    "endLineNumber" : 76,
    "endColumnNumber" : 41
  }, {
    "charLength" : 1,
    "startLineNumber" : 79,
    "startColumnNumber" : 36,
    "endLineNumber" : 79,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}