{
  "id" : 456,
  "expression" : "Resolver",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/net/starlark/java/syntax/Program.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Resolver",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 67,
      "startColumnNumber" : 4,
      "endLineNumber" : 67,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Resolver.resolveFile(file,env)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Resolver.resolveFile(file,env);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 66,
        "startColumnNumber" : 35,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Resolver.resolveFile(file,env);\n  if (!file.ok()) {\n    throw new SyntaxError.Exception(file.errors());\n  }\n  ImmutableList.Builder<String> loads=ImmutableList.builder();\n  ImmutableList.Builder<Location> loadLocations=ImmutableList.builder();\n  for (  Statement stmt : file.getStatements()) {\n    if (stmt instanceof LoadStatement) {\n      LoadStatement load=(LoadStatement)stmt;\n      String module=load.getImport().getValue();\n      loads.add(module);\n      loadLocations.add(load.getImport().getLocation());\n    }\n  }\n  return new Program(file.getResolvedFunction(),loads.build(),loadLocations.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resolves a file syntax tree in the specified environment and compiles it to a Program. This operation mutates the syntax tree, both by resolving identifiers and recording local variables, and in case of error, by appending to  {@code file.errors()}.\n * @throws SyntaxError.Exception in case of resolution error, or if the syntax tree alreadycontained syntax scan/parse errors. Resolution errors are added to  {@code file.errors()}.\n */\npublic static Program compileFile(StarlarkFile file,Resolver.Module env) throws SyntaxError.Exception {\n  Resolver.resolveFile(file,env);\n  if (!file.ok()) {\n    throw new SyntaxError.Exception(file.errors());\n  }\n  ImmutableList.Builder<String> loads=ImmutableList.builder();\n  ImmutableList.Builder<Location> loadLocations=ImmutableList.builder();\n  for (  Statement stmt : file.getStatements()) {\n    if (stmt instanceof LoadStatement) {\n      LoadStatement load=(LoadStatement)stmt;\n      String module=load.getImport().getValue();\n      loads.add(module);\n      loadLocations.add(load.getImport().getLocation());\n    }\n  }\n  return new Program(file.getResolvedFunction(),loads.build(),loadLocations.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Resolver.resolveFile(file,env);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "net.starlark.java.syntax.Resolver"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 67,
    "startColumnNumber" : 4,
    "endLineNumber" : 67,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ ]
}