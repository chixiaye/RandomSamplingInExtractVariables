{
  "id" : 387,
  "expression" : "originalRequest.getPath()",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/test/java/com/netflix/zuul/message/http/HttpRequestMessageImplTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "originalRequest.getPath()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 52,
      "startColumnNumber" : 47,
      "endLineNumber" : 52,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.assertEquals(request.getPath(),originalRequest.getPath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(request.getPath(),originalRequest.getPath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 40,
        "startColumnNumber" : 42,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpQueryParams queryParams=new HttpQueryParams();\n  queryParams.add(\"flag\",\"5\");\n  Headers headers=new Headers();\n  headers.add(\"Host\",\"blah.netflix.com\");\n  request=new HttpRequestMessageImpl(new SessionContext(),\"HTTP/1.1\",\"POST\",\"/some/where\",queryParams,headers,\"192.168.0.2\",\"https\",7002,\"localhost\");\n  request.storeInboundRequest();\n  HttpRequestInfo originalRequest=request.getInboundRequest();\n  Assert.assertEquals(request.getPort(),originalRequest.getPort());\n  Assert.assertEquals(request.getPath(),originalRequest.getPath());\n  Assert.assertEquals(request.getQueryParams().getFirst(\"flag\"),originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(request.getHeaders().getFirst(\"Host\"),originalRequest.getHeaders().getFirst(\"Host\"));\n  request.setPort(8080);\n  request.setPath(\"/another/place\");\n  request.getQueryParams().set(\"flag\",\"20\");\n  request.getHeaders().set(\"Host\",\"wah.netflix.com\");\n  Assert.assertEquals(7002,originalRequest.getPort());\n  Assert.assertEquals(\"/some/where\",originalRequest.getPath());\n  Assert.assertEquals(\"5\",originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(\"blah.netflix.com\",originalRequest.getHeaders().getFirst(\"Host\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOriginalRequestInfo(){\n  HttpQueryParams queryParams=new HttpQueryParams();\n  queryParams.add(\"flag\",\"5\");\n  Headers headers=new Headers();\n  headers.add(\"Host\",\"blah.netflix.com\");\n  request=new HttpRequestMessageImpl(new SessionContext(),\"HTTP/1.1\",\"POST\",\"/some/where\",queryParams,headers,\"192.168.0.2\",\"https\",7002,\"localhost\");\n  request.storeInboundRequest();\n  HttpRequestInfo originalRequest=request.getInboundRequest();\n  Assert.assertEquals(request.getPort(),originalRequest.getPort());\n  Assert.assertEquals(request.getPath(),originalRequest.getPath());\n  Assert.assertEquals(request.getQueryParams().getFirst(\"flag\"),originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(request.getHeaders().getFirst(\"Host\"),originalRequest.getHeaders().getFirst(\"Host\"));\n  request.setPort(8080);\n  request.setPath(\"/another/place\");\n  request.getQueryParams().set(\"flag\",\"20\");\n  request.getHeaders().set(\"Host\",\"wah.netflix.com\");\n  Assert.assertEquals(7002,originalRequest.getPort());\n  Assert.assertEquals(\"/some/where\",originalRequest.getPath());\n  Assert.assertEquals(\"5\",originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(\"blah.netflix.com\",originalRequest.getHeaders().getFirst(\"Host\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(request.getPath(),originalRequest.getPath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "originalRequest.getPath()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 62,
      "startColumnNumber" : 43,
      "endLineNumber" : 62,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertEquals(\"/some/where\",originalRequest.getPath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertEquals(\"/some/where\",originalRequest.getPath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 40,
        "startColumnNumber" : 42,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpQueryParams queryParams=new HttpQueryParams();\n  queryParams.add(\"flag\",\"5\");\n  Headers headers=new Headers();\n  headers.add(\"Host\",\"blah.netflix.com\");\n  request=new HttpRequestMessageImpl(new SessionContext(),\"HTTP/1.1\",\"POST\",\"/some/where\",queryParams,headers,\"192.168.0.2\",\"https\",7002,\"localhost\");\n  request.storeInboundRequest();\n  HttpRequestInfo originalRequest=request.getInboundRequest();\n  Assert.assertEquals(request.getPort(),originalRequest.getPort());\n  Assert.assertEquals(request.getPath(),originalRequest.getPath());\n  Assert.assertEquals(request.getQueryParams().getFirst(\"flag\"),originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(request.getHeaders().getFirst(\"Host\"),originalRequest.getHeaders().getFirst(\"Host\"));\n  request.setPort(8080);\n  request.setPath(\"/another/place\");\n  request.getQueryParams().set(\"flag\",\"20\");\n  request.getHeaders().set(\"Host\",\"wah.netflix.com\");\n  Assert.assertEquals(7002,originalRequest.getPort());\n  Assert.assertEquals(\"/some/where\",originalRequest.getPath());\n  Assert.assertEquals(\"5\",originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(\"blah.netflix.com\",originalRequest.getHeaders().getFirst(\"Host\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOriginalRequestInfo(){\n  HttpQueryParams queryParams=new HttpQueryParams();\n  queryParams.add(\"flag\",\"5\");\n  Headers headers=new Headers();\n  headers.add(\"Host\",\"blah.netflix.com\");\n  request=new HttpRequestMessageImpl(new SessionContext(),\"HTTP/1.1\",\"POST\",\"/some/where\",queryParams,headers,\"192.168.0.2\",\"https\",7002,\"localhost\");\n  request.storeInboundRequest();\n  HttpRequestInfo originalRequest=request.getInboundRequest();\n  Assert.assertEquals(request.getPort(),originalRequest.getPort());\n  Assert.assertEquals(request.getPath(),originalRequest.getPath());\n  Assert.assertEquals(request.getQueryParams().getFirst(\"flag\"),originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(request.getHeaders().getFirst(\"Host\"),originalRequest.getHeaders().getFirst(\"Host\"));\n  request.setPort(8080);\n  request.setPath(\"/another/place\");\n  request.getQueryParams().set(\"flag\",\"20\");\n  request.getHeaders().set(\"Host\",\"wah.netflix.com\");\n  Assert.assertEquals(7002,originalRequest.getPort());\n  Assert.assertEquals(\"/some/where\",originalRequest.getPath());\n  Assert.assertEquals(\"5\",originalRequest.getQueryParams().getFirst(\"flag\"));\n  Assert.assertEquals(\"blah.netflix.com\",originalRequest.getHeaders().getFirst(\"Host\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertEquals(\"/some/where\",originalRequest.getPath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 52,
    "startColumnNumber" : 47,
    "endLineNumber" : 52,
    "endColumnNumber" : 72
  }, {
    "charLength" : 25,
    "startLineNumber" : 62,
    "startColumnNumber" : 43,
    "endLineNumber" : 62,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}