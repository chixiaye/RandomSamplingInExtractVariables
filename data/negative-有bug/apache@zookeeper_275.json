{
  "id" : 275,
  "expression" : "!\"c\".equals(language)",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/jute/compiler/generated/Rcc.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!\"c\".equals(language)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 51,
      "startColumnNumber" : 67,
      "endLineNumber" : 51,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 88
      },
      "nodeContext" : "!\"c++\".equals(language) && !\"java\".equals(language) && !\"c\".equals(language)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!\"c++\".equals(language) && !\"java\".equals(language) && !\"c\".equals(language)) {\n  System.out.println(\"Cannot recognize language:\" + language);\n  System.exit(1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1589,
        "startLineNumber" : 37,
        "startColumnNumber" : 43,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String language=\"java\";\n  ArrayList recFiles=new ArrayList();\n  JFile curFile=null;\n  for (int i=0; i < args.length; i++) {\n    if (\"-l\".equalsIgnoreCase(args[i]) || \"--language\".equalsIgnoreCase(args[i])) {\n      language=args[i + 1].toLowerCase();\n      i++;\n    }\n else {\n      recFiles.add(args[i]);\n    }\n  }\n  if (!\"c++\".equals(language) && !\"java\".equals(language) && !\"c\".equals(language)) {\n    System.out.println(\"Cannot recognize language:\" + language);\n    System.exit(1);\n  }\n  if (recFiles.size() == 0) {\n    System.out.println(\"No record files specified. Exiting.\");\n    System.exit(1);\n  }\n  for (int i=0; i < recFiles.size(); i++) {\n    curFileName=(String)recFiles.get(i);\n    File file=new File(curFileName);\n    try {\n      curFile=parseFile(file);\n    }\n catch (    FileNotFoundException e) {\n      System.out.println(\"File \" + (String)recFiles.get(i) + \" Not found.\");\n      System.exit(1);\n    }\ncatch (    ParseException e) {\n      System.out.println(e.toString());\n      System.exit(1);\n    }\n    System.out.println((String)recFiles.get(i) + \" Parsed Successfully\");\n    try {\n      curFile.genCode(language,new File(\".\"));\n    }\n catch (    IOException e) {\n      System.out.println(e.toString());\n      System.exit(1);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 256,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1628,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String args[]){\n  String language=\"java\";\n  ArrayList recFiles=new ArrayList();\n  JFile curFile=null;\n  for (int i=0; i < args.length; i++) {\n    if (\"-l\".equalsIgnoreCase(args[i]) || \"--language\".equalsIgnoreCase(args[i])) {\n      language=args[i + 1].toLowerCase();\n      i++;\n    }\n else {\n      recFiles.add(args[i]);\n    }\n  }\n  if (!\"c++\".equals(language) && !\"java\".equals(language) && !\"c\".equals(language)) {\n    System.out.println(\"Cannot recognize language:\" + language);\n    System.exit(1);\n  }\n  if (recFiles.size() == 0) {\n    System.out.println(\"No record files specified. Exiting.\");\n    System.exit(1);\n  }\n  for (int i=0; i < recFiles.size(); i++) {\n    curFileName=(String)recFiles.get(i);\n    File file=new File(curFileName);\n    try {\n      curFile=parseFile(file);\n    }\n catch (    FileNotFoundException e) {\n      System.out.println(\"File \" + (String)recFiles.get(i) + \" Not found.\");\n      System.exit(1);\n    }\ncatch (    ParseException e) {\n      System.out.println(e.toString());\n      System.exit(1);\n    }\n    System.out.println((String)recFiles.get(i) + \" Parsed Successfully\");\n    try {\n      curFile.genCode(language,new File(\".\"));\n    }\n catch (    IOException e) {\n      System.out.println(e.toString());\n      System.exit(1);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 266,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 88
      },
      "nodeContext" : "!\"c++\".equals(language) && !\"java\".equals(language) && !\"c\".equals(language)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 51,
    "startColumnNumber" : 67,
    "endLineNumber" : 51,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}