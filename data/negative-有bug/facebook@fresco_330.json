{
  "id" : 330,
  "expression" : "(pixel >> 8)",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/filter/IterativeBoxBlurFilter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(pixel >> 8)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 127,
      "startColumnNumber" : 11,
      "endLineNumber" : 127,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 127,
        "startColumnNumber" : 11,
        "endLineNumber" : 127,
        "endColumnNumber" : 30
      },
      "nodeContext" : "(pixel >> 8) & 0xFF",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 127,
        "startColumnNumber" : 6,
        "endLineNumber" : 127,
        "endColumnNumber" : 30
      },
      "nodeContext" : "g+=(pixel >> 8) & 0xFF",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 127,
        "startColumnNumber" : 6,
        "endLineNumber" : 127,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g+=(pixel >> 8) & 0xFF;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 123,
        "startColumnNumber" : 47,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n  pixel=pixels[ii];\n  r+=(pixel >> 16) & 0xFF;\n  g+=(pixel >> 8) & 0xFF;\n  b+=pixel & 0xFF;\n  a+=pixel >>> 24;\n  if (i >= radius) {\n    final int outOffset=i - radius;\n    outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n    final int j=i - (diameter - 1);\n    final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n    pixel=pixels[jj];\n    r-=(pixel >> 16) & 0xFF;\n    g-=(pixel >> 8) & 0xFF;\n    b-=pixel & 0xFF;\n    a-=pixel >>> 24;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=-radius; i < w + radius; i++) {\n  final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n  pixel=pixels[ii];\n  r+=(pixel >> 16) & 0xFF;\n  g+=(pixel >> 8) & 0xFF;\n  b+=pixel & 0xFF;\n  a+=pixel >>> 24;\n  if (i >= radius) {\n    final int outOffset=i - radius;\n    outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n    final int j=i - (diameter - 1);\n    final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n    pixel=pixels[jj];\n    r-=(pixel >> 16) & 0xFF;\n    g-=(pixel >> 8) & 0xFF;\n    b-=pixel & 0xFF;\n    a-=pixel >>> 24;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 162,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 114,
        "startColumnNumber" : 75,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int firstInByte=w * row;\n  final int lastInByte=w * (row + 1) - 1;\n  final int radius=diameter >> 1;\n  int a=0, r=0, g=0, b=0;\n  int pixel;\n  for (int i=-radius; i < w + radius; i++) {\n    final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n    pixel=pixels[ii];\n    r+=(pixel >> 16) & 0xFF;\n    g+=(pixel >> 8) & 0xFF;\n    b+=pixel & 0xFF;\n    a+=pixel >>> 24;\n    if (i >= radius) {\n      final int outOffset=i - radius;\n      outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n      final int j=i - (diameter - 1);\n      final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n      pixel=pixels[jj];\n      r-=(pixel >> 16) & 0xFF;\n      g-=(pixel >> 8) & 0xFF;\n      b-=pixel & 0xFF;\n      a-=pixel >>> 24;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1417,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a blurred version of the given  {@code row} of {@code pixel}. It uses a moving average algorithm such that it reads every pixel of the row just once. The edge pixels are repeated to avoid artifacts. <p>Requires a pre-computed  {@code div} table of size (255 * diameter) that maps x -> (x /diameter) (can be rounded)\n */\nprivate static void internalHorizontalBlur(int[] pixels,int[] outRow,int w,int row,int diameter,int[] div){\n  final int firstInByte=w * row;\n  final int lastInByte=w * (row + 1) - 1;\n  final int radius=diameter >> 1;\n  int a=0, r=0, g=0, b=0;\n  int pixel;\n  for (int i=-radius; i < w + radius; i++) {\n    final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n    pixel=pixels[ii];\n    r+=(pixel >> 16) & 0xFF;\n    g+=(pixel >> 8) & 0xFF;\n    b+=pixel & 0xFF;\n    a+=pixel >>> 24;\n    if (i >= radius) {\n      final int outOffset=i - radius;\n      outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n      final int j=i - (diameter - 1);\n      final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n      pixel=pixels[jj];\n      r-=(pixel >> 16) & 0xFF;\n      g-=(pixel >> 8) & 0xFF;\n      b-=pixel & 0xFF;\n      a-=pixel >>> 24;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 127,
        "startColumnNumber" : 6,
        "endLineNumber" : 127,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g+=(pixel >> 8) & 0xFF;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "(pixel >> 8)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 139,
      "startColumnNumber" : 13,
      "endLineNumber" : 139,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 139,
        "startColumnNumber" : 13,
        "endLineNumber" : 139,
        "endColumnNumber" : 32
      },
      "nodeContext" : "(pixel >> 8) & 0xFF",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 32
      },
      "nodeContext" : "g-=(pixel >> 8) & 0xFF",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 33
      },
      "nodeContext" : "g-=(pixel >> 8) & 0xFF;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 131,
        "startColumnNumber" : 23,
        "endLineNumber" : 142,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  final int outOffset=i - radius;\n  outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n  final int j=i - (diameter - 1);\n  final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n  pixel=pixels[jj];\n  r-=(pixel >> 16) & 0xFF;\n  g-=(pixel >> 8) & 0xFF;\n  b-=pixel & 0xFF;\n  a-=pixel >>> 24;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 131,
        "startColumnNumber" : 6,
        "endLineNumber" : 142,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (i >= radius) {\n  final int outOffset=i - radius;\n  outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n  final int j=i - (diameter - 1);\n  final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n  pixel=pixels[jj];\n  r-=(pixel >> 16) & 0xFF;\n  g-=(pixel >> 8) & 0xFF;\n  b-=pixel & 0xFF;\n  a-=pixel >>> 24;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 123,
        "startColumnNumber" : 47,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n  pixel=pixels[ii];\n  r+=(pixel >> 16) & 0xFF;\n  g+=(pixel >> 8) & 0xFF;\n  b+=pixel & 0xFF;\n  a+=pixel >>> 24;\n  if (i >= radius) {\n    final int outOffset=i - radius;\n    outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n    final int j=i - (diameter - 1);\n    final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n    pixel=pixels[jj];\n    r-=(pixel >> 16) & 0xFF;\n    g-=(pixel >> 8) & 0xFF;\n    b-=pixel & 0xFF;\n    a-=pixel >>> 24;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=-radius; i < w + radius; i++) {\n  final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n  pixel=pixels[ii];\n  r+=(pixel >> 16) & 0xFF;\n  g+=(pixel >> 8) & 0xFF;\n  b+=pixel & 0xFF;\n  a+=pixel >>> 24;\n  if (i >= radius) {\n    final int outOffset=i - radius;\n    outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n    final int j=i - (diameter - 1);\n    final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n    pixel=pixels[jj];\n    r-=(pixel >> 16) & 0xFF;\n    g-=(pixel >> 8) & 0xFF;\n    b-=pixel & 0xFF;\n    a-=pixel >>> 24;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 162,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 114,
        "startColumnNumber" : 75,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final int firstInByte=w * row;\n  final int lastInByte=w * (row + 1) - 1;\n  final int radius=diameter >> 1;\n  int a=0, r=0, g=0, b=0;\n  int pixel;\n  for (int i=-radius; i < w + radius; i++) {\n    final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n    pixel=pixels[ii];\n    r+=(pixel >> 16) & 0xFF;\n    g+=(pixel >> 8) & 0xFF;\n    b+=pixel & 0xFF;\n    a+=pixel >>> 24;\n    if (i >= radius) {\n      final int outOffset=i - radius;\n      outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n      final int j=i - (diameter - 1);\n      final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n      pixel=pixels[jj];\n      r-=(pixel >> 16) & 0xFF;\n      g-=(pixel >> 8) & 0xFF;\n      b-=pixel & 0xFF;\n      a-=pixel >>> 24;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1417,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a blurred version of the given  {@code row} of {@code pixel}. It uses a moving average algorithm such that it reads every pixel of the row just once. The edge pixels are repeated to avoid artifacts. <p>Requires a pre-computed  {@code div} table of size (255 * diameter) that maps x -> (x /diameter) (can be rounded)\n */\nprivate static void internalHorizontalBlur(int[] pixels,int[] outRow,int w,int row,int diameter,int[] div){\n  final int firstInByte=w * row;\n  final int lastInByte=w * (row + 1) - 1;\n  final int radius=diameter >> 1;\n  int a=0, r=0, g=0, b=0;\n  int pixel;\n  for (int i=-radius; i < w + radius; i++) {\n    final int ii=bound(firstInByte + i,firstInByte,lastInByte);\n    pixel=pixels[ii];\n    r+=(pixel >> 16) & 0xFF;\n    g+=(pixel >> 8) & 0xFF;\n    b+=pixel & 0xFF;\n    a+=pixel >>> 24;\n    if (i >= radius) {\n      final int outOffset=i - radius;\n      outRow[outOffset]=(div[a] << 24) | (div[r] << 16) | (div[g] << 8)| div[b];\n      final int j=i - (diameter - 1);\n      final int jj=bound(firstInByte + j,firstInByte,lastInByte);\n      pixel=pixels[jj];\n      r-=(pixel >> 16) & 0xFF;\n      g-=(pixel >> 8) & 0xFF;\n      b-=pixel & 0xFF;\n      a-=pixel >>> 24;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 33
      },
      "nodeContext" : "g-=(pixel >> 8) & 0xFF;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 127,
    "startColumnNumber" : 11,
    "endLineNumber" : 127,
    "endColumnNumber" : 23
  }, {
    "charLength" : 12,
    "startLineNumber" : 139,
    "startColumnNumber" : 13,
    "endLineNumber" : 139,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}