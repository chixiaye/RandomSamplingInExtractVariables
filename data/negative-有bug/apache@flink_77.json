{
  "id" : 77,
  "expression" : "ResolvedSchema",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/connectors/hive/HiveTableFactoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ResolvedSchema",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 116,
      "startColumnNumber" : 16,
      "endLineNumber" : 116,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ResolvedSchema.of(Column.physical(\"name\",DataTypes.STRING()),Column.physical(\"age\",DataTypes.INT()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 115,
        "startColumnNumber" : 29,
        "endLineNumber" : 118,
        "endColumnNumber" : 64
      },
      "nodeContext" : "schema=ResolvedSchema.of(Column.physical(\"name\",DataTypes.STRING()),Column.physical(\"age\",DataTypes.INT()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final ResolvedSchema schema=ResolvedSchema.of(Column.physical(\"name\",DataTypes.STRING()),Column.physical(\"age\",DataTypes.INT()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1879,
        "startLineNumber" : 114,
        "startColumnNumber" : 49,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ResolvedSchema schema=ResolvedSchema.of(Column.physical(\"name\",DataTypes.STRING()),Column.physical(\"age\",DataTypes.INT()));\n  catalog.createDatabase(\"mydb\",new CatalogDatabaseImpl(new HashMap<>(),\"\"),true);\n  final Map<String,String> options=Collections.singletonMap(FactoryUtil.CONNECTOR.key(),SqlCreateHiveTable.IDENTIFIER);\n  final CatalogTable table=new CatalogTableImpl(TableSchema.fromResolvedSchema(schema),options,\"hive table\");\n  catalog.createTable(new ObjectPath(\"mydb\",\"mytable\"),table,true);\n  final DynamicTableSource tableSource=FactoryUtil.createDynamicTableSource((DynamicTableSourceFactory)catalog.getFactory().orElseThrow(IllegalStateException::new),ObjectIdentifier.of(\"mycatalog\",\"mydb\",\"mytable\"),new ResolvedCatalogTable(table,schema),new Configuration(),Thread.currentThread().getContextClassLoader(),false);\n  assertTrue(tableSource instanceof HiveTableSource);\n  final DynamicTableSink tableSink=FactoryUtil.createDynamicTableSink((DynamicTableSinkFactory)catalog.getFactory().orElseThrow(IllegalStateException::new),ObjectIdentifier.of(\"mycatalog\",\"mydb\",\"mytable\"),new ResolvedCatalogTable(table,schema),new Configuration(),Thread.currentThread().getContextClassLoader(),false);\n  assertTrue(tableSink instanceof HiveTableSink);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHiveTable() throws Exception {\n  final ResolvedSchema schema=ResolvedSchema.of(Column.physical(\"name\",DataTypes.STRING()),Column.physical(\"age\",DataTypes.INT()));\n  catalog.createDatabase(\"mydb\",new CatalogDatabaseImpl(new HashMap<>(),\"\"),true);\n  final Map<String,String> options=Collections.singletonMap(FactoryUtil.CONNECTOR.key(),SqlCreateHiveTable.IDENTIFIER);\n  final CatalogTable table=new CatalogTableImpl(TableSchema.fromResolvedSchema(schema),options,\"hive table\");\n  catalog.createTable(new ObjectPath(\"mydb\",\"mytable\"),table,true);\n  final DynamicTableSource tableSource=FactoryUtil.createDynamicTableSource((DynamicTableSourceFactory)catalog.getFactory().orElseThrow(IllegalStateException::new),ObjectIdentifier.of(\"mycatalog\",\"mydb\",\"mytable\"),new ResolvedCatalogTable(table,schema),new Configuration(),Thread.currentThread().getContextClassLoader(),false);\n  assertTrue(tableSource instanceof HiveTableSource);\n  final DynamicTableSink tableSink=FactoryUtil.createDynamicTableSink((DynamicTableSinkFactory)catalog.getFactory().orElseThrow(IllegalStateException::new),ObjectIdentifier.of(\"mycatalog\",\"mydb\",\"mytable\"),new ResolvedCatalogTable(table,schema),new Configuration(),Thread.currentThread().getContextClassLoader(),false);\n  assertTrue(tableSink instanceof HiveTableSink);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 64
      },
      "nodeContext" : "ResolvedSchema.of(Column.physical(\"name\",DataTypes.STRING()),Column.physical(\"age\",DataTypes.INT()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.table.catalog.ResolvedSchema"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 116,
    "startColumnNumber" : 16,
    "endLineNumber" : 116,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}