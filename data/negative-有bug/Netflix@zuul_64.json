{
  "id" : 64,
  "expression" : "clone",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "clone",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 393,
      "startColumnNumber" : 12,
      "endLineNumber" : 393,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 393,
        "startColumnNumber" : 12,
        "endLineNumber" : 393,
        "endColumnNumber" : 32
      },
      "nodeContext" : "clone.inboundRequest",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 393,
        "startColumnNumber" : 12,
        "endLineNumber" : 393,
        "endColumnNumber" : 80
      },
      "nodeContext" : "clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 393,
        "startColumnNumber" : 12,
        "endLineNumber" : 393,
        "endColumnNumber" : 81
      },
      "nodeContext" : "clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 392,
        "startColumnNumber" : 41,
        "endLineNumber" : 394,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 392,
        "startColumnNumber" : 8,
        "endLineNumber" : 394,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (getInboundRequest() != null) {\n  clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 387,
        "startColumnNumber" : 4,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpRequestMessageImpl clone=new HttpRequestMessageImpl(message.getContext().clone(),protocol,method,path,queryParams.clone(),message.getHeaders().clone(),clientIp,scheme,port,serverName);\n  if (getInboundRequest() != null) {\n    clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n  }\n  return clone;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 385,
        "startColumnNumber" : 4,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ZuulMessage clone(){\n  HttpRequestMessageImpl clone=new HttpRequestMessageImpl(message.getContext().clone(),protocol,method,path,queryParams.clone(),message.getHeaders().clone(),clientIp,scheme,port,serverName);\n  if (getInboundRequest() != null) {\n    clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n  }\n  return clone;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 393,
        "startColumnNumber" : 12,
        "endLineNumber" : 393,
        "endColumnNumber" : 81
      },
      "nodeContext" : "clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpRequestMessageImpl"
  }, {
    "nodeContext" : "clone",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 395,
      "startColumnNumber" : 15,
      "endLineNumber" : 395,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 395,
        "startColumnNumber" : 8,
        "endLineNumber" : 395,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return clone;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 387,
        "startColumnNumber" : 4,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpRequestMessageImpl clone=new HttpRequestMessageImpl(message.getContext().clone(),protocol,method,path,queryParams.clone(),message.getHeaders().clone(),clientIp,scheme,port,serverName);\n  if (getInboundRequest() != null) {\n    clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n  }\n  return clone;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 385,
        "startColumnNumber" : 4,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ZuulMessage clone(){\n  HttpRequestMessageImpl clone=new HttpRequestMessageImpl(message.getContext().clone(),protocol,method,path,queryParams.clone(),message.getHeaders().clone(),clientIp,scheme,port,serverName);\n  if (getInboundRequest() != null) {\n    clone.inboundRequest=(HttpRequestInfo)getInboundRequest().clone();\n  }\n  return clone;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 395,
        "startColumnNumber" : 8,
        "endLineNumber" : 395,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return clone;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.message.http.HttpRequestMessageImpl"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 393,
    "startColumnNumber" : 12,
    "endLineNumber" : 393,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 395,
    "startColumnNumber" : 15,
    "endLineNumber" : 395,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}