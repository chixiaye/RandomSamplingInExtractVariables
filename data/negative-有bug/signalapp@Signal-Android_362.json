{
  "id" : 362,
  "expression" : "new long[]{1,2,3,Long.MAX_VALUE,Long.MIN_VALUE}",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/test/java/org/thoughtcrime/securesms/jobmanager/impl/JsonDataSerializerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new long[]{1,2,3,Long.MAX_VALUE,Long.MIN_VALUE}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 36,
      "startColumnNumber" : 22,
      "endLineNumber" : 36,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 14,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 108
      },
      "nodeContext" : "assertArrayEquals(new long[]{1,2,3,Long.MAX_VALUE,Long.MIN_VALUE},data.getLongArray(\"l_array_1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertArrayEquals(new long[]{1,2,3,Long.MAX_VALUE,Long.MIN_VALUE},data.getLongArray(\"l_array_1\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1577,
        "startLineNumber" : 19,
        "startColumnNumber" : 67,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Data data=new JsonDataSerializer().deserialize(StreamUtil.readFullyAsString(ClassLoader.getSystemClassLoader().getResourceAsStream(\"data/data_serialized.json\")));\n  assertEquals(\"s1 value\",data.getString(\"s1\"));\n  assertEquals(\"s2 value\",data.getString(\"s2\"));\n  assertArrayEquals(new String[]{\"a\",\"b\",\"c\"},data.getStringArray(\"s_array_1\"));\n  assertEquals(1,data.getInt(\"i1\"));\n  assertEquals(2,data.getInt(\"i2\"));\n  assertEquals(Integer.MAX_VALUE,data.getInt(\"max\"));\n  assertEquals(Integer.MIN_VALUE,data.getInt(\"min\"));\n  assertArrayEquals(new int[]{1,2,3,Integer.MAX_VALUE,Integer.MIN_VALUE},data.getIntegerArray(\"i_array_1\"));\n  assertEquals(10,data.getLong(\"l1\"));\n  assertEquals(20,data.getLong(\"l2\"));\n  assertEquals(Long.MAX_VALUE,data.getLong(\"max\"));\n  assertEquals(Long.MIN_VALUE,data.getLong(\"min\"));\n  assertArrayEquals(new long[]{1,2,3,Long.MAX_VALUE,Long.MIN_VALUE},data.getLongArray(\"l_array_1\"));\n  assertEquals(1.2f,data.getFloat(\"f1\"),FloatDelta);\n  assertEquals(3.4f,data.getFloat(\"f2\"),FloatDelta);\n  assertArrayEquals(new float[]{5.6f,7.8f},data.getFloatArray(\"f_array_1\"),FloatDelta);\n  assertEquals(10.2,data.getDouble(\"d1\"),FloatDelta);\n  assertEquals(30.4,data.getDouble(\"d2\"),FloatDelta);\n  assertArrayEquals(new double[]{50.6,70.8},data.getDoubleArray(\"d_array_1\"),FloatDelta);\n  assertTrue(data.getBoolean(\"b1\"));\n  assertFalse(data.getBoolean(\"b2\"));\n  assertArrayEquals(new boolean[]{false,true},data.getBooleanArray(\"b_array_1\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1650,
        "startLineNumber" : 18,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void deserialize_dataMatchesExpected() throws IOException {\n  Data data=new JsonDataSerializer().deserialize(StreamUtil.readFullyAsString(ClassLoader.getSystemClassLoader().getResourceAsStream(\"data/data_serialized.json\")));\n  assertEquals(\"s1 value\",data.getString(\"s1\"));\n  assertEquals(\"s2 value\",data.getString(\"s2\"));\n  assertArrayEquals(new String[]{\"a\",\"b\",\"c\"},data.getStringArray(\"s_array_1\"));\n  assertEquals(1,data.getInt(\"i1\"));\n  assertEquals(2,data.getInt(\"i2\"));\n  assertEquals(Integer.MAX_VALUE,data.getInt(\"max\"));\n  assertEquals(Integer.MIN_VALUE,data.getInt(\"min\"));\n  assertArrayEquals(new int[]{1,2,3,Integer.MAX_VALUE,Integer.MIN_VALUE},data.getIntegerArray(\"i_array_1\"));\n  assertEquals(10,data.getLong(\"l1\"));\n  assertEquals(20,data.getLong(\"l2\"));\n  assertEquals(Long.MAX_VALUE,data.getLong(\"max\"));\n  assertEquals(Long.MIN_VALUE,data.getLong(\"min\"));\n  assertArrayEquals(new long[]{1,2,3,Long.MAX_VALUE,Long.MIN_VALUE},data.getLongArray(\"l_array_1\"));\n  assertEquals(1.2f,data.getFloat(\"f1\"),FloatDelta);\n  assertEquals(3.4f,data.getFloat(\"f2\"),FloatDelta);\n  assertArrayEquals(new float[]{5.6f,7.8f},data.getFloatArray(\"f_array_1\"),FloatDelta);\n  assertEquals(10.2,data.getDouble(\"d1\"),FloatDelta);\n  assertEquals(30.4,data.getDouble(\"d2\"),FloatDelta);\n  assertArrayEquals(new double[]{50.6,70.8},data.getDoubleArray(\"d_array_1\"),FloatDelta);\n  assertTrue(data.getBoolean(\"b1\"));\n  assertFalse(data.getBoolean(\"b2\"));\n  assertArrayEquals(new boolean[]{false,true},data.getBooleanArray(\"b_array_1\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertArrayEquals(new long[]{1,2,3,Long.MAX_VALUE,Long.MIN_VALUE},data.getLongArray(\"l_array_1\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "long[]"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 36,
    "startColumnNumber" : 22,
    "endLineNumber" : 36,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}