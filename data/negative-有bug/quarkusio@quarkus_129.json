{
  "id" : 129,
  "expression" : "mainPath",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/devtools/cli/src/main/java/io/quarkus/cli/build/JBangRunner.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mainPath",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 121,
      "startColumnNumber" : 12,
      "endLineNumber" : 121,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 28
      },
      "nodeContext" : "mainPath == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mainPath == null) {\n  File src=projectRoot.resolve(\"src\").toFile();\n  if (src.exists() && src.isDirectory()) {\n    String[] names=src.list();\n    if (names != null && names.length > 0) {\n      String first=null;\n      for (      String name : names) {\n        if (name.equalsIgnoreCase(\"main.java\")) {\n          mainPath=fixPath(src.toPath().resolve(name));\n          return mainPath;\n        }\n        if (first == null && name.endsWith(\".java\")) {\n          first=name;\n        }\n      }\n      if (first != null) {\n        mainPath=fixPath(src.toPath().resolve(first));\n        return mainPath;\n      }\n    }\n  }\n  throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 120,
        "startColumnNumber" : 25,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "String getMainPath(){\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 28
      },
      "nodeContext" : "mainPath == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "mainPath",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 130,
      "startColumnNumber" : 35,
      "endLineNumber" : 130,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 130,
        "startColumnNumber" : 28,
        "endLineNumber" : 130,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return mainPath;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 128,
        "startColumnNumber" : 64,
        "endLineNumber" : 131,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  mainPath=fixPath(src.toPath().resolve(name));\n  return mainPath;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 128,
        "startColumnNumber" : 24,
        "endLineNumber" : 131,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (name.equalsIgnoreCase(\"main.java\")) {\n  mainPath=fixPath(src.toPath().resolve(name));\n  return mainPath;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 127,
        "startColumnNumber" : 46,
        "endLineNumber" : 135,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (name.equalsIgnoreCase(\"main.java\")) {\n    mainPath=fixPath(src.toPath().resolve(name));\n    return mainPath;\n  }\n  if (first == null && name.endsWith(\".java\")) {\n    first=name;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 127,
        "startColumnNumber" : 20,
        "endLineNumber" : 135,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (String name : names) {\n  if (name.equalsIgnoreCase(\"main.java\")) {\n    mainPath=fixPath(src.toPath().resolve(name));\n    return mainPath;\n  }\n  if (first == null && name.endsWith(\".java\")) {\n    first=name;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 125,
        "startColumnNumber" : 55,
        "endLineNumber" : 140,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String first=null;\n  for (  String name : names) {\n    if (name.equalsIgnoreCase(\"main.java\")) {\n      mainPath=fixPath(src.toPath().resolve(name));\n      return mainPath;\n    }\n    if (first == null && name.endsWith(\".java\")) {\n      first=name;\n    }\n  }\n  if (first != null) {\n    mainPath=fixPath(src.toPath().resolve(first));\n    return mainPath;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 140,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (names != null && names.length > 0) {\n  String first=null;\n  for (  String name : names) {\n    if (name.equalsIgnoreCase(\"main.java\")) {\n      mainPath=fixPath(src.toPath().resolve(name));\n      return mainPath;\n    }\n    if (first == null && name.endsWith(\".java\")) {\n      first=name;\n    }\n  }\n  if (first != null) {\n    mainPath=fixPath(src.toPath().resolve(first));\n    return mainPath;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 141,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String[] names=src.list();\n  if (names != null && names.length > 0) {\n    String first=null;\n    for (    String name : names) {\n      if (name.equalsIgnoreCase(\"main.java\")) {\n        mainPath=fixPath(src.toPath().resolve(name));\n        return mainPath;\n      }\n      if (first == null && name.endsWith(\".java\")) {\n        first=name;\n      }\n    }\n    if (first != null) {\n      mainPath=fixPath(src.toPath().resolve(first));\n      return mainPath;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 141,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (src.exists() && src.isDirectory()) {\n  String[] names=src.list();\n  if (names != null && names.length > 0) {\n    String first=null;\n    for (    String name : names) {\n      if (name.equalsIgnoreCase(\"main.java\")) {\n        mainPath=fixPath(src.toPath().resolve(name));\n        return mainPath;\n      }\n      if (first == null && name.endsWith(\".java\")) {\n        first=name;\n      }\n    }\n    if (first != null) {\n      mainPath=fixPath(src.toPath().resolve(first));\n      return mainPath;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 121,
        "startColumnNumber" : 30,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File src=projectRoot.resolve(\"src\").toFile();\n  if (src.exists() && src.isDirectory()) {\n    String[] names=src.list();\n    if (names != null && names.length > 0) {\n      String first=null;\n      for (      String name : names) {\n        if (name.equalsIgnoreCase(\"main.java\")) {\n          mainPath=fixPath(src.toPath().resolve(name));\n          return mainPath;\n        }\n        if (first == null && name.endsWith(\".java\")) {\n          first=name;\n        }\n      }\n      if (first != null) {\n        mainPath=fixPath(src.toPath().resolve(first));\n        return mainPath;\n      }\n    }\n  }\n  throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mainPath == null) {\n  File src=projectRoot.resolve(\"src\").toFile();\n  if (src.exists() && src.isDirectory()) {\n    String[] names=src.list();\n    if (names != null && names.length > 0) {\n      String first=null;\n      for (      String name : names) {\n        if (name.equalsIgnoreCase(\"main.java\")) {\n          mainPath=fixPath(src.toPath().resolve(name));\n          return mainPath;\n        }\n        if (first == null && name.endsWith(\".java\")) {\n          first=name;\n        }\n      }\n      if (first != null) {\n        mainPath=fixPath(src.toPath().resolve(first));\n        return mainPath;\n      }\n    }\n  }\n  throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 120,
        "startColumnNumber" : 25,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "String getMainPath(){\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 130,
        "startColumnNumber" : 28,
        "endLineNumber" : 130,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return mainPath;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "mainPath",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 138,
      "startColumnNumber" : 31,
      "endLineNumber" : 138,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 138,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return mainPath;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 136,
        "startColumnNumber" : 39,
        "endLineNumber" : 139,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  mainPath=fixPath(src.toPath().resolve(first));\n  return mainPath;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 139,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (first != null) {\n  mainPath=fixPath(src.toPath().resolve(first));\n  return mainPath;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 125,
        "startColumnNumber" : 55,
        "endLineNumber" : 140,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String first=null;\n  for (  String name : names) {\n    if (name.equalsIgnoreCase(\"main.java\")) {\n      mainPath=fixPath(src.toPath().resolve(name));\n      return mainPath;\n    }\n    if (first == null && name.endsWith(\".java\")) {\n      first=name;\n    }\n  }\n  if (first != null) {\n    mainPath=fixPath(src.toPath().resolve(first));\n    return mainPath;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 140,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (names != null && names.length > 0) {\n  String first=null;\n  for (  String name : names) {\n    if (name.equalsIgnoreCase(\"main.java\")) {\n      mainPath=fixPath(src.toPath().resolve(name));\n      return mainPath;\n    }\n    if (first == null && name.endsWith(\".java\")) {\n      first=name;\n    }\n  }\n  if (first != null) {\n    mainPath=fixPath(src.toPath().resolve(first));\n    return mainPath;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 141,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String[] names=src.list();\n  if (names != null && names.length > 0) {\n    String first=null;\n    for (    String name : names) {\n      if (name.equalsIgnoreCase(\"main.java\")) {\n        mainPath=fixPath(src.toPath().resolve(name));\n        return mainPath;\n      }\n      if (first == null && name.endsWith(\".java\")) {\n        first=name;\n      }\n    }\n    if (first != null) {\n      mainPath=fixPath(src.toPath().resolve(first));\n      return mainPath;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 141,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (src.exists() && src.isDirectory()) {\n  String[] names=src.list();\n  if (names != null && names.length > 0) {\n    String first=null;\n    for (    String name : names) {\n      if (name.equalsIgnoreCase(\"main.java\")) {\n        mainPath=fixPath(src.toPath().resolve(name));\n        return mainPath;\n      }\n      if (first == null && name.endsWith(\".java\")) {\n        first=name;\n      }\n    }\n    if (first != null) {\n      mainPath=fixPath(src.toPath().resolve(first));\n      return mainPath;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 121,
        "startColumnNumber" : 30,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File src=projectRoot.resolve(\"src\").toFile();\n  if (src.exists() && src.isDirectory()) {\n    String[] names=src.list();\n    if (names != null && names.length > 0) {\n      String first=null;\n      for (      String name : names) {\n        if (name.equalsIgnoreCase(\"main.java\")) {\n          mainPath=fixPath(src.toPath().resolve(name));\n          return mainPath;\n        }\n        if (first == null && name.endsWith(\".java\")) {\n          first=name;\n        }\n      }\n      if (first != null) {\n        mainPath=fixPath(src.toPath().resolve(first));\n        return mainPath;\n      }\n    }\n  }\n  throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1016,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mainPath == null) {\n  File src=projectRoot.resolve(\"src\").toFile();\n  if (src.exists() && src.isDirectory()) {\n    String[] names=src.list();\n    if (names != null && names.length > 0) {\n      String first=null;\n      for (      String name : names) {\n        if (name.equalsIgnoreCase(\"main.java\")) {\n          mainPath=fixPath(src.toPath().resolve(name));\n          return mainPath;\n        }\n        if (first == null && name.endsWith(\".java\")) {\n          first=name;\n        }\n      }\n      if (first != null) {\n        mainPath=fixPath(src.toPath().resolve(first));\n        return mainPath;\n      }\n    }\n  }\n  throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 120,
        "startColumnNumber" : 25,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "String getMainPath(){\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 138,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return mainPath;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "mainPath",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 144,
      "startColumnNumber" : 15,
      "endLineNumber" : 144,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return mainPath;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 120,
        "startColumnNumber" : 25,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1078,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "String getMainPath(){\n  if (mainPath == null) {\n    File src=projectRoot.resolve(\"src\").toFile();\n    if (src.exists() && src.isDirectory()) {\n      String[] names=src.list();\n      if (names != null && names.length > 0) {\n        String first=null;\n        for (        String name : names) {\n          if (name.equalsIgnoreCase(\"main.java\")) {\n            mainPath=fixPath(src.toPath().resolve(name));\n            return mainPath;\n          }\n          if (first == null && name.endsWith(\".java\")) {\n            first=name;\n          }\n        }\n        if (first != null) {\n          mainPath=fixPath(src.toPath().resolve(first));\n          return mainPath;\n        }\n      }\n    }\n    throw new IllegalStateException(\"Unable to find a source file for use with JBang\");\n  }\n  return mainPath;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return mainPath;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 121,
    "startColumnNumber" : 12,
    "endLineNumber" : 121,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 130,
    "startColumnNumber" : 35,
    "endLineNumber" : 130,
    "endColumnNumber" : 43
  }, {
    "charLength" : 8,
    "startLineNumber" : 138,
    "startColumnNumber" : 31,
    "endLineNumber" : 138,
    "endColumnNumber" : 39
  }, {
    "charLength" : 8,
    "startLineNumber" : 144,
    "startColumnNumber" : 15,
    "endLineNumber" : 144,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 11
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}