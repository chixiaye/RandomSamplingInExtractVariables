{
  "id" : 176,
  "expression" : "JWTClientAuthenticator",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcOidcBrokerPrivateKeyJwtTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JWTClientAuthenticator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 51,
      "startColumnNumber" : 50,
      "endLineNumber" : 51,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 51,
        "startColumnNumber" : 50,
        "endLineNumber" : 51,
        "endColumnNumber" : 84
      },
      "nodeContext" : "JWTClientAuthenticator.PROVIDER_ID",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 51,
        "endColumnNumber" : 85
      },
      "nodeContext" : "client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 51,
        "endColumnNumber" : 86
      },
      "nodeContext" : "client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 50,
        "startColumnNumber" : 62,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n  if (client.getAttributes() == null) {\n    client.setAttributes(new HashMap<String,String>());\n  }\n  client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ClientRepresentation client : clientsRepList) {\n  client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n  if (client.getAttributes() == null) {\n    client.setAttributes(new HashMap<String,String>());\n  }\n  client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 789,
        "startLineNumber" : 46,
        "startColumnNumber" : 66,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ClientRepresentation> clientsRepList=super.createProviderClients();\n  log.info(\"Update provider clients to accept JWT authentication\");\n  KeyMetadataRepresentation keyRep=KeyUtils.getActiveSigningKey(adminClient.realm(consumerRealmName()).keys().getKeyMetadata(),Algorithm.RS256);\n  for (  ClientRepresentation client : clientsRepList) {\n    client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n    if (client.getAttributes() == null) {\n      client.setAttributes(new HashMap<String,String>());\n    }\n    client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n  }\n  return clientsRepList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public List<ClientRepresentation> createProviderClients(){\n  List<ClientRepresentation> clientsRepList=super.createProviderClients();\n  log.info(\"Update provider clients to accept JWT authentication\");\n  KeyMetadataRepresentation keyRep=KeyUtils.getActiveSigningKey(adminClient.realm(consumerRealmName()).keys().getKeyMetadata(),Algorithm.RS256);\n  for (  ClientRepresentation client : clientsRepList) {\n    client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n    if (client.getAttributes() == null) {\n      client.setAttributes(new HashMap<String,String>());\n    }\n    client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n  }\n  return clientsRepList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 51,
        "endColumnNumber" : 86
      },
      "nodeContext" : "client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.authentication.authenticators.client.JWTClientAuthenticator"
  }, {
    "nodeContext" : "JWTClientAuthenticator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 55,
      "startColumnNumber" : 43,
      "endLineNumber" : 55,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 55,
        "startColumnNumber" : 43,
        "endLineNumber" : 55,
        "endColumnNumber" : 82
      },
      "nodeContext" : "JWTClientAuthenticator.CERTIFICATE_ATTR",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 108
      },
      "nodeContext" : "client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 109
      },
      "nodeContext" : "client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 50,
        "startColumnNumber" : 62,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n  if (client.getAttributes() == null) {\n    client.setAttributes(new HashMap<String,String>());\n  }\n  client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ClientRepresentation client : clientsRepList) {\n  client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n  if (client.getAttributes() == null) {\n    client.setAttributes(new HashMap<String,String>());\n  }\n  client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 789,
        "startLineNumber" : 46,
        "startColumnNumber" : 66,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<ClientRepresentation> clientsRepList=super.createProviderClients();\n  log.info(\"Update provider clients to accept JWT authentication\");\n  KeyMetadataRepresentation keyRep=KeyUtils.getActiveSigningKey(adminClient.realm(consumerRealmName()).keys().getKeyMetadata(),Algorithm.RS256);\n  for (  ClientRepresentation client : clientsRepList) {\n    client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n    if (client.getAttributes() == null) {\n      client.setAttributes(new HashMap<String,String>());\n    }\n    client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n  }\n  return clientsRepList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 865,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public List<ClientRepresentation> createProviderClients(){\n  List<ClientRepresentation> clientsRepList=super.createProviderClients();\n  log.info(\"Update provider clients to accept JWT authentication\");\n  KeyMetadataRepresentation keyRep=KeyUtils.getActiveSigningKey(adminClient.realm(consumerRealmName()).keys().getKeyMetadata(),Algorithm.RS256);\n  for (  ClientRepresentation client : clientsRepList) {\n    client.setClientAuthenticatorType(JWTClientAuthenticator.PROVIDER_ID);\n    if (client.getAttributes() == null) {\n      client.setAttributes(new HashMap<String,String>());\n    }\n    client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n  }\n  return clientsRepList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 109
      },
      "nodeContext" : "client.getAttributes().put(JWTClientAuthenticator.CERTIFICATE_ATTR,keyRep.getCertificate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.authentication.authenticators.client.JWTClientAuthenticator"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 51,
    "startColumnNumber" : 50,
    "endLineNumber" : 51,
    "endColumnNumber" : 72
  }, {
    "charLength" : 22,
    "startLineNumber" : 55,
    "startColumnNumber" : 43,
    "endLineNumber" : 55,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}