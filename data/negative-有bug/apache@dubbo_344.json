{
  "id" : 344,
  "expression" : "new String[paramTypes.length]",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-metadata/dubbo-metadata-api/src/main/java/org/apache/dubbo/metadata/definition/ServiceDefinitionBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[paramTypes.length]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 75,
      "startColumnNumber" : 38,
      "endLineNumber" : 75,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 75,
        "startColumnNumber" : 21,
        "endLineNumber" : 75,
        "endColumnNumber" : 67
      },
      "nodeContext" : "parameterTypes=new String[paramTypes.length]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String[] parameterTypes=new String[paramTypes.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 67,
        "startColumnNumber" : 38,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MethodDefinition md=new MethodDefinition();\n  md.setName(method.getName());\n  Class<?>[] paramTypes=method.getParameterTypes();\n  Type[] genericParamTypes=method.getGenericParameterTypes();\n  String[] parameterTypes=new String[paramTypes.length];\n  for (int i=0; i < paramTypes.length; i++) {\n    TypeDefinition td=builder.build(genericParamTypes[i],paramTypes[i]);\n    parameterTypes[i]=td.getType();\n  }\n  md.setParameterTypes(parameterTypes);\n  TypeDefinition td=builder.build(method.getGenericReturnType(),method.getReturnType());\n  md.setReturnType(td.getType());\n  sd.getMethods().add(md);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Method method : methods) {\n  MethodDefinition md=new MethodDefinition();\n  md.setName(method.getName());\n  Class<?>[] paramTypes=method.getParameterTypes();\n  Type[] genericParamTypes=method.getGenericParameterTypes();\n  String[] parameterTypes=new String[paramTypes.length];\n  for (int i=0; i < paramTypes.length; i++) {\n    TypeDefinition td=builder.build(genericParamTypes[i],paramTypes[i]);\n    parameterTypes[i]=td.getType();\n  }\n  md.setParameterTypes(parameterTypes);\n  TypeDefinition td=builder.build(method.getGenericReturnType(),method.getReturnType());\n  md.setReturnType(td.getType());\n  sd.getMethods().add(md);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1226,
        "startLineNumber" : 61,
        "startColumnNumber" : 96,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  sd.setCanonicalName(interfaceClass.getCanonicalName());\n  sd.setCodeSource(ClassUtils.getCodeSource(interfaceClass));\n  TypeDefinitionBuilder builder=new TypeDefinitionBuilder();\n  List<Method> methods=ClassUtils.getPublicNonStaticMethods(interfaceClass);\n  for (  Method method : methods) {\n    MethodDefinition md=new MethodDefinition();\n    md.setName(method.getName());\n    Class<?>[] paramTypes=method.getParameterTypes();\n    Type[] genericParamTypes=method.getGenericParameterTypes();\n    String[] parameterTypes=new String[paramTypes.length];\n    for (int i=0; i < paramTypes.length; i++) {\n      TypeDefinition td=builder.build(genericParamTypes[i],paramTypes[i]);\n      parameterTypes[i]=td.getType();\n    }\n    md.setParameterTypes(parameterTypes);\n    TypeDefinition td=builder.build(method.getGenericReturnType(),method.getReturnType());\n    md.setReturnType(td.getType());\n    sd.getMethods().add(md);\n  }\n  sd.setTypes(builder.getTypeDefinitions());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static <T extends ServiceDefinition>void build(T sd,final Class<?> interfaceClass){\n  sd.setCanonicalName(interfaceClass.getCanonicalName());\n  sd.setCodeSource(ClassUtils.getCodeSource(interfaceClass));\n  TypeDefinitionBuilder builder=new TypeDefinitionBuilder();\n  List<Method> methods=ClassUtils.getPublicNonStaticMethods(interfaceClass);\n  for (  Method method : methods) {\n    MethodDefinition md=new MethodDefinition();\n    md.setName(method.getName());\n    Class<?>[] paramTypes=method.getParameterTypes();\n    Type[] genericParamTypes=method.getGenericParameterTypes();\n    String[] parameterTypes=new String[paramTypes.length];\n    for (int i=0; i < paramTypes.length; i++) {\n      TypeDefinition td=builder.build(genericParamTypes[i],paramTypes[i]);\n      parameterTypes[i]=td.getType();\n    }\n    md.setParameterTypes(parameterTypes);\n    TypeDefinition td=builder.build(method.getGenericReturnType(),method.getReturnType());\n    md.setReturnType(td.getType());\n    sd.getMethods().add(md);\n  }\n  sd.setTypes(builder.getTypeDefinitions());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String[] parameterTypes=new String[paramTypes.length];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 75,
    "startColumnNumber" : 38,
    "endLineNumber" : 75,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}